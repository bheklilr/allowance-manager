!function(e){var t={};function n(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(i,a,function(t){return e[t]}.bind(null,a));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=74)}([function(e,t){e.exports=require("path")},function(e,t,n){"undefined"!=typeof process&&"renderer"===process.type?e.exports=n(86):e.exports=n(87)},function(e,t){e.exports=require("util")},function(module,exports,__webpack_require__){
/*!
 * depd
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */
var callSiteToString=__webpack_require__(36).callSiteToString,eventListenerCount=__webpack_require__(36).eventListenerCount,relative=__webpack_require__(0).relative;module.exports=depd;var basePath=process.cwd();function containsNamespace(e,t){for(var n=e.split(/[ ,]+/),i=String(t).toLowerCase(),a=0;a<n.length;a++){var o=n[a];if(o&&("*"===o||o.toLowerCase()===i))return!0}return!1}function convertDataDescriptorToAccessor(e,t,n){var i=Object.getOwnPropertyDescriptor(e,t),a=i.value;return i.get=function(){return a},i.writable&&(i.set=function(e){return a=e}),delete i.value,delete i.writable,Object.defineProperty(e,t,i),i}function createArgumentsString(e){for(var t="",n=0;n<e;n++)t+=", arg"+n;return t.substr(2)}function createStackString(e){var t=this.name+": "+this.namespace;this.message&&(t+=" deprecated "+this.message);for(var n=0;n<e.length;n++)t+="\n    at "+callSiteToString(e[n]);return t}function depd(e){if(!e)throw new TypeError("argument namespace is required");var t=callSiteLocation(getStack()[1])[0];function n(e){log.call(n,e)}return n._file=t,n._ignored=isignored(e),n._namespace=e,n._traced=istraced(e),n._warned=Object.create(null),n.function=wrapfunction,n.property=wrapproperty,n}function isignored(e){return!!process.noDeprecation||containsNamespace(process.env.NO_DEPRECATION||"",e)}function istraced(e){return!!process.traceDeprecation||containsNamespace(process.env.TRACE_DEPRECATION||"",e)}function log(e,t){var n=0!==eventListenerCount(process,"deprecation");if(n||!this._ignored){var i,a,o,r,s=0,c=!1,p=getStack(),l=this._file;for(t?(r=t,(o=callSiteLocation(p[1])).name=r.name,l=o[0]):o=r=callSiteLocation(p[s=2]);s<p.length;s++)if((a=(i=callSiteLocation(p[s]))[0])===l)c=!0;else if(a===this._file)l=this._file;else if(c)break;var u=i?r.join(":")+"__"+i.join(":"):void 0;if(!(void 0!==u&&u in this._warned)){this._warned[u]=!0;var d=e;if(d||(d=o!==r&&o.name?defaultMessage(o):defaultMessage(r)),n){var m=DeprecationError(this._namespace,d,p.slice(s));process.emit("deprecation",m)}else{var f=(process.stderr.isTTY?formatColor:formatPlain).call(this,d,i,p.slice(s));process.stderr.write(f+"\n","utf8")}}}}function callSiteLocation(e){var t=e.getFileName()||"<anonymous>",n=e.getLineNumber(),i=e.getColumnNumber();e.isEval()&&(t=e.getEvalOrigin()+", "+t);var a=[t,n,i];return a.callSite=e,a.name=e.getFunctionName(),a}function defaultMessage(e){var t=e.callSite,n=e.name;n||(n="<anonymous@"+formatLocation(e)+">");var i=t.getThis(),a=i&&t.getTypeName();return"Object"===a&&(a=void 0),"Function"===a&&(a=i.name||a),a&&t.getMethodName()?a+"."+n:n}function formatPlain(e,t,n){var i=(new Date).toUTCString()+" "+this._namespace+" deprecated "+e;if(this._traced){for(var a=0;a<n.length;a++)i+="\n    at "+callSiteToString(n[a]);return i}return t&&(i+=" at "+formatLocation(t)),i}function formatColor(e,t,n){var i="[36;1m"+this._namespace+"[22;39m [33;1mdeprecated[22;39m [0m"+e+"[39m";if(this._traced){for(var a=0;a<n.length;a++)i+="\n    [36mat "+callSiteToString(n[a])+"[39m";return i}return t&&(i+=" [36m"+formatLocation(t)+"[39m"),i}function formatLocation(e){return relative(basePath,e[0])+":"+e[1]+":"+e[2]}function getStack(){var e=Error.stackTraceLimit,t={},n=Error.prepareStackTrace;Error.prepareStackTrace=prepareObjectStackTrace,Error.stackTraceLimit=Math.max(10,e),Error.captureStackTrace(t);var i=t.stack.slice(1);return Error.prepareStackTrace=n,Error.stackTraceLimit=e,i}function prepareObjectStackTrace(e,t){return t}function wrapfunction(fn,message){if("function"!=typeof fn)throw new TypeError("argument fn must be a function");var args=createArgumentsString(fn.length),deprecate=this,stack=getStack(),site=callSiteLocation(stack[1]);site.name=fn.name;var deprecatedfn=eval("(function ("+args+') {\n"use strict"\nlog.call(deprecate, message, site)\nreturn fn.apply(this, arguments)\n})');return deprecatedfn}function wrapproperty(e,t,n){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new TypeError("argument obj must be object");var i=Object.getOwnPropertyDescriptor(e,t);if(!i)throw new TypeError("must call property on owner object");if(!i.configurable)throw new TypeError("property must be configurable");var a=this,o=callSiteLocation(getStack()[1]);o.name=t,"value"in i&&(i=convertDataDescriptorToAccessor(e,t,n));var r=i.get,s=i.set;"function"==typeof r&&(i.get=function(){return log.call(a,n,o),r.apply(this,arguments)}),"function"==typeof s&&(i.set=function(){return log.call(a,n,o),s.apply(this,arguments)}),Object.defineProperty(e,t,i)}function DeprecationError(e,t,n){var i,a=new Error;return Object.defineProperty(a,"constructor",{value:DeprecationError}),Object.defineProperty(a,"message",{configurable:!0,enumerable:!1,value:t,writable:!0}),Object.defineProperty(a,"name",{enumerable:!1,configurable:!0,value:"DeprecationError",writable:!0}),Object.defineProperty(a,"namespace",{configurable:!0,enumerable:!1,value:e,writable:!0}),Object.defineProperty(a,"stack",{configurable:!0,enumerable:!1,get:function(){return void 0!==i?i:i=createStackString.call(this,n)},set:function(e){i=e}}),a}},function(e,t){e.exports=require("events")},function(e,t){e.exports=require("stream")},function(e,t){e.exports=require("fs")},function(e,t,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(32).Buffer,a=n(52),o=n(17),r=n(3)("express"),s=n(21),c=n(33).mime,p=n(53),l=n(56),u=n(28),d=n(47);function m(e){return function(t,n){var a=i.isBuffer(t)?t:i.from(t,n);return p(a,e)}}function f(e){return u.parse(e,{allowPrototypes:!0})}function h(){return{}}t.etag=m({weak:!1}),t.wetag=m({weak:!0}),t.isAbsolute=function(e){return"/"===e[0]||(":"===e[1]&&("\\"===e[2]||"/"===e[2])||("\\\\"===e.substring(0,2)||void 0))},t.flatten=r.function(s,"utils.flatten: use array-flatten npm module instead"),t.normalizeType=function(e){return~e.indexOf("/")?function(e,t){for(var n=e.split(/ *; */),i={value:n[0],quality:1,params:{},originalIndex:t},a=1;a<n.length;++a){var o=n[a].split(/ *= */);"q"===o[0]?i.quality=parseFloat(o[1]):i.params[o[0]]=o[1]}return i}(e):{value:c.lookup(e),params:{}}},t.normalizeTypes=function(e){for(var n=[],i=0;i<e.length;++i)n.push(t.normalizeType(e[i]));return n},t.contentDisposition=r.function(a,"utils.contentDisposition: use content-disposition npm module instead"),t.compileETag=function(e){var n;if("function"==typeof e)return e;switch(e){case!0:n=t.wetag;break;case!1:break;case"strong":n=t.etag;break;case"weak":n=t.wetag;break;default:throw new TypeError("unknown value for etag function: "+e)}return n},t.compileQueryParser=function(e){var t;if("function"==typeof e)return e;switch(e){case!0:t=d.parse;break;case!1:t=h;break;case"extended":t=f;break;case"simple":t=d.parse;break;default:throw new TypeError("unknown value for query parser function: "+e)}return t},t.compileTrust=function(e){return"function"==typeof e?e:!0===e?function(){return!0}:"number"==typeof e?function(t,n){return n<e}:("string"==typeof e&&(e=e.split(/ *, */)),l.compile(e||[]))},t.setCharset=function(e,t){if(!e||!t)return e;var n=o.parse(e);return n.parameters.charset=t,o.format(n)}},function(e,t,n){"use strict";
/*!
 * http-errors
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(3)("http-errors"),a=n(16),o=n(78),r=n(80);function s(e){return Number(String(e).charAt(0)+"00")}e.exports=function e(){var t;var n;var a=500;var r={};for(var c=0;c<arguments.length;c++){var p=arguments[c];if(p instanceof Error)a=(t=p).status||t.statusCode||a;else switch(typeof p){case"string":n=p;break;case"number":a=p,0!==c&&i("non-first-argument status code; replace with createError("+p+", ...)");break;case"object":r=p}}"number"==typeof a&&(a<400||a>=600)&&i("non-error status code; use only 4xx or 5xx status codes");("number"!=typeof a||!o[a]&&(a<400||a>=600))&&(a=500);var l=e[a]||e[s(a)];t||(t=l?new l(n):new Error(n||o[a]),Error.captureStackTrace(t,e));l&&t instanceof l&&t.status===a||(t.expose=a<500,t.status=t.statusCode=a);for(var u in r)"status"!==u&&"statusCode"!==u&&(t[u]=r[u]);return t},e.exports.HttpError=function(){function e(){throw new TypeError("cannot construct abstract class")}return r(e,Error),e}(),function(e,t,n){t.forEach(function(t){var i,c=o[t].split(" ").map(function(e){return e.slice(0,1).toUpperCase()+e.slice(1)}).join("").replace(/[^ _0-9a-z]/gi,"");switch(s(t)){case 400:i=function(e,t,n){var i=t.match(/Error$/)?t:t+"Error";function s(e){var t=null!=e?e:o[n],r=new Error(t);return Error.captureStackTrace(r,s),a(r,s.prototype),Object.defineProperty(r,"message",{enumerable:!0,configurable:!0,value:t,writable:!0}),Object.defineProperty(r,"name",{enumerable:!1,configurable:!0,value:i,writable:!0}),r}return r(s,e),s.prototype.status=n,s.prototype.statusCode=n,s.prototype.expose=!0,s}(n,c,t);break;case 500:i=function(e,t,n){var i=t.match(/Error$/)?t:t+"Error";function s(e){var t=null!=e?e:o[n],r=new Error(t);return Error.captureStackTrace(r,s),a(r,s.prototype),Object.defineProperty(r,"message",{enumerable:!0,configurable:!0,value:t,writable:!0}),Object.defineProperty(r,"name",{enumerable:!1,configurable:!0,value:i,writable:!0}),r}return r(s,e),s.prototype.status=n,s.prototype.statusCode=n,s.prototype.expose=!1,s}(n,c,t)}i&&(e[t]=i,e[c]=i)}),e["I'mateapot"]=i.function(e.ImATeapot,'"I\'mateapot"; use "ImATeapot" instead')}(e.exports,o.codes,e.exports.HttpError)},function(e,t,n){"use strict";var i,a=n(10),o=a.Buffer,r={};for(i in a)a.hasOwnProperty(i)&&"SlowBuffer"!==i&&"Buffer"!==i&&(r[i]=a[i]);var s=r.Buffer={};for(i in o)o.hasOwnProperty(i)&&"allocUnsafe"!==i&&"allocUnsafeSlow"!==i&&(s[i]=o[i]);if(r.Buffer.prototype=o.prototype,s.from&&s.from!==Uint8Array.from||(s.from=function(e,t,n){if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type '+typeof e);if(e&&void 0===e.length)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);return o(e,t,n)}),s.alloc||(s.alloc=function(e,t,n){if("number"!=typeof e)throw new TypeError('The "size" argument must be of type number. Received type '+typeof e);if(e<0||e>=2*(1<<30))throw new RangeError('The value "'+e+'" is invalid for option "size"');var i=o(e);return t&&0!==t.length?"string"==typeof n?i.fill(t,n):i.fill(t):i.fill(0),i}),!r.kStringMaxLength)try{r.kStringMaxLength=process.binding("buffer").kStringMaxLength}catch(e){}r.constants||(r.constants={MAX_LENGTH:r.kMaxLength},r.kStringMaxLength&&(r.constants.MAX_STRING_LENGTH=r.kStringMaxLength)),e.exports=r},function(e,t){e.exports=require("buffer")},function(e,t,n){"use strict";
/*!
 * bytes
 * Copyright(c) 2012-2014 TJ Holowaychuk
 * Copyright(c) 2015 Jed Watson
 * MIT Licensed
 */e.exports=function(e,t){if("string"==typeof e)return c(e);if("number"==typeof e)return s(e,t);return null},e.exports.format=s,e.exports.parse=c;var i=/\B(?=(\d{3})+(?!\d))/g,a=/(?:\.0*|(\.[^0]+)0+)$/,o={b:1,kb:1024,mb:1<<20,gb:1<<30,tb:1024*(1<<30)},r=/^((-|\+)?(\d+(?:\.\d+)?)) *(kb|mb|gb|tb)$/i;function s(e,t){if(!Number.isFinite(e))return null;var n=Math.abs(e),r=t&&t.thousandsSeparator||"",s=t&&t.unitSeparator||"",c=t&&void 0!==t.decimalPlaces?t.decimalPlaces:2,p=Boolean(t&&t.fixedDecimals),l=t&&t.unit||"";l&&o[l.toLowerCase()]||(l=n>=o.tb?"TB":n>=o.gb?"GB":n>=o.mb?"MB":n>=o.kb?"KB":"B");var u=(e/o[l.toLowerCase()]).toFixed(c);return p||(u=u.replace(a,"$1")),r&&(u=u.replace(i,r)),u+s+l}function c(e){if("number"==typeof e&&!isNaN(e))return e;if("string"!=typeof e)return null;var t,n=r.exec(e),i="b";return n?(t=parseFloat(n[1]),i=n[4].toLowerCase()):(t=parseInt(e,10),i="b"),Math.floor(o[i]*t)}},function(e,t,n){"use strict";
/*!
 * on-finished
 * Copyright(c) 2013 Jonathan Ong
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,t){if(!1!==o(e))return a(t,null,e),e;return function(e,t){var n=e.__onFinished;n&&n.queue||(n=e.__onFinished=function(e){function t(n){if(e.__onFinished===t&&(e.__onFinished=null),t.queue){var i=t.queue;t.queue=null;for(var a=0;a<i.length;a++)i[a](n,e)}}return t.queue=[],t}(e),function(e,t){var n,a,o=!1;function r(e){n.cancel(),a.cancel(),o=!0,t(e)}function s(t){e.removeListener("socket",s),o||n===a&&(a=i([[t,"error","close"]],r))}n=a=i([[e,"end","finish"]],r),e.socket?s(e.socket):(e.on("socket",s),void 0===e.socket&&function(e,t){var n=e.assignSocket;"function"==typeof n&&(e.assignSocket=function(e){n.call(this,e),t(e)})}(e,s))}(e,n)),n.queue.push(t)}(e,t),e},e.exports.isFinished=o;var i=n(107),a="function"==typeof setImmediate?setImmediate:function(e){process.nextTick(e.bind.apply(e,arguments))};function o(e){var t=e.socket;return"boolean"==typeof e.finished?Boolean(e.finished||t&&!t.writable):"boolean"==typeof e.complete?Boolean(e.upgrade||!t||!t.readable||e.complete&&!e.readable):void 0}},function(e,t,n){"use strict";
/*!
 * type-is
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(109),a=n(44);function o(e,t){var n,a,o=t,r=function(e){try{return function(e){var t=i.parse(e);return t.parameters=void 0,i.format(t)}(e)}catch(e){return null}}(e);if(!r)return!1;if(o&&!Array.isArray(o))for(o=new Array(arguments.length-1),n=0;n<o.length;n++)o[n]=arguments[n+1];if(!o||!o.length)return r;for(n=0;n<o.length;n++)if(c(s(a=o[n]),r))return"+"===a[0]||-1!==a.indexOf("*")?r:a;return!1}function r(e){return void 0!==e.headers["transfer-encoding"]||!isNaN(e.headers["content-length"])}function s(e){if("string"!=typeof e)return!1;switch(e){case"urlencoded":return"application/x-www-form-urlencoded";case"multipart":return"multipart/*"}return"+"===e[0]?"*/*"+e:-1===e.indexOf("/")?a.lookup(e):e}function c(e,t){if(!1===e)return!1;var n=t.split("/"),i=e.split("/");return 2===n.length&&2===i.length&&(("*"===i[0]||i[0]===n[0])&&("*+"===i[1].substr(0,2)?i[1].length<=n[1].length+1&&i[1].substr(1)===n[1].substr(1-i[1].length):"*"===i[1]||i[1]===n[1]))}e.exports=function(e,t){var n=t;if(!r(e))return null;if(arguments.length>2){n=new Array(arguments.length-1);for(var i=0;i<n.length;i++)n[i]=arguments[i+1]}return o(e.headers["content-type"],n)},e.exports.is=o,e.exports.hasBody=r,e.exports.normalize=s,e.exports.match=c},function(e,t,n){"use strict";
/*!
 * parseurl
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(29),a=i.parse,o=i.Url;function r(e){var t=e.url;if(void 0!==t){var n=e._parsedUrl;return c(t,n)?n:((n=s(t))._raw=t,e._parsedUrl=n)}}function s(e){if("string"!=typeof e||47!==e.charCodeAt(0))return a(e);for(var t=e,n=null,i=null,r=1;r<e.length;r++)switch(e.charCodeAt(r)){case 63:null===i&&(t=e.substring(0,r),n=e.substring(r+1),i=e.substring(r));break;case 9:case 10:case 12:case 13:case 32:case 35:case 160:case 65279:return a(e)}var s=void 0!==o?new o:{};return s.path=e,s.href=e,s.pathname=t,s.query=n,s.search=i,s}function c(e,t){return"object"==typeof t&&null!==t&&(void 0===o||t instanceof o)&&t._raw===e}e.exports=r,e.exports.original=function(e){var t=e.originalUrl;if("string"!=typeof t)return r(e);var n=e._parsedOriginalUrl;if(c(t,n))return n;return(n=s(t))._raw=t,e._parsedOriginalUrl=n}},function(e,t){e.exports=require("http")},function(e,t){e.exports=Object.setPrototypeOf||({__proto__:[]}instanceof Array?function(e,t){return e.__proto__=t,e}:function(e,t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n]);return e})},function(e,t,n){"use strict";
/*!
 * content-type
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=/; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\u000b\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u000b\u0020-\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g,a=/^[\u000b\u0020-\u007e\u0080-\u00ff]+$/,o=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/,r=/\\([\u000b\u0020-\u00ff])/g,s=/([\\"])/g,c=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;function p(e){var t=String(e);if(o.test(t))return t;if(t.length>0&&!a.test(t))throw new TypeError("invalid parameter value");return'"'+t.replace(s,"\\$1")+'"'}function l(e){this.parameters=Object.create(null),this.type=e}t.format=function(e){if(!e||"object"!=typeof e)throw new TypeError("argument obj is required");var t=e.parameters,n=e.type;if(!n||!c.test(n))throw new TypeError("invalid type");var i=n;if(t&&"object"==typeof t)for(var a,r=Object.keys(t).sort(),s=0;s<r.length;s++){if(a=r[s],!o.test(a))throw new TypeError("invalid parameter name");i+="; "+a+"="+p(t[a])}return i},t.parse=function(e){if(!e)throw new TypeError("argument string is required");var t="object"==typeof e?function(e){var t;"function"==typeof e.getHeader?t=e.getHeader("content-type"):"object"==typeof e.headers&&(t=e.headers&&e.headers["content-type"]);if("string"!=typeof t)throw new TypeError("content-type header is missing from object");return t}(e):e;if("string"!=typeof t)throw new TypeError("argument string is required to be a string");var n=t.indexOf(";"),a=-1!==n?t.substr(0,n).trim():t.trim();if(!c.test(a))throw new TypeError("invalid media type");var o=new l(a.toLowerCase());if(-1!==n){var s,p,u;for(i.lastIndex=n;p=i.exec(t);){if(p.index!==n)throw new TypeError("invalid parameter format");n+=p[0].length,s=p[1].toLowerCase(),'"'===(u=p[2])[0]&&(u=u.substr(1,u.length-2).replace(r,"$1")),o.parameters[s]=u}if(n!==t.length)throw new TypeError("invalid parameter format")}return o}},function(e,t,n){"use strict";
/*!
 * body-parser
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(8),a=n(89),o=n(39),r=n(12),s=n(108);e.exports=function(e,t,n,c,p,l){var u,d,m=l;e._body=!0;var f=null!==m.encoding?m.encoding:null,h=m.verify;try{d=function(e,t,n){var a,o=(e.headers["content-encoding"]||"identity").toLowerCase(),r=e.headers["content-length"];if(t('content-encoding "%s"',o),!1===n&&"identity"!==o)throw i(415,"content encoding unsupported",{encoding:o,type:"encoding.unsupported"});switch(o){case"deflate":a=s.createInflate(),t("inflate body"),e.pipe(a);break;case"gzip":a=s.createGunzip(),t("gunzip body"),e.pipe(a);break;case"identity":(a=e).length=r;break;default:throw i(415,'unsupported content encoding "'+o+'"',{encoding:o,type:"encoding.unsupported"})}return a}(e,p,m.inflate),u=d.length,d.length=void 0}catch(e){return n(e)}if(m.length=u,m.encoding=h?null:f,null===m.encoding&&null!==f&&!o.encodingExists(f))return n(i(415,'unsupported charset "'+f.toUpperCase()+'"',{charset:f.toLowerCase(),type:"charset.unsupported"}));p("read body"),a(d,m,function(a,s){var l;if(a)return l="encoding.unsupported"===a.type?i(415,'unsupported charset "'+f.toUpperCase()+'"',{charset:f.toLowerCase(),type:"charset.unsupported"}):i(400,a),d.resume(),void r(e,function(){n(i(400,l))});if(h)try{p("verify body"),h(e,t,s,f)}catch(e){return void n(i(403,e,{body:s,type:e.type||"entity.verify.failed"}))}var u=s;try{p("parse body"),u="string"!=typeof s&&null!==f?o.decode(s,f):s,e.body=c(u)}catch(e){return void n(i(400,e,{body:u,type:e.type||"entity.parse.failed"}))}n()})}},function(e,t,n){"use strict";
/*!
 * encodeurl
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e){return String(e).replace(a,o).replace(i,encodeURI)};var i=/(?:[^\x21\x25\x26-\x3B\x3D\x3F-\x5B\x5D\x5F\x61-\x7A\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g,a=/(^|[^\uD800-\uDBFF])[\uDC00-\uDFFF]|[\uD800-\uDBFF]([^\uDC00-\uDFFF]|$)/g,o="$1�$2"},function(e,t,n){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var i=/["'&<>]/;e.exports=function(e){var t,n=""+e,a=i.exec(n);if(!a)return n;var o="",r=0,s=0;for(r=a.index;r<n.length;r++){switch(n.charCodeAt(r)){case 34:t="&quot;";break;case 38:t="&amp;";break;case 39:t="&#39;";break;case 60:t="&lt;";break;case 62:t="&gt;";break;default:continue}s!==r&&(o+=n.substring(s,r)),s=r+1,o+=t}return s!==r?o+n.substring(s,r):o}},function(e,t,n){"use strict";e.exports=function(e,t){if(null==t)return function e(t,n){for(var i=0;i<t.length;i++){var a=t[i];Array.isArray(a)?e(a,n):n.push(a)}return n}(e,[]);return function e(t,n,i){for(var a=0;a<t.length;a++){var o=t[a];i>0&&Array.isArray(o)?e(o,n,i-1):n.push(o)}return n}(e,[],t)}},function(e,t){e.exports=function(e,t){if(e&&t)for(var n in t)e[n]=t[n];return e}},function(e,t,n){"use strict";e.exports={host:"localhost",user:"win32"===process.platform?process.env.USERNAME:process.env.USER,database:"win32"===process.platform?process.env.USERNAME:process.env.USER,password:null,connectionString:void 0,port:5432,rows:0,binary:!1,max:10,idleTimeoutMillis:3e4,client_encoding:"",ssl:!1,application_name:void 0,fallback_application_name:void 0,parseInputDatesAsUTC:!1,statement_timeout:!1,query_timeout:!1};var i=n(24),a=i.getTypeParser(20,"text"),o=i.getTypeParser(1016,"text");e.exports.__defineSetter__("parseInt8",function(e){i.setTypeParser(20,"text",e?i.getTypeParser(23,"text"):a),i.setTypeParser(1016,"text",e?i.getTypeParser(1007,"text"):o)})},function(e,t,n){var i=n(145),a=n(147),o=n(62);t.getTypeParser=function(e,t){if(!r[t=t||"text"])return s;return r[t][e]||s},t.setTypeParser=function(e,t,n){"function"==typeof t&&(n=t,t="text");r[t][e]=n},t.arrayParser=o;var r={text:{},binary:{}};function s(e){return String(e)}i.init(function(e,t){r.text[e]=t}),a.init(function(e,t){r.binary[e]=t})},function(e,t){e.exports=require("assert")},function(e,t){e.exports=require("net")},function(e){e.exports=[["0","\0",127,"€"],["8140","丂丄丅丆丏丒丗丟丠両丣並丩丮丯丱丳丵丷丼乀乁乂乄乆乊乑乕乗乚乛乢乣乤乥乧乨乪",5,"乲乴",9,"乿",6,"亇亊"],["8180","亐亖亗亙亜亝亞亣亪亯亰亱亴亶亷亸亹亼亽亾仈仌仏仐仒仚仛仜仠仢仦仧仩仭仮仯仱仴仸仹仺仼仾伀伂",6,"伋伌伒",4,"伜伝伡伣伨伩伬伭伮伱伳伵伷伹伻伾",4,"佄佅佇",5,"佒佔佖佡佢佦佨佪佫佭佮佱佲併佷佸佹佺佽侀侁侂侅來侇侊侌侎侐侒侓侕侖侘侙侚侜侞侟価侢"],["8240","侤侫侭侰",4,"侶",8,"俀俁係俆俇俈俉俋俌俍俒",4,"俙俛俠俢俤俥俧俫俬俰俲俴俵俶俷俹俻俼俽俿",11],["8280","個倎倐們倓倕倖倗倛倝倞倠倢倣値倧倫倯",10,"倻倽倿偀偁偂偄偅偆偉偊偋偍偐",4,"偖偗偘偙偛偝",7,"偦",5,"偭",8,"偸偹偺偼偽傁傂傃傄傆傇傉傊傋傌傎",20,"傤傦傪傫傭",4,"傳",6,"傼"],["8340","傽",17,"僐",5,"僗僘僙僛",10,"僨僩僪僫僯僰僱僲僴僶",4,"僼",9,"儈"],["8380","儉儊儌",5,"儓",13,"儢",28,"兂兇兊兌兎兏児兒兓兗兘兙兛兝",4,"兣兤兦內兩兪兯兲兺兾兿冃冄円冇冊冋冎冏冐冑冓冔冘冚冝冞冟冡冣冦",4,"冭冮冴冸冹冺冾冿凁凂凃凅凈凊凍凎凐凒",5],["8440","凘凙凚凜凞凟凢凣凥",5,"凬凮凱凲凴凷凾刄刅刉刋刌刏刐刓刔刕刜刞刟刡刢刣別刦刧刪刬刯刱刲刴刵刼刾剄",5,"剋剎剏剒剓剕剗剘"],["8480","剙剚剛剝剟剠剢剣剤剦剨剫剬剭剮剰剱剳",9,"剾劀劃",4,"劉",6,"劑劒劔",6,"劜劤劥劦劧劮劯劰労",9,"勀勁勂勄勅勆勈勊勌勍勎勏勑勓勔動勗務",5,"勠勡勢勣勥",10,"勱",7,"勻勼勽匁匂匃匄匇匉匊匋匌匎"],["8540","匑匒匓匔匘匛匜匞匟匢匤匥匧匨匩匫匬匭匯",9,"匼匽區卂卄卆卋卌卍卐協単卙卛卝卥卨卪卬卭卲卶卹卻卼卽卾厀厁厃厇厈厊厎厏"],["8580","厐",4,"厖厗厙厛厜厞厠厡厤厧厪厫厬厭厯",6,"厷厸厹厺厼厽厾叀參",4,"収叏叐叒叓叕叚叜叝叞叡叢叧叴叺叾叿吀吂吅吇吋吔吘吙吚吜吢吤吥吪吰吳吶吷吺吽吿呁呂呄呅呇呉呌呍呎呏呑呚呝",4,"呣呥呧呩",7,"呴呹呺呾呿咁咃咅咇咈咉咊咍咑咓咗咘咜咞咟咠咡"],["8640","咢咥咮咰咲咵咶咷咹咺咼咾哃哅哊哋哖哘哛哠",4,"哫哬哯哰哱哴",5,"哻哾唀唂唃唄唅唈唊",4,"唒唓唕",5,"唜唝唞唟唡唥唦"],["8680","唨唩唫唭唲唴唵唶唸唹唺唻唽啀啂啅啇啈啋",4,"啑啒啓啔啗",4,"啝啞啟啠啢啣啨啩啫啯",5,"啹啺啽啿喅喆喌喍喎喐喒喓喕喖喗喚喛喞喠",6,"喨",8,"喲喴営喸喺喼喿",4,"嗆嗇嗈嗊嗋嗎嗏嗐嗕嗗",4,"嗞嗠嗢嗧嗩嗭嗮嗰嗱嗴嗶嗸",4,"嗿嘂嘃嘄嘅"],["8740","嘆嘇嘊嘋嘍嘐",7,"嘙嘚嘜嘝嘠嘡嘢嘥嘦嘨嘩嘪嘫嘮嘯嘰嘳嘵嘷嘸嘺嘼嘽嘾噀",11,"噏",4,"噕噖噚噛噝",4],["8780","噣噥噦噧噭噮噯噰噲噳噴噵噷噸噹噺噽",7,"嚇",6,"嚐嚑嚒嚔",14,"嚤",10,"嚰",6,"嚸嚹嚺嚻嚽",12,"囋",8,"囕囖囘囙囜団囥",5,"囬囮囯囲図囶囷囸囻囼圀圁圂圅圇國",6],["8840","園",9,"圝圞圠圡圢圤圥圦圧圫圱圲圴",4,"圼圽圿坁坃坄坅坆坈坉坋坒",4,"坘坙坢坣坥坧坬坮坰坱坲坴坵坸坹坺坽坾坿垀"],["8880","垁垇垈垉垊垍",4,"垔",6,"垜垝垞垟垥垨垪垬垯垰垱垳垵垶垷垹",8,"埄",6,"埌埍埐埑埓埖埗埛埜埞埡埢埣埥",7,"埮埰埱埲埳埵埶執埻埼埾埿堁堃堄堅堈堉堊堌堎堏堐堒堓堔堖堗堘堚堛堜堝堟堢堣堥",4,"堫",4,"報堲堳場堶",7],["8940","堾",5,"塅",6,"塎塏塐塒塓塕塖塗塙",4,"塟",5,"塦",4,"塭",16,"塿墂墄墆墇墈墊墋墌"],["8980","墍",4,"墔",4,"墛墜墝墠",7,"墪",17,"墽墾墿壀壂壃壄壆",10,"壒壓壔壖",13,"壥",5,"壭壯壱売壴壵壷壸壺",7,"夃夅夆夈",4,"夎夐夑夒夓夗夘夛夝夞夠夡夢夣夦夨夬夰夲夳夵夶夻"],["8a40","夽夾夿奀奃奅奆奊奌奍奐奒奓奙奛",4,"奡奣奤奦",12,"奵奷奺奻奼奾奿妀妅妉妋妌妎妏妐妑妔妕妘妚妛妜妝妟妠妡妢妦"],["8a80","妧妬妭妰妱妳",5,"妺妼妽妿",6,"姇姈姉姌姍姎姏姕姖姙姛姞",4,"姤姦姧姩姪姫姭",11,"姺姼姽姾娀娂娊娋娍娎娏娐娒娔娕娖娗娙娚娛娝娞娡娢娤娦娧娨娪",6,"娳娵娷",4,"娽娾娿婁",4,"婇婈婋",9,"婖婗婘婙婛",5],["8b40","婡婣婤婥婦婨婩婫",8,"婸婹婻婼婽婾媀",17,"媓",6,"媜",13,"媫媬"],["8b80","媭",4,"媴媶媷媹",4,"媿嫀嫃",5,"嫊嫋嫍",4,"嫓嫕嫗嫙嫚嫛嫝嫞嫟嫢嫤嫥嫧嫨嫪嫬",4,"嫲",22,"嬊",11,"嬘",25,"嬳嬵嬶嬸",7,"孁",6],["8c40","孈",7,"孒孖孞孠孡孧孨孫孭孮孯孲孴孶孷學孹孻孼孾孿宂宆宊宍宎宐宑宒宔宖実宧宨宩宬宭宮宯宱宲宷宺宻宼寀寁寃寈寉寊寋寍寎寏"],["8c80","寑寔",8,"寠寢寣實寧審",4,"寯寱",6,"寽対尀専尃尅將專尋尌對導尐尒尓尗尙尛尞尟尠尡尣尦尨尩尪尫尭尮尯尰尲尳尵尶尷屃屄屆屇屌屍屒屓屔屖屗屘屚屛屜屝屟屢層屧",6,"屰屲",6,"屻屼屽屾岀岃",4,"岉岊岋岎岏岒岓岕岝",4,"岤",4],["8d40","岪岮岯岰岲岴岶岹岺岻岼岾峀峂峃峅",5,"峌",5,"峓",5,"峚",6,"峢峣峧峩峫峬峮峯峱",9,"峼",4],["8d80","崁崄崅崈",5,"崏",4,"崕崗崘崙崚崜崝崟",4,"崥崨崪崫崬崯",4,"崵",7,"崿",7,"嵈嵉嵍",10,"嵙嵚嵜嵞",10,"嵪嵭嵮嵰嵱嵲嵳嵵",12,"嶃",21,"嶚嶛嶜嶞嶟嶠"],["8e40","嶡",21,"嶸",12,"巆",6,"巎",12,"巜巟巠巣巤巪巬巭"],["8e80","巰巵巶巸",4,"巿帀帄帇帉帊帋帍帎帒帓帗帞",7,"帨",4,"帯帰帲",4,"帹帺帾帿幀幁幃幆",5,"幍",6,"幖",4,"幜幝幟幠幣",14,"幵幷幹幾庁庂広庅庈庉庌庍庎庒庘庛庝庡庢庣庤庨",4,"庮",4,"庴庺庻庼庽庿",6],["8f40","廆廇廈廋",5,"廔廕廗廘廙廚廜",11,"廩廫",8,"廵廸廹廻廼廽弅弆弇弉弌弍弎弐弒弔弖弙弚弜弝弞弡弢弣弤"],["8f80","弨弫弬弮弰弲",6,"弻弽弾弿彁",14,"彑彔彙彚彛彜彞彟彠彣彥彧彨彫彮彯彲彴彵彶彸彺彽彾彿徃徆徍徎徏徑従徔徖徚徛徝從徟徠徢",5,"復徫徬徯",5,"徶徸徹徺徻徾",4,"忇忈忊忋忎忓忔忕忚忛応忞忟忢忣忥忦忨忩忬忯忰忲忳忴忶忷忹忺忼怇"],["9040","怈怉怋怌怐怑怓怗怘怚怞怟怢怣怤怬怭怮怰",4,"怶",4,"怽怾恀恄",6,"恌恎恏恑恓恔恖恗恘恛恜恞恟恠恡恥恦恮恱恲恴恵恷恾悀"],["9080","悁悂悅悆悇悈悊悋悎悏悐悑悓悕悗悘悙悜悞悡悢悤悥悧悩悪悮悰悳悵悶悷悹悺悽",7,"惇惈惉惌",4,"惒惓惔惖惗惙惛惞惡",4,"惪惱惲惵惷惸惻",4,"愂愃愄愅愇愊愋愌愐",4,"愖愗愘愙愛愜愝愞愡愢愥愨愩愪愬",18,"慀",6],["9140","慇慉態慍慏慐慒慓慔慖",6,"慞慟慠慡慣慤慥慦慩",6,"慱慲慳慴慶慸",18,"憌憍憏",4,"憕"],["9180","憖",6,"憞",8,"憪憫憭",9,"憸",5,"憿懀懁懃",4,"應懌",4,"懓懕",16,"懧",13,"懶",8,"戀",5,"戇戉戓戔戙戜戝戞戠戣戦戧戨戩戫戭戯戰戱戲戵戶戸",4,"扂扄扅扆扊"],["9240","扏扐払扖扗扙扚扜",6,"扤扥扨扱扲扴扵扷扸扺扻扽抁抂抃抅抆抇抈抋",5,"抔抙抜抝択抣抦抧抩抪抭抮抯抰抲抳抴抶抷抸抺抾拀拁"],["9280","拃拋拏拑拕拝拞拠拡拤拪拫拰拲拵拸拹拺拻挀挃挄挅挆挊挋挌挍挏挐挒挓挔挕挗挘挙挜挦挧挩挬挭挮挰挱挳",5,"挻挼挾挿捀捁捄捇捈捊捑捒捓捔捖",7,"捠捤捥捦捨捪捫捬捯捰捲捳捴捵捸捹捼捽捾捿掁掃掄掅掆掋掍掑掓掔掕掗掙",6,"採掤掦掫掯掱掲掵掶掹掻掽掿揀"],["9340","揁揂揃揅揇揈揊揋揌揑揓揔揕揗",6,"揟揢揤",4,"揫揬揮揯揰揱揳揵揷揹揺揻揼揾搃搄搆",4,"損搎搑搒搕",5,"搝搟搢搣搤"],["9380","搥搧搨搩搫搮",5,"搵",4,"搻搼搾摀摂摃摉摋",6,"摓摕摖摗摙",4,"摟",7,"摨摪摫摬摮",9,"摻",6,"撃撆撈",8,"撓撔撗撘撚撛撜撝撟",4,"撥撦撧撨撪撫撯撱撲撳撴撶撹撻撽撾撿擁擃擄擆",6,"擏擑擓擔擕擖擙據"],["9440","擛擜擝擟擠擡擣擥擧",24,"攁",7,"攊",7,"攓",4,"攙",8],["9480","攢攣攤攦",4,"攬攭攰攱攲攳攷攺攼攽敀",4,"敆敇敊敋敍敎敐敒敓敔敗敘敚敜敟敠敡敤敥敧敨敩敪敭敮敯敱敳敵敶數",14,"斈斉斊斍斎斏斒斔斕斖斘斚斝斞斠斢斣斦斨斪斬斮斱",7,"斺斻斾斿旀旂旇旈旉旊旍旐旑旓旔旕旘",7,"旡旣旤旪旫"],["9540","旲旳旴旵旸旹旻",4,"昁昄昅昇昈昉昋昍昐昑昒昖昗昘昚昛昜昞昡昢昣昤昦昩昪昫昬昮昰昲昳昷",4,"昽昿晀時晄",6,"晍晎晐晑晘"],["9580","晙晛晜晝晞晠晢晣晥晧晩",4,"晱晲晳晵晸晹晻晼晽晿暀暁暃暅暆暈暉暊暋暍暎暏暐暒暓暔暕暘",4,"暞",8,"暩",4,"暯",4,"暵暶暷暸暺暻暼暽暿",25,"曚曞",7,"曧曨曪",5,"曱曵曶書曺曻曽朁朂會"],["9640","朄朅朆朇朌朎朏朑朒朓朖朘朙朚朜朞朠",5,"朧朩朮朰朲朳朶朷朸朹朻朼朾朿杁杄杅杇杊杋杍杒杔杕杗",4,"杝杢杣杤杦杧杫杬杮東杴杶"],["9680","杸杹杺杻杽枀枂枃枅枆枈枊枌枍枎枏枑枒枓枔枖枙枛枟枠枡枤枦枩枬枮枱枲枴枹",7,"柂柅",9,"柕柖柗柛柟柡柣柤柦柧柨柪柫柭柮柲柵",7,"柾栁栂栃栄栆栍栐栒栔栕栘",4,"栞栟栠栢",6,"栫",6,"栴栵栶栺栻栿桇桋桍桏桒桖",5],["9740","桜桝桞桟桪桬",7,"桵桸",8,"梂梄梇",7,"梐梑梒梔梕梖梘",9,"梣梤梥梩梪梫梬梮梱梲梴梶梷梸"],["9780","梹",6,"棁棃",5,"棊棌棎棏棐棑棓棔棖棗棙棛",4,"棡棢棤",9,"棯棲棳棴棶棷棸棻棽棾棿椀椂椃椄椆",4,"椌椏椑椓",11,"椡椢椣椥",7,"椮椯椱椲椳椵椶椷椸椺椻椼椾楀楁楃",16,"楕楖楘楙楛楜楟"],["9840","楡楢楤楥楧楨楩楪楬業楯楰楲",4,"楺楻楽楾楿榁榃榅榊榋榌榎",5,"榖榗榙榚榝",9,"榩榪榬榮榯榰榲榳榵榶榸榹榺榼榽"],["9880","榾榿槀槂",7,"構槍槏槑槒槓槕",5,"槜槝槞槡",11,"槮槯槰槱槳",9,"槾樀",9,"樋",11,"標",5,"樠樢",5,"権樫樬樭樮樰樲樳樴樶",6,"樿",4,"橅橆橈",7,"橑",6,"橚"],["9940","橜",4,"橢橣橤橦",10,"橲",6,"橺橻橽橾橿檁檂檃檅",8,"檏檒",4,"檘",7,"檡",5],["9980","檧檨檪檭",114,"欥欦欨",6],["9a40","欯欰欱欳欴欵欶欸欻欼欽欿歀歁歂歄歅歈歊歋歍",11,"歚",7,"歨歩歫",13,"歺歽歾歿殀殅殈"],["9a80","殌殎殏殐殑殔殕殗殘殙殜",4,"殢",7,"殫",7,"殶殸",6,"毀毃毄毆",4,"毌毎毐毑毘毚毜",4,"毢",7,"毬毭毮毰毱毲毴毶毷毸毺毻毼毾",6,"氈",4,"氎氒気氜氝氞氠氣氥氫氬氭氱氳氶氷氹氺氻氼氾氿汃汄汅汈汋",4,"汑汒汓汖汘"],["9b40","汙汚汢汣汥汦汧汫",4,"汱汳汵汷汸決汻汼汿沀沄沇沊沋沍沎沑沒沕沖沗沘沚沜沝沞沠沢沨沬沯沰沴沵沶沷沺泀況泂泃泆泇泈泋泍泎泏泑泒泘"],["9b80","泙泚泜泝泟泤泦泧泩泬泭泲泴泹泿洀洂洃洅洆洈洉洊洍洏洐洑洓洔洕洖洘洜洝洟",5,"洦洨洩洬洭洯洰洴洶洷洸洺洿浀浂浄浉浌浐浕浖浗浘浛浝浟浡浢浤浥浧浨浫浬浭浰浱浲浳浵浶浹浺浻浽",4,"涃涄涆涇涊涋涍涏涐涒涖",4,"涜涢涥涬涭涰涱涳涴涶涷涹",5,"淁淂淃淈淉淊"],["9c40","淍淎淏淐淒淓淔淕淗淚淛淜淟淢淣淥淧淨淩淪淭淯淰淲淴淵淶淸淺淽",7,"渆渇済渉渋渏渒渓渕渘渙減渜渞渟渢渦渧渨渪測渮渰渱渳渵"],["9c80","渶渷渹渻",7,"湅",7,"湏湐湑湒湕湗湙湚湜湝湞湠",10,"湬湭湯",14,"満溁溂溄溇溈溊",4,"溑",6,"溙溚溛溝溞溠溡溣溤溦溨溩溫溬溭溮溰溳溵溸溹溼溾溿滀滃滄滅滆滈滉滊滌滍滎滐滒滖滘滙滛滜滝滣滧滪",5],["9d40","滰滱滲滳滵滶滷滸滺",7,"漃漄漅漇漈漊",4,"漐漑漒漖",9,"漡漢漣漥漦漧漨漬漮漰漲漴漵漷",6,"漿潀潁潂"],["9d80","潃潄潅潈潉潊潌潎",9,"潙潚潛潝潟潠潡潣潤潥潧",5,"潯潰潱潳潵潶潷潹潻潽",6,"澅澆澇澊澋澏",12,"澝澞澟澠澢",4,"澨",10,"澴澵澷澸澺",5,"濁濃",5,"濊",6,"濓",10,"濟濢濣濤濥"],["9e40","濦",7,"濰",32,"瀒",7,"瀜",6,"瀤",6],["9e80","瀫",9,"瀶瀷瀸瀺",17,"灍灎灐",13,"灟",11,"灮灱灲灳灴灷灹灺灻災炁炂炃炄炆炇炈炋炌炍炏炐炑炓炗炘炚炛炞",12,"炰炲炴炵炶為炾炿烄烅烆烇烉烋",12,"烚"],["9f40","烜烝烞烠烡烢烣烥烪烮烰",6,"烸烺烻烼烾",10,"焋",4,"焑焒焔焗焛",10,"焧",7,"焲焳焴"],["9f80","焵焷",13,"煆煇煈煉煋煍煏",12,"煝煟",4,"煥煩",4,"煯煰煱煴煵煶煷煹煻煼煾",5,"熅",4,"熋熌熍熎熐熑熒熓熕熖熗熚",4,"熡",6,"熩熪熫熭",5,"熴熶熷熸熺",8,"燄",9,"燏",4],["a040","燖",9,"燡燢燣燤燦燨",5,"燯",9,"燺",11,"爇",19],["a080","爛爜爞",9,"爩爫爭爮爯爲爳爴爺爼爾牀",6,"牉牊牋牎牏牐牑牓牔牕牗牘牚牜牞牠牣牤牥牨牪牫牬牭牰牱牳牴牶牷牸牻牼牽犂犃犅",4,"犌犎犐犑犓",11,"犠",11,"犮犱犲犳犵犺",6,"狅狆狇狉狊狋狌狏狑狓狔狕狖狘狚狛"],["a1a1","　、。·ˉˇ¨〃々—～‖…‘’“”〔〕〈",7,"〖〗【】±×÷∶∧∨∑∏∪∩∈∷√⊥∥∠⌒⊙∫∮≡≌≈∽∝≠≮≯≤≥∞∵∴♂♀°′″℃＄¤￠￡‰§№☆★○●◎◇◆□■△▲※→←↑↓〓"],["a2a1","ⅰ",9],["a2b1","⒈",19,"⑴",19,"①",9],["a2e5","㈠",9],["a2f1","Ⅰ",11],["a3a1","！＂＃￥％",88,"￣"],["a4a1","ぁ",82],["a5a1","ァ",85],["a6a1","Α",16,"Σ",6],["a6c1","α",16,"σ",6],["a6e0","︵︶︹︺︿﹀︽︾﹁﹂﹃﹄"],["a6ee","︻︼︷︸︱"],["a6f4","︳︴"],["a7a1","А",5,"ЁЖ",25],["a7d1","а",5,"ёж",25],["a840","ˊˋ˙–―‥‵℅℉↖↗↘↙∕∟∣≒≦≧⊿═",35,"▁",6],["a880","█",7,"▓▔▕▼▽◢◣◤◥☉⊕〒〝〞"],["a8a1","āáǎàēéěèīíǐìōóǒòūúǔùǖǘǚǜüêɑ"],["a8bd","ńň"],["a8c0","ɡ"],["a8c5","ㄅ",36],["a940","〡",8,"㊣㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕︰￢￤"],["a959","℡㈱"],["a95c","‐"],["a960","ー゛゜ヽヾ〆ゝゞ﹉",9,"﹔﹕﹖﹗﹙",8],["a980","﹢",4,"﹨﹩﹪﹫"],["a996","〇"],["a9a4","─",75],["aa40","狜狝狟狢",5,"狪狫狵狶狹狽狾狿猀猂猄",5,"猋猌猍猏猐猑猒猔猘猙猚猟猠猣猤猦猧猨猭猯猰猲猳猵猶猺猻猼猽獀",8],["aa80","獉獊獋獌獎獏獑獓獔獕獖獘",7,"獡",10,"獮獰獱"],["ab40","獲",11,"獿",4,"玅玆玈玊玌玍玏玐玒玓玔玕玗玘玙玚玜玝玞玠玡玣",5,"玪玬玭玱玴玵玶玸玹玼玽玾玿珁珃",4],["ab80","珋珌珎珒",6,"珚珛珜珝珟珡珢珣珤珦珨珪珫珬珮珯珰珱珳",4],["ac40","珸",10,"琄琇琈琋琌琍琎琑",8,"琜",5,"琣琤琧琩琫琭琯琱琲琷",4,"琽琾琿瑀瑂",11],["ac80","瑎",6,"瑖瑘瑝瑠",12,"瑮瑯瑱",4,"瑸瑹瑺"],["ad40","瑻瑼瑽瑿璂璄璅璆璈璉璊璌璍璏璑",10,"璝璟",7,"璪",15,"璻",12],["ad80","瓈",9,"瓓",8,"瓝瓟瓡瓥瓧",6,"瓰瓱瓲"],["ae40","瓳瓵瓸",6,"甀甁甂甃甅",7,"甎甐甒甔甕甖甗甛甝甞甠",4,"甦甧甪甮甴甶甹甼甽甿畁畂畃畄畆畇畉畊畍畐畑畒畓畕畖畗畘"],["ae80","畝",7,"畧畨畩畫",6,"畳畵當畷畺",4,"疀疁疂疄疅疇"],["af40","疈疉疊疌疍疎疐疓疕疘疛疜疞疢疦",4,"疭疶疷疺疻疿痀痁痆痋痌痎痏痐痑痓痗痙痚痜痝痟痠痡痥痩痬痭痮痯痲痳痵痶痷痸痺痻痽痾瘂瘄瘆瘇"],["af80","瘈瘉瘋瘍瘎瘏瘑瘒瘓瘔瘖瘚瘜瘝瘞瘡瘣瘧瘨瘬瘮瘯瘱瘲瘶瘷瘹瘺瘻瘽癁療癄"],["b040","癅",6,"癎",5,"癕癗",4,"癝癟癠癡癢癤",6,"癬癭癮癰",7,"癹発發癿皀皁皃皅皉皊皌皍皏皐皒皔皕皗皘皚皛"],["b080","皜",7,"皥",8,"皯皰皳皵",9,"盀盁盃啊阿埃挨哎唉哀皑癌蔼矮艾碍爱隘鞍氨安俺按暗岸胺案肮昂盎凹敖熬翱袄傲奥懊澳芭捌扒叭吧笆八疤巴拔跋靶把耙坝霸罢爸白柏百摆佰败拜稗斑班搬扳般颁板版扮拌伴瓣半办绊邦帮梆榜膀绑棒磅蚌镑傍谤苞胞包褒剥"],["b140","盄盇盉盋盌盓盕盙盚盜盝盞盠",4,"盦",7,"盰盳盵盶盷盺盻盽盿眀眂眃眅眆眊県眎",10,"眛眜眝眞眡眣眤眥眧眪眫"],["b180","眬眮眰",4,"眹眻眽眾眿睂睄睅睆睈",7,"睒",7,"睜薄雹保堡饱宝抱报暴豹鲍爆杯碑悲卑北辈背贝钡倍狈备惫焙被奔苯本笨崩绷甭泵蹦迸逼鼻比鄙笔彼碧蓖蔽毕毙毖币庇痹闭敝弊必辟壁臂避陛鞭边编贬扁便变卞辨辩辫遍标彪膘表鳖憋别瘪彬斌濒滨宾摈兵冰柄丙秉饼炳"],["b240","睝睞睟睠睤睧睩睪睭",11,"睺睻睼瞁瞂瞃瞆",5,"瞏瞐瞓",11,"瞡瞣瞤瞦瞨瞫瞭瞮瞯瞱瞲瞴瞶",4],["b280","瞼瞾矀",12,"矎",8,"矘矙矚矝",4,"矤病并玻菠播拨钵波博勃搏铂箔伯帛舶脖膊渤泊驳捕卜哺补埠不布步簿部怖擦猜裁材才财睬踩采彩菜蔡餐参蚕残惭惨灿苍舱仓沧藏操糙槽曹草厕策侧册测层蹭插叉茬茶查碴搽察岔差诧拆柴豺搀掺蝉馋谗缠铲产阐颤昌猖"],["b340","矦矨矪矯矰矱矲矴矵矷矹矺矻矼砃",5,"砊砋砎砏砐砓砕砙砛砞砠砡砢砤砨砪砫砮砯砱砲砳砵砶砽砿硁硂硃硄硆硈硉硊硋硍硏硑硓硔硘硙硚"],["b380","硛硜硞",11,"硯",7,"硸硹硺硻硽",6,"场尝常长偿肠厂敞畅唱倡超抄钞朝嘲潮巢吵炒车扯撤掣彻澈郴臣辰尘晨忱沉陈趁衬撑称城橙成呈乘程惩澄诚承逞骋秤吃痴持匙池迟弛驰耻齿侈尺赤翅斥炽充冲虫崇宠抽酬畴踌稠愁筹仇绸瞅丑臭初出橱厨躇锄雏滁除楚"],["b440","碄碅碆碈碊碋碏碐碒碔碕碖碙碝碞碠碢碤碦碨",7,"碵碶碷碸確碻碼碽碿磀磂磃磄磆磇磈磌磍磎磏磑磒磓磖磗磘磚",9],["b480","磤磥磦磧磩磪磫磭",4,"磳磵磶磸磹磻",5,"礂礃礄礆",6,"础储矗搐触处揣川穿椽传船喘串疮窗幢床闯创吹炊捶锤垂春椿醇唇淳纯蠢戳绰疵茨磁雌辞慈瓷词此刺赐次聪葱囱匆从丛凑粗醋簇促蹿篡窜摧崔催脆瘁粹淬翠村存寸磋撮搓措挫错搭达答瘩打大呆歹傣戴带殆代贷袋待逮"],["b540","礍",5,"礔",9,"礟",4,"礥",14,"礵",4,"礽礿祂祃祄祅祇祊",8,"祔祕祘祙祡祣"],["b580","祤祦祩祪祫祬祮祰",6,"祹祻",4,"禂禃禆禇禈禉禋禌禍禎禐禑禒怠耽担丹单郸掸胆旦氮但惮淡诞弹蛋当挡党荡档刀捣蹈倒岛祷导到稻悼道盗德得的蹬灯登等瞪凳邓堤低滴迪敌笛狄涤翟嫡抵底地蒂第帝弟递缔颠掂滇碘点典靛垫电佃甸店惦奠淀殿碉叼雕凋刁掉吊钓调跌爹碟蝶迭谍叠"],["b640","禓",6,"禛",11,"禨",10,"禴",4,"禼禿秂秄秅秇秈秊秌秎秏秐秓秔秖秗秙",5,"秠秡秢秥秨秪"],["b680","秬秮秱",6,"秹秺秼秾秿稁稄稅稇稈稉稊稌稏",4,"稕稖稘稙稛稜丁盯叮钉顶鼎锭定订丢东冬董懂动栋侗恫冻洞兜抖斗陡豆逗痘都督毒犊独读堵睹赌杜镀肚度渡妒端短锻段断缎堆兑队对墩吨蹲敦顿囤钝盾遁掇哆多夺垛躲朵跺舵剁惰堕蛾峨鹅俄额讹娥恶厄扼遏鄂饿恩而儿耳尔饵洱二"],["b740","稝稟稡稢稤",14,"稴稵稶稸稺稾穀",5,"穇",9,"穒",4,"穘",16],["b780","穩",6,"穱穲穳穵穻穼穽穾窂窅窇窉窊窋窌窎窏窐窓窔窙窚窛窞窡窢贰发罚筏伐乏阀法珐藩帆番翻樊矾钒繁凡烦反返范贩犯饭泛坊芳方肪房防妨仿访纺放菲非啡飞肥匪诽吠肺废沸费芬酚吩氛分纷坟焚汾粉奋份忿愤粪丰封枫蜂峰锋风疯烽逢冯缝讽奉凤佛否夫敷肤孵扶拂辐幅氟符伏俘服"],["b840","窣窤窧窩窪窫窮",4,"窴",10,"竀",10,"竌",9,"竗竘竚竛竜竝竡竢竤竧",5,"竮竰竱竲竳"],["b880","竴",4,"竻竼竾笀笁笂笅笇笉笌笍笎笐笒笓笖笗笘笚笜笝笟笡笢笣笧笩笭浮涪福袱弗甫抚辅俯釜斧脯腑府腐赴副覆赋复傅付阜父腹负富讣附妇缚咐噶嘎该改概钙盖溉干甘杆柑竿肝赶感秆敢赣冈刚钢缸肛纲岗港杠篙皋高膏羔糕搞镐稿告哥歌搁戈鸽胳疙割革葛格蛤阁隔铬个各给根跟耕更庚羹"],["b940","笯笰笲笴笵笶笷笹笻笽笿",5,"筆筈筊筍筎筓筕筗筙筜筞筟筡筣",10,"筯筰筳筴筶筸筺筼筽筿箁箂箃箄箆",6,"箎箏"],["b980","箑箒箓箖箘箙箚箛箞箟箠箣箤箥箮箯箰箲箳箵箶箷箹",7,"篂篃範埂耿梗工攻功恭龚供躬公宫弓巩汞拱贡共钩勾沟苟狗垢构购够辜菇咕箍估沽孤姑鼓古蛊骨谷股故顾固雇刮瓜剐寡挂褂乖拐怪棺关官冠观管馆罐惯灌贯光广逛瑰规圭硅归龟闺轨鬼诡癸桂柜跪贵刽辊滚棍锅郭国果裹过哈"],["ba40","篅篈築篊篋篍篎篏篐篒篔",4,"篛篜篞篟篠篢篣篤篧篨篩篫篬篭篯篰篲",4,"篸篹篺篻篽篿",7,"簈簉簊簍簎簐",5,"簗簘簙"],["ba80","簚",4,"簠",5,"簨簩簫",12,"簹",5,"籂骸孩海氦亥害骇酣憨邯韩含涵寒函喊罕翰撼捍旱憾悍焊汗汉夯杭航壕嚎豪毫郝好耗号浩呵喝荷菏核禾和何合盒貉阂河涸赫褐鹤贺嘿黑痕很狠恨哼亨横衡恒轰哄烘虹鸿洪宏弘红喉侯猴吼厚候后呼乎忽瑚壶葫胡蝴狐糊湖"],["bb40","籃",9,"籎",36,"籵",5,"籾",9],["bb80","粈粊",6,"粓粔粖粙粚粛粠粡粣粦粧粨粩粫粬粭粯粰粴",4,"粺粻弧虎唬护互沪户花哗华猾滑画划化话槐徊怀淮坏欢环桓还缓换患唤痪豢焕涣宦幻荒慌黄磺蝗簧皇凰惶煌晃幌恍谎灰挥辉徽恢蛔回毁悔慧卉惠晦贿秽会烩汇讳诲绘荤昏婚魂浑混豁活伙火获或惑霍货祸击圾基机畸稽积箕"],["bc40","粿糀糂糃糄糆糉糋糎",6,"糘糚糛糝糞糡",6,"糩",5,"糰",7,"糹糺糼",13,"紋",5],["bc80","紑",14,"紡紣紤紥紦紨紩紪紬紭紮細",6,"肌饥迹激讥鸡姬绩缉吉极棘辑籍集及急疾汲即嫉级挤几脊己蓟技冀季伎祭剂悸济寄寂计记既忌际妓继纪嘉枷夹佳家加荚颊贾甲钾假稼价架驾嫁歼监坚尖笺间煎兼肩艰奸缄茧检柬碱硷拣捡简俭剪减荐槛鉴践贱见键箭件"],["bd40","紷",54,"絯",7],["bd80","絸",32,"健舰剑饯渐溅涧建僵姜将浆江疆蒋桨奖讲匠酱降蕉椒礁焦胶交郊浇骄娇嚼搅铰矫侥脚狡角饺缴绞剿教酵轿较叫窖揭接皆秸街阶截劫节桔杰捷睫竭洁结解姐戒藉芥界借介疥诫届巾筋斤金今津襟紧锦仅谨进靳晋禁近烬浸"],["be40","継",12,"綧",6,"綯",42],["be80","線",32,"尽劲荆兢茎睛晶鲸京惊精粳经井警景颈静境敬镜径痉靖竟竞净炯窘揪究纠玖韭久灸九酒厩救旧臼舅咎就疚鞠拘狙疽居驹菊局咀矩举沮聚拒据巨具距踞锯俱句惧炬剧捐鹃娟倦眷卷绢撅攫抉掘倔爵觉决诀绝均菌钧军君峻"],["bf40","緻",62],["bf80","縺縼",4,"繂",4,"繈",21,"俊竣浚郡骏喀咖卡咯开揩楷凯慨刊堪勘坎砍看康慷糠扛抗亢炕考拷烤靠坷苛柯棵磕颗科壳咳可渴克刻客课肯啃垦恳坑吭空恐孔控抠口扣寇枯哭窟苦酷库裤夸垮挎跨胯块筷侩快宽款匡筐狂框矿眶旷况亏盔岿窥葵奎魁傀"],["c040","繞",35,"纃",23,"纜纝纞"],["c080","纮纴纻纼绖绤绬绹缊缐缞缷缹缻",6,"罃罆",9,"罒罓馈愧溃坤昆捆困括扩廓阔垃拉喇蜡腊辣啦莱来赖蓝婪栏拦篮阑兰澜谰揽览懒缆烂滥琅榔狼廊郎朗浪捞劳牢老佬姥酪烙涝勒乐雷镭蕾磊累儡垒擂肋类泪棱楞冷厘梨犁黎篱狸离漓理李里鲤礼莉荔吏栗丽厉励砾历利傈例俐"],["c140","罖罙罛罜罝罞罠罣",4,"罫罬罭罯罰罳罵罶罷罸罺罻罼罽罿羀羂",7,"羋羍羏",4,"羕",4,"羛羜羠羢羣羥羦羨",6,"羱"],["c180","羳",4,"羺羻羾翀翂翃翄翆翇翈翉翋翍翏",4,"翖翗翙",5,"翢翣痢立粒沥隶力璃哩俩联莲连镰廉怜涟帘敛脸链恋炼练粮凉梁粱良两辆量晾亮谅撩聊僚疗燎寥辽潦了撂镣廖料列裂烈劣猎琳林磷霖临邻鳞淋凛赁吝拎玲菱零龄铃伶羚凌灵陵岭领另令溜琉榴硫馏留刘瘤流柳六龙聋咙笼窿"],["c240","翤翧翨翪翫翬翭翯翲翴",6,"翽翾翿耂耇耈耉耊耎耏耑耓耚耛耝耞耟耡耣耤耫",5,"耲耴耹耺耼耾聀聁聄聅聇聈聉聎聏聐聑聓聕聖聗"],["c280","聙聛",13,"聫",5,"聲",11,"隆垄拢陇楼娄搂篓漏陋芦卢颅庐炉掳卤虏鲁麓碌露路赂鹿潞禄录陆戮驴吕铝侣旅履屡缕虑氯律率滤绿峦挛孪滦卵乱掠略抡轮伦仑沦纶论萝螺罗逻锣箩骡裸落洛骆络妈麻玛码蚂马骂嘛吗埋买麦卖迈脉瞒馒蛮满蔓曼慢漫"],["c340","聾肁肂肅肈肊肍",5,"肔肕肗肙肞肣肦肧肨肬肰肳肵肶肸肹肻胅胇",4,"胏",6,"胘胟胠胢胣胦胮胵胷胹胻胾胿脀脁脃脄脅脇脈脋"],["c380","脌脕脗脙脛脜脝脟",12,"脭脮脰脳脴脵脷脹",4,"脿谩芒茫盲氓忙莽猫茅锚毛矛铆卯茂冒帽貌贸么玫枚梅酶霉煤没眉媒镁每美昧寐妹媚门闷们萌蒙檬盟锰猛梦孟眯醚靡糜迷谜弥米秘觅泌蜜密幂棉眠绵冕免勉娩缅面苗描瞄藐秒渺庙妙蔑灭民抿皿敏悯闽明螟鸣铭名命谬摸"],["c440","腀",5,"腇腉腍腎腏腒腖腗腘腛",4,"腡腢腣腤腦腨腪腫腬腯腲腳腵腶腷腸膁膃",4,"膉膋膌膍膎膐膒",5,"膙膚膞",4,"膤膥"],["c480","膧膩膫",7,"膴",5,"膼膽膾膿臄臅臇臈臉臋臍",6,"摹蘑模膜磨摩魔抹末莫墨默沫漠寞陌谋牟某拇牡亩姆母墓暮幕募慕木目睦牧穆拿哪呐钠那娜纳氖乃奶耐奈南男难囊挠脑恼闹淖呢馁内嫩能妮霓倪泥尼拟你匿腻逆溺蔫拈年碾撵捻念娘酿鸟尿捏聂孽啮镊镍涅您柠狞凝宁"],["c540","臔",14,"臤臥臦臨臩臫臮",4,"臵",5,"臽臿舃與",4,"舎舏舑舓舕",5,"舝舠舤舥舦舧舩舮舲舺舼舽舿"],["c580","艀艁艂艃艅艆艈艊艌艍艎艐",7,"艙艛艜艝艞艠",7,"艩拧泞牛扭钮纽脓浓农弄奴努怒女暖虐疟挪懦糯诺哦欧鸥殴藕呕偶沤啪趴爬帕怕琶拍排牌徘湃派攀潘盘磐盼畔判叛乓庞旁耪胖抛咆刨炮袍跑泡呸胚培裴赔陪配佩沛喷盆砰抨烹澎彭蓬棚硼篷膨朋鹏捧碰坯砒霹批披劈琵毗"],["c640","艪艫艬艭艱艵艶艷艸艻艼芀芁芃芅芆芇芉芌芐芓芔芕芖芚芛芞芠芢芣芧芲芵芶芺芻芼芿苀苂苃苅苆苉苐苖苙苚苝苢苧苨苩苪苬苭苮苰苲苳苵苶苸"],["c680","苺苼",4,"茊茋茍茐茒茓茖茘茙茝",9,"茩茪茮茰茲茷茻茽啤脾疲皮匹痞僻屁譬篇偏片骗飘漂瓢票撇瞥拼频贫品聘乒坪苹萍平凭瓶评屏坡泼颇婆破魄迫粕剖扑铺仆莆葡菩蒲埔朴圃普浦谱曝瀑期欺栖戚妻七凄漆柒沏其棋奇歧畦崎脐齐旗祈祁骑起岂乞企启契砌器气迄弃汽泣讫掐"],["c740","茾茿荁荂荄荅荈荊",4,"荓荕",4,"荝荢荰",6,"荹荺荾",6,"莇莈莊莋莌莍莏莐莑莔莕莖莗莙莚莝莟莡",6,"莬莭莮"],["c780","莯莵莻莾莿菂菃菄菆菈菉菋菍菎菐菑菒菓菕菗菙菚菛菞菢菣菤菦菧菨菫菬菭恰洽牵扦钎铅千迁签仟谦乾黔钱钳前潜遣浅谴堑嵌欠歉枪呛腔羌墙蔷强抢橇锹敲悄桥瞧乔侨巧鞘撬翘峭俏窍切茄且怯窃钦侵亲秦琴勤芹擒禽寝沁青轻氢倾卿清擎晴氰情顷请庆琼穷秋丘邱球求囚酋泅趋区蛆曲躯屈驱渠"],["c840","菮華菳",4,"菺菻菼菾菿萀萂萅萇萈萉萊萐萒",5,"萙萚萛萞",5,"萩",7,"萲",5,"萹萺萻萾",7,"葇葈葉"],["c880","葊",6,"葒",4,"葘葝葞葟葠葢葤",4,"葪葮葯葰葲葴葷葹葻葼取娶龋趣去圈颧权醛泉全痊拳犬券劝缺炔瘸却鹊榷确雀裙群然燃冉染瓤壤攘嚷让饶扰绕惹热壬仁人忍韧任认刃妊纫扔仍日戎茸蓉荣融熔溶容绒冗揉柔肉茹蠕儒孺如辱乳汝入褥软阮蕊瑞锐闰润若弱撒洒萨腮鳃塞赛三叁"],["c940","葽",4,"蒃蒄蒅蒆蒊蒍蒏",7,"蒘蒚蒛蒝蒞蒟蒠蒢",12,"蒰蒱蒳蒵蒶蒷蒻蒼蒾蓀蓂蓃蓅蓆蓇蓈蓋蓌蓎蓏蓒蓔蓕蓗"],["c980","蓘",4,"蓞蓡蓢蓤蓧",4,"蓭蓮蓯蓱",10,"蓽蓾蔀蔁蔂伞散桑嗓丧搔骚扫嫂瑟色涩森僧莎砂杀刹沙纱傻啥煞筛晒珊苫杉山删煽衫闪陕擅赡膳善汕扇缮墒伤商赏晌上尚裳梢捎稍烧芍勺韶少哨邵绍奢赊蛇舌舍赦摄射慑涉社设砷申呻伸身深娠绅神沈审婶甚肾慎渗声生甥牲升绳"],["ca40","蔃",8,"蔍蔎蔏蔐蔒蔔蔕蔖蔘蔙蔛蔜蔝蔞蔠蔢",8,"蔭",9,"蔾",4,"蕄蕅蕆蕇蕋",10],["ca80","蕗蕘蕚蕛蕜蕝蕟",4,"蕥蕦蕧蕩",8,"蕳蕵蕶蕷蕸蕼蕽蕿薀薁省盛剩胜圣师失狮施湿诗尸虱十石拾时什食蚀实识史矢使屎驶始式示士世柿事拭誓逝势是嗜噬适仕侍释饰氏市恃室视试收手首守寿授售受瘦兽蔬枢梳殊抒输叔舒淑疏书赎孰熟薯暑曙署蜀黍鼠属术述树束戍竖墅庶数漱"],["cb40","薂薃薆薈",6,"薐",10,"薝",6,"薥薦薧薩薫薬薭薱",5,"薸薺",6,"藂",6,"藊",4,"藑藒"],["cb80","藔藖",5,"藝",6,"藥藦藧藨藪",14,"恕刷耍摔衰甩帅栓拴霜双爽谁水睡税吮瞬顺舜说硕朔烁斯撕嘶思私司丝死肆寺嗣四伺似饲巳松耸怂颂送宋讼诵搜艘擞嗽苏酥俗素速粟僳塑溯宿诉肃酸蒜算虽隋随绥髓碎岁穗遂隧祟孙损笋蓑梭唆缩琐索锁所塌他它她塔"],["cc40","藹藺藼藽藾蘀",4,"蘆",10,"蘒蘓蘔蘕蘗",15,"蘨蘪",13,"蘹蘺蘻蘽蘾蘿虀"],["cc80","虁",11,"虒虓處",4,"虛虜虝號虠虡虣",7,"獭挞蹋踏胎苔抬台泰酞太态汰坍摊贪瘫滩坛檀痰潭谭谈坦毯袒碳探叹炭汤塘搪堂棠膛唐糖倘躺淌趟烫掏涛滔绦萄桃逃淘陶讨套特藤腾疼誊梯剔踢锑提题蹄啼体替嚏惕涕剃屉天添填田甜恬舔腆挑条迢眺跳贴铁帖厅听烃"],["cd40","虭虯虰虲",6,"蚃",6,"蚎",4,"蚔蚖",5,"蚞",4,"蚥蚦蚫蚭蚮蚲蚳蚷蚸蚹蚻",4,"蛁蛂蛃蛅蛈蛌蛍蛒蛓蛕蛖蛗蛚蛜"],["cd80","蛝蛠蛡蛢蛣蛥蛦蛧蛨蛪蛫蛬蛯蛵蛶蛷蛺蛻蛼蛽蛿蜁蜄蜅蜆蜋蜌蜎蜏蜐蜑蜔蜖汀廷停亭庭挺艇通桐酮瞳同铜彤童桶捅筒统痛偷投头透凸秃突图徒途涂屠土吐兔湍团推颓腿蜕褪退吞屯臀拖托脱鸵陀驮驼椭妥拓唾挖哇蛙洼娃瓦袜歪外豌弯湾玩顽丸烷完碗挽晚皖惋宛婉万腕汪王亡枉网往旺望忘妄威"],["ce40","蜙蜛蜝蜟蜠蜤蜦蜧蜨蜪蜫蜬蜭蜯蜰蜲蜳蜵蜶蜸蜹蜺蜼蜽蝀",6,"蝊蝋蝍蝏蝐蝑蝒蝔蝕蝖蝘蝚",5,"蝡蝢蝦",7,"蝯蝱蝲蝳蝵"],["ce80","蝷蝸蝹蝺蝿螀螁螄螆螇螉螊螌螎",4,"螔螕螖螘",6,"螠",4,"巍微危韦违桅围唯惟为潍维苇萎委伟伪尾纬未蔚味畏胃喂魏位渭谓尉慰卫瘟温蚊文闻纹吻稳紊问嗡翁瓮挝蜗涡窝我斡卧握沃巫呜钨乌污诬屋无芜梧吾吴毋武五捂午舞伍侮坞戊雾晤物勿务悟误昔熙析西硒矽晰嘻吸锡牺"],["cf40","螥螦螧螩螪螮螰螱螲螴螶螷螸螹螻螼螾螿蟁",4,"蟇蟈蟉蟌",4,"蟔",6,"蟜蟝蟞蟟蟡蟢蟣蟤蟦蟧蟨蟩蟫蟬蟭蟯",9],["cf80","蟺蟻蟼蟽蟿蠀蠁蠂蠄",5,"蠋",7,"蠔蠗蠘蠙蠚蠜",4,"蠣稀息希悉膝夕惜熄烯溪汐犀檄袭席习媳喜铣洗系隙戏细瞎虾匣霞辖暇峡侠狭下厦夏吓掀锨先仙鲜纤咸贤衔舷闲涎弦嫌显险现献县腺馅羡宪陷限线相厢镶香箱襄湘乡翔祥详想响享项巷橡像向象萧硝霄削哮嚣销消宵淆晓"],["d040","蠤",13,"蠳",5,"蠺蠻蠽蠾蠿衁衂衃衆",5,"衎",5,"衕衖衘衚",6,"衦衧衪衭衯衱衳衴衵衶衸衹衺"],["d080","衻衼袀袃袆袇袉袊袌袎袏袐袑袓袔袕袗",4,"袝",4,"袣袥",5,"小孝校肖啸笑效楔些歇蝎鞋协挟携邪斜胁谐写械卸蟹懈泄泻谢屑薪芯锌欣辛新忻心信衅星腥猩惺兴刑型形邢行醒幸杏性姓兄凶胸匈汹雄熊休修羞朽嗅锈秀袖绣墟戌需虚嘘须徐许蓄酗叙旭序畜恤絮婿绪续轩喧宣悬旋玄"],["d140","袬袮袯袰袲",4,"袸袹袺袻袽袾袿裀裃裄裇裈裊裋裌裍裏裐裑裓裖裗裚",4,"裠裡裦裧裩",6,"裲裵裶裷裺裻製裿褀褁褃",5],["d180","褉褋",4,"褑褔",4,"褜",4,"褢褣褤褦褧褨褩褬褭褮褯褱褲褳褵褷选癣眩绚靴薛学穴雪血勋熏循旬询寻驯巡殉汛训讯逊迅压押鸦鸭呀丫芽牙蚜崖衙涯雅哑亚讶焉咽阉烟淹盐严研蜒岩延言颜阎炎沿奄掩眼衍演艳堰燕厌砚雁唁彦焰宴谚验殃央鸯秧杨扬佯疡羊洋阳氧仰痒养样漾邀腰妖瑶"],["d240","褸",8,"襂襃襅",24,"襠",5,"襧",19,"襼"],["d280","襽襾覀覂覄覅覇",26,"摇尧遥窑谣姚咬舀药要耀椰噎耶爷野冶也页掖业叶曳腋夜液一壹医揖铱依伊衣颐夷遗移仪胰疑沂宜姨彝椅蚁倚已乙矣以艺抑易邑屹亿役臆逸肄疫亦裔意毅忆义益溢诣议谊译异翼翌绎茵荫因殷音阴姻吟银淫寅饮尹引隐"],["d340","覢",30,"觃觍觓觔觕觗觘觙觛觝觟觠觡觢觤觧觨觩觪觬觭觮觰觱觲觴",6],["d380","觻",4,"訁",5,"計",21,"印英樱婴鹰应缨莹萤营荧蝇迎赢盈影颖硬映哟拥佣臃痈庸雍踊蛹咏泳涌永恿勇用幽优悠忧尤由邮铀犹油游酉有友右佑釉诱又幼迂淤于盂榆虞愚舆余俞逾鱼愉渝渔隅予娱雨与屿禹宇语羽玉域芋郁吁遇喻峪御愈欲狱育誉"],["d440","訞",31,"訿",8,"詉",21],["d480","詟",25,"詺",6,"浴寓裕预豫驭鸳渊冤元垣袁原援辕园员圆猿源缘远苑愿怨院曰约越跃钥岳粤月悦阅耘云郧匀陨允运蕴酝晕韵孕匝砸杂栽哉灾宰载再在咱攒暂赞赃脏葬遭糟凿藻枣早澡蚤躁噪造皂灶燥责择则泽贼怎增憎曾赠扎喳渣札轧"],["d540","誁",7,"誋",7,"誔",46],["d580","諃",32,"铡闸眨栅榨咋乍炸诈摘斋宅窄债寨瞻毡詹粘沾盏斩辗崭展蘸栈占战站湛绽樟章彰漳张掌涨杖丈帐账仗胀瘴障招昭找沼赵照罩兆肇召遮折哲蛰辙者锗蔗这浙珍斟真甄砧臻贞针侦枕疹诊震振镇阵蒸挣睁征狰争怔整拯正政"],["d640","諤",34,"謈",27],["d680","謤謥謧",30,"帧症郑证芝枝支吱蜘知肢脂汁之织职直植殖执值侄址指止趾只旨纸志挚掷至致置帜峙制智秩稚质炙痔滞治窒中盅忠钟衷终种肿重仲众舟周州洲诌粥轴肘帚咒皱宙昼骤珠株蛛朱猪诸诛逐竹烛煮拄瞩嘱主著柱助蛀贮铸筑"],["d740","譆",31,"譧",4,"譭",25],["d780","讇",24,"讬讱讻诇诐诪谉谞住注祝驻抓爪拽专砖转撰赚篆桩庄装妆撞壮状椎锥追赘坠缀谆准捉拙卓桌琢茁酌啄着灼浊兹咨资姿滋淄孜紫仔籽滓子自渍字鬃棕踪宗综总纵邹走奏揍租足卒族祖诅阻组钻纂嘴醉最罪尊遵昨左佐柞做作坐座"],["d840","谸",8,"豂豃豄豅豈豊豋豍",7,"豖豗豘豙豛",5,"豣",6,"豬",6,"豴豵豶豷豻",6,"貃貄貆貇"],["d880","貈貋貍",6,"貕貖貗貙",20,"亍丌兀丐廿卅丕亘丞鬲孬噩丨禺丿匕乇夭爻卮氐囟胤馗毓睾鼗丶亟鼐乜乩亓芈孛啬嘏仄厍厝厣厥厮靥赝匚叵匦匮匾赜卦卣刂刈刎刭刳刿剀剌剞剡剜蒯剽劂劁劐劓冂罔亻仃仉仂仨仡仫仞伛仳伢佤仵伥伧伉伫佞佧攸佚佝"],["d940","貮",62],["d980","賭",32,"佟佗伲伽佶佴侑侉侃侏佾佻侪佼侬侔俦俨俪俅俚俣俜俑俟俸倩偌俳倬倏倮倭俾倜倌倥倨偾偃偕偈偎偬偻傥傧傩傺僖儆僭僬僦僮儇儋仝氽佘佥俎龠汆籴兮巽黉馘冁夔勹匍訇匐凫夙兕亠兖亳衮袤亵脔裒禀嬴蠃羸冫冱冽冼"],["da40","贎",14,"贠赑赒赗赟赥赨赩赪赬赮赯赱赲赸",8,"趂趃趆趇趈趉趌",4,"趒趓趕",9,"趠趡"],["da80","趢趤",12,"趲趶趷趹趻趽跀跁跂跅跇跈跉跊跍跐跒跓跔凇冖冢冥讠讦讧讪讴讵讷诂诃诋诏诎诒诓诔诖诘诙诜诟诠诤诨诩诮诰诳诶诹诼诿谀谂谄谇谌谏谑谒谔谕谖谙谛谘谝谟谠谡谥谧谪谫谮谯谲谳谵谶卩卺阝阢阡阱阪阽阼陂陉陔陟陧陬陲陴隈隍隗隰邗邛邝邙邬邡邴邳邶邺"],["db40","跕跘跙跜跠跡跢跥跦跧跩跭跮跰跱跲跴跶跼跾",6,"踆踇踈踋踍踎踐踑踒踓踕",7,"踠踡踤",4,"踫踭踰踲踳踴踶踷踸踻踼踾"],["db80","踿蹃蹅蹆蹌",4,"蹓",5,"蹚",11,"蹧蹨蹪蹫蹮蹱邸邰郏郅邾郐郄郇郓郦郢郜郗郛郫郯郾鄄鄢鄞鄣鄱鄯鄹酃酆刍奂劢劬劭劾哿勐勖勰叟燮矍廴凵凼鬯厶弁畚巯坌垩垡塾墼壅壑圩圬圪圳圹圮圯坜圻坂坩垅坫垆坼坻坨坭坶坳垭垤垌垲埏垧垴垓垠埕埘埚埙埒垸埴埯埸埤埝"],["dc40","蹳蹵蹷",4,"蹽蹾躀躂躃躄躆躈",6,"躑躒躓躕",6,"躝躟",11,"躭躮躰躱躳",6,"躻",7],["dc80","軃",10,"軏",21,"堋堍埽埭堀堞堙塄堠塥塬墁墉墚墀馨鼙懿艹艽艿芏芊芨芄芎芑芗芙芫芸芾芰苈苊苣芘芷芮苋苌苁芩芴芡芪芟苄苎芤苡茉苷苤茏茇苜苴苒苘茌苻苓茑茚茆茔茕苠苕茜荑荛荜茈莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茺茳荦荥"],["dd40","軥",62],["dd80","輤",32,"荨茛荩荬荪荭荮莰荸莳莴莠莪莓莜莅荼莶莩荽莸荻莘莞莨莺莼菁萁菥菘堇萘萋菝菽菖萜萸萑萆菔菟萏萃菸菹菪菅菀萦菰菡葜葑葚葙葳蒇蒈葺蒉葸萼葆葩葶蒌蒎萱葭蓁蓍蓐蓦蒽蓓蓊蒿蒺蓠蒡蒹蒴蒗蓥蓣蔌甍蔸蓰蔹蔟蔺"],["de40","轅",32,"轪辀辌辒辝辠辡辢辤辥辦辧辪辬辭辮辯農辳辴辵辷辸辺辻込辿迀迃迆"],["de80","迉",4,"迏迒迖迗迚迠迡迣迧迬迯迱迲迴迵迶迺迻迼迾迿逇逈逌逎逓逕逘蕖蔻蓿蓼蕙蕈蕨蕤蕞蕺瞢蕃蕲蕻薤薨薇薏蕹薮薜薅薹薷薰藓藁藜藿蘧蘅蘩蘖蘼廾弈夼奁耷奕奚奘匏尢尥尬尴扌扪抟抻拊拚拗拮挢拶挹捋捃掭揶捱捺掎掴捭掬掊捩掮掼揲揸揠揿揄揞揎摒揆掾摅摁搋搛搠搌搦搡摞撄摭撖"],["df40","這逜連逤逥逧",5,"逰",4,"逷逹逺逽逿遀遃遅遆遈",4,"過達違遖遙遚遜",5,"遤遦遧適遪遫遬遯",4,"遶",6,"遾邁"],["df80","還邅邆邇邉邊邌",4,"邒邔邖邘邚邜邞邟邠邤邥邧邨邩邫邭邲邷邼邽邿郀摺撷撸撙撺擀擐擗擤擢攉攥攮弋忒甙弑卟叱叽叩叨叻吒吖吆呋呒呓呔呖呃吡呗呙吣吲咂咔呷呱呤咚咛咄呶呦咝哐咭哂咴哒咧咦哓哔呲咣哕咻咿哌哙哚哜咩咪咤哝哏哞唛哧唠哽唔哳唢唣唏唑唧唪啧喏喵啉啭啁啕唿啐唼"],["e040","郂郃郆郈郉郋郌郍郒郔郕郖郘郙郚郞郟郠郣郤郥郩郪郬郮郰郱郲郳郵郶郷郹郺郻郼郿鄀鄁鄃鄅",19,"鄚鄛鄜"],["e080","鄝鄟鄠鄡鄤",10,"鄰鄲",6,"鄺",8,"酄唷啖啵啶啷唳唰啜喋嗒喃喱喹喈喁喟啾嗖喑啻嗟喽喾喔喙嗪嗷嗉嘟嗑嗫嗬嗔嗦嗝嗄嗯嗥嗲嗳嗌嗍嗨嗵嗤辔嘞嘈嘌嘁嘤嘣嗾嘀嘧嘭噘嘹噗嘬噍噢噙噜噌噔嚆噤噱噫噻噼嚅嚓嚯囔囗囝囡囵囫囹囿圄圊圉圜帏帙帔帑帱帻帼"],["e140","酅酇酈酑酓酔酕酖酘酙酛酜酟酠酦酧酨酫酭酳酺酻酼醀",4,"醆醈醊醎醏醓",6,"醜",5,"醤",5,"醫醬醰醱醲醳醶醷醸醹醻"],["e180","醼",10,"釈釋釐釒",9,"針",8,"帷幄幔幛幞幡岌屺岍岐岖岈岘岙岑岚岜岵岢岽岬岫岱岣峁岷峄峒峤峋峥崂崃崧崦崮崤崞崆崛嵘崾崴崽嵬嵛嵯嵝嵫嵋嵊嵩嵴嶂嶙嶝豳嶷巅彳彷徂徇徉後徕徙徜徨徭徵徼衢彡犭犰犴犷犸狃狁狎狍狒狨狯狩狲狴狷猁狳猃狺"],["e240","釦",62],["e280","鈥",32,"狻猗猓猡猊猞猝猕猢猹猥猬猸猱獐獍獗獠獬獯獾舛夥飧夤夂饣饧",5,"饴饷饽馀馄馇馊馍馐馑馓馔馕庀庑庋庖庥庠庹庵庾庳赓廒廑廛廨廪膺忄忉忖忏怃忮怄忡忤忾怅怆忪忭忸怙怵怦怛怏怍怩怫怊怿怡恸恹恻恺恂"],["e340","鉆",45,"鉵",16],["e380","銆",7,"銏",24,"恪恽悖悚悭悝悃悒悌悛惬悻悱惝惘惆惚悴愠愦愕愣惴愀愎愫慊慵憬憔憧憷懔懵忝隳闩闫闱闳闵闶闼闾阃阄阆阈阊阋阌阍阏阒阕阖阗阙阚丬爿戕氵汔汜汊沣沅沐沔沌汨汩汴汶沆沩泐泔沭泷泸泱泗沲泠泖泺泫泮沱泓泯泾"],["e440","銨",5,"銯",24,"鋉",31],["e480","鋩",32,"洹洧洌浃浈洇洄洙洎洫浍洮洵洚浏浒浔洳涑浯涞涠浞涓涔浜浠浼浣渚淇淅淞渎涿淠渑淦淝淙渖涫渌涮渫湮湎湫溲湟溆湓湔渲渥湄滟溱溘滠漭滢溥溧溽溻溷滗溴滏溏滂溟潢潆潇漤漕滹漯漶潋潴漪漉漩澉澍澌潸潲潼潺濑"],["e540","錊",51,"錿",10],["e580","鍊",31,"鍫濉澧澹澶濂濡濮濞濠濯瀚瀣瀛瀹瀵灏灞宀宄宕宓宥宸甯骞搴寤寮褰寰蹇謇辶迓迕迥迮迤迩迦迳迨逅逄逋逦逑逍逖逡逵逶逭逯遄遑遒遐遨遘遢遛暹遴遽邂邈邃邋彐彗彖彘尻咫屐屙孱屣屦羼弪弩弭艴弼鬻屮妁妃妍妩妪妣"],["e640","鍬",34,"鎐",27],["e680","鎬",29,"鏋鏌鏍妗姊妫妞妤姒妲妯姗妾娅娆姝娈姣姘姹娌娉娲娴娑娣娓婀婧婊婕娼婢婵胬媪媛婷婺媾嫫媲嫒嫔媸嫠嫣嫱嫖嫦嫘嫜嬉嬗嬖嬲嬷孀尕尜孚孥孳孑孓孢驵驷驸驺驿驽骀骁骅骈骊骐骒骓骖骘骛骜骝骟骠骢骣骥骧纟纡纣纥纨纩"],["e740","鏎",7,"鏗",54],["e780","鐎",32,"纭纰纾绀绁绂绉绋绌绐绔绗绛绠绡绨绫绮绯绱绲缍绶绺绻绾缁缂缃缇缈缋缌缏缑缒缗缙缜缛缟缡",6,"缪缫缬缭缯",4,"缵幺畿巛甾邕玎玑玮玢玟珏珂珑玷玳珀珉珈珥珙顼琊珩珧珞玺珲琏琪瑛琦琥琨琰琮琬"],["e840","鐯",14,"鐿",43,"鑬鑭鑮鑯"],["e880","鑰",20,"钑钖钘铇铏铓铔铚铦铻锜锠琛琚瑁瑜瑗瑕瑙瑷瑭瑾璜璎璀璁璇璋璞璨璩璐璧瓒璺韪韫韬杌杓杞杈杩枥枇杪杳枘枧杵枨枞枭枋杷杼柰栉柘栊柩枰栌柙枵柚枳柝栀柃枸柢栎柁柽栲栳桠桡桎桢桄桤梃栝桕桦桁桧桀栾桊桉栩梵梏桴桷梓桫棂楮棼椟椠棹"],["e940","锧锳锽镃镈镋镕镚镠镮镴镵長",7,"門",42],["e980","閫",32,"椤棰椋椁楗棣椐楱椹楠楂楝榄楫榀榘楸椴槌榇榈槎榉楦楣楹榛榧榻榫榭槔榱槁槊槟榕槠榍槿樯槭樗樘橥槲橄樾檠橐橛樵檎橹樽樨橘橼檑檐檩檗檫猷獒殁殂殇殄殒殓殍殚殛殡殪轫轭轱轲轳轵轶轸轷轹轺轼轾辁辂辄辇辋"],["ea40","闌",27,"闬闿阇阓阘阛阞阠阣",6,"阫阬阭阯阰阷阸阹阺阾陁陃陊陎陏陑陒陓陖陗"],["ea80","陘陙陚陜陝陞陠陣陥陦陫陭",4,"陳陸",12,"隇隉隊辍辎辏辘辚軎戋戗戛戟戢戡戥戤戬臧瓯瓴瓿甏甑甓攴旮旯旰昊昙杲昃昕昀炅曷昝昴昱昶昵耆晟晔晁晏晖晡晗晷暄暌暧暝暾曛曜曦曩贲贳贶贻贽赀赅赆赈赉赇赍赕赙觇觊觋觌觎觏觐觑牮犟牝牦牯牾牿犄犋犍犏犒挈挲掰"],["eb40","隌階隑隒隓隕隖隚際隝",9,"隨",7,"隱隲隴隵隷隸隺隻隿雂雃雈雊雋雐雑雓雔雖",9,"雡",6,"雫"],["eb80","雬雭雮雰雱雲雴雵雸雺電雼雽雿霂霃霅霊霋霌霐霑霒霔霕霗",4,"霝霟霠搿擘耄毪毳毽毵毹氅氇氆氍氕氘氙氚氡氩氤氪氲攵敕敫牍牒牖爰虢刖肟肜肓肼朊肽肱肫肭肴肷胧胨胩胪胛胂胄胙胍胗朐胝胫胱胴胭脍脎胲胼朕脒豚脶脞脬脘脲腈腌腓腴腙腚腱腠腩腼腽腭腧塍媵膈膂膑滕膣膪臌朦臊膻"],["ec40","霡",8,"霫霬霮霯霱霳",4,"霺霻霼霽霿",18,"靔靕靗靘靚靜靝靟靣靤靦靧靨靪",7],["ec80","靲靵靷",4,"靽",7,"鞆",4,"鞌鞎鞏鞐鞓鞕鞖鞗鞙",4,"臁膦欤欷欹歃歆歙飑飒飓飕飙飚殳彀毂觳斐齑斓於旆旄旃旌旎旒旖炀炜炖炝炻烀炷炫炱烨烊焐焓焖焯焱煳煜煨煅煲煊煸煺熘熳熵熨熠燠燔燧燹爝爨灬焘煦熹戾戽扃扈扉礻祀祆祉祛祜祓祚祢祗祠祯祧祺禅禊禚禧禳忑忐"],["ed40","鞞鞟鞡鞢鞤",6,"鞬鞮鞰鞱鞳鞵",46],["ed80","韤韥韨韮",4,"韴韷",23,"怼恝恚恧恁恙恣悫愆愍慝憩憝懋懑戆肀聿沓泶淼矶矸砀砉砗砘砑斫砭砜砝砹砺砻砟砼砥砬砣砩硎硭硖硗砦硐硇硌硪碛碓碚碇碜碡碣碲碹碥磔磙磉磬磲礅磴礓礤礞礴龛黹黻黼盱眄眍盹眇眈眚眢眙眭眦眵眸睐睑睇睃睚睨"],["ee40","頏",62],["ee80","顎",32,"睢睥睿瞍睽瞀瞌瞑瞟瞠瞰瞵瞽町畀畎畋畈畛畲畹疃罘罡罟詈罨罴罱罹羁罾盍盥蠲钅钆钇钋钊钌钍钏钐钔钗钕钚钛钜钣钤钫钪钭钬钯钰钲钴钶",4,"钼钽钿铄铈",6,"铐铑铒铕铖铗铙铘铛铞铟铠铢铤铥铧铨铪"],["ef40","顯",5,"颋颎颒颕颙颣風",37,"飏飐飔飖飗飛飜飝飠",4],["ef80","飥飦飩",30,"铩铫铮铯铳铴铵铷铹铼铽铿锃锂锆锇锉锊锍锎锏锒",4,"锘锛锝锞锟锢锪锫锩锬锱锲锴锶锷锸锼锾锿镂锵镄镅镆镉镌镎镏镒镓镔镖镗镘镙镛镞镟镝镡镢镤",8,"镯镱镲镳锺矧矬雉秕秭秣秫稆嵇稃稂稞稔"],["f040","餈",4,"餎餏餑",28,"餯",26],["f080","饊",9,"饖",12,"饤饦饳饸饹饻饾馂馃馉稹稷穑黏馥穰皈皎皓皙皤瓞瓠甬鸠鸢鸨",4,"鸲鸱鸶鸸鸷鸹鸺鸾鹁鹂鹄鹆鹇鹈鹉鹋鹌鹎鹑鹕鹗鹚鹛鹜鹞鹣鹦",6,"鹱鹭鹳疒疔疖疠疝疬疣疳疴疸痄疱疰痃痂痖痍痣痨痦痤痫痧瘃痱痼痿瘐瘀瘅瘌瘗瘊瘥瘘瘕瘙"],["f140","馌馎馚",10,"馦馧馩",47],["f180","駙",32,"瘛瘼瘢瘠癀瘭瘰瘿瘵癃瘾瘳癍癞癔癜癖癫癯翊竦穸穹窀窆窈窕窦窠窬窨窭窳衤衩衲衽衿袂袢裆袷袼裉裢裎裣裥裱褚裼裨裾裰褡褙褓褛褊褴褫褶襁襦襻疋胥皲皴矜耒耔耖耜耠耢耥耦耧耩耨耱耋耵聃聆聍聒聩聱覃顸颀颃"],["f240","駺",62],["f280","騹",32,"颉颌颍颏颔颚颛颞颟颡颢颥颦虍虔虬虮虿虺虼虻蚨蚍蚋蚬蚝蚧蚣蚪蚓蚩蚶蛄蚵蛎蚰蚺蚱蚯蛉蛏蚴蛩蛱蛲蛭蛳蛐蜓蛞蛴蛟蛘蛑蜃蜇蛸蜈蜊蜍蜉蜣蜻蜞蜥蜮蜚蜾蝈蜴蜱蜩蜷蜿螂蜢蝽蝾蝻蝠蝰蝌蝮螋蝓蝣蝼蝤蝙蝥螓螯螨蟒"],["f340","驚",17,"驲骃骉骍骎骔骕骙骦骩",6,"骲骳骴骵骹骻骽骾骿髃髄髆",4,"髍髎髏髐髒體髕髖髗髙髚髛髜"],["f380","髝髞髠髢髣髤髥髧髨髩髪髬髮髰",8,"髺髼",6,"鬄鬅鬆蟆螈螅螭螗螃螫蟥螬螵螳蟋蟓螽蟑蟀蟊蟛蟪蟠蟮蠖蠓蟾蠊蠛蠡蠹蠼缶罂罄罅舐竺竽笈笃笄笕笊笫笏筇笸笪笙笮笱笠笥笤笳笾笞筘筚筅筵筌筝筠筮筻筢筲筱箐箦箧箸箬箝箨箅箪箜箢箫箴篑篁篌篝篚篥篦篪簌篾篼簏簖簋"],["f440","鬇鬉",5,"鬐鬑鬒鬔",10,"鬠鬡鬢鬤",10,"鬰鬱鬳",7,"鬽鬾鬿魀魆魊魋魌魎魐魒魓魕",5],["f480","魛",32,"簟簪簦簸籁籀臾舁舂舄臬衄舡舢舣舭舯舨舫舸舻舳舴舾艄艉艋艏艚艟艨衾袅袈裘裟襞羝羟羧羯羰羲籼敉粑粝粜粞粢粲粼粽糁糇糌糍糈糅糗糨艮暨羿翎翕翥翡翦翩翮翳糸絷綦綮繇纛麸麴赳趄趔趑趱赧赭豇豉酊酐酎酏酤"],["f540","魼",62],["f580","鮻",32,"酢酡酰酩酯酽酾酲酴酹醌醅醐醍醑醢醣醪醭醮醯醵醴醺豕鹾趸跫踅蹙蹩趵趿趼趺跄跖跗跚跞跎跏跛跆跬跷跸跣跹跻跤踉跽踔踝踟踬踮踣踯踺蹀踹踵踽踱蹉蹁蹂蹑蹒蹊蹰蹶蹼蹯蹴躅躏躔躐躜躞豸貂貊貅貘貔斛觖觞觚觜"],["f640","鯜",62],["f680","鰛",32,"觥觫觯訾謦靓雩雳雯霆霁霈霏霎霪霭霰霾龀龃龅",5,"龌黾鼋鼍隹隼隽雎雒瞿雠銎銮鋈錾鍪鏊鎏鐾鑫鱿鲂鲅鲆鲇鲈稣鲋鲎鲐鲑鲒鲔鲕鲚鲛鲞",5,"鲥",4,"鲫鲭鲮鲰",7,"鲺鲻鲼鲽鳄鳅鳆鳇鳊鳋"],["f740","鰼",62],["f780","鱻鱽鱾鲀鲃鲄鲉鲊鲌鲏鲓鲖鲗鲘鲙鲝鲪鲬鲯鲹鲾",4,"鳈鳉鳑鳒鳚鳛鳠鳡鳌",4,"鳓鳔鳕鳗鳘鳙鳜鳝鳟鳢靼鞅鞑鞒鞔鞯鞫鞣鞲鞴骱骰骷鹘骶骺骼髁髀髅髂髋髌髑魅魃魇魉魈魍魑飨餍餮饕饔髟髡髦髯髫髻髭髹鬈鬏鬓鬟鬣麽麾縻麂麇麈麋麒鏖麝麟黛黜黝黠黟黢黩黧黥黪黯鼢鼬鼯鼹鼷鼽鼾齄"],["f840","鳣",62],["f880","鴢",32],["f940","鵃",62],["f980","鶂",32],["fa40","鶣",62],["fa80","鷢",32],["fb40","鸃",27,"鸤鸧鸮鸰鸴鸻鸼鹀鹍鹐鹒鹓鹔鹖鹙鹝鹟鹠鹡鹢鹥鹮鹯鹲鹴",9,"麀"],["fb80","麁麃麄麅麆麉麊麌",5,"麔",8,"麞麠",5,"麧麨麩麪"],["fc40","麫",8,"麵麶麷麹麺麼麿",4,"黅黆黇黈黊黋黌黐黒黓黕黖黗黙黚點黡黣黤黦黨黫黬黭黮黰",8,"黺黽黿",6],["fc80","鼆",4,"鼌鼏鼑鼒鼔鼕鼖鼘鼚",5,"鼡鼣",8,"鼭鼮鼰鼱"],["fd40","鼲",4,"鼸鼺鼼鼿",4,"齅",10,"齒",38],["fd80","齹",5,"龁龂龍",11,"龜龝龞龡",4,"郎凉秊裏隣"],["fe40","兀嗀﨎﨏﨑﨓﨔礼﨟蘒﨡﨣﨤﨧﨨﨩"]]},function(e,t,n){"use strict";var i=n(115),a=n(116),o=n(46);e.exports={formats:o,parse:a,stringify:i}},function(e,t){e.exports=require("url")},function(e,t,n){"use strict";
/*!
 * statuses
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(120);function a(e){if("number"==typeof e){if(!a[e])throw new Error("invalid status code: "+e);return e}if("string"!=typeof e)throw new TypeError("code must be a number or string");var t=parseInt(e,10);if(!isNaN(t)){if(!a[t])throw new Error("invalid status code: "+t);return t}if(!(t=a[e.toLowerCase()]))throw new Error('invalid status message: "'+e+'"');return t}e.exports=a,a.STATUS_CODES=i,a.codes=function(e,t){var n=[];return Object.keys(t).forEach(function(i){var a=t[i],o=Number(i);e[o]=a,e[a]=o,e[a.toLowerCase()]=o,n.push(o)}),n}(a,i),a.redirect={300:!0,301:!0,302:!0,303:!0,305:!0,307:!0,308:!0},a.empty={204:!0,205:!0,304:!0},a.retry={502:!0,503:!0,504:!0}},function(e,t,n){"use strict";
/*!
 * methods
 * Copyright(c) 2013-2014 TJ Holowaychuk
 * Copyright(c) 2015-2016 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(15);e.exports=i.METHODS&&i.METHODS.map(function(e){return e.toLowerCase()})||["get","post","put","head","delete","options","trace","copy","lock","mkcol","move","purge","propfind","proppatch","unlock","report","mkactivity","checkout","merge","m-search","notify","subscribe","unsubscribe","patch","search","connect"]},function(e,t,n){var i=n(10),a=i.Buffer;function o(e,t){for(var n in e)t[n]=e[n]}function r(e,t,n){return a(e,t,n)}a.from&&a.alloc&&a.allocUnsafe&&a.allocUnsafeSlow?e.exports=i:(o(i,t),t.Buffer=r),o(a,r),r.from=function(e,t,n){if("number"==typeof e)throw new TypeError("Argument must not be a number");return a(e,t,n)},r.alloc=function(e,t,n){if("number"!=typeof e)throw new TypeError("Argument must be a number");var i=a(e);return void 0!==t?"string"==typeof n?i.fill(t,n):i.fill(t):i.fill(0),i},r.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return a(e)},r.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return i.SlowBuffer(e)}},function(e,t,n){"use strict";
/*!
 * send
 * Copyright(c) 2012 TJ Holowaychuk
 * Copyright(c) 2014-2016 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(8),a=n(1)("send"),o=n(3)("send"),r=n(125),s=n(19),c=n(20),p=n(53),l=n(54),u=n(6),d=n(126),m=n(38),f=n(12),h=n(55),v=n(0),x=n(30),g=n(5),b=n(2),y=v.extname,w=v.join,k=v.normalize,_=v.resolve,j=v.sep,E=/^ *bytes=/,S=31536e6,C=/(?:^|[\\\/])\.\.(?:[\\\/]|$)/;function T(e,t,n){g.call(this);var i=n||{};if(this.options=i,this.path=t,this.req=e,this._acceptRanges=void 0===i.acceptRanges||Boolean(i.acceptRanges),this._cacheControl=void 0===i.cacheControl||Boolean(i.cacheControl),this._etag=void 0===i.etag||Boolean(i.etag),this._dotfiles=void 0!==i.dotfiles?i.dotfiles:"ignore","ignore"!==this._dotfiles&&"allow"!==this._dotfiles&&"deny"!==this._dotfiles)throw new TypeError('dotfiles option must be "allow", "deny", or "ignore"');this._hidden=Boolean(i.hidden),void 0!==i.hidden&&o("hidden: use dotfiles: '"+(this._hidden?"allow":"ignore")+"' instead"),void 0===i.dotfiles&&(this._dotfiles=void 0),this._extensions=void 0!==i.extensions?I(i.extensions,"extensions option"):[],this._immutable=void 0!==i.immutable&&Boolean(i.immutable),this._index=void 0!==i.index?I(i.index,"index option"):["index.html"],this._lastModified=void 0===i.lastModified||Boolean(i.lastModified),this._maxage=i.maxAge||i.maxage,this._maxage="string"==typeof this._maxage?m(this._maxage):Number(this._maxage),this._maxage=isNaN(this._maxage)?0:Math.min(Math.max(0,this._maxage),S),this._root=i.root?_(i.root):null,!this._root&&i.from&&this.from(i.from)}function q(e,t,n){return e+" "+(n?n.start+"-"+n.end:"*")+"/"+t}function A(e,t){return'<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>'+e+"</title>\n</head>\n<body>\n<pre>"+t+"</pre>\n</body>\n</html>\n"}function O(e){return"function"!=typeof e.getHeaderNames?Object.keys(e._headers||{}):e.getHeaderNames()}function P(e,t){return("function"!=typeof e.listenerCount?e.listeners(t).length:e.listenerCount(t))>0}function I(e,t){for(var n=[].concat(e||[]),i=0;i<n.length;i++)if("string"!=typeof n[i])throw new TypeError(t+" must be array of strings or false");return n}function z(e){var t=e&&Date.parse(e);return"number"==typeof t?t:NaN}e.exports=function(e,t,n){return new T(e,t,n)},e.exports.mime=d,b.inherits(T,g),T.prototype.etag=o.function(function(e){return this._etag=Boolean(e),a("etag %s",this._etag),this},"send.etag: pass etag as option"),T.prototype.hidden=o.function(function(e){return this._hidden=Boolean(e),this._dotfiles=void 0,a("hidden %s",this._hidden),this},"send.hidden: use dotfiles option"),T.prototype.index=o.function(function(e){var t=e?I(e,"paths argument"):[];return a("index %o",e),this._index=t,this},"send.index: pass index as option"),T.prototype.root=function(e){return this._root=_(String(e)),a("root %s",this._root),this},T.prototype.from=o.function(T.prototype.root,"send.from: pass root as option"),T.prototype.root=o.function(T.prototype.root,"send.root: pass root as option"),T.prototype.maxage=o.function(function(e){return this._maxage="string"==typeof e?m(e):Number(e),this._maxage=isNaN(this._maxage)?0:Math.min(Math.max(0,this._maxage),S),a("max-age %d",this._maxage),this},"send.maxage: pass maxAge as option"),T.prototype.error=function(e,t){if(P(this,"error"))return this.emit("error",i(e,t,{expose:!1}));var n=this.res,a=x[e]||String(e),o=A("Error",c(a));!function(e){for(var t=O(e),n=0;n<t.length;n++)e.removeHeader(t[n])}(n),t&&t.headers&&function(e,t){for(var n=Object.keys(t),i=0;i<n.length;i++){var a=n[i];e.setHeader(a,t[a])}}(n,t.headers),n.statusCode=e,n.setHeader("Content-Type","text/html; charset=UTF-8"),n.setHeader("Content-Length",Buffer.byteLength(o)),n.setHeader("Content-Security-Policy","default-src 'self'"),n.setHeader("X-Content-Type-Options","nosniff"),n.end(o)},T.prototype.hasTrailingSlash=function(){return"/"===this.path[this.path.length-1]},T.prototype.isConditionalGET=function(){return this.req.headers["if-match"]||this.req.headers["if-unmodified-since"]||this.req.headers["if-none-match"]||this.req.headers["if-modified-since"]},T.prototype.isPreconditionFailure=function(){var e=this.req,t=this.res,n=e.headers["if-match"];if(n){var i=t.getHeader("ETag");return!i||"*"!==n&&function(e){for(var t=0,n=[],i=0,a=0,o=e.length;a<o;a++)switch(e.charCodeAt(a)){case 32:i===t&&(i=t=a+1);break;case 44:n.push(e.substring(i,t)),i=t=a+1;break;default:t=a+1}return n.push(e.substring(i,t)),n}(n).every(function(e){return e!==i&&e!=="W/"+i&&"W/"+e!==i})}var a=z(e.headers["if-unmodified-since"]);if(!isNaN(a)){var o=z(t.getHeader("Last-Modified"));return isNaN(o)||o>a}return!1},T.prototype.removeContentHeaderFields=function(){for(var e=this.res,t=O(e),n=0;n<t.length;n++){var i=t[n];"content-"===i.substr(0,8)&&"content-location"!==i&&e.removeHeader(i)}},T.prototype.notModified=function(){var e=this.res;a("not modified"),this.removeContentHeaderFields(),e.statusCode=304,e.end()},T.prototype.headersAlreadySent=function(){var e=new Error("Can't set headers after they are sent.");a("headers already sent"),this.error(500,e)},T.prototype.isCachable=function(){var e=this.res.statusCode;return e>=200&&e<300||304===e},T.prototype.onStatError=function(e){switch(e.code){case"ENAMETOOLONG":case"ENOENT":case"ENOTDIR":this.error(404,e);break;default:this.error(500,e)}},T.prototype.isFresh=function(){return l(this.req.headers,{etag:this.res.getHeader("ETag"),"last-modified":this.res.getHeader("Last-Modified")})},T.prototype.isRangeFresh=function(){var e=this.req.headers["if-range"];if(!e)return!0;if(-1!==e.indexOf('"')){var t=this.res.getHeader("ETag");return Boolean(t&&-1!==e.indexOf(t))}return z(this.res.getHeader("Last-Modified"))<=z(e)},T.prototype.redirect=function(e){var t=this.res;if(P(this,"directory"))this.emit("directory",t,e);else if(this.hasTrailingSlash())this.error(403);else{var n=s(function(e){for(var t=0;t<e.length&&"/"===e[t];t++);return t>1?"/"+e.substr(t):e}(this.path+"/")),i=A("Redirecting",'Redirecting to <a href="'+c(n)+'">'+c(n)+"</a>");t.statusCode=301,t.setHeader("Content-Type","text/html; charset=UTF-8"),t.setHeader("Content-Length",Buffer.byteLength(i)),t.setHeader("Content-Security-Policy","default-src 'self'"),t.setHeader("X-Content-Type-Options","nosniff"),t.setHeader("Location",n),t.end(i)}},T.prototype.pipe=function(e){var t=this._root;this.res=e;var n,i=function(e){try{return decodeURIComponent(e)}catch(e){return-1}}(this.path);if(-1===i)return this.error(400),e;if(~i.indexOf("\0"))return this.error(400),e;if(null!==t){if(i&&(i=k("."+j+i)),C.test(i))return a('malicious path "%s"',i),this.error(403),e;n=i.split(j),i=k(w(t,i)),t=k(t+j)}else{if(C.test(i))return a('malicious path "%s"',i),this.error(403),e;n=k(i).split(j),i=_(i)}if(function(e){for(var t=0;t<e.length;t++){var n=e[t];if(n.length>1&&"."===n[0])return!0}return!1}(n)){var o=this._dotfiles;switch(void 0===o&&(o="."===n[n.length-1][0]?this._hidden?"allow":"ignore":"allow"),a('%s dotfile "%s"',o,i),o){case"allow":break;case"deny":return this.error(403),e;case"ignore":default:return this.error(404),e}}return this._index.length&&this.hasTrailingSlash()?(this.sendIndex(i),e):(this.sendFile(i),e)},T.prototype.send=function(e,t){var n=t.size,i=this.options,o={},r=this.res,s=this.req,c=s.headers.range,p=i.start||0;if(function(e){return"boolean"!=typeof e.headersSent?Boolean(e._header):e.headersSent}(r))this.headersAlreadySent();else{if(a('pipe "%s"',e),this.setHeader(e,t),this.type(e),this.isConditionalGET()){if(this.isPreconditionFailure())return void this.error(412);if(this.isCachable()&&this.isFresh())return void this.notModified()}if(n=Math.max(0,n-p),void 0!==i.end){var l=i.end-p+1;n>l&&(n=l)}if(this._acceptRanges&&E.test(c)){if(c=h(n,c,{combine:!0}),this.isRangeFresh()||(a("range stale"),c=-2),-1===c)return a("range unsatisfiable"),r.setHeader("Content-Range",q("bytes",n)),this.error(416,{headers:{"Content-Range":r.getHeader("Content-Range")}});-2!==c&&1===c.length&&(a("range %j",c),r.statusCode=206,r.setHeader("Content-Range",q("bytes",n,c[0])),p+=c[0].start,n=c[0].end-c[0].start+1)}for(var u in i)o[u]=i[u];o.start=p,o.end=Math.max(p,p+n-1),r.setHeader("Content-Length",n),"HEAD"!==s.method?this.stream(e,o):r.end()}},T.prototype.sendFile=function(e){var t=0,n=this;a('stat "%s"',e),u.stat(e,function(i,o){return i&&"ENOENT"===i.code&&!y(e)&&e[e.length-1]!==j?function i(o){if(n._extensions.length<=t)return o?n.onStatError(o):n.error(404);var r=e+"."+n._extensions[t++];a('stat "%s"',r);u.stat(r,function(e,t){return e?i(e):t.isDirectory()?i():(n.emit("file",r,t),void n.send(r,t))})}(i):i?n.onStatError(i):o.isDirectory()?n.redirect(e):(n.emit("file",e,o),void n.send(e,o))})},T.prototype.sendIndex=function(e){var t=-1,n=this;!function i(o){if(++t>=n._index.length)return o?n.onStatError(o):n.error(404);var r=w(e,n._index[t]);a('stat "%s"',r),u.stat(r,function(e,t){return e?i(e):t.isDirectory()?i():(n.emit("file",r,t),void n.send(r,t))})}()},T.prototype.stream=function(e,t){var n=!1,i=this,a=this.res,o=u.createReadStream(e,t);this.emit("stream",o),o.pipe(a),f(a,function(){n=!0,r(o)}),o.on("error",function(e){n||(n=!0,r(o),i.onStatError(e))}),o.on("end",function(){i.emit("end")})},T.prototype.type=function(e){var t=this.res;if(!t.getHeader("Content-Type")){var n=d.lookup(e);if(n){var i=d.charsets.lookup(n);a("content-type %s",n),t.setHeader("Content-Type",n+(i?"; charset="+i:""))}else a("no content-type")}},T.prototype.setHeader=function(e,t){var n=this.res;if(this.emit("headers",n,e,t),this._acceptRanges&&!n.getHeader("Accept-Ranges")&&(a("accept ranges"),n.setHeader("Accept-Ranges","bytes")),this._cacheControl&&!n.getHeader("Cache-Control")){var i="public, max-age="+Math.floor(this._maxage/1e3);this._immutable&&(i+=", immutable"),a("cache-control %s",i),n.setHeader("Cache-Control",i)}if(this._lastModified&&!n.getHeader("Last-Modified")){var o=t.mtime.toUTCString();a("modified %s",o),n.setHeader("Last-Modified",o)}if(this._etag&&!n.getHeader("ETag")){var r=p(t);a("etag %s",r),n.setHeader("ETag",r)}}},function(e,t){e.exports=require("crypto")},function(e,t,n){"use strict";const i=n(34),a=n(23);var o=function(e,t){if(e instanceof Buffer)return e;if(ArrayBuffer.isView(e)){var n=Buffer.from(e.buffer,e.byteOffset,e.byteLength);return n.length===e.byteLength?n:n.slice(e.byteOffset,e.byteOffset+e.byteLength)}return e instanceof Date?a.parseInputDatesAsUTC?r((i=e).getUTCFullYear(),4)+"-"+r(i.getUTCMonth()+1,2)+"-"+r(i.getUTCDate(),2)+"T"+r(i.getUTCHours(),2)+":"+r(i.getUTCMinutes(),2)+":"+r(i.getUTCSeconds(),2)+"."+r(i.getUTCMilliseconds(),3)+"+00:00":function(e){var t=-e.getTimezoneOffset(),n=r(e.getFullYear(),4)+"-"+r(e.getMonth()+1,2)+"-"+r(e.getDate(),2)+"T"+r(e.getHours(),2)+":"+r(e.getMinutes(),2)+":"+r(e.getSeconds(),2)+"."+r(e.getMilliseconds(),3);t<0?(n+="-",t*=-1):n+="+";return n+r(Math.floor(t/60),2)+":"+r(t%60,2)}(e):Array.isArray(e)?function e(t){for(var n="{",i=0;i<t.length;i++)i>0&&(n+=","),null===t[i]||void 0===t[i]?n+="NULL":Array.isArray(t[i])?n+=e(t[i]):t[i]instanceof Buffer?n+="\\\\x"+t[i].toString("hex"):n+='"'+o(t[i]).replace(/\\/g,"\\\\").replace(/"/g,'\\"')+'"';return n+="}"}(e):null==e?null:"object"==typeof e?function(e,t){if(e&&"function"==typeof e.toPostgres){if(-1!==(t=t||[]).indexOf(e))throw new Error('circular reference detected while preparing "'+e+'" for query');return t.push(e),o(e.toPostgres(o),t)}return JSON.stringify(e)}(e,t):e.toString();var i};function r(e,t){for(e=""+e;e.length<t;)e="0"+e;return e}const s=function(e){return i.createHash("md5").update(e,"utf-8").digest("hex")};e.exports={prepareValue:function(e){return o(e)},normalizeQueryConfig:function(e,t,n){return e="string"==typeof e?{text:e}:e,t&&("function"==typeof t?e.callback=t:e.values=t),n&&(e.callback=n),e},postgresMd5PasswordHash:function(e,t,n){var i=s(t+e);return"md5"+s(Buffer.concat([Buffer.from(i),n]))},md5:s}},function(e,t,n){"use strict";
/*!
 * depd
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(4).EventEmitter;function a(e,t,n){Object.defineProperty(e,t,{configurable:!0,enumerable:!0,get:function(){var i=n();return Object.defineProperty(e,t,{configurable:!0,enumerable:!0,value:i}),i}})}function o(e){return e.toString()}a(e.exports,"callSiteToString",function(){var e=Error.stackTraceLimit,t={},i=Error.prepareStackTrace;Error.prepareStackTrace=function(e,t){return t},Error.stackTraceLimit=2,Error.captureStackTrace(t);var a=t.stack.slice();return Error.prepareStackTrace=i,Error.stackTraceLimit=e,a[0].toString?o:n(76)}),a(e.exports,"eventListenerCount",function(){return i.listenerCount||n(77)})},function(e,t,n){var i;function a(e){function n(){if(n.enabled){var e=n,a=+new Date,o=a-(i||a);e.diff=o,e.prev=i,e.curr=a,i=a;for(var r=new Array(arguments.length),s=0;s<r.length;s++)r[s]=arguments[s];r[0]=t.coerce(r[0]),"string"!=typeof r[0]&&r.unshift("%O");var c=0;r[0]=r[0].replace(/%([a-zA-Z%])/g,function(n,i){if("%%"===n)return n;c++;var a=t.formatters[i];if("function"==typeof a){var o=r[c];n=a.call(e,o),r.splice(c,1),c--}return n}),t.formatArgs.call(e,r),(n.log||t.log||console.log.bind(console)).apply(e,r)}}return n.namespace=e,n.enabled=t.enabled(e),n.useColors=t.useColors(),n.color=function(e){var n,i=0;for(n in e)i=(i<<5)-i+e.charCodeAt(n),i|=0;return t.colors[Math.abs(i)%t.colors.length]}(e),"function"==typeof t.init&&t.init(n),n}(t=e.exports=a.debug=a.default=a).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable("")},t.enable=function(e){t.save(e),t.names=[],t.skips=[];for(var n=("string"==typeof e?e:"").split(/[\s,]+/),i=n.length,a=0;a<i;a++)n[a]&&("-"===(e=n[a].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){var n,i;for(n=0,i=t.skips.length;n<i;n++)if(t.skips[n].test(e))return!1;for(n=0,i=t.names.length;n<i;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(38),t.names=[],t.skips=[],t.formatters={}},function(e,t){var n=1e3,i=60*n,a=60*i,o=24*a,r=365.25*o;function s(e,t,n){if(!(e<t))return e<1.5*t?Math.floor(e/t)+" "+n:Math.ceil(e/t)+" "+n+"s"}e.exports=function(e,t){t=t||{};var c,p=typeof e;if("string"===p&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!t)return;var s=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return s*r;case"days":case"day":case"d":return s*o;case"hours":case"hour":case"hrs":case"hr":case"h":return s*a;case"minutes":case"minute":case"mins":case"min":case"m":return s*i;case"seconds":case"second":case"secs":case"sec":case"s":return s*n;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return}}(e);if("number"===p&&!1===isNaN(e))return t.long?s(c=e,o,"day")||s(c,a,"hour")||s(c,i,"minute")||s(c,n,"second")||c+" ms":function(e){if(e>=o)return Math.round(e/o)+"d";if(e>=a)return Math.round(e/a)+"h";if(e>=i)return Math.round(e/i)+"m";if(e>=n)return Math.round(e/n)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,t,n){"use strict";var i=n(9).Buffer,a=n(90),o=e.exports;o.encodings=null,o.defaultCharUnicode="�",o.defaultCharSingleByte="?",o.encode=function(e,t,n){e=""+(e||"");var a=o.getEncoder(t,n),r=a.write(e),s=a.end();return s&&s.length>0?i.concat([r,s]):r},o.decode=function(e,t,n){"string"==typeof e&&(o.skipDecodeWarning||(console.error("Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding"),o.skipDecodeWarning=!0),e=i.from(""+(e||""),"binary"));var a=o.getDecoder(t,n),r=a.write(e),s=a.end();return s?r+s:r},o.encodingExists=function(e){try{return o.getCodec(e),!0}catch(e){return!1}},o.toEncoding=o.encode,o.fromEncoding=o.decode,o._codecDataCache={},o.getCodec=function(e){o.encodings||(o.encodings=n(91));for(var t=o._canonicalizeEncoding(e),i={};;){var a=o._codecDataCache[t];if(a)return a;var r=o.encodings[t];switch(typeof r){case"string":t=r;break;case"object":for(var s in r)i[s]=r[s];i.encodingName||(i.encodingName=t),t=r.type;break;case"function":return i.encodingName||(i.encodingName=t),a=new r(i,o),o._codecDataCache[i.encodingName]=a,a;default:throw new Error("Encoding not recognized: '"+e+"' (searched as: '"+t+"')")}}},o._canonicalizeEncoding=function(e){return(""+e).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g,"")},o.getEncoder=function(e,t){var n=o.getCodec(e),i=new n.encoder(t,n);return n.bomAware&&t&&t.addBOM&&(i=new a.PrependBOM(i,t)),i},o.getDecoder=function(e,t){var n=o.getCodec(e),i=new n.decoder(t,n);return!n.bomAware||t&&!1===t.stripBOM||(i=new a.StripBOM(i,t)),i};var r="undefined"!=typeof process&&process.versions&&process.versions.node;if(r){var s=r.split(".").map(Number);(s[0]>0||s[1]>=10)&&n(105)(o),n(106)(o)}},function(e,t){e.exports=require("string_decoder")},function(e){e.exports=[["a140","",62],["a180","",32],["a240","",62],["a280","",32],["a2ab","",5],["a2e3","€"],["a2ef",""],["a2fd",""],["a340","",62],["a380","",31,"　"],["a440","",62],["a480","",32],["a4f4","",10],["a540","",62],["a580","",32],["a5f7","",7],["a640","",62],["a680","",32],["a6b9","",7],["a6d9","",6],["a6ec",""],["a6f3",""],["a6f6","",8],["a740","",62],["a780","",32],["a7c2","",14],["a7f2","",12],["a896","",10],["a8bc",""],["a8bf","ǹ"],["a8c1",""],["a8ea","",20],["a958",""],["a95b",""],["a95d",""],["a989","〾⿰",11],["a997","",12],["a9f0","",14],["aaa1","",93],["aba1","",93],["aca1","",93],["ada1","",93],["aea1","",93],["afa1","",93],["d7fa","",4],["f8a1","",93],["f9a1","",93],["faa1","",93],["fba1","",93],["fca1","",93],["fda1","",93],["fe50","⺁⺄㑳㑇⺈⺋㖞㘚㘎⺌⺗㥮㤘㧏㧟㩳㧐㭎㱮㳠⺧⺪䁖䅟⺮䌷⺳⺶⺷䎱䎬⺻䏝䓖䙡䙌"],["fe80","䜣䜩䝼䞍⻊䥇䥺䥽䦂䦃䦅䦆䦟䦛䦷䦶䲣䲟䲠䲡䱷䲢䴓",6,"䶮",93]]},function(e){e.exports=[["0","\0",127],["a140","　，、。．‧；：？！︰…‥﹐﹑﹒·﹔﹕﹖﹗｜–︱—︳╴︴﹏（）︵︶｛｝︷︸〔〕︹︺【】︻︼《》︽︾〈〉︿﹀「」﹁﹂『』﹃﹄﹙﹚"],["a1a1","﹛﹜﹝﹞‘’“”〝〞‵′＃＆＊※§〃○●△▲◎☆★◇◆□■▽▼㊣℅¯￣＿ˍ﹉﹊﹍﹎﹋﹌﹟﹠﹡＋－×÷±√＜＞＝≦≧≠∞≒≡﹢",4,"～∩∪⊥∠∟⊿㏒㏑∫∮∵∴♀♂⊕⊙↑↓←→↖↗↙↘∥∣／"],["a240","＼∕﹨＄￥〒￠￡％＠℃℉﹩﹪﹫㏕㎜㎝㎞㏎㎡㎎㎏㏄°兙兛兞兝兡兣嗧瓩糎▁",7,"▏▎▍▌▋▊▉┼┴┬┤├▔─│▕┌┐└┘╭"],["a2a1","╮╰╯═╞╪╡◢◣◥◤╱╲╳０",9,"Ⅰ",9,"〡",8,"十卄卅Ａ",25,"ａ",21],["a340","ｗｘｙｚΑ",16,"Σ",6,"α",16,"σ",6,"ㄅ",10],["a3a1","ㄐ",25,"˙ˉˊˇˋ"],["a3e1","€"],["a440","一乙丁七乃九了二人儿入八几刀刁力匕十卜又三下丈上丫丸凡久么也乞于亡兀刃勺千叉口土士夕大女子孑孓寸小尢尸山川工己已巳巾干廾弋弓才"],["a4a1","丑丐不中丰丹之尹予云井互五亢仁什仃仆仇仍今介仄元允內六兮公冗凶分切刈勻勾勿化匹午升卅卞厄友及反壬天夫太夭孔少尤尺屯巴幻廿弔引心戈戶手扎支文斗斤方日曰月木欠止歹毋比毛氏水火爪父爻片牙牛犬王丙"],["a540","世丕且丘主乍乏乎以付仔仕他仗代令仙仞充兄冉冊冬凹出凸刊加功包匆北匝仟半卉卡占卯卮去可古右召叮叩叨叼司叵叫另只史叱台句叭叻四囚外"],["a5a1","央失奴奶孕它尼巨巧左市布平幼弁弘弗必戊打扔扒扑斥旦朮本未末札正母民氐永汁汀氾犯玄玉瓜瓦甘生用甩田由甲申疋白皮皿目矛矢石示禾穴立丞丟乒乓乩亙交亦亥仿伉伙伊伕伍伐休伏仲件任仰仳份企伋光兇兆先全"],["a640","共再冰列刑划刎刖劣匈匡匠印危吉吏同吊吐吁吋各向名合吃后吆吒因回囝圳地在圭圬圯圩夙多夷夸妄奸妃好她如妁字存宇守宅安寺尖屹州帆并年"],["a6a1","式弛忙忖戎戌戍成扣扛托收早旨旬旭曲曳有朽朴朱朵次此死氖汝汗汙江池汐汕污汛汍汎灰牟牝百竹米糸缶羊羽老考而耒耳聿肉肋肌臣自至臼舌舛舟艮色艾虫血行衣西阡串亨位住佇佗佞伴佛何估佐佑伽伺伸佃佔似但佣"],["a740","作你伯低伶余佝佈佚兌克免兵冶冷別判利刪刨劫助努劬匣即卵吝吭吞吾否呎吧呆呃吳呈呂君吩告吹吻吸吮吵吶吠吼呀吱含吟听囪困囤囫坊坑址坍"],["a7a1","均坎圾坐坏圻壯夾妝妒妨妞妣妙妖妍妤妓妊妥孝孜孚孛完宋宏尬局屁尿尾岐岑岔岌巫希序庇床廷弄弟彤形彷役忘忌志忍忱快忸忪戒我抄抗抖技扶抉扭把扼找批扳抒扯折扮投抓抑抆改攻攸旱更束李杏材村杜杖杞杉杆杠"],["a840","杓杗步每求汞沙沁沈沉沅沛汪決沐汰沌汨沖沒汽沃汲汾汴沆汶沍沔沘沂灶灼災灸牢牡牠狄狂玖甬甫男甸皂盯矣私秀禿究系罕肖肓肝肘肛肚育良芒"],["a8a1","芋芍見角言谷豆豕貝赤走足身車辛辰迂迆迅迄巡邑邢邪邦那酉釆里防阮阱阪阬並乖乳事些亞享京佯依侍佳使佬供例來侃佰併侈佩佻侖佾侏侑佺兔兒兕兩具其典冽函刻券刷刺到刮制剁劾劻卒協卓卑卦卷卸卹取叔受味呵"],["a940","咖呸咕咀呻呷咄咒咆呼咐呱呶和咚呢周咋命咎固垃坷坪坩坡坦坤坼夜奉奇奈奄奔妾妻委妹妮姑姆姐姍始姓姊妯妳姒姅孟孤季宗定官宜宙宛尚屈居"],["a9a1","屆岷岡岸岩岫岱岳帘帚帖帕帛帑幸庚店府底庖延弦弧弩往征彿彼忝忠忽念忿怏怔怯怵怖怪怕怡性怩怫怛或戕房戾所承拉拌拄抿拂抹拒招披拓拔拋拈抨抽押拐拙拇拍抵拚抱拘拖拗拆抬拎放斧於旺昔易昌昆昂明昀昏昕昊"],["aa40","昇服朋杭枋枕東果杳杷枇枝林杯杰板枉松析杵枚枓杼杪杲欣武歧歿氓氛泣注泳沱泌泥河沽沾沼波沫法泓沸泄油況沮泗泅泱沿治泡泛泊沬泯泜泖泠"],["aaa1","炕炎炒炊炙爬爭爸版牧物狀狎狙狗狐玩玨玟玫玥甽疝疙疚的盂盲直知矽社祀祁秉秈空穹竺糾罔羌羋者肺肥肢肱股肫肩肴肪肯臥臾舍芳芝芙芭芽芟芹花芬芥芯芸芣芰芾芷虎虱初表軋迎返近邵邸邱邶采金長門阜陀阿阻附"],["ab40","陂隹雨青非亟亭亮信侵侯便俠俑俏保促侶俘俟俊俗侮俐俄係俚俎俞侷兗冒冑冠剎剃削前剌剋則勇勉勃勁匍南卻厚叛咬哀咨哎哉咸咦咳哇哂咽咪品"],["aba1","哄哈咯咫咱咻咩咧咿囿垂型垠垣垢城垮垓奕契奏奎奐姜姘姿姣姨娃姥姪姚姦威姻孩宣宦室客宥封屎屏屍屋峙峒巷帝帥帟幽庠度建弈弭彥很待徊律徇後徉怒思怠急怎怨恍恰恨恢恆恃恬恫恪恤扁拜挖按拼拭持拮拽指拱拷"],["ac40","拯括拾拴挑挂政故斫施既春昭映昧是星昨昱昤曷柿染柱柔某柬架枯柵柩柯柄柑枴柚查枸柏柞柳枰柙柢柝柒歪殃殆段毒毗氟泉洋洲洪流津洌洱洞洗"],["aca1","活洽派洶洛泵洹洧洸洩洮洵洎洫炫為炳炬炯炭炸炮炤爰牲牯牴狩狠狡玷珊玻玲珍珀玳甚甭畏界畎畋疫疤疥疢疣癸皆皇皈盈盆盃盅省盹相眉看盾盼眇矜砂研砌砍祆祉祈祇禹禺科秒秋穿突竿竽籽紂紅紀紉紇約紆缸美羿耄"],["ad40","耐耍耑耶胖胥胚胃胄背胡胛胎胞胤胝致舢苧范茅苣苛苦茄若茂茉苒苗英茁苜苔苑苞苓苟苯茆虐虹虻虺衍衫要觔計訂訃貞負赴赳趴軍軌述迦迢迪迥"],["ada1","迭迫迤迨郊郎郁郃酋酊重閂限陋陌降面革韋韭音頁風飛食首香乘亳倌倍倣俯倦倥俸倩倖倆值借倚倒們俺倀倔倨俱倡個候倘俳修倭倪俾倫倉兼冤冥冢凍凌准凋剖剜剔剛剝匪卿原厝叟哨唐唁唷哼哥哲唆哺唔哩哭員唉哮哪"],["ae40","哦唧唇哽唏圃圄埂埔埋埃堉夏套奘奚娑娘娜娟娛娓姬娠娣娩娥娌娉孫屘宰害家宴宮宵容宸射屑展屐峭峽峻峪峨峰島崁峴差席師庫庭座弱徒徑徐恙"],["aea1","恣恥恐恕恭恩息悄悟悚悍悔悌悅悖扇拳挈拿捎挾振捕捂捆捏捉挺捐挽挪挫挨捍捌效敉料旁旅時晉晏晃晒晌晅晁書朔朕朗校核案框桓根桂桔栩梳栗桌桑栽柴桐桀格桃株桅栓栘桁殊殉殷氣氧氨氦氤泰浪涕消涇浦浸海浙涓"],["af40","浬涉浮浚浴浩涌涊浹涅浥涔烊烘烤烙烈烏爹特狼狹狽狸狷玆班琉珮珠珪珞畔畝畜畚留疾病症疲疳疽疼疹痂疸皋皰益盍盎眩真眠眨矩砰砧砸砝破砷"],["afa1","砥砭砠砟砲祕祐祠祟祖神祝祗祚秤秣秧租秦秩秘窄窈站笆笑粉紡紗紋紊素索純紐紕級紜納紙紛缺罟羔翅翁耆耘耕耙耗耽耿胱脂胰脅胭胴脆胸胳脈能脊胼胯臭臬舀舐航舫舨般芻茫荒荔荊茸荐草茵茴荏茲茹茶茗荀茱茨荃"],["b040","虔蚊蚪蚓蚤蚩蚌蚣蚜衰衷袁袂衽衹記訐討訌訕訊託訓訖訏訑豈豺豹財貢起躬軒軔軏辱送逆迷退迺迴逃追逅迸邕郡郝郢酒配酌釘針釗釜釙閃院陣陡"],["b0a1","陛陝除陘陞隻飢馬骨高鬥鬲鬼乾偺偽停假偃偌做偉健偶偎偕偵側偷偏倏偯偭兜冕凰剪副勒務勘動匐匏匙匿區匾參曼商啪啦啄啞啡啃啊唱啖問啕唯啤唸售啜唬啣唳啁啗圈國圉域堅堊堆埠埤基堂堵執培夠奢娶婁婉婦婪婀"],["b140","娼婢婚婆婊孰寇寅寄寂宿密尉專將屠屜屝崇崆崎崛崖崢崑崩崔崙崤崧崗巢常帶帳帷康庸庶庵庾張強彗彬彩彫得徙從徘御徠徜恿患悉悠您惋悴惦悽"],["b1a1","情悻悵惜悼惘惕惆惟悸惚惇戚戛扈掠控捲掖探接捷捧掘措捱掩掉掃掛捫推掄授掙採掬排掏掀捻捩捨捺敝敖救教敗啟敏敘敕敔斜斛斬族旋旌旎晝晚晤晨晦晞曹勗望梁梯梢梓梵桿桶梱梧梗械梃棄梭梆梅梔條梨梟梡梂欲殺"],["b240","毫毬氫涎涼淳淙液淡淌淤添淺清淇淋涯淑涮淞淹涸混淵淅淒渚涵淚淫淘淪深淮淨淆淄涪淬涿淦烹焉焊烽烯爽牽犁猜猛猖猓猙率琅琊球理現琍瓠瓶"],["b2a1","瓷甜產略畦畢異疏痔痕疵痊痍皎盔盒盛眷眾眼眶眸眺硫硃硎祥票祭移窒窕笠笨笛第符笙笞笮粒粗粕絆絃統紮紹紼絀細紳組累終紲紱缽羞羚翌翎習耜聊聆脯脖脣脫脩脰脤舂舵舷舶船莎莞莘荸莢莖莽莫莒莊莓莉莠荷荻荼"],["b340","莆莧處彪蛇蛀蚶蛄蚵蛆蛋蚱蚯蛉術袞袈被袒袖袍袋覓規訪訝訣訥許設訟訛訢豉豚販責貫貨貪貧赧赦趾趺軛軟這逍通逗連速逝逐逕逞造透逢逖逛途"],["b3a1","部郭都酗野釵釦釣釧釭釩閉陪陵陳陸陰陴陶陷陬雀雪雩章竟頂頃魚鳥鹵鹿麥麻傢傍傅備傑傀傖傘傚最凱割剴創剩勞勝勛博厥啻喀喧啼喊喝喘喂喜喪喔喇喋喃喳單喟唾喲喚喻喬喱啾喉喫喙圍堯堪場堤堰報堡堝堠壹壺奠"],["b440","婷媚婿媒媛媧孳孱寒富寓寐尊尋就嵌嵐崴嵇巽幅帽幀幃幾廊廁廂廄弼彭復循徨惑惡悲悶惠愜愣惺愕惰惻惴慨惱愎惶愉愀愒戟扉掣掌描揀揩揉揆揍"],["b4a1","插揣提握揖揭揮捶援揪換摒揚揹敞敦敢散斑斐斯普晰晴晶景暑智晾晷曾替期朝棺棕棠棘棗椅棟棵森棧棹棒棲棣棋棍植椒椎棉棚楮棻款欺欽殘殖殼毯氮氯氬港游湔渡渲湧湊渠渥渣減湛湘渤湖湮渭渦湯渴湍渺測湃渝渾滋"],["b540","溉渙湎湣湄湲湩湟焙焚焦焰無然煮焜牌犄犀猶猥猴猩琺琪琳琢琥琵琶琴琯琛琦琨甥甦畫番痢痛痣痙痘痞痠登發皖皓皴盜睏短硝硬硯稍稈程稅稀窘"],["b5a1","窗窖童竣等策筆筐筒答筍筋筏筑粟粥絞結絨絕紫絮絲絡給絢絰絳善翔翕耋聒肅腕腔腋腑腎脹腆脾腌腓腴舒舜菩萃菸萍菠菅萋菁華菱菴著萊菰萌菌菽菲菊萸萎萄菜萇菔菟虛蛟蛙蛭蛔蛛蛤蛐蛞街裁裂袱覃視註詠評詞証詁"],["b640","詔詛詐詆訴診訶詖象貂貯貼貳貽賁費賀貴買貶貿貸越超趁跎距跋跚跑跌跛跆軻軸軼辜逮逵週逸進逶鄂郵鄉郾酣酥量鈔鈕鈣鈉鈞鈍鈐鈇鈑閔閏開閑"],["b6a1","間閒閎隊階隋陽隅隆隍陲隄雁雅雄集雇雯雲韌項順須飧飪飯飩飲飭馮馭黃黍黑亂傭債傲傳僅傾催傷傻傯僇剿剷剽募勦勤勢勣匯嗟嗨嗓嗦嗎嗜嗇嗑嗣嗤嗯嗚嗡嗅嗆嗥嗉園圓塞塑塘塗塚塔填塌塭塊塢塒塋奧嫁嫉嫌媾媽媼"],["b740","媳嫂媲嵩嵯幌幹廉廈弒彙徬微愚意慈感想愛惹愁愈慎慌慄慍愾愴愧愍愆愷戡戢搓搾搞搪搭搽搬搏搜搔損搶搖搗搆敬斟新暗暉暇暈暖暄暘暍會榔業"],["b7a1","楚楷楠楔極椰概楊楨楫楞楓楹榆楝楣楛歇歲毀殿毓毽溢溯滓溶滂源溝滇滅溥溘溼溺溫滑準溜滄滔溪溧溴煎煙煩煤煉照煜煬煦煌煥煞煆煨煖爺牒猷獅猿猾瑯瑚瑕瑟瑞瑁琿瑙瑛瑜當畸瘀痰瘁痲痱痺痿痴痳盞盟睛睫睦睞督"],["b840","睹睪睬睜睥睨睢矮碎碰碗碘碌碉硼碑碓硿祺祿禁萬禽稜稚稠稔稟稞窟窠筷節筠筮筧粱粳粵經絹綑綁綏絛置罩罪署義羨群聖聘肆肄腱腰腸腥腮腳腫"],["b8a1","腹腺腦舅艇蒂葷落萱葵葦葫葉葬葛萼萵葡董葩葭葆虞虜號蛹蜓蜈蜇蜀蛾蛻蜂蜃蜆蜊衙裟裔裙補裘裝裡裊裕裒覜解詫該詳試詩詰誇詼詣誠話誅詭詢詮詬詹詻訾詨豢貊貉賊資賈賄貲賃賂賅跡跟跨路跳跺跪跤跦躲較載軾輊"],["b940","辟農運遊道遂達逼違遐遇遏過遍遑逾遁鄒鄗酬酪酩釉鈷鉗鈸鈽鉀鈾鉛鉋鉤鉑鈴鉉鉍鉅鈹鈿鉚閘隘隔隕雍雋雉雊雷電雹零靖靴靶預頑頓頊頒頌飼飴"],["b9a1","飽飾馳馱馴髡鳩麂鼎鼓鼠僧僮僥僖僭僚僕像僑僱僎僩兢凳劃劂匱厭嗾嘀嘛嘗嗽嘔嘆嘉嘍嘎嗷嘖嘟嘈嘐嗶團圖塵塾境墓墊塹墅塽壽夥夢夤奪奩嫡嫦嫩嫗嫖嫘嫣孵寞寧寡寥實寨寢寤察對屢嶄嶇幛幣幕幗幔廓廖弊彆彰徹慇"],["ba40","愿態慷慢慣慟慚慘慵截撇摘摔撤摸摟摺摑摧搴摭摻敲斡旗旖暢暨暝榜榨榕槁榮槓構榛榷榻榫榴槐槍榭槌榦槃榣歉歌氳漳演滾漓滴漩漾漠漬漏漂漢"],["baa1","滿滯漆漱漸漲漣漕漫漯澈漪滬漁滲滌滷熔熙煽熊熄熒爾犒犖獄獐瑤瑣瑪瑰瑭甄疑瘧瘍瘋瘉瘓盡監瞄睽睿睡磁碟碧碳碩碣禎福禍種稱窪窩竭端管箕箋筵算箝箔箏箸箇箄粹粽精綻綰綜綽綾綠緊綴網綱綺綢綿綵綸維緒緇綬"],["bb40","罰翠翡翟聞聚肇腐膀膏膈膊腿膂臧臺與舔舞艋蓉蒿蓆蓄蒙蒞蒲蒜蓋蒸蓀蓓蒐蒼蓑蓊蜿蜜蜻蜢蜥蜴蜘蝕蜷蜩裳褂裴裹裸製裨褚裯誦誌語誣認誡誓誤"],["bba1","說誥誨誘誑誚誧豪貍貌賓賑賒赫趙趕跼輔輒輕輓辣遠遘遜遣遙遞遢遝遛鄙鄘鄞酵酸酷酴鉸銀銅銘銖鉻銓銜銨鉼銑閡閨閩閣閥閤隙障際雌雒需靼鞅韶頗領颯颱餃餅餌餉駁骯骰髦魁魂鳴鳶鳳麼鼻齊億儀僻僵價儂儈儉儅凜"],["bc40","劇劈劉劍劊勰厲嘮嘻嘹嘲嘿嘴嘩噓噎噗噴嘶嘯嘰墀墟增墳墜墮墩墦奭嬉嫻嬋嫵嬌嬈寮寬審寫層履嶝嶔幢幟幡廢廚廟廝廣廠彈影德徵慶慧慮慝慕憂"],["bca1","慼慰慫慾憧憐憫憎憬憚憤憔憮戮摩摯摹撞撲撈撐撰撥撓撕撩撒撮播撫撚撬撙撢撳敵敷數暮暫暴暱樣樟槨樁樞標槽模樓樊槳樂樅槭樑歐歎殤毅毆漿潼澄潑潦潔澆潭潛潸潮澎潺潰潤澗潘滕潯潠潟熟熬熱熨牖犛獎獗瑩璋璃"],["bd40","瑾璀畿瘠瘩瘟瘤瘦瘡瘢皚皺盤瞎瞇瞌瞑瞋磋磅確磊碾磕碼磐稿稼穀稽稷稻窯窮箭箱範箴篆篇篁箠篌糊締練緯緻緘緬緝編緣線緞緩綞緙緲緹罵罷羯"],["bda1","翩耦膛膜膝膠膚膘蔗蔽蔚蓮蔬蔭蔓蔑蔣蔡蔔蓬蔥蓿蔆螂蝴蝶蝠蝦蝸蝨蝙蝗蝌蝓衛衝褐複褒褓褕褊誼諒談諄誕請諸課諉諂調誰論諍誶誹諛豌豎豬賠賞賦賤賬賭賢賣賜質賡赭趟趣踫踐踝踢踏踩踟踡踞躺輝輛輟輩輦輪輜輞"],["be40","輥適遮遨遭遷鄰鄭鄧鄱醇醉醋醃鋅銻銷鋪銬鋤鋁銳銼鋒鋇鋰銲閭閱霄霆震霉靠鞍鞋鞏頡頫頜颳養餓餒餘駝駐駟駛駑駕駒駙骷髮髯鬧魅魄魷魯鴆鴉"],["bea1","鴃麩麾黎墨齒儒儘儔儐儕冀冪凝劑劓勳噙噫噹噩噤噸噪器噥噱噯噬噢噶壁墾壇壅奮嬝嬴學寰導彊憲憑憩憊懍憶憾懊懈戰擅擁擋撻撼據擄擇擂操撿擒擔撾整曆曉暹曄曇暸樽樸樺橙橫橘樹橄橢橡橋橇樵機橈歙歷氅濂澱澡"],["bf40","濃澤濁澧澳激澹澶澦澠澴熾燉燐燒燈燕熹燎燙燜燃燄獨璜璣璘璟璞瓢甌甍瘴瘸瘺盧盥瞠瞞瞟瞥磨磚磬磧禦積穎穆穌穋窺篙簑築篤篛篡篩篦糕糖縊"],["bfa1","縑縈縛縣縞縝縉縐罹羲翰翱翮耨膳膩膨臻興艘艙蕊蕙蕈蕨蕩蕃蕉蕭蕪蕞螃螟螞螢融衡褪褲褥褫褡親覦諦諺諫諱謀諜諧諮諾謁謂諷諭諳諶諼豫豭貓賴蹄踱踴蹂踹踵輻輯輸輳辨辦遵遴選遲遼遺鄴醒錠錶鋸錳錯錢鋼錫錄錚"],["c040","錐錦錡錕錮錙閻隧隨險雕霎霑霖霍霓霏靛靜靦鞘頰頸頻頷頭頹頤餐館餞餛餡餚駭駢駱骸骼髻髭鬨鮑鴕鴣鴦鴨鴒鴛默黔龍龜優償儡儲勵嚎嚀嚐嚅嚇"],["c0a1","嚏壕壓壑壎嬰嬪嬤孺尷屨嶼嶺嶽嶸幫彌徽應懂懇懦懋戲戴擎擊擘擠擰擦擬擱擢擭斂斃曙曖檀檔檄檢檜櫛檣橾檗檐檠歜殮毚氈濘濱濟濠濛濤濫濯澀濬濡濩濕濮濰燧營燮燦燥燭燬燴燠爵牆獰獲璩環璦璨癆療癌盪瞳瞪瞰瞬"],["c140","瞧瞭矯磷磺磴磯礁禧禪穗窿簇簍篾篷簌篠糠糜糞糢糟糙糝縮績繆縷縲繃縫總縱繅繁縴縹繈縵縿縯罄翳翼聱聲聰聯聳臆臃膺臂臀膿膽臉膾臨舉艱薪"],["c1a1","薄蕾薜薑薔薯薛薇薨薊虧蟀蟑螳蟒蟆螫螻螺蟈蟋褻褶襄褸褽覬謎謗謙講謊謠謝謄謐豁谿豳賺賽購賸賻趨蹉蹋蹈蹊轄輾轂轅輿避遽還邁邂邀鄹醣醞醜鍍鎂錨鍵鍊鍥鍋錘鍾鍬鍛鍰鍚鍔闊闋闌闈闆隱隸雖霜霞鞠韓顆颶餵騁"],["c240","駿鮮鮫鮪鮭鴻鴿麋黏點黜黝黛鼾齋叢嚕嚮壙壘嬸彝懣戳擴擲擾攆擺擻擷斷曜朦檳檬櫃檻檸櫂檮檯歟歸殯瀉瀋濾瀆濺瀑瀏燻燼燾燸獷獵璧璿甕癖癘"],["c2a1","癒瞽瞿瞻瞼礎禮穡穢穠竄竅簫簧簪簞簣簡糧織繕繞繚繡繒繙罈翹翻職聶臍臏舊藏薩藍藐藉薰薺薹薦蟯蟬蟲蟠覆覲觴謨謹謬謫豐贅蹙蹣蹦蹤蹟蹕軀轉轍邇邃邈醫醬釐鎔鎊鎖鎢鎳鎮鎬鎰鎘鎚鎗闔闖闐闕離雜雙雛雞霤鞣鞦"],["c340","鞭韹額顏題顎顓颺餾餿餽餮馥騎髁鬃鬆魏魎魍鯊鯉鯽鯈鯀鵑鵝鵠黠鼕鼬儳嚥壞壟壢寵龐廬懲懷懶懵攀攏曠曝櫥櫝櫚櫓瀛瀟瀨瀚瀝瀕瀘爆爍牘犢獸"],["c3a1","獺璽瓊瓣疇疆癟癡矇礙禱穫穩簾簿簸簽簷籀繫繭繹繩繪羅繳羶羹羸臘藩藝藪藕藤藥藷蟻蠅蠍蟹蟾襠襟襖襞譁譜識證譚譎譏譆譙贈贊蹼蹲躇蹶蹬蹺蹴轔轎辭邊邋醱醮鏡鏑鏟鏃鏈鏜鏝鏖鏢鏍鏘鏤鏗鏨關隴難霪霧靡韜韻類"],["c440","願顛颼饅饉騖騙鬍鯨鯧鯖鯛鶉鵡鵲鵪鵬麒麗麓麴勸嚨嚷嚶嚴嚼壤孀孃孽寶巉懸懺攘攔攙曦朧櫬瀾瀰瀲爐獻瓏癢癥礦礪礬礫竇競籌籃籍糯糰辮繽繼"],["c4a1","纂罌耀臚艦藻藹蘑藺蘆蘋蘇蘊蠔蠕襤覺觸議譬警譯譟譫贏贍躉躁躅躂醴釋鐘鐃鏽闡霰飄饒饑馨騫騰騷騵鰓鰍鹹麵黨鼯齟齣齡儷儸囁囀囂夔屬巍懼懾攝攜斕曩櫻欄櫺殲灌爛犧瓖瓔癩矓籐纏續羼蘗蘭蘚蠣蠢蠡蠟襪襬覽譴"],["c540","護譽贓躊躍躋轟辯醺鐮鐳鐵鐺鐸鐲鐫闢霸霹露響顧顥饗驅驃驀騾髏魔魑鰭鰥鶯鶴鷂鶸麝黯鼙齜齦齧儼儻囈囊囉孿巔巒彎懿攤權歡灑灘玀瓤疊癮癬"],["c5a1","禳籠籟聾聽臟襲襯觼讀贖贗躑躓轡酈鑄鑑鑒霽霾韃韁顫饕驕驍髒鬚鱉鰱鰾鰻鷓鷗鼴齬齪龔囌巖戀攣攫攪曬欐瓚竊籤籣籥纓纖纔臢蘸蘿蠱變邐邏鑣鑠鑤靨顯饜驚驛驗髓體髑鱔鱗鱖鷥麟黴囑壩攬灞癱癲矗罐羈蠶蠹衢讓讒"],["c640","讖艷贛釀鑪靂靈靄韆顰驟鬢魘鱟鷹鷺鹼鹽鼇齷齲廳欖灣籬籮蠻觀躡釁鑲鑰顱饞髖鬣黌灤矚讚鑷韉驢驥纜讜躪釅鑽鑾鑼鱷鱸黷豔鑿鸚爨驪鬱鸛鸞籲"],["c940","乂乜凵匚厂万丌乇亍囗兀屮彳丏冇与丮亓仂仉仈冘勼卬厹圠夃夬尐巿旡殳毌气爿丱丼仨仜仩仡仝仚刌匜卌圢圣夗夯宁宄尒尻屴屳帄庀庂忉戉扐氕"],["c9a1","氶汃氿氻犮犰玊禸肊阞伎优伬仵伔仱伀价伈伝伂伅伢伓伄仴伒冱刓刉刐劦匢匟卍厊吇囡囟圮圪圴夼妀奼妅奻奾奷奿孖尕尥屼屺屻屾巟幵庄异弚彴忕忔忏扜扞扤扡扦扢扙扠扚扥旯旮朾朹朸朻机朿朼朳氘汆汒汜汏汊汔汋"],["ca40","汌灱牞犴犵玎甪癿穵网艸艼芀艽艿虍襾邙邗邘邛邔阢阤阠阣佖伻佢佉体佤伾佧佒佟佁佘伭伳伿佡冏冹刜刞刡劭劮匉卣卲厎厏吰吷吪呔呅吙吜吥吘"],["caa1","吽呏呁吨吤呇囮囧囥坁坅坌坉坋坒夆奀妦妘妠妗妎妢妐妏妧妡宎宒尨尪岍岏岈岋岉岒岊岆岓岕巠帊帎庋庉庌庈庍弅弝彸彶忒忑忐忭忨忮忳忡忤忣忺忯忷忻怀忴戺抃抌抎抏抔抇扱扻扺扰抁抈扷扽扲扴攷旰旴旳旲旵杅杇"],["cb40","杙杕杌杈杝杍杚杋毐氙氚汸汧汫沄沋沏汱汯汩沚汭沇沕沜汦汳汥汻沎灴灺牣犿犽狃狆狁犺狅玕玗玓玔玒町甹疔疕皁礽耴肕肙肐肒肜芐芏芅芎芑芓"],["cba1","芊芃芄豸迉辿邟邡邥邞邧邠阰阨阯阭丳侘佼侅佽侀侇佶佴侉侄佷佌侗佪侚佹侁佸侐侜侔侞侒侂侕佫佮冞冼冾刵刲刳剆刱劼匊匋匼厒厔咇呿咁咑咂咈呫呺呾呥呬呴呦咍呯呡呠咘呣呧呤囷囹坯坲坭坫坱坰坶垀坵坻坳坴坢"],["cc40","坨坽夌奅妵妺姏姎妲姌姁妶妼姃姖妱妽姀姈妴姇孢孥宓宕屄屇岮岤岠岵岯岨岬岟岣岭岢岪岧岝岥岶岰岦帗帔帙弨弢弣弤彔徂彾彽忞忥怭怦怙怲怋"],["cca1","怴怊怗怳怚怞怬怢怍怐怮怓怑怌怉怜戔戽抭抴拑抾抪抶拊抮抳抯抻抩抰抸攽斨斻昉旼昄昒昈旻昃昋昍昅旽昑昐曶朊枅杬枎枒杶杻枘枆构杴枍枌杺枟枑枙枃杽极杸杹枔欥殀歾毞氝沓泬泫泮泙沶泔沭泧沷泐泂沺泃泆泭泲"],["cd40","泒泝沴沊沝沀泞泀洰泍泇沰泹泏泩泑炔炘炅炓炆炄炑炖炂炚炃牪狖狋狘狉狜狒狔狚狌狑玤玡玭玦玢玠玬玝瓝瓨甿畀甾疌疘皯盳盱盰盵矸矼矹矻矺"],["cda1","矷祂礿秅穸穻竻籵糽耵肏肮肣肸肵肭舠芠苀芫芚芘芛芵芧芮芼芞芺芴芨芡芩苂芤苃芶芢虰虯虭虮豖迒迋迓迍迖迕迗邲邴邯邳邰阹阽阼阺陃俍俅俓侲俉俋俁俔俜俙侻侳俛俇俖侺俀侹俬剄剉勀勂匽卼厗厖厙厘咺咡咭咥哏"],["ce40","哃茍咷咮哖咶哅哆咠呰咼咢咾呲哞咰垵垞垟垤垌垗垝垛垔垘垏垙垥垚垕壴复奓姡姞姮娀姱姝姺姽姼姶姤姲姷姛姩姳姵姠姾姴姭宨屌峐峘峌峗峋峛"],["cea1","峞峚峉峇峊峖峓峔峏峈峆峎峟峸巹帡帢帣帠帤庰庤庢庛庣庥弇弮彖徆怷怹恔恲恞恅恓恇恉恛恌恀恂恟怤恄恘恦恮扂扃拏挍挋拵挎挃拫拹挏挌拸拶挀挓挔拺挕拻拰敁敃斪斿昶昡昲昵昜昦昢昳昫昺昝昴昹昮朏朐柁柲柈枺"],["cf40","柜枻柸柘柀枷柅柫柤柟枵柍枳柷柶柮柣柂枹柎柧柰枲柼柆柭柌枮柦柛柺柉柊柃柪柋欨殂殄殶毖毘毠氠氡洨洴洭洟洼洿洒洊泚洳洄洙洺洚洑洀洝浂"],["cfa1","洁洘洷洃洏浀洇洠洬洈洢洉洐炷炟炾炱炰炡炴炵炩牁牉牊牬牰牳牮狊狤狨狫狟狪狦狣玅珌珂珈珅玹玶玵玴珫玿珇玾珃珆玸珋瓬瓮甮畇畈疧疪癹盄眈眃眄眅眊盷盻盺矧矨砆砑砒砅砐砏砎砉砃砓祊祌祋祅祄秕种秏秖秎窀"],["d040","穾竑笀笁籺籸籹籿粀粁紃紈紁罘羑羍羾耇耎耏耔耷胘胇胠胑胈胂胐胅胣胙胜胊胕胉胏胗胦胍臿舡芔苙苾苹茇苨茀苕茺苫苖苴苬苡苲苵茌苻苶苰苪"],["d0a1","苤苠苺苳苭虷虴虼虳衁衎衧衪衩觓訄訇赲迣迡迮迠郱邽邿郕郅邾郇郋郈釔釓陔陏陑陓陊陎倞倅倇倓倢倰倛俵俴倳倷倬俶俷倗倜倠倧倵倯倱倎党冔冓凊凄凅凈凎剡剚剒剞剟剕剢勍匎厞唦哢唗唒哧哳哤唚哿唄唈哫唑唅哱"],["d140","唊哻哷哸哠唎唃唋圁圂埌堲埕埒垺埆垽垼垸垶垿埇埐垹埁夎奊娙娖娭娮娕娏娗娊娞娳孬宧宭宬尃屖屔峬峿峮峱峷崀峹帩帨庨庮庪庬弳弰彧恝恚恧"],["d1a1","恁悢悈悀悒悁悝悃悕悛悗悇悜悎戙扆拲挐捖挬捄捅挶捃揤挹捋捊挼挩捁挴捘捔捙挭捇挳捚捑挸捗捀捈敊敆旆旃旄旂晊晟晇晑朒朓栟栚桉栲栳栻桋桏栖栱栜栵栫栭栯桎桄栴栝栒栔栦栨栮桍栺栥栠欬欯欭欱欴歭肂殈毦毤"],["d240","毨毣毢毧氥浺浣浤浶洍浡涒浘浢浭浯涑涍淯浿涆浞浧浠涗浰浼浟涂涘洯浨涋浾涀涄洖涃浻浽浵涐烜烓烑烝烋缹烢烗烒烞烠烔烍烅烆烇烚烎烡牂牸"],["d2a1","牷牶猀狺狴狾狶狳狻猁珓珙珥珖玼珧珣珩珜珒珛珔珝珚珗珘珨瓞瓟瓴瓵甡畛畟疰痁疻痄痀疿疶疺皊盉眝眛眐眓眒眣眑眕眙眚眢眧砣砬砢砵砯砨砮砫砡砩砳砪砱祔祛祏祜祓祒祑秫秬秠秮秭秪秜秞秝窆窉窅窋窌窊窇竘笐"],["d340","笄笓笅笏笈笊笎笉笒粄粑粊粌粈粍粅紞紝紑紎紘紖紓紟紒紏紌罜罡罞罠罝罛羖羒翃翂翀耖耾耹胺胲胹胵脁胻脀舁舯舥茳茭荄茙荑茥荖茿荁茦茜茢"],["d3a1","荂荎茛茪茈茼荍茖茤茠茷茯茩荇荅荌荓茞茬荋茧荈虓虒蚢蚨蚖蚍蚑蚞蚇蚗蚆蚋蚚蚅蚥蚙蚡蚧蚕蚘蚎蚝蚐蚔衃衄衭衵衶衲袀衱衿衯袃衾衴衼訒豇豗豻貤貣赶赸趵趷趶軑軓迾迵适迿迻逄迼迶郖郠郙郚郣郟郥郘郛郗郜郤酐"],["d440","酎酏釕釢釚陜陟隼飣髟鬯乿偰偪偡偞偠偓偋偝偲偈偍偁偛偊偢倕偅偟偩偫偣偤偆偀偮偳偗偑凐剫剭剬剮勖勓匭厜啵啶唼啍啐唴唪啑啢唶唵唰啒啅"],["d4a1","唌唲啥啎唹啈唭唻啀啋圊圇埻堔埢埶埜埴堀埭埽堈埸堋埳埏堇埮埣埲埥埬埡堎埼堐埧堁堌埱埩埰堍堄奜婠婘婕婧婞娸娵婭婐婟婥婬婓婤婗婃婝婒婄婛婈媎娾婍娹婌婰婩婇婑婖婂婜孲孮寁寀屙崞崋崝崚崠崌崨崍崦崥崏"],["d540","崰崒崣崟崮帾帴庱庴庹庲庳弶弸徛徖徟悊悐悆悾悰悺惓惔惏惤惙惝惈悱惛悷惊悿惃惍惀挲捥掊掂捽掽掞掭掝掗掫掎捯掇掐据掯捵掜捭掮捼掤挻掟"],["d5a1","捸掅掁掑掍捰敓旍晥晡晛晙晜晢朘桹梇梐梜桭桮梮梫楖桯梣梬梩桵桴梲梏桷梒桼桫桲梪梀桱桾梛梖梋梠梉梤桸桻梑梌梊桽欶欳欷欸殑殏殍殎殌氪淀涫涴涳湴涬淩淢涷淶淔渀淈淠淟淖涾淥淜淝淛淴淊涽淭淰涺淕淂淏淉"],["d640","淐淲淓淽淗淍淣涻烺焍烷焗烴焌烰焄烳焐烼烿焆焓焀烸烶焋焂焎牾牻牼牿猝猗猇猑猘猊猈狿猏猞玈珶珸珵琄琁珽琇琀珺珼珿琌琋珴琈畤畣痎痒痏"],["d6a1","痋痌痑痐皏皉盓眹眯眭眱眲眴眳眽眥眻眵硈硒硉硍硊硌砦硅硐祤祧祩祪祣祫祡离秺秸秶秷窏窔窐笵筇笴笥笰笢笤笳笘笪笝笱笫笭笯笲笸笚笣粔粘粖粣紵紽紸紶紺絅紬紩絁絇紾紿絊紻紨罣羕羜羝羛翊翋翍翐翑翇翏翉耟"],["d740","耞耛聇聃聈脘脥脙脛脭脟脬脞脡脕脧脝脢舑舸舳舺舴舲艴莐莣莨莍荺荳莤荴莏莁莕莙荵莔莩荽莃莌莝莛莪莋荾莥莯莈莗莰荿莦莇莮荶莚虙虖蚿蚷"],["d7a1","蛂蛁蛅蚺蚰蛈蚹蚳蚸蛌蚴蚻蚼蛃蚽蚾衒袉袕袨袢袪袚袑袡袟袘袧袙袛袗袤袬袌袓袎覂觖觙觕訰訧訬訞谹谻豜豝豽貥赽赻赹趼跂趹趿跁軘軞軝軜軗軠軡逤逋逑逜逌逡郯郪郰郴郲郳郔郫郬郩酖酘酚酓酕釬釴釱釳釸釤釹釪"],["d840","釫釷釨釮镺閆閈陼陭陫陱陯隿靪頄飥馗傛傕傔傞傋傣傃傌傎傝偨傜傒傂傇兟凔匒匑厤厧喑喨喥喭啷噅喢喓喈喏喵喁喣喒喤啽喌喦啿喕喡喎圌堩堷"],["d8a1","堙堞堧堣堨埵塈堥堜堛堳堿堶堮堹堸堭堬堻奡媯媔媟婺媢媞婸媦婼媥媬媕媮娷媄媊媗媃媋媩婻婽媌媜媏媓媝寪寍寋寔寑寊寎尌尰崷嵃嵫嵁嵋崿崵嵑嵎嵕崳崺嵒崽崱嵙嵂崹嵉崸崼崲崶嵀嵅幄幁彘徦徥徫惉悹惌惢惎惄愔"],["d940","惲愊愖愅惵愓惸惼惾惁愃愘愝愐惿愄愋扊掔掱掰揎揥揨揯揃撝揳揊揠揶揕揲揵摡揟掾揝揜揄揘揓揂揇揌揋揈揰揗揙攲敧敪敤敜敨敥斌斝斞斮旐旒"],["d9a1","晼晬晻暀晱晹晪晲朁椌棓椄棜椪棬棪棱椏棖棷棫棤棶椓椐棳棡椇棌椈楰梴椑棯棆椔棸棐棽棼棨椋椊椗棎棈棝棞棦棴棑椆棔棩椕椥棇欹欻欿欼殔殗殙殕殽毰毲毳氰淼湆湇渟湉溈渼渽湅湢渫渿湁湝湳渜渳湋湀湑渻渃渮湞"],["da40","湨湜湡渱渨湠湱湫渹渢渰湓湥渧湸湤湷湕湹湒湦渵渶湚焠焞焯烻焮焱焣焥焢焲焟焨焺焛牋牚犈犉犆犅犋猒猋猰猢猱猳猧猲猭猦猣猵猌琮琬琰琫琖"],["daa1","琚琡琭琱琤琣琝琩琠琲瓻甯畯畬痧痚痡痦痝痟痤痗皕皒盚睆睇睄睍睅睊睎睋睌矞矬硠硤硥硜硭硱硪确硰硩硨硞硢祴祳祲祰稂稊稃稌稄窙竦竤筊笻筄筈筌筎筀筘筅粢粞粨粡絘絯絣絓絖絧絪絏絭絜絫絒絔絩絑絟絎缾缿罥"],["db40","罦羢羠羡翗聑聏聐胾胔腃腊腒腏腇脽腍脺臦臮臷臸臹舄舼舽舿艵茻菏菹萣菀菨萒菧菤菼菶萐菆菈菫菣莿萁菝菥菘菿菡菋菎菖菵菉萉萏菞萑萆菂菳"],["dba1","菕菺菇菑菪萓菃菬菮菄菻菗菢萛菛菾蛘蛢蛦蛓蛣蛚蛪蛝蛫蛜蛬蛩蛗蛨蛑衈衖衕袺裗袹袸裀袾袶袼袷袽袲褁裉覕覘覗觝觚觛詎詍訹詙詀詗詘詄詅詒詈詑詊詌詏豟貁貀貺貾貰貹貵趄趀趉跘跓跍跇跖跜跏跕跙跈跗跅軯軷軺"],["dc40","軹軦軮軥軵軧軨軶軫軱軬軴軩逭逴逯鄆鄬鄄郿郼鄈郹郻鄁鄀鄇鄅鄃酡酤酟酢酠鈁鈊鈥鈃鈚鈦鈏鈌鈀鈒釿釽鈆鈄鈧鈂鈜鈤鈙鈗鈅鈖镻閍閌閐隇陾隈"],["dca1","隉隃隀雂雈雃雱雰靬靰靮頇颩飫鳦黹亃亄亶傽傿僆傮僄僊傴僈僂傰僁傺傱僋僉傶傸凗剺剸剻剼嗃嗛嗌嗐嗋嗊嗝嗀嗔嗄嗩喿嗒喍嗏嗕嗢嗖嗈嗲嗍嗙嗂圔塓塨塤塏塍塉塯塕塎塝塙塥塛堽塣塱壼嫇嫄嫋媺媸媱媵媰媿嫈媻嫆"],["dd40","媷嫀嫊媴媶嫍媹媐寖寘寙尟尳嵱嵣嵊嵥嵲嵬嵞嵨嵧嵢巰幏幎幊幍幋廅廌廆廋廇彀徯徭惷慉慊愫慅愶愲愮慆愯慏愩慀戠酨戣戥戤揅揱揫搐搒搉搠搤"],["dda1","搳摃搟搕搘搹搷搢搣搌搦搰搨摁搵搯搊搚摀搥搧搋揧搛搮搡搎敯斒旓暆暌暕暐暋暊暙暔晸朠楦楟椸楎楢楱椿楅楪椹楂楗楙楺楈楉椵楬椳椽楥棰楸椴楩楀楯楄楶楘楁楴楌椻楋椷楜楏楑椲楒椯楻椼歆歅歃歂歈歁殛嗀毻毼"],["de40","毹毷毸溛滖滈溏滀溟溓溔溠溱溹滆滒溽滁溞滉溷溰滍溦滏溲溾滃滜滘溙溒溎溍溤溡溿溳滐滊溗溮溣煇煔煒煣煠煁煝煢煲煸煪煡煂煘煃煋煰煟煐煓"],["dea1","煄煍煚牏犍犌犑犐犎猼獂猻猺獀獊獉瑄瑊瑋瑒瑑瑗瑀瑏瑐瑎瑂瑆瑍瑔瓡瓿瓾瓽甝畹畷榃痯瘏瘃痷痾痼痹痸瘐痻痶痭痵痽皙皵盝睕睟睠睒睖睚睩睧睔睙睭矠碇碚碔碏碄碕碅碆碡碃硹碙碀碖硻祼禂祽祹稑稘稙稒稗稕稢稓"],["df40","稛稐窣窢窞竫筦筤筭筴筩筲筥筳筱筰筡筸筶筣粲粴粯綈綆綀綍絿綅絺綎絻綃絼綌綔綄絽綒罭罫罧罨罬羦羥羧翛翜耡腤腠腷腜腩腛腢腲朡腞腶腧腯"],["dfa1","腄腡舝艉艄艀艂艅蓱萿葖葶葹蒏蒍葥葑葀蒆葧萰葍葽葚葙葴葳葝蔇葞萷萺萴葺葃葸萲葅萩菙葋萯葂萭葟葰萹葎葌葒葯蓅蒎萻葇萶萳葨葾葄萫葠葔葮葐蜋蜄蛷蜌蛺蛖蛵蝍蛸蜎蜉蜁蛶蜍蜅裖裋裍裎裞裛裚裌裐覅覛觟觥觤"],["e040","觡觠觢觜触詶誆詿詡訿詷誂誄詵誃誁詴詺谼豋豊豥豤豦貆貄貅賌赨赩趑趌趎趏趍趓趔趐趒跰跠跬跱跮跐跩跣跢跧跲跫跴輆軿輁輀輅輇輈輂輋遒逿"],["e0a1","遄遉逽鄐鄍鄏鄑鄖鄔鄋鄎酮酯鉈鉒鈰鈺鉦鈳鉥鉞銃鈮鉊鉆鉭鉬鉏鉠鉧鉯鈶鉡鉰鈱鉔鉣鉐鉲鉎鉓鉌鉖鈲閟閜閞閛隒隓隑隗雎雺雽雸雵靳靷靸靲頏頍頎颬飶飹馯馲馰馵骭骫魛鳪鳭鳧麀黽僦僔僗僨僳僛僪僝僤僓僬僰僯僣僠"],["e140","凘劀劁勩勫匰厬嘧嘕嘌嘒嗼嘏嘜嘁嘓嘂嗺嘝嘄嗿嗹墉塼墐墘墆墁塿塴墋塺墇墑墎塶墂墈塻墔墏壾奫嫜嫮嫥嫕嫪嫚嫭嫫嫳嫢嫠嫛嫬嫞嫝嫙嫨嫟孷寠"],["e1a1","寣屣嶂嶀嵽嶆嵺嶁嵷嶊嶉嶈嵾嵼嶍嵹嵿幘幙幓廘廑廗廎廜廕廙廒廔彄彃彯徶愬愨慁慞慱慳慒慓慲慬憀慴慔慺慛慥愻慪慡慖戩戧戫搫摍摛摝摴摶摲摳摽摵摦撦摎撂摞摜摋摓摠摐摿搿摬摫摙摥摷敳斠暡暠暟朅朄朢榱榶槉"],["e240","榠槎榖榰榬榼榑榙榎榧榍榩榾榯榿槄榽榤槔榹槊榚槏榳榓榪榡榞槙榗榐槂榵榥槆歊歍歋殞殟殠毃毄毾滎滵滱漃漥滸漷滻漮漉潎漙漚漧漘漻漒滭漊"],["e2a1","漶潳滹滮漭潀漰漼漵滫漇漎潃漅滽滶漹漜滼漺漟漍漞漈漡熇熐熉熀熅熂熏煻熆熁熗牄牓犗犕犓獃獍獑獌瑢瑳瑱瑵瑲瑧瑮甀甂甃畽疐瘖瘈瘌瘕瘑瘊瘔皸瞁睼瞅瞂睮瞀睯睾瞃碲碪碴碭碨硾碫碞碥碠碬碢碤禘禊禋禖禕禔禓"],["e340","禗禈禒禐稫穊稰稯稨稦窨窫窬竮箈箜箊箑箐箖箍箌箛箎箅箘劄箙箤箂粻粿粼粺綧綷緂綣綪緁緀緅綝緎緄緆緋緌綯綹綖綼綟綦綮綩綡緉罳翢翣翥翞"],["e3a1","耤聝聜膉膆膃膇膍膌膋舕蒗蒤蒡蒟蒺蓎蓂蒬蒮蒫蒹蒴蓁蓍蒪蒚蒱蓐蒝蒧蒻蒢蒔蓇蓌蒛蒩蒯蒨蓖蒘蒶蓏蒠蓗蓔蓒蓛蒰蒑虡蜳蜣蜨蝫蝀蜮蜞蜡蜙蜛蝃蜬蝁蜾蝆蜠蜲蜪蜭蜼蜒蜺蜱蜵蝂蜦蜧蜸蜤蜚蜰蜑裷裧裱裲裺裾裮裼裶裻"],["e440","裰裬裫覝覡覟覞觩觫觨誫誙誋誒誏誖谽豨豩賕賏賗趖踉踂跿踍跽踊踃踇踆踅跾踀踄輐輑輎輍鄣鄜鄠鄢鄟鄝鄚鄤鄡鄛酺酲酹酳銥銤鉶銛鉺銠銔銪銍"],["e4a1","銦銚銫鉹銗鉿銣鋮銎銂銕銢鉽銈銡銊銆銌銙銧鉾銇銩銝銋鈭隞隡雿靘靽靺靾鞃鞀鞂靻鞄鞁靿韎韍頖颭颮餂餀餇馝馜駃馹馻馺駂馽駇骱髣髧鬾鬿魠魡魟鳱鳲鳵麧僿儃儰僸儆儇僶僾儋儌僽儊劋劌勱勯噈噂噌嘵噁噊噉噆噘"],["e540","噚噀嘳嘽嘬嘾嘸嘪嘺圚墫墝墱墠墣墯墬墥墡壿嫿嫴嫽嫷嫶嬃嫸嬂嫹嬁嬇嬅嬏屧嶙嶗嶟嶒嶢嶓嶕嶠嶜嶡嶚嶞幩幝幠幜緳廛廞廡彉徲憋憃慹憱憰憢憉"],["e5a1","憛憓憯憭憟憒憪憡憍慦憳戭摮摰撖撠撅撗撜撏撋撊撌撣撟摨撱撘敶敺敹敻斲斳暵暰暩暲暷暪暯樀樆樗槥槸樕槱槤樠槿槬槢樛樝槾樧槲槮樔槷槧橀樈槦槻樍槼槫樉樄樘樥樏槶樦樇槴樖歑殥殣殢殦氁氀毿氂潁漦潾澇濆澒"],["e640","澍澉澌潢潏澅潚澖潶潬澂潕潲潒潐潗澔澓潝漀潡潫潽潧澐潓澋潩潿澕潣潷潪潻熲熯熛熰熠熚熩熵熝熥熞熤熡熪熜熧熳犘犚獘獒獞獟獠獝獛獡獚獙"],["e6a1","獢璇璉璊璆璁瑽璅璈瑼瑹甈甇畾瘥瘞瘙瘝瘜瘣瘚瘨瘛皜皝皞皛瞍瞏瞉瞈磍碻磏磌磑磎磔磈磃磄磉禚禡禠禜禢禛歶稹窲窴窳箷篋箾箬篎箯箹篊箵糅糈糌糋緷緛緪緧緗緡縃緺緦緶緱緰緮緟罶羬羰羭翭翫翪翬翦翨聤聧膣膟"],["e740","膞膕膢膙膗舖艏艓艒艐艎艑蔤蔻蔏蔀蔩蔎蔉蔍蔟蔊蔧蔜蓻蔫蓺蔈蔌蓴蔪蓲蔕蓷蓫蓳蓼蔒蓪蓩蔖蓾蔨蔝蔮蔂蓽蔞蓶蔱蔦蓧蓨蓰蓯蓹蔘蔠蔰蔋蔙蔯虢"],["e7a1","蝖蝣蝤蝷蟡蝳蝘蝔蝛蝒蝡蝚蝑蝞蝭蝪蝐蝎蝟蝝蝯蝬蝺蝮蝜蝥蝏蝻蝵蝢蝧蝩衚褅褌褔褋褗褘褙褆褖褑褎褉覢覤覣觭觰觬諏諆誸諓諑諔諕誻諗誾諀諅諘諃誺誽諙谾豍貏賥賟賙賨賚賝賧趠趜趡趛踠踣踥踤踮踕踛踖踑踙踦踧"],["e840","踔踒踘踓踜踗踚輬輤輘輚輠輣輖輗遳遰遯遧遫鄯鄫鄩鄪鄲鄦鄮醅醆醊醁醂醄醀鋐鋃鋄鋀鋙銶鋏鋱鋟鋘鋩鋗鋝鋌鋯鋂鋨鋊鋈鋎鋦鋍鋕鋉鋠鋞鋧鋑鋓"],["e8a1","銵鋡鋆銴镼閬閫閮閰隤隢雓霅霈霂靚鞊鞎鞈韐韏頞頝頦頩頨頠頛頧颲餈飺餑餔餖餗餕駜駍駏駓駔駎駉駖駘駋駗駌骳髬髫髳髲髱魆魃魧魴魱魦魶魵魰魨魤魬鳼鳺鳽鳿鳷鴇鴀鳹鳻鴈鴅鴄麃黓鼏鼐儜儓儗儚儑凞匴叡噰噠噮"],["e940","噳噦噣噭噲噞噷圜圛壈墽壉墿墺壂墼壆嬗嬙嬛嬡嬔嬓嬐嬖嬨嬚嬠嬞寯嶬嶱嶩嶧嶵嶰嶮嶪嶨嶲嶭嶯嶴幧幨幦幯廩廧廦廨廥彋徼憝憨憖懅憴懆懁懌憺"],["e9a1","憿憸憌擗擖擐擏擉撽撉擃擛擳擙攳敿敼斢曈暾曀曊曋曏暽暻暺曌朣樴橦橉橧樲橨樾橝橭橶橛橑樨橚樻樿橁橪橤橐橏橔橯橩橠樼橞橖橕橍橎橆歕歔歖殧殪殫毈毇氄氃氆澭濋澣濇澼濎濈潞濄澽澞濊澨瀄澥澮澺澬澪濏澿澸"],["ea40","澢濉澫濍澯澲澰燅燂熿熸燖燀燁燋燔燊燇燏熽燘熼燆燚燛犝犞獩獦獧獬獥獫獪瑿璚璠璔璒璕璡甋疀瘯瘭瘱瘽瘳瘼瘵瘲瘰皻盦瞚瞝瞡瞜瞛瞢瞣瞕瞙"],["eaa1","瞗磝磩磥磪磞磣磛磡磢磭磟磠禤穄穈穇窶窸窵窱窷篞篣篧篝篕篥篚篨篹篔篪篢篜篫篘篟糒糔糗糐糑縒縡縗縌縟縠縓縎縜縕縚縢縋縏縖縍縔縥縤罃罻罼罺羱翯耪耩聬膱膦膮膹膵膫膰膬膴膲膷膧臲艕艖艗蕖蕅蕫蕍蕓蕡蕘"],["eb40","蕀蕆蕤蕁蕢蕄蕑蕇蕣蔾蕛蕱蕎蕮蕵蕕蕧蕠薌蕦蕝蕔蕥蕬虣虥虤螛螏螗螓螒螈螁螖螘蝹螇螣螅螐螑螝螄螔螜螚螉褞褦褰褭褮褧褱褢褩褣褯褬褟觱諠"],["eba1","諢諲諴諵諝謔諤諟諰諈諞諡諨諿諯諻貑貒貐賵賮賱賰賳赬赮趥趧踳踾踸蹀蹅踶踼踽蹁踰踿躽輶輮輵輲輹輷輴遶遹遻邆郺鄳鄵鄶醓醐醑醍醏錧錞錈錟錆錏鍺錸錼錛錣錒錁鍆錭錎錍鋋錝鋺錥錓鋹鋷錴錂錤鋿錩錹錵錪錔錌"],["ec40","錋鋾錉錀鋻錖閼闍閾閹閺閶閿閵閽隩雔霋霒霐鞙鞗鞔韰韸頵頯頲餤餟餧餩馞駮駬駥駤駰駣駪駩駧骹骿骴骻髶髺髹髷鬳鮀鮅鮇魼魾魻鮂鮓鮒鮐魺鮕"],["eca1","魽鮈鴥鴗鴠鴞鴔鴩鴝鴘鴢鴐鴙鴟麈麆麇麮麭黕黖黺鼒鼽儦儥儢儤儠儩勴嚓嚌嚍嚆嚄嚃噾嚂噿嚁壖壔壏壒嬭嬥嬲嬣嬬嬧嬦嬯嬮孻寱寲嶷幬幪徾徻懃憵憼懧懠懥懤懨懞擯擩擣擫擤擨斁斀斶旚曒檍檖檁檥檉檟檛檡檞檇檓檎"],["ed40","檕檃檨檤檑橿檦檚檅檌檒歛殭氉濌澩濴濔濣濜濭濧濦濞濲濝濢濨燡燱燨燲燤燰燢獳獮獯璗璲璫璐璪璭璱璥璯甐甑甒甏疄癃癈癉癇皤盩瞵瞫瞲瞷瞶"],["eda1","瞴瞱瞨矰磳磽礂磻磼磲礅磹磾礄禫禨穜穛穖穘穔穚窾竀竁簅簏篲簀篿篻簎篴簋篳簂簉簃簁篸篽簆篰篱簐簊糨縭縼繂縳顈縸縪繉繀繇縩繌縰縻縶繄縺罅罿罾罽翴翲耬膻臄臌臊臅臇膼臩艛艚艜薃薀薏薧薕薠薋薣蕻薤薚薞"],["ee40","蕷蕼薉薡蕺蕸蕗薎薖薆薍薙薝薁薢薂薈薅蕹蕶薘薐薟虨螾螪螭蟅螰螬螹螵螼螮蟉蟃蟂蟌螷螯蟄蟊螴螶螿螸螽蟞螲褵褳褼褾襁襒褷襂覭覯覮觲觳謞"],["eea1","謘謖謑謅謋謢謏謒謕謇謍謈謆謜謓謚豏豰豲豱豯貕貔賹赯蹎蹍蹓蹐蹌蹇轃轀邅遾鄸醚醢醛醙醟醡醝醠鎡鎃鎯鍤鍖鍇鍼鍘鍜鍶鍉鍐鍑鍠鍭鎏鍌鍪鍹鍗鍕鍒鍏鍱鍷鍻鍡鍞鍣鍧鎀鍎鍙闇闀闉闃闅閷隮隰隬霠霟霘霝霙鞚鞡鞜"],["ef40","鞞鞝韕韔韱顁顄顊顉顅顃餥餫餬餪餳餲餯餭餱餰馘馣馡騂駺駴駷駹駸駶駻駽駾駼騃骾髾髽鬁髼魈鮚鮨鮞鮛鮦鮡鮥鮤鮆鮢鮠鮯鴳鵁鵧鴶鴮鴯鴱鴸鴰"],["efa1","鵅鵂鵃鴾鴷鵀鴽翵鴭麊麉麍麰黈黚黻黿鼤鼣鼢齔龠儱儭儮嚘嚜嚗嚚嚝嚙奰嬼屩屪巀幭幮懘懟懭懮懱懪懰懫懖懩擿攄擽擸攁攃擼斔旛曚曛曘櫅檹檽櫡櫆檺檶檷櫇檴檭歞毉氋瀇瀌瀍瀁瀅瀔瀎濿瀀濻瀦濼濷瀊爁燿燹爃燽獶"],["f040","璸瓀璵瓁璾璶璻瓂甔甓癜癤癙癐癓癗癚皦皽盬矂瞺磿礌礓礔礉礐礒礑禭禬穟簜簩簙簠簟簭簝簦簨簢簥簰繜繐繖繣繘繢繟繑繠繗繓羵羳翷翸聵臑臒"],["f0a1","臐艟艞薴藆藀藃藂薳薵薽藇藄薿藋藎藈藅薱薶藒蘤薸薷薾虩蟧蟦蟢蟛蟫蟪蟥蟟蟳蟤蟔蟜蟓蟭蟘蟣螤蟗蟙蠁蟴蟨蟝襓襋襏襌襆襐襑襉謪謧謣謳謰謵譇謯謼謾謱謥謷謦謶謮謤謻謽謺豂豵貙貘貗賾贄贂贀蹜蹢蹠蹗蹖蹞蹥蹧"],["f140","蹛蹚蹡蹝蹩蹔轆轇轈轋鄨鄺鄻鄾醨醥醧醯醪鎵鎌鎒鎷鎛鎝鎉鎧鎎鎪鎞鎦鎕鎈鎙鎟鎍鎱鎑鎲鎤鎨鎴鎣鎥闒闓闑隳雗雚巂雟雘雝霣霢霥鞬鞮鞨鞫鞤鞪"],["f1a1","鞢鞥韗韙韖韘韺顐顑顒颸饁餼餺騏騋騉騍騄騑騊騅騇騆髀髜鬈鬄鬅鬩鬵魊魌魋鯇鯆鯃鮿鯁鮵鮸鯓鮶鯄鮹鮽鵜鵓鵏鵊鵛鵋鵙鵖鵌鵗鵒鵔鵟鵘鵚麎麌黟鼁鼀鼖鼥鼫鼪鼩鼨齌齕儴儵劖勷厴嚫嚭嚦嚧嚪嚬壚壝壛夒嬽嬾嬿巃幰"],["f240","徿懻攇攐攍攉攌攎斄旞旝曞櫧櫠櫌櫑櫙櫋櫟櫜櫐櫫櫏櫍櫞歠殰氌瀙瀧瀠瀖瀫瀡瀢瀣瀩瀗瀤瀜瀪爌爊爇爂爅犥犦犤犣犡瓋瓅璷瓃甖癠矉矊矄矱礝礛"],["f2a1","礡礜礗礞禰穧穨簳簼簹簬簻糬糪繶繵繸繰繷繯繺繲繴繨罋罊羃羆羷翽翾聸臗臕艤艡艣藫藱藭藙藡藨藚藗藬藲藸藘藟藣藜藑藰藦藯藞藢蠀蟺蠃蟶蟷蠉蠌蠋蠆蟼蠈蟿蠊蠂襢襚襛襗襡襜襘襝襙覈覷覶觶譐譈譊譀譓譖譔譋譕"],["f340","譑譂譒譗豃豷豶貚贆贇贉趬趪趭趫蹭蹸蹳蹪蹯蹻軂轒轑轏轐轓辴酀鄿醰醭鏞鏇鏏鏂鏚鏐鏹鏬鏌鏙鎩鏦鏊鏔鏮鏣鏕鏄鏎鏀鏒鏧镽闚闛雡霩霫霬霨霦"],["f3a1","鞳鞷鞶韝韞韟顜顙顝顗颿颽颻颾饈饇饃馦馧騚騕騥騝騤騛騢騠騧騣騞騜騔髂鬋鬊鬎鬌鬷鯪鯫鯠鯞鯤鯦鯢鯰鯔鯗鯬鯜鯙鯥鯕鯡鯚鵷鶁鶊鶄鶈鵱鶀鵸鶆鶋鶌鵽鵫鵴鵵鵰鵩鶅鵳鵻鶂鵯鵹鵿鶇鵨麔麑黀黼鼭齀齁齍齖齗齘匷嚲"],["f440","嚵嚳壣孅巆巇廮廯忀忁懹攗攖攕攓旟曨曣曤櫳櫰櫪櫨櫹櫱櫮櫯瀼瀵瀯瀷瀴瀱灂瀸瀿瀺瀹灀瀻瀳灁爓爔犨獽獼璺皫皪皾盭矌矎矏矍矲礥礣礧礨礤礩"],["f4a1","禲穮穬穭竷籉籈籊籇籅糮繻繾纁纀羺翿聹臛臙舋艨艩蘢藿蘁藾蘛蘀藶蘄蘉蘅蘌藽蠙蠐蠑蠗蠓蠖襣襦覹觷譠譪譝譨譣譥譧譭趮躆躈躄轙轖轗轕轘轚邍酃酁醷醵醲醳鐋鐓鏻鐠鐏鐔鏾鐕鐐鐨鐙鐍鏵鐀鏷鐇鐎鐖鐒鏺鐉鏸鐊鏿"],["f540","鏼鐌鏶鐑鐆闞闠闟霮霯鞹鞻韽韾顠顢顣顟飁飂饐饎饙饌饋饓騲騴騱騬騪騶騩騮騸騭髇髊髆鬐鬒鬑鰋鰈鯷鰅鰒鯸鱀鰇鰎鰆鰗鰔鰉鶟鶙鶤鶝鶒鶘鶐鶛"],["f5a1","鶠鶔鶜鶪鶗鶡鶚鶢鶨鶞鶣鶿鶩鶖鶦鶧麙麛麚黥黤黧黦鼰鼮齛齠齞齝齙龑儺儹劘劗囃嚽嚾孈孇巋巏廱懽攛欂櫼欃櫸欀灃灄灊灈灉灅灆爝爚爙獾甗癪矐礭礱礯籔籓糲纊纇纈纋纆纍罍羻耰臝蘘蘪蘦蘟蘣蘜蘙蘧蘮蘡蘠蘩蘞蘥"],["f640","蠩蠝蠛蠠蠤蠜蠫衊襭襩襮襫觺譹譸譅譺譻贐贔趯躎躌轞轛轝酆酄酅醹鐿鐻鐶鐩鐽鐼鐰鐹鐪鐷鐬鑀鐱闥闤闣霵霺鞿韡顤飉飆飀饘饖騹騽驆驄驂驁騺"],["f6a1","騿髍鬕鬗鬘鬖鬺魒鰫鰝鰜鰬鰣鰨鰩鰤鰡鶷鶶鶼鷁鷇鷊鷏鶾鷅鷃鶻鶵鷎鶹鶺鶬鷈鶱鶭鷌鶳鷍鶲鹺麜黫黮黭鼛鼘鼚鼱齎齥齤龒亹囆囅囋奱孋孌巕巑廲攡攠攦攢欋欈欉氍灕灖灗灒爞爟犩獿瓘瓕瓙瓗癭皭礵禴穰穱籗籜籙籛籚"],["f740","糴糱纑罏羇臞艫蘴蘵蘳蘬蘲蘶蠬蠨蠦蠪蠥襱覿覾觻譾讄讂讆讅譿贕躕躔躚躒躐躖躗轠轢酇鑌鑐鑊鑋鑏鑇鑅鑈鑉鑆霿韣顪顩飋饔饛驎驓驔驌驏驈驊"],["f7a1","驉驒驐髐鬙鬫鬻魖魕鱆鱈鰿鱄鰹鰳鱁鰼鰷鰴鰲鰽鰶鷛鷒鷞鷚鷋鷐鷜鷑鷟鷩鷙鷘鷖鷵鷕鷝麶黰鼵鼳鼲齂齫龕龢儽劙壨壧奲孍巘蠯彏戁戃戄攩攥斖曫欑欒欏毊灛灚爢玂玁玃癰矔籧籦纕艬蘺虀蘹蘼蘱蘻蘾蠰蠲蠮蠳襶襴襳觾"],["f840","讌讎讋讈豅贙躘轤轣醼鑢鑕鑝鑗鑞韄韅頀驖驙鬞鬟鬠鱒鱘鱐鱊鱍鱋鱕鱙鱌鱎鷻鷷鷯鷣鷫鷸鷤鷶鷡鷮鷦鷲鷰鷢鷬鷴鷳鷨鷭黂黐黲黳鼆鼜鼸鼷鼶齃齏"],["f8a1","齱齰齮齯囓囍孎屭攭曭曮欓灟灡灝灠爣瓛瓥矕礸禷禶籪纗羉艭虃蠸蠷蠵衋讔讕躞躟躠躝醾醽釂鑫鑨鑩雥靆靃靇韇韥驞髕魙鱣鱧鱦鱢鱞鱠鸂鷾鸇鸃鸆鸅鸀鸁鸉鷿鷽鸄麠鼞齆齴齵齶囔攮斸欘欙欗欚灢爦犪矘矙礹籩籫糶纚"],["f940","纘纛纙臠臡虆虇虈襹襺襼襻觿讘讙躥躤躣鑮鑭鑯鑱鑳靉顲饟鱨鱮鱭鸋鸍鸐鸏鸒鸑麡黵鼉齇齸齻齺齹圞灦籯蠼趲躦釃鑴鑸鑶鑵驠鱴鱳鱱鱵鸔鸓黶鼊"],["f9a1","龤灨灥糷虪蠾蠽蠿讞貜躩軉靋顳顴飌饡馫驤驦驧鬤鸕鸗齈戇欞爧虌躨钂钀钁驩驨鬮鸙爩虋讟钃鱹麷癵驫鱺鸝灩灪麤齾齉龘碁銹裏墻恒粧嫺╔╦╗╠╬╣╚╩╝╒╤╕╞╪╡╘╧╛╓╥╖╟╫╢╙╨╜║═╭╮╰╯▓"]]},function(e,t,n){"use strict";
/*!
 * unpipe
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e){if(!e)throw new TypeError("argument stream is required");if("function"==typeof e.unpipe)return void e.unpipe();if(!function(e){for(var t=e.listeners("data"),n=0;n<t.length;n++)if("ondata"===t[n].name)return!0;return!1}(e))return;for(var t,n=e.listeners("close"),i=0;i<n.length;i++)"cleanup"!==(t=n[i]).name&&"onclose"!==t.name||t.call(e)}},function(e,t,n){"use strict";
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i,a,o,r=n(110),s=n(0).extname,c=/^\s*([^;\s]*)(?:;|\s|$)/,p=/^text\//i;function l(e){if(!e||"string"!=typeof e)return!1;var t=c.exec(e),n=t&&r[t[1].toLowerCase()];return n&&n.charset?n.charset:!(!t||!p.test(t[1]))&&"UTF-8"}t.charset=l,t.charsets={lookup:l},t.contentType=function(e){if(!e||"string"!=typeof e)return!1;var n=-1===e.indexOf("/")?t.lookup(e):e;if(!n)return!1;if(-1===n.indexOf("charset")){var i=t.charset(n);i&&(n+="; charset="+i.toLowerCase())}return n},t.extension=function(e){if(!e||"string"!=typeof e)return!1;var n=c.exec(e),i=n&&t.extensions[n[1].toLowerCase()];if(!i||!i.length)return!1;return i[0]},t.extensions=Object.create(null),t.lookup=function(e){if(!e||"string"!=typeof e)return!1;var n=s("x."+e).toLowerCase().substr(1);if(!n)return!1;return t.types[n]||!1},t.types=Object.create(null),i=t.extensions,a=t.types,o=["nginx","apache",void 0,"iana"],Object.keys(r).forEach(function(e){var t=r[e],n=t.extensions;if(n&&n.length){i[e]=n;for(var s=0;s<n.length;s++){var c=n[s];if(a[c]){var p=o.indexOf(r[a[c]].source),l=o.indexOf(t.source);if("application/octet-stream"!==a[c]&&(p>l||p===l&&"application/"===a[c].substr(0,12)))continue}a[c]=e}}})},function(e,t,n){"use strict";var i=Object.prototype.hasOwnProperty,a=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),o=function(e,t){for(var n=t&&t.plainObjects?Object.create(null):{},i=0;i<e.length;++i)void 0!==e[i]&&(n[i]=e[i]);return n};e.exports={arrayToObject:o,assign:function(e,t){return Object.keys(t).reduce(function(e,n){return e[n]=t[n],e},e)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],n=[],i=0;i<t.length;++i)for(var a=t[i],o=a.obj[a.prop],r=Object.keys(o),s=0;s<r.length;++s){var c=r[s],p=o[c];"object"==typeof p&&null!==p&&-1===n.indexOf(p)&&(t.push({obj:o,prop:c}),n.push(p))}return function(e){for(var t;e.length;){var n=e.pop();if(t=n.obj[n.prop],Array.isArray(t)){for(var i=[],a=0;a<t.length;++a)void 0!==t[a]&&i.push(t[a]);n.obj[n.prop]=i}}return t}(t)},decode:function(e){try{return decodeURIComponent(e.replace(/\+/g," "))}catch(t){return e}},encode:function(e){if(0===e.length)return e;for(var t="string"==typeof e?e:String(e),n="",i=0;i<t.length;++i){var o=t.charCodeAt(i);45===o||46===o||95===o||126===o||o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122?n+=t.charAt(i):o<128?n+=a[o]:o<2048?n+=a[192|o>>6]+a[128|63&o]:o<55296||o>=57344?n+=a[224|o>>12]+a[128|o>>6&63]+a[128|63&o]:(i+=1,o=65536+((1023&o)<<10|1023&t.charCodeAt(i)),n+=a[240|o>>18]+a[128|o>>12&63]+a[128|o>>6&63]+a[128|63&o])}return n},isBuffer:function(e){return null!=e&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},merge:function e(t,n,a){if(!n)return t;if("object"!=typeof n){if(Array.isArray(t))t.push(n);else{if("object"!=typeof t)return[t,n];(a.plainObjects||a.allowPrototypes||!i.call(Object.prototype,n))&&(t[n]=!0)}return t}if("object"!=typeof t)return[t].concat(n);var r=t;return Array.isArray(t)&&!Array.isArray(n)&&(r=o(t,a)),Array.isArray(t)&&Array.isArray(n)?(n.forEach(function(n,o){i.call(t,o)?t[o]&&"object"==typeof t[o]?t[o]=e(t[o],n,a):t.push(n):t[o]=n}),t):Object.keys(n).reduce(function(t,o){var r=n[o];return i.call(t,o)?t[o]=e(t[o],r,a):t[o]=r,t},r)}}},function(e,t,n){"use strict";var i=String.prototype.replace,a=/%20/g;e.exports={default:"RFC3986",formatters:{RFC1738:function(e){return i.call(e,a,"+")},RFC3986:function(e){return e}},RFC1738:"RFC1738",RFC3986:"RFC3986"}},function(e,t){e.exports=require("querystring")},function(e,t,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(49),a=n(50),o=n(31),r=n(22),s=n(1)("express:router"),c=n(3)("express"),p=n(21),l=n(14),u=n(16),d=/^\[object (\S+)\]$/,m=Array.prototype.slice,f=Object.prototype.toString,h=e.exports=function(e){var t=e||{};function n(e,t,i){n.handle(e,t,i)}return u(n,h),n.params={},n._params=[],n.caseSensitive=t.caseSensitive,n.mergeParams=t.mergeParams,n.strict=t.strict,n.stack=[],n};function v(e,t){for(var n=0;n<t.length;n++){var i=t[n];-1===e.indexOf(i)&&e.push(i)}}function x(e){var t=typeof e;return"object"!==t?t:f.call(e).replace(d,"$1")}function g(e,t){try{return e.match(t)}catch(e){return e}}h.param=function(e,t){if("function"==typeof e)return c("router.param(fn): Refactor to use path params"),void this._params.push(e);var n,i=this._params,a=i.length;":"===e[0]&&(c("router.param("+JSON.stringify(e)+", fn): Use router.param("+JSON.stringify(e.substr(1))+", fn) instead"),e=e.substr(1));for(var o=0;o<a;++o)(n=i[o](e,t))&&(t=n);if("function"!=typeof t)throw new Error("invalid param() call for "+e+", got "+t);return(this.params[e]=this.params[e]||[]).push(t),this},h.handle=function(e,t,n){var i=this;s("dispatching %s %s",e.method,e.url);var a,o,c=0,p=function(e){if("string"!=typeof e||0===e.length||"/"===e[0])return;var t=e.indexOf("?"),n=-1!==t?t:e.length,i=e.substr(0,n).indexOf("://");return-1!==i?e.substr(0,e.indexOf("/",3+i)):void 0}(e.url)||"",u="",d=!1,m={},f=[],h=i.stack,x=e.params,b=e.baseUrl||"",y=function(e,t){for(var n=new Array(arguments.length-2),i=new Array(arguments.length-2),a=0;a<n.length;a++)n[a]=arguments[a+2],i[a]=t[n[a]];return function(){for(var a=0;a<n.length;a++)t[n[a]]=i[a];return e.apply(this,arguments)}}(n,e,"baseUrl","next","params");function w(n){var a="route"===n?null:n;if(d&&(e.url=e.url.substr(1),d=!1),0!==u.length&&(e.baseUrl=b,e.url=p+u+e.url.substr(p.length),u=""),"router"!==a)if(c>=h.length)setImmediate(y,a);else{var o,k,_,j=function(e){try{return l(e).pathname}catch(e){return}}(e);if(null==j)return y(a);for(;!0!==k&&c<h.length;)if(k=g(o=h[c++],j),_=o.route,"boolean"!=typeof k&&(a=a||k),!0===k&&_)if(a)k=!1;else{var E=e.method,S=_._handles_method(E);S||"OPTIONS"!==E||v(f,_._options()),S||"HEAD"===E||(k=!1)}if(!0!==k)return y(a);_&&(e.route=_),e.params=i.mergeParams?function(e,t){if("object"!=typeof t||!t)return e;var n=r({},t);if(!(0 in e&&0 in t))return r(n,e);var i=0,a=0;for(;i in e;)i++;for(;a in t;)a++;for(i--;i>=0;i--)e[i+a]=e[i],i<a&&delete e[i];return r(n,e)}(o.params,x):o.params;var C=o.path;i.process_params(o,m,e,t,function(n){return n?w(a||n):_?o.handle_request(e,t,w):void function(n,i,a,o){if(0!==a.length){var r=o[a.length];if(r&&"/"!==r&&"."!==r)return w(i);s("trim prefix (%s) from url %s",a,e.url),u=a,e.url=p+e.url.substr(p.length+u.length),p||"/"===e.url[0]||(e.url="/"+e.url,d=!0),e.baseUrl=b+("/"===u[u.length-1]?u.substring(0,u.length-1):u)}s("%s %s : %s",n.name,a,e.originalUrl),i?n.handle_error(i,e,t,w):n.handle_request(e,t,w)}(o,a,C,j)})}else setImmediate(y,null)}e.next=w,"OPTIONS"===e.method&&(a=y,o=function(e,n){if(n||0===f.length)return e(n);!function(e,t,n){try{var i=t.join(",");e.set("Allow",i),e.send(i)}catch(e){n(e)}}(t,f,e)},y=function(){var e=new Array(arguments.length+1);e[0]=a;for(var t=0,n=arguments.length;t<n;t++)e[t+1]=arguments[t];o.apply(this,e)}),e.baseUrl=b,e.originalUrl=e.originalUrl||e.url,w()},h.process_params=function(e,t,n,i,a){var o=this.params,r=e.keys;if(!r||0===r.length)return a();var s,c,p,l,u,d=0,m=0;function f(e){return e?a(e):d>=r.length?a():(m=0,c=r[d++],s=c.name,p=n.params[s],l=o[s],u=t[s],void 0!==p&&l?u&&(u.match===p||u.error&&"route"!==u.error)?(n.params[s]=u.value,f(u.error)):(t[s]=u={error:null,match:p,value:p},void h()):f())}function h(e){var t=l[m++];if(u.value=n.params[c.name],e)return u.error=e,void f(e);if(!t)return f();try{t(n,i,h,p,c.name)}catch(e){h(e)}}f()},h.use=function(e){var t=0,n="/";if("function"!=typeof e){for(var i=e;Array.isArray(i)&&0!==i.length;)i=i[0];"function"!=typeof i&&(t=1,n=e)}var o=p(m.call(arguments,t));if(0===o.length)throw new TypeError("Router.use() requires a middleware function");for(var r=0;r<o.length;r++){if("function"!=typeof(e=o[r]))throw new TypeError("Router.use() requires a middleware function but got a "+x(e));s("use %o %s",n,e.name||"<anonymous>");var c=new a(n,{sensitive:this.caseSensitive,strict:!1,end:!1},e);c.route=void 0,this.stack.push(c)}return this},h.route=function(e){var t=new i(e),n=new a(e,{sensitive:this.caseSensitive,strict:this.strict,end:!0},t.dispatch.bind(t));return n.route=t,this.stack.push(n),t},o.concat("all").forEach(function(e){h[e]=function(t){var n=this.route(t);return n[e].apply(n,m.call(arguments,1)),this}})},function(e,t,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(1)("express:router:route"),a=n(21),o=n(50),r=n(31),s=Array.prototype.slice,c=Object.prototype.toString;function p(e){this.path=e,this.stack=[],i("new %o",e),this.methods={}}e.exports=p,p.prototype._handles_method=function(e){if(this.methods._all)return!0;var t=e.toLowerCase();return"head"!==t||this.methods.head||(t="get"),Boolean(this.methods[t])},p.prototype._options=function(){var e=Object.keys(this.methods);this.methods.get&&!this.methods.head&&e.push("head");for(var t=0;t<e.length;t++)e[t]=e[t].toUpperCase();return e},p.prototype.dispatch=function(e,t,n){var i=0,a=this.stack;if(0===a.length)return n();var o=e.method.toLowerCase();"head"!==o||this.methods.head||(o="get"),e.route=this,function r(s){if(s&&"route"===s)return n();if(s&&"router"===s)return n(s);var c=a[i++];if(!c)return n(s);if(c.method&&c.method!==o)return r(s);s?c.handle_error(s,e,t,r):c.handle_request(e,t,r)}()},p.prototype.all=function(){for(var e=a(s.call(arguments)),t=0;t<e.length;t++){var n=e[t];if("function"!=typeof n){var i=c.call(n);throw new TypeError("Route.all() requires a callback function but got a "+i)}var r=o("/",{},n);r.method=void 0,this.methods._all=!0,this.stack.push(r)}return this},r.forEach(function(e){p.prototype[e]=function(){for(var t=a(s.call(arguments)),n=0;n<t.length;n++){var r=t[n];if("function"!=typeof r){var p=c.call(r);throw new Error("Route."+e+"() requires a callback function but got a "+p)}i("%s %o",e,this.path);var l=o("/",{},r);l.method=e,this.methods[e]=!0,this.stack.push(l)}return this}})},function(e,t,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(121),a=n(1)("express:router:layer"),o=Object.prototype.hasOwnProperty;function r(e,t,n){if(!(this instanceof r))return new r(e,t,n);a("new %o",e);var o=t||{};this.handle=n,this.name=n.name||"<anonymous>",this.params=void 0,this.path=void 0,this.regexp=i(e,this.keys=[],o),this.regexp.fast_star="*"===e,this.regexp.fast_slash="/"===e&&!1===o.end}function s(e){if("string"!=typeof e||0===e.length)return e;try{return decodeURIComponent(e)}catch(t){throw t instanceof URIError&&(t.message="Failed to decode param '"+e+"'",t.status=t.statusCode=400),t}}e.exports=r,r.prototype.handle_error=function(e,t,n,i){var a=this.handle;if(4!==a.length)return i(e);try{a(e,t,n,i)}catch(e){i(e)}},r.prototype.handle_request=function(e,t,n){var i=this.handle;if(i.length>3)return n();try{i(e,t,n)}catch(e){n(e)}},r.prototype.match=function(e){var t;if(null!=e){if(this.regexp.fast_slash)return this.params={},this.path="",!0;if(this.regexp.fast_star)return this.params={0:s(e)},this.path=e,!0;t=this.regexp.exec(e)}if(!t)return this.params=void 0,this.path=void 0,!1;this.params={},this.path=t[0];for(var n=this.keys,i=this.params,a=1;a<t.length;a++){var r=n[a-1].name,c=s(t[a]);void 0===c&&o.call(i,r)||(i[r]=c)}return!0}},function(e,t,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(22),a=n(14),o=n(28);e.exports=function(e){var t=i({},e),n=o.parse;return"function"==typeof e&&(n=e,t=void 0),void 0!==t&&void 0===t.allowPrototypes&&(t.allowPrototypes=!0),function(e,i,o){if(!e.query){var r=a(e).query;e.query=n(r,t)}o()}}},function(e,t,n){"use strict";
/*!
 * content-disposition
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,t){var n=t||{},a=n.type||"attachment",r=function(e,t){if(void 0===e)return;var n={};if("string"!=typeof e)throw new TypeError("filename must be a string");void 0===t&&(t=!0);if("string"!=typeof t&&"boolean"!=typeof t)throw new TypeError("fallback must be a string or boolean");if("string"==typeof t&&s.test(t))throw new TypeError("fallback must be ISO-8859-1 string");var a=i(e),r=u.test(a),c="string"!=typeof t?t&&v(a):i(t),p="string"==typeof c&&c!==a;(p||!r||o.test(a))&&(n["filename*"]=a);(r||p)&&(n.filename=p?c:a);return n}(e,n.fallback);return function(e){var t=e.parameters,n=e.type;if(!n||"string"!=typeof n||!d.test(n))throw new TypeError("invalid type");var i=String(n).toLowerCase();if(t&&"object"==typeof t)for(var a,o=Object.keys(t).sort(),r=0;r<o.length;r++){var s="*"===(a=o[r]).substr(-1)?y(t[a]):b(t[a]);i+="; "+a+"="+s}return i}(new w(a,r))},e.exports.parse=function(e){if(!e||"string"!=typeof e)throw new TypeError("argument string is required");var t=f.exec(e);if(!t)throw new TypeError("invalid type format");var n,i,a=t[0].length,o=t[1].toLowerCase(),r=[],s={};a=l.lastIndex=";"===t[0].substr(-1)?a-1:a;for(;t=l.exec(e);){if(t.index!==a)throw new TypeError("invalid parameter format");if(a+=t[0].length,n=t[1].toLowerCase(),i=t[2],-1!==r.indexOf(n))throw new TypeError("invalid duplicate parameter");r.push(n),n.indexOf("*")+1!==n.length?"string"!=typeof s[n]&&('"'===i[0]&&(i=i.substr(1,i.length-2).replace(c,"$1")),s[n]=i):(n=n.slice(0,-1),i=h(i),s[n]=i)}if(-1!==a&&a!==e.length)throw new TypeError("invalid parameter format");return new w(o,s)};var i=n(0).basename,a=/[\x00-\x20"'()*,\/:;<=>?@[\\\]{}\x7f]/g,o=/%[0-9A-Fa-f]{2}/,r=/%([0-9A-Fa-f]{2})/g,s=/[^\x20-\x7e\xa0-\xff]/g,c=/\\([\u0000-\u007f])/g,p=/([\\"])/g,l=/;[\x09\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*=[\x09\x20]*("(?:[\x20!\x23-\x5b\x5d-\x7e\x80-\xff]|\\[\x20-\x7e])*"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*/g,u=/^[\x20-\x7e\x80-\xff]+$/,d=/^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/,m=/^([A-Za-z0-9!#$%&+\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/,f=/^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*(?:$|;)/;function h(e){var t=m.exec(e);if(!t)throw new TypeError("invalid extended field value");var n,i=t[1].toLowerCase(),a=t[2].replace(r,x);switch(i){case"iso-8859-1":n=v(a);break;case"utf-8":n=new Buffer(a,"binary").toString("utf8");break;default:throw new TypeError("unsupported charset in extended field")}return n}function v(e){return String(e).replace(s,"?")}function x(e,t){return String.fromCharCode(parseInt(t,16))}function g(e){var t=String(e).charCodeAt(0).toString(16).toUpperCase();return 1===t.length?"%0"+t:"%"+t}function b(e){return'"'+String(e).replace(p,"\\$1")+'"'}function y(e){var t=String(e);return"UTF-8''"+encodeURIComponent(t).replace(a,g)}function w(e,t){this.type=e,this.parameters=t}},function(e,t,n){"use strict";
/*!
 * etag
 * Copyright(c) 2014-2016 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,t){if(null==e)throw new TypeError("argument entity is required");var n=function(e){if("function"==typeof a&&e instanceof a)return!0;return e&&"object"==typeof e&&"ctime"in e&&"[object Date]"===o.call(e.ctime)&&"mtime"in e&&"[object Date]"===o.call(e.mtime)&&"ino"in e&&"number"==typeof e.ino&&"size"in e&&"number"==typeof e.size}(e),r=t&&"boolean"==typeof t.weak?t.weak:n;if(!n&&"string"!=typeof e&&!Buffer.isBuffer(e))throw new TypeError("argument entity must be string, Buffer, or fs.Stats");var s=n?(c=e,p=c.mtime.getTime().toString(16),'"'+c.size.toString(16)+"-"+p+'"'):function(e){if(0===e.length)return'"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk"';var t=i.createHash("sha1").update(e,"utf8").digest("base64").substring(0,27);return'"'+("string"==typeof e?Buffer.byteLength(e,"utf8"):e.length).toString(16)+"-"+t+'"'}(e);var c,p;return r?"W/"+s:s};var i=n(34),a=n(6).Stats,o=Object.prototype.toString},function(e,t,n){"use strict";
/*!
 * fresh
 * Copyright(c) 2012 TJ Holowaychuk
 * Copyright(c) 2016-2017 Douglas Christopher Wilson
 * MIT Licensed
 */var i=/(?:^|,)\s*?no-cache\s*?(?:,|$)/;function a(e){var t=e&&Date.parse(e);return"number"==typeof t?t:NaN}e.exports=function(e,t){var n=e["if-modified-since"],o=e["if-none-match"];if(!n&&!o)return!1;var r=e["cache-control"];if(r&&i.test(r))return!1;if(o&&"*"!==o){var s=t.etag;if(!s)return!1;for(var c=!0,p=function(e){for(var t=0,n=[],i=0,a=0,o=e.length;a<o;a++)switch(e.charCodeAt(a)){case 32:i===t&&(i=t=a+1);break;case 44:n.push(e.substring(i,t)),i=t=a+1;break;default:t=a+1}return n.push(e.substring(i,t)),n}(o),l=0;l<p.length;l++){var u=p[l];if(u===s||u==="W/"+s||"W/"+u===s){c=!1;break}}if(c)return!1}if(n){var d=t["last-modified"],m=!(d&&a(d)<=a(n));if(m)return!1}return!0}},function(e,t,n){"use strict";
/*!
 * range-parser
 * Copyright(c) 2012-2014 TJ Holowaychuk
 * Copyright(c) 2015-2016 Douglas Christopher Wilson
 * MIT Licensed
 */function i(e,t){return{start:e.start,end:e.end,index:t}}function a(e){return{start:e.start,end:e.end}}function o(e,t){return e.index-t.index}function r(e,t){return e.start-t.start}e.exports=function(e,t,n){var s=t.indexOf("=");if(-1===s)return-2;var c=t.slice(s+1).split(","),p=[];p.type=t.slice(0,s);for(var l=0;l<c.length;l++){var u=c[l].split("-"),d=parseInt(u[0],10),m=parseInt(u[1],10);isNaN(d)?(d=e-m,m=e-1):isNaN(m)&&(m=e-1),m>e-1&&(m=e-1),isNaN(d)||isNaN(m)||d>m||d<0||p.push({start:d,end:m})}if(p.length<1)return-1;return n&&n.combine?function(e){for(var t=e.map(i).sort(r),n=0,s=1;s<t.length;s++){var c=t[s],p=t[n];c.start>p.end+1?t[++n]=c:c.end>p.end&&(p.end=c.end,p.index=Math.min(p.index,c.index))}t.length=n+1;var l=t.sort(o).map(a);return l.type=e.type,l}(p):p}},function(e,t,n){"use strict";
/*!
 * proxy-addr
 * Copyright(c) 2014-2016 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,t){if(!e)throw new TypeError("req argument is required");if(!t)throw new TypeError("trust argument is required");var n=p(e,t);return n[n.length-1]},e.exports.all=p,e.exports.compile=l;var i=n(128),a=n(129),o=/^[0-9]+$/,r=a.isValid,s=a.parse,c={linklocal:["169.254.0.0/16","fe80::/10"],loopback:["127.0.0.1/8","::1/128"],uniquelocal:["10.0.0.0/8","172.16.0.0/12","192.168.0.0/16","fc00::/7"]};function p(e,t){var n=i(e);if(!t)return n;"function"!=typeof t&&(t=l(t));for(var a=0;a<n.length-1;a++)t(n[a],a)||(n.length=a+1);return n}function l(e){if(!e)throw new TypeError("argument is required");var t,n,i,a,o,p,l,m,f;if("string"==typeof e)t=[e];else{if(!Array.isArray(e))throw new TypeError("unsupported trust argument");t=e.slice()}for(var h=0;h<t.length;h++)e=t[h],c.hasOwnProperty(e)&&(e=c[e],t.splice.apply(t,[h,1].concat(e)),h+=e.length-1);return n=function(e){for(var t=new Array(e.length),n=0;n<e.length;n++)t[n]=u(e[n]);return t}(t),0===(i=n.length)?d:1===i?(o=n[0],p=o[0],l=p.kind(),m="ipv4"===l,f=o[1],function(e){if(!r(e))return!1;var t=s(e),n=t.kind();if(n!==l){if(m&&!t.isIPv4MappedAddress())return!1;t=m?t.toIPv4Address():t.toIPv4MappedAddress()}return t.match(p,f)}):(a=n,function(e){if(!r(e))return!1;for(var t,n=s(e),i=n.kind(),o=0;o<a.length;o++){var c=a[o],p=c[0],l=p.kind(),u=c[1],d=n;if(i!==l){if("ipv4"===l&&!n.isIPv4MappedAddress())continue;t||(t="ipv4"===l?n.toIPv4Address():n.toIPv4MappedAddress()),d=t}if(d.match(p,u))return!0}return!1})}function u(e){var t=e.lastIndexOf("/"),n=-1!==t?e.substring(0,t):e;if(!r(n))throw new TypeError("invalid IP address: "+n);var i=s(n);-1===t&&"ipv6"===i.kind()&&i.isIPv4MappedAddress()&&(i=i.toIPv4Address());var a="ipv6"===i.kind()?128:32,c=-1!==t?e.substring(t+1,e.length):null;if((c=null===c?a:o.test(c)?parseInt(c,10):"ipv4"===i.kind()&&r(c)?function(e){var t=s(e);return"ipv4"===t.kind()?t.prefixLengthFromSubnetMask():null}(c):null)<=0||c>a)throw new TypeError("invalid range on address: "+e);return[i,c]}function d(){return!1}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){var i=n(34);function a(e){return i.createHash("sha1").update(e).digest("hex")}t.sign=function(e,t){if("string"!=typeof e)throw new TypeError("Cookie value must be provided as a string.");if("string"!=typeof t)throw new TypeError("Secret string must be provided.");return e+"."+i.createHmac("sha256",t).update(e).digest("base64").replace(/\=+$/,"")},t.unsign=function(e,n){if("string"!=typeof e)throw new TypeError("Signed cookie string must be provided.");if("string"!=typeof n)throw new TypeError("Secret string must be provided.");var i=e.slice(0,e.lastIndexOf("."));return a(t.sign(i,n))==a(e)&&i}},function(e,t,n){"use strict";
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */t.parse=function(e,t){if("string"!=typeof e)throw new TypeError("argument str must be a string");for(var n={},a=t||{},r=e.split(o),c=a.decode||i,p=0;p<r.length;p++){var l=r[p],u=l.indexOf("=");if(!(u<0)){var d=l.substr(0,u).trim(),m=l.substr(++u,l.length).trim();'"'==m[0]&&(m=m.slice(1,-1)),null==n[d]&&(n[d]=s(m,c))}}return n},t.serialize=function(e,t,n){var i=n||{},o=i.encode||a;if("function"!=typeof o)throw new TypeError("option encode is invalid");if(!r.test(e))throw new TypeError("argument name is invalid");var s=o(t);if(s&&!r.test(s))throw new TypeError("argument val is invalid");var c=e+"="+s;if(null!=i.maxAge){var p=i.maxAge-0;if(isNaN(p))throw new Error("maxAge should be a Number");c+="; Max-Age="+Math.floor(p)}if(i.domain){if(!r.test(i.domain))throw new TypeError("option domain is invalid");c+="; Domain="+i.domain}if(i.path){if(!r.test(i.path))throw new TypeError("option path is invalid");c+="; Path="+i.path}if(i.expires){if("function"!=typeof i.expires.toUTCString)throw new TypeError("option expires is invalid");c+="; Expires="+i.expires.toUTCString()}i.httpOnly&&(c+="; HttpOnly");i.secure&&(c+="; Secure");if(i.sameSite){var l="string"==typeof i.sameSite?i.sameSite.toLowerCase():i.sameSite;switch(l){case!0:c+="; SameSite=Strict";break;case"lax":c+="; SameSite=Lax";break;case"strict":c+="; SameSite=Strict";break;default:throw new TypeError("option sameSite is invalid")}}return c};var i=decodeURIComponent,a=encodeURIComponent,o=/; */,r=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;function s(e,t){try{return t(e)}catch(t){return e}}},function(e,t,n){"use strict";var i=n(2),a=n(144),o=n(23),r=n(69),s=n(159);var c=function(e){var t,a;this.defaults=o,this.Client=e,this.Query=this.Client.Query,this.Pool=(t=this.Client,a=function(e){var n=Object.assign({Client:t},e);return new s(n)},i.inherits(a,s),a),this._pools=[],this.Connection=r,this.types=n(24)};void 0!==process.env.NODE_PG_FORCE_NATIVE?e.exports=new c(n(70)):(e.exports=new c(a),e.exports.__defineGetter__("native",function(){delete e.exports.native;var t=null;try{t=new c(n(70))}catch(e){if("MODULE_NOT_FOUND"!==e.code)throw e;console.error(e.message)}return e.exports.native=t,t}))},function(e,t,n){"use strict";t.parse=function(e,t){return new i(e,t).parse()};class i{constructor(e,t){this.source=e,this.transform=t||a,this.position=0,this.entries=[],this.recorded=[],this.dimension=0}isEof(){return this.position>=this.source.length}nextCharacter(){var e=this.source[this.position++];return"\\"===e?{value:this.source[this.position++],escaped:!0}:{value:e,escaped:!1}}record(e){this.recorded.push(e)}newEntry(e){var t;(this.recorded.length>0||e)&&("NULL"!==(t=this.recorded.join(""))||e||(t=null),null!==t&&(t=this.transform(t)),this.entries.push(t),this.recorded=[])}consumeDimensions(){if("["===this.source[0])for(;!this.isEof();){if("="===this.nextCharacter().value)break}}parse(e){var t,n,a;for(this.consumeDimensions();!this.isEof();)if("{"!==(t=this.nextCharacter()).value||a){if("}"!==t.value||a)'"'!==t.value||t.escaped?","!==t.value||a?this.record(t.value):this.newEntry():(a&&this.newEntry(!0),a=!a);else if(this.dimension--,!this.dimension&&(this.newEntry(),e))return this.entries}else this.dimension++,this.dimension>1&&(n=new i(this.source.substr(this.position-1),this.transform),this.entries.push(n.parse(!0)),this.position+=n.position-2);if(0!==this.dimension)throw new Error("array dimension not balanced");return this.entries}}function a(e){return e}},function(e,t,n){var i=n(61);e.exports={create:function(e,t){return{parse:function(){return i.parse(e,t)}}}}},function(e,t,n){"use strict";var i=/(\d{1,})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})(\.\d{1,})?/,a=/^(\d{1,})-(\d{2})-(\d{2})$/,o=/([Z+-])(\d{2})?:?(\d{2})?:?(\d{2})?/,r=/BC$/,s=/^-?infinity$/;e.exports=function(e){if(s.test(e))return Number(e.replace("i","I"));var t=i.exec(e);if(!t)return a.test(e)?function(e){var t=a.exec(e),n=parseInt(t[1],10),i=parseInt(t[2],10)-1,o=t[3],r=new Date(n,i,o);return r.setFullYear(n),r}(e):null;var n=r.test(e),c=parseInt(t[1],10),p=c>0&&c<100;c=(n?"-":"")+c;var l,u=parseInt(t[2],10)-1,d=t[3],m=parseInt(t[4],10),f=parseInt(t[5],10),h=parseInt(t[6],10),v=t[7];v=v?1e3*parseFloat(v):0;var x=function(e){var t=o.exec(e.split(" ")[1]);if(!t)return;var n=t[1];if("Z"===n)return 0;var i="-"===n?-1:1;return(3600*parseInt(t[2],10)+60*parseInt(t[3]||0,10)+parseInt(t[4]||0,10))*i*1e3}(e);if(null!=x){var g=Date.UTC(c,u,d,m,f,h,v);l=new Date(g-x)}else l=new Date(c,u,d,m,f,h,v);return p&&l.setUTCFullYear(c),l}},function(e,t,n){"use strict";var i=n(146);function a(e){if(!(this instanceof a))return new a(e);i(this,function(e){if(!e)return{};var t=p.exec(e),n="-"===t[8];return Object.keys(l).reduce(function(e,i){var a,o,r=l[i],s=t[r];return s&&(s="milliseconds"===i?(o=(a=s)+"000000".slice(a.length),parseInt(o,10)/1e3):parseInt(s,10))?(n&&~u.indexOf(i)&&(s*=-1),e[i]=s,e):e},{})}(e))}e.exports=a;var o=["seconds","minutes","hours","days","months","years"];a.prototype.toPostgres=function(){var e=o.filter(this.hasOwnProperty,this);return this.milliseconds&&e.indexOf("seconds")<0&&e.push("seconds"),0===e.length?"0":e.map(function(e){var t=this[e]||0;return"seconds"===e&&this.milliseconds&&(t=(t+this.milliseconds/1e3).toFixed(6).replace(/\.?0+$/,"")),t+" "+e},this).join(" ")};var r={years:"Y",months:"M",days:"D",hours:"H",minutes:"M",seconds:"S"},s=["years","months","days"],c=["hours","minutes","seconds"];a.prototype.toISOString=a.prototype.toISO=function(){return"P"+s.map(e,this).join("")+"T"+c.map(e,this).join("");function e(e){var t=this[e]||0;return"seconds"===e&&this.milliseconds&&(t=(t+this.milliseconds/1e3).toFixed(6).replace(/0+$/,"")),t+r[e]}};var p=new RegExp(["([+-]?\\d+)\\s+years?","([+-]?\\d+)\\s+mons?","([+-]?\\d+)\\s+days?","([+-])?([\\d]*):(\\d\\d):(\\d\\d)\\.?(\\d{1,6})?"].map(function(e){return"("+e+")?"}).join("\\s*")),l={years:2,months:4,days:6,hours:9,minutes:10,seconds:11,milliseconds:12},u=["hours","minutes","seconds","milliseconds"]},function(e,t,n){"use strict";e.exports=function(e){if(/^\\x/.test(e))return new Buffer(e.substr(2),"hex");for(var t="",n=0;n<e.length;)if("\\"!==e[n])t+=e[n],++n;else if(/[0-7]{3}/.test(e.substr(n+1,3)))t+=String.fromCharCode(parseInt(e.substr(n+1,3),8)),n+=4;else{for(var i=1;n+i<e.length&&"\\"===e[n+i];)i++;for(var a=0;a<Math.floor(i/2);++a)t+="\\";n+=2*Math.floor(i/2)}return new Buffer(t,"binary")}},function(e,t,n){"use strict";var i=1e6;e.exports=function(e){var t=e.readInt32BE(0),n=e.readUInt32BE(4),a="";t<0&&(t=~t+(0===n),n=1+~n>>>0,a="-");var o,r,s,c,p,l,u="";if(o=t%i,t=t/i>>>0,s=""+((r=4294967296*o+n)-i*(n=r/i>>>0)),0===n&&0===t)return a+s+u;for(c="",p=6-s.length,l=0;l<p;l++)c+="0";if(u=c+s+u,o=t%i,t=t/i>>>0,s=""+((r=4294967296*o+n)-i*(n=r/i>>>0)),0===n&&0===t)return a+s+u;for(c="",p=6-s.length,l=0;l<p;l++)c+="0";if(u=c+s+u,o=t%i,t=t/i>>>0,s=""+((r=4294967296*o+n)-i*(n=r/i>>>0)),0===n&&0===t)return a+s+u;for(c="",p=6-s.length,l=0;l<p;l++)c+="0";return u=c+s+u,a+(s=""+(r=4294967296*(o=t%i)+n)%i)+u}},function(e,t,n){"use strict";var i=n(24);function a(e){this._types=e||i,this.text={},this.binary={}}a.prototype.getOverrides=function(e){switch(e){case"text":return this.text;case"binary":return this.binary;default:return{}}},a.prototype.setTypeParser=function(e,t,n){"function"==typeof t&&(n=t,t="text"),this.getOverrides(t)[e]=n},a.prototype.getTypeParser=function(e,t){return t=t||"text",this.getOverrides(t)[e]||this._types.getTypeParser(e,t)},e.exports=a},function(e,t,n){"use strict";var i=n(152),a=n(23),o=n(153).parse,r=function(e,t,n){return void 0===n?n=process.env["PG"+e.toUpperCase()]:!1===n||(n=process.env[n]),t[e]||n||a[e]},s=function(e){(e="string"==typeof e?o(e):e||{}).connectionString&&(e=Object.assign({},e,o(e.connectionString))),this.user=r("user",e),this.database=r("database",e),this.port=parseInt(r("port",e),10),this.host=r("host",e),this.password=r("password",e),this.binary=r("binary",e),this.ssl=void 0===e.ssl?function(){switch(process.env.PGSSLMODE){case"disable":return!1;case"prefer":case"require":case"verify-ca":case"verify-full":return!0}return a.ssl}():e.ssl,this.client_encoding=r("client_encoding",e),this.replication=r("replication",e),this.isDomainSocket=!(this.host||"").indexOf("/"),this.application_name=r("application_name",e,"PGAPPNAME"),this.fallback_application_name=r("fallback_application_name",e,!1),this.statement_timeout=r("statement_timeout",e,!1),this.query_timeout=r("query_timeout",e,!1)},c=function(e){return"'"+(""+e).replace(/\\/g,"\\\\").replace(/'/g,"\\'")+"'"},p=function(e,t,n){var i=t[n];i&&e.push(n+"="+c(i))};s.prototype.getLibpqConnectionString=function(e){var t=[];p(t,this,"user"),p(t,this,"password"),p(t,this,"port"),p(t,this,"application_name"),p(t,this,"fallback_application_name");var n="object"==typeof this.ssl?this.ssl:{sslmode:this.ssl};if(p(t,n,"sslmode"),p(t,n,"sslca"),p(t,n,"sslkey"),p(t,n,"sslcert"),p(t,n,"sslrootcert"),this.database&&t.push("dbname="+c(this.database)),this.replication&&t.push("replication="+c(this.replication)),this.host&&t.push("host="+c(this.host)),this.isDomainSocket)return e(null,t.join(" "));this.client_encoding&&t.push("client_encoding="+c(this.client_encoding)),i.lookup(this.host,function(n,i){return n?e(n,null):(t.push("hostaddr="+c(i)),e(null,t.join(" ")))})},e.exports=s},function(e,t,n){"use strict";var i=n(26),a=n(4).EventEmitter,o=n(2),r=n(156),s=n(157),c=function(e){a.call(this),e=e||{},this.stream=e.stream||new i.Socket,this._keepAlive=e.keepAlive,this.lastBuffer=!1,this.lastOffset=0,this.buffer=null,this.offset=null,this.encoding=e.encoding||"utf8",this.parsedStatements={},this.writer=new r,this.ssl=e.ssl||!1,this._ending=!1,this._mode=0,this._emitMessage=!1,this._reader=new s({headerSize:1,lengthPadding:-4});var t=this;this.on("newListener",function(e){"message"===e&&(t._emitMessage=!0)})};o.inherits(c,a),c.prototype.connect=function(e,t){"closed"===this.stream.readyState?this.stream.connect(e,t):"open"===this.stream.readyState&&this.emit("connect");var i=this;this.stream.on("connect",function(){i._keepAlive&&i.stream.setKeepAlive(!0),i.emit("connect")});const a=function(e){i._ending&&"ECONNRESET"===e.code||i.emit("error",e)};if(this.stream.on("error",a),this.stream.on("close",function(){i.emit("end")}),!this.ssl)return this.attachListeners(this.stream);this.stream.once("data",function(e){switch(e.toString("utf8")){case"N":return i.emit("error",new Error("The server does not support SSL connections"));case"S":break;default:return i.emit("error",new Error("There was an error establishing an SSL connection"))}var o=n(158);i.stream=o.connect({socket:i.stream,servername:t,checkServerIdentity:i.ssl.checkServerIdentity||o.checkServerIdentity,rejectUnauthorized:i.ssl.rejectUnauthorized,ca:i.ssl.ca,pfx:i.ssl.pfx,key:i.ssl.key,passphrase:i.ssl.passphrase,cert:i.ssl.cert,secureOptions:i.ssl.secureOptions,NPNProtocols:i.ssl.NPNProtocols}),i.attachListeners(i.stream),i.stream.on("error",a),i.emit("sslconnect")})},c.prototype.attachListeners=function(e){var t=this;e.on("data",function(e){t._reader.addChunk(e);for(var n=t._reader.read();n;){var i=t.parseMessage(n),a="error"===i.name?"errorMessage":i.name;t._emitMessage&&t.emit("message",i),t.emit(a,i),n=t._reader.read()}}),e.on("end",function(){t.emit("end")})},c.prototype.requestSsl=function(){var e=this.writer.addInt16(1234).addInt16(5679).flush(),t=e.length+4,n=(new r).addInt32(t).add(e).join();this.stream.write(n)},c.prototype.startup=function(e){var t=this.writer.addInt16(3).addInt16(0);Object.keys(e).forEach(function(n){var i=e[n];t.addCString(n).addCString(i)}),t.addCString("client_encoding").addCString("'utf-8'");var n=t.addCString("").flush(),i=n.length+4,a=(new r).addInt32(i).add(n).join();this.stream.write(a)},c.prototype.cancel=function(e,t){var n=this.writer.addInt16(1234).addInt16(5678).addInt32(e).addInt32(t).flush(),i=n.length+4,a=(new r).addInt32(i).add(n).join();this.stream.write(a)},c.prototype.password=function(e){this._send(112,this.writer.addCString(e))},c.prototype._send=function(e,t){return!!this.stream.writable&&(!0!==t?this.stream.write(this.writer.flush(e)):void this.writer.addHeader(e))},c.prototype.query=function(e){this.stream.write(this.writer.addCString(e).flush(81))},c.prototype.parse=function(e,t){e.name=e.name||"",e.name.length>63&&(console.error("Warning! Postgres only supports 63 characters for query names."),console.error("You supplied",e.name,"(",e.name.length,")"),console.error("This can cause conflicts and silent errors executing queries")),e.types=e.types||[];for(var n=e.types.length,i=this.writer.addCString(e.name).addCString(e.text).addInt16(n),a=0;a<n;a++)i.addInt32(e.types[a]);this._send(80,t)},c.prototype.bind=function(e,t){(e=e||{}).portal=e.portal||"",e.statement=e.statement||"",e.binary=e.binary||!1;for(var n=e.values||[],i=n.length,a=!1,o=0;o<i;o++)a|=n[o]instanceof Buffer;var r=this.writer.addCString(e.portal).addCString(e.statement);if(a)for(r.addInt16(i),o=0;o<i;o++)r.addInt16(n[o]instanceof Buffer);else r.addInt16(0);r.addInt16(i);for(var s=0;s<i;s++){var c=n[s];null==c?r.addInt32(-1):c instanceof Buffer?(r.addInt32(c.length),r.add(c)):(r.addInt32(Buffer.byteLength(c)),r.addString(c))}e.binary?(r.addInt16(1),r.addInt16(1)):r.addInt16(0),this._send(66,t)},c.prototype.execute=function(e,t){(e=e||{}).portal=e.portal||"",e.rows=e.rows||"",this.writer.addCString(e.portal).addInt32(e.rows),this._send(69,t)};var p=Buffer.alloc(0);c.prototype.flush=function(){this.writer.add(p),this._send(72)},c.prototype.sync=function(){this.writer.flush(0),this.writer.add(p),this._ending=!0,this._send(83)};const l=Buffer.from([88,0,0,0,4]);c.prototype.end=function(){return this.writer.add(p),this._ending=!0,this.stream.write(l,()=>{this.stream.end()})},c.prototype.close=function(e,t){this.writer.addCString(e.type+(e.name||"")),this._send(67,t)},c.prototype.describe=function(e,t){this.writer.addCString(e.type+(e.name||"")),this._send(68,t)},c.prototype.sendCopyFromChunk=function(e){this.stream.write(this.writer.add(e).flush(100))},c.prototype.endCopyFrom=function(){this.stream.write(this.writer.add(p).flush(99))},c.prototype.sendCopyFail=function(e){this.writer.addCString(e),this._send(102)};var u=function(e,t){this.name=e,this.length=t};c.prototype.parseMessage=function(e){this.offset=0;var t=e.length+4;switch(this._reader.header){case 82:return this.parseR(e,t);case 83:return this.parseS(e,t);case 75:return this.parseK(e,t);case 67:return this.parseC(e,t);case 90:return this.parseZ(e,t);case 84:return this.parseT(e,t);case 68:return this.parseD(e,t);case 69:return this.parseE(e,t);case 78:return this.parseN(e,t);case 49:return new u("parseComplete",t);case 50:return new u("bindComplete",t);case 51:return new u("closeComplete",t);case 65:return this.parseA(e,t);case 110:return new u("noData",t);case 73:return new u("emptyQuery",t);case 115:return new u("portalSuspended",t);case 71:return this.parseG(e,t);case 72:return this.parseH(e,t);case 87:return new u("replicationStart",t);case 99:return new u("copyDone",t);case 100:return this.parsed(e,t)}},c.prototype.parseR=function(e,t){var n=new u("authenticationOk",t);if(8===n.length)return 3===this.parseInt32(e)&&(n.name="authenticationCleartextPassword"),n;if(12===n.length&&5===this.parseInt32(e))return n.name="authenticationMD5Password",n.salt=Buffer.alloc(4),e.copy(n.salt,0,this.offset,this.offset+4),this.offset+=4,n;throw new Error("Unknown authenticationOk message type"+o.inspect(n))},c.prototype.parseS=function(e,t){var n=new u("parameterStatus",t);return n.parameterName=this.parseCString(e),n.parameterValue=this.parseCString(e),n},c.prototype.parseK=function(e,t){var n=new u("backendKeyData",t);return n.processID=this.parseInt32(e),n.secretKey=this.parseInt32(e),n},c.prototype.parseC=function(e,t){var n=new u("commandComplete",t);return n.text=this.parseCString(e),n},c.prototype.parseZ=function(e,t){var n=new u("readyForQuery",t);return n.name="readyForQuery",n.status=this.readString(e,1),n};c.prototype.parseT=function(e,t){var n=new u("rowDescription",t);n.fieldCount=this.parseInt16(e);for(var i=[],a=0;a<n.fieldCount;a++)i.push(this.parseField(e));return n.fields=i,n};var d=function(){this.name=null,this.tableID=null,this.columnID=null,this.dataTypeID=null,this.dataTypeSize=null,this.dataTypeModifier=null,this.format=null};c.prototype.parseField=function(e){var t=new d;return t.name=this.parseCString(e),t.tableID=this.parseInt32(e),t.columnID=this.parseInt16(e),t.dataTypeID=this.parseInt32(e),t.dataTypeSize=this.parseInt16(e),t.dataTypeModifier=this.parseInt32(e),0===this.parseInt16(e)?(this._mode=0,t.format="text"):(this._mode=1,t.format="binary"),t};var m=function(e,t){this.name="dataRow",this.length=e,this.fieldCount=t,this.fields=[]};c.prototype.parseD=function(e,t){for(var n=this.parseInt16(e),i=new m(t,n),a=0;a<n;a++)i.fields.push(this._readValue(e));return i},c.prototype._readValue=function(e){var t=this.parseInt32(e);return-1===t?null:0===this._mode?this.readString(e,t):this.readBytes(e,t)},c.prototype.parseE=function(e,t){for(var n,i,a={},o=new u("error",t),r=this.readString(e,1);"\0"!==r;)a[r]=this.parseCString(e),r=this.readString(e,1);if("error"===o.name)for(i in n=new Error(a.M),o)o.hasOwnProperty(i)&&(n[i]=o[i]);else(n=o).message=a.M;return n.severity=a.S,n.code=a.C,n.detail=a.D,n.hint=a.H,n.position=a.P,n.internalPosition=a.p,n.internalQuery=a.q,n.where=a.W,n.schema=a.s,n.table=a.t,n.column=a.c,n.dataType=a.d,n.constraint=a.n,n.file=a.F,n.line=a.L,n.routine=a.R,n},c.prototype.parseN=function(e,t){var n=this.parseE(e,t);return n.name="notice",n},c.prototype.parseA=function(e,t){var n=new u("notification",t);return n.processId=this.parseInt32(e),n.channel=this.parseCString(e),n.payload=this.parseCString(e),n},c.prototype.parseG=function(e,t){var n=new u("copyInResponse",t);return this.parseGH(e,n)},c.prototype.parseH=function(e,t){var n=new u("copyOutResponse",t);return this.parseGH(e,n)},c.prototype.parseGH=function(e,t){var n=0!==e[this.offset];this.offset++,t.binary=n;var i=this.parseInt16(e);t.columnTypes=[];for(var a=0;a<i;a++)t.columnTypes.push(this.parseInt16(e));return t},c.prototype.parsed=function(e,t){var n=new u("copyData",t);return n.chunk=this.readBytes(e,n.length-4),n},c.prototype.parseInt32=function(e){var t=e.readInt32BE(this.offset);return this.offset+=4,t},c.prototype.parseInt16=function(e){var t=e.readInt16BE(this.offset);return this.offset+=2,t},c.prototype.readString=function(e,t){return e.toString(this.encoding,this.offset,this.offset+=t)},c.prototype.readBytes=function(e,t){return e.slice(this.offset,this.offset+=t)},c.prototype.parseCString=function(e){var t=this.offset,n=e.indexOf(0,t);return this.offset=n+1,e.toString(this.encoding,t,n)},e.exports=c},function(e,t,n){"use strict";e.exports=n(160)},function(e,t){function n(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=71},function(e,t,n){"use strict";function i(e,t){this.source=e,this.transform=t||a,this.position=0,this.entries=[],this.recorded=[],this.dimension=0}function a(e){return e}t.parse=function(e,t){return new i(e,t).parse()},i.prototype.isEof=function(){return this.position>=this.source.length},i.prototype.nextCharacter=function(){var e=this.source[this.position++];return"\\"===e?{value:this.source[this.position++],escaped:!0}:{value:e,escaped:!1}},i.prototype.record=function(e){this.recorded.push(e)},i.prototype.newEntry=function(e){var t;(this.recorded.length>0||e)&&("NULL"!==(t=this.recorded.join(""))||e||(t=null),null!==t&&(t=this.transform(t)),this.entries.push(t),this.recorded=[])},i.prototype.parse=function(e){for(var t,n,a;!this.isEof();)if("{"!==(t=this.nextCharacter()).value||a){if("}"!==t.value||a)'"'!==t.value||t.escaped?","!==t.value||a?this.record(t.value):this.newEntry():(a&&this.newEntry(!0),a=!a);else if(this.dimension--,!this.dimension&&(this.newEntry(),e))return this.entries}else this.dimension++,this.dimension>1&&(n=new i(this.source.substr(this.position-1),this.transform),this.entries.push(n.parse(!0)),this.position+=n.position-2);if(0!==this.dimension)throw new Error("array dimension not balanced");return this.entries}},function(e,t,n){var i=n(72);e.exports={create:function(e,t){return{parse:function(){return i.parse(e,t)}}}}},function(e,t,n){var i=n(75),a=n(1)("allowance-manager:server"),o=n(15),r=function(e){var t=parseInt(e,10);if(isNaN(t))return e;if(t>=0)return t;return!1}(process.env.PORT||"3001");i.set("port",r);var s=o.createServer(i);s.listen(r),s.on("error",function(e){if("listen"!==e.syscall)throw e;var t="string"==typeof r?"Pipe "+r:"Port "+r;switch(e.code){case"EACCES":console.error(t+" requires elevated privileges"),process.exit(1);break;case"EADDRINUSE":console.error(t+" is already in use"),process.exit(1);break;default:throw e}}),s.on("listening",function(){var e=s.address(),t="string"==typeof e?"pipe "+e:"port "+e.port;a("Listening on "+t)})},function(e,t,n){"use strict";n.r(t),function(e){var i=n(82),a=n.n(i),o=n(0),r=n(140),s=n.n(r),c=n(141),p=n.n(c),l=n(173),u=n(174),d=a()();d.use(p()("dev")),d.use(Object(i.json)()),d.use(Object(i.urlencoded)({extended:!1})),d.use(s()()),d.use(a.a.static(Object(o.join)(e,"client/build"))),d.use(function(e,t,n){n.locals.message=e.message,n.locals.error="development"===t.app.get("env")?e:{},n.status(e.status||500),n.send(e.message)}),Object(u.a)(),d.use("/api",l.a),t.default=d}.call(this,"/")},function(e,t,n){"use strict";
/*!
 * depd
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e){var t=!0,n=function(e){var t,n="";e.isNative()?n="native":e.isEval()?(t=e.getScriptNameOrSourceURL())||(n=e.getEvalOrigin()):t=e.getFileName();if(t){n+=t;var i=e.getLineNumber();if(null!=i){n+=":"+i;var a=e.getColumnNumber();a&&(n+=":"+a)}}return n||"unknown source"}(e),i=e.getFunctionName(),a=e.isConstructor(),o=!(e.isToplevel()||a),r="";if(o){var s=e.getMethodName(),c=(p=e.receiver).constructor&&p.constructor.name||null;i?(c&&0!==i.indexOf(c)&&(r+=c+"."),r+=i,s&&i.lastIndexOf("."+s)!==i.length-s.length-1&&(r+=" [as "+s+"]")):r+=c+"."+(s||"<anonymous>")}else a?r+="new "+(i||"<anonymous>"):i?r+=i:(t=!1,r+=n);var p;t&&(r+=" ("+n+")");return r}},function(e,t,n){"use strict";
/*!
 * depd
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,t){return e.listeners(t).length}},function(e,t,n){"use strict";
/*!
 * statuses
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(79);function a(e){if("number"==typeof e){if(!a[e])throw new Error("invalid status code: "+e);return e}if("string"!=typeof e)throw new TypeError("code must be a number or string");var t=parseInt(e,10);if(!isNaN(t)){if(!a[t])throw new Error("invalid status code: "+t);return t}if(!(t=a[e.toLowerCase()]))throw new Error('invalid status message: "'+e+'"');return t}e.exports=a,a.STATUS_CODES=i,a.codes=function(e,t){var n=[];return Object.keys(t).forEach(function(i){var a=t[i],o=Number(i);e[o]=a,e[a]=o,e[a.toLowerCase()]=o,n.push(o)}),n}(a,i),a.redirect={300:!0,301:!0,302:!0,303:!0,305:!0,307:!0,308:!0},a.empty={204:!0,205:!0,304:!0},a.retry={502:!0,503:!0,504:!0}},function(e){e.exports={100:"Continue",101:"Switching Protocols",102:"Processing",103:"Early Hints",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",208:"Already Reported",226:"IM Used",300:"Multiple Choices",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",306:"(Unused)",307:"Temporary Redirect",308:"Permanent Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Payload Too Large",414:"URI Too Long",415:"Unsupported Media Type",416:"Range Not Satisfiable",417:"Expectation Failed",418:"I'm a teapot",421:"Misdirected Request",422:"Unprocessable Entity",423:"Locked",424:"Failed Dependency",425:"Unordered Collection",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",451:"Unavailable For Legal Reasons",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",509:"Bandwidth Limit Exceeded",510:"Not Extended",511:"Network Authentication Required"}},function(e,t,n){try{var i=n(2);if("function"!=typeof i.inherits)throw"";e.exports=i.inherits}catch(t){e.exports=n(81)}},function(e,t){"function"==typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},function(e,t,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=n(83)},function(e,t,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(84),a=n(4).EventEmitter,o=n(117),r=n(118),s=n(49),c=n(48),p=n(130),l=n(137);(t=e.exports=function(){var e=function(t,n,i){e.handle(t,n,i)};return o(e,a.prototype,!1),o(e,r,!1),e.request=Object.create(p,{app:{configurable:!0,enumerable:!0,writable:!0,value:e}}),e.response=Object.create(l,{app:{configurable:!0,enumerable:!0,writable:!0,value:e}}),e.init(),e}).application=r,t.request=p,t.response=l,t.Route=s,t.Router=c,t.json=i.json,t.query=n(51),t.static=n(139),t.urlencoded=i.urlencoded;["bodyParser","compress","cookieSession","session","logger","cookieParser","favicon","responseTime","errorHandler","timeout","methodOverride","vhost","csrf","directory","limit","multipart","staticCache"].forEach(function(e){Object.defineProperty(t,e,{get:function(){throw new Error("Most middleware (like "+e+") is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.")},configurable:!0})})},function(e,t,n){"use strict";
/*!
 * body-parser
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(3)("body-parser"),a=Object.create(null);function o(e){return function(){return function(e){var t=a[e];if(void 0!==t)return t;switch(e){case"json":t=n(85);break;case"raw":t=n(112);break;case"text":t=n(113);break;case"urlencoded":t=n(114)}return a[e]=t}(e)}}t=e.exports=i.function(function(e){var n={};if(e)for(var i in e)"type"!==i&&(n[i]=e[i]);var a=t.urlencoded(n),o=t.json(n);return function(e,t,n){o(e,t,function(i){if(i)return n(i);a(e,t,n)})}},"bodyParser: use individual json/urlencoded middlewares"),Object.defineProperty(t,"json",{configurable:!0,enumerable:!0,get:o("json")}),Object.defineProperty(t,"raw",{configurable:!0,enumerable:!0,get:o("raw")}),Object.defineProperty(t,"text",{configurable:!0,enumerable:!0,get:o("text")}),Object.defineProperty(t,"urlencoded",{configurable:!0,enumerable:!0,get:o("urlencoded")})},function(e,t,n){"use strict";
/*!
 * body-parser
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(11),a=n(17),o=n(8),r=n(1)("body-parser:json"),s=n(18),c=n(13);e.exports=function(e){var t=e||{},n="number"!=typeof t.limit?i.parse(t.limit||"100kb"):t.limit,u=!1!==t.inflate,d=t.reviver,m=!1!==t.strict,f=t.type||"application/json",h=t.verify||!1;if(!1!==h&&"function"!=typeof h)throw new TypeError("option verify must be function");var v="function"!=typeof f?function(e){return function(t){return Boolean(c(t,e))}}(f):f;function x(e){if(0===e.length)return{};if(m){var t=(n=e,p.exec(n)[1]);if("{"!==t&&"["!==t)throw r("strict violation"),function(e,t){var n=e.indexOf(t),i=e.substring(0,n)+"#";try{throw JSON.parse(i),new SyntaxError("strict violation")}catch(e){return l(e,{message:e.message.replace("#",t),stack:e.stack})}}(e,t)}var n;try{return r("parse json"),JSON.parse(e,d)}catch(e){throw l(e,{message:e.message,stack:e.stack})}}return function(e,t,i){if(e._body)return r("body already parsed"),void i();if(e.body=e.body||{},!c.hasBody(e))return r("skip empty body"),void i();if(r("content-type %j",e.headers["content-type"]),!v(e))return r("skip parsing"),void i();var p=function(e){try{return(a.parse(e).parameters.charset||"").toLowerCase()}catch(e){return}}(e)||"utf-8";if("utf-"!==p.substr(0,4))return r("invalid charset"),void i(o(415,'unsupported charset "'+p.toUpperCase()+'"',{charset:p,type:"charset.unsupported"}));s(e,t,i,x,r,{encoding:p,inflate:u,limit:n,verify:h})}};var p=/^[\x20\x09\x0a\x0d]*(.)/;function l(e,t){for(var n=Object.getOwnPropertyNames(e),i=0;i<n.length;i++){var a=n[i];"stack"!==a&&"message"!==a&&delete e[a]}return e.stack=t.stack.replace(e.message,t.message),e.message=t.message,e}},function(e,t,n){function i(){var e;try{e=t.storage.debug}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e}(t=e.exports=n(37)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var n=this.useColors;if(e[0]=(n?"%c":"")+this.namespace+(n?" %c":" ")+e[0]+(n?"%c ":" ")+"+"+t.humanize(this.diff),!n)return;var i="color: "+this.color;e.splice(1,0,i,"color: inherit");var a=0,o=0;e[0].replace(/%[a-zA-Z%]/g,function(e){"%%"!==e&&(a++,"%c"===e&&(o=a))}),e.splice(o,0,i)},t.save=function(e){try{null==e?t.storage.removeItem("debug"):t.storage.debug=e}catch(e){}},t.load=i,t.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},t.enable(i())},function(e,t,n){var i=n(88),a=n(2);(t=e.exports=n(37)).init=function(e){e.inspectOpts={};for(var n=Object.keys(t.inspectOpts),i=0;i<n.length;i++)e.inspectOpts[n[i]]=t.inspectOpts[n[i]]},t.log=function(){return r.write(a.format.apply(a,arguments)+"\n")},t.formatArgs=function(e){var n=this.namespace;if(this.useColors){var i=this.color,a="  [3"+i+";1m"+n+" [0m";e[0]=a+e[0].split("\n").join("\n"+a),e.push("[3"+i+"m+"+t.humanize(this.diff)+"[0m")}else e[0]=(new Date).toUTCString()+" "+n+" "+e[0]},t.save=function(e){null==e?delete process.env.DEBUG:process.env.DEBUG=e},t.load=s,t.useColors=function(){return"colors"in t.inspectOpts?Boolean(t.inspectOpts.colors):i.isatty(o)},t.colors=[6,2,3,4,5,1],t.inspectOpts=Object.keys(process.env).filter(function(e){return/^debug_/i.test(e)}).reduce(function(e,t){var n=t.substring(6).toLowerCase().replace(/_([a-z])/g,function(e,t){return t.toUpperCase()}),i=process.env[t];return i=!!/^(yes|on|true|enabled)$/i.test(i)||!/^(no|off|false|disabled)$/i.test(i)&&("null"===i?null:Number(i)),e[n]=i,e},{});var o=parseInt(process.env.DEBUG_FD,10)||2;1!==o&&2!==o&&a.deprecate(function(){},"except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)")();var r=1===o?process.stdout:2===o?process.stderr:function(e){var t;switch(process.binding("tty_wrap").guessHandleType(e)){case"TTY":(t=new i.WriteStream(e))._type="tty",t._handle&&t._handle.unref&&t._handle.unref();break;case"FILE":var a=n(6);(t=new a.SyncWriteStream(e,{autoClose:!1}))._type="fs";break;case"PIPE":case"TCP":var o=n(26);(t=new o.Socket({fd:e,readable:!1,writable:!0})).readable=!1,t.read=null,t._type="pipe",t._handle&&t._handle.unref&&t._handle.unref();break;default:throw new Error("Implement me. Unknown stream file type!")}return t.fd=e,t._isStdio=!0,t}(o);function s(){return process.env.DEBUG}t.formatters.o=function(e){return this.inspectOpts.colors=this.useColors,a.inspect(e,this.inspectOpts).split("\n").map(function(e){return e.trim()}).join(" ")},t.formatters.O=function(e){return this.inspectOpts.colors=this.useColors,a.inspect(e,this.inspectOpts)},t.enable(s())},function(e,t){e.exports=require("tty")},function(e,t,n){"use strict";
/*!
 * raw-body
 * Copyright(c) 2013-2014 Jonathan Ong
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(11),a=n(8),o=n(39),r=n(43);e.exports=function(e,t,n){var a=n,o=t||{};!0!==t&&"string"!=typeof t||(o={encoding:t});"function"==typeof t&&(a=t,o={});if(void 0!==a&&"function"!=typeof a)throw new TypeError("argument callback must be a function");if(!a&&!global.Promise)throw new TypeError("argument callback is required");var r=!0!==o.encoding?o.encoding:"utf-8",s=i.parse(o.limit),p=null==o.length||isNaN(o.length)?null:parseInt(o.length,10);if(a)return c(e,r,p,s,a);return new Promise(function(t,n){c(e,r,p,s,function(e,i){if(e)return n(e);t(i)})})};var s=/^Encoding not recognized: /;function c(e,t,n,i,c){var p=!1,l=!0;if(null!==i&&null!==n&&n>i)return h(a(413,"request entity too large",{expected:n,length:n,limit:i,type:"entity.too.large"}));var u=e._readableState;if(e._decoder||u&&(u.encoding||u.decoder))return h(a(500,"stream encoding should not be set",{type:"stream.encoding.set"}));var d,m=0;try{d=function(e){if(!e)return null;try{return o.getDecoder(e)}catch(t){if(!s.test(t.message))throw t;throw a(415,"specified encoding unsupported",{encoding:e,type:"encoding.unsupported"})}}(t)}catch(e){return h(e)}var f=d?"":[];function h(){for(var t=new Array(arguments.length),n=0;n<t.length;n++)t[n]=arguments[n];function i(){b(),t[0]&&function(e){r(e),"function"==typeof e.pause&&e.pause()}(e),c.apply(null,t)}p=!0,l?process.nextTick(i):i()}function v(){p||h(a(400,"request aborted",{code:"ECONNABORTED",expected:n,length:n,received:m,type:"request.aborted"}))}function x(e){p||(m+=e.length,null!==i&&m>i?h(a(413,"request entity too large",{limit:i,received:m,type:"entity.too.large"})):d?f+=d.write(e):f.push(e))}function g(e){if(!p){if(e)return h(e);if(null!==n&&m!==n)h(a(400,"request size did not match content length",{expected:n,length:n,received:m,type:"request.size.invalid"}));else h(null,d?f+(d.end()||""):Buffer.concat(f))}}function b(){f=null,e.removeListener("aborted",v),e.removeListener("data",x),e.removeListener("end",g),e.removeListener("error",g),e.removeListener("close",b)}e.on("aborted",v),e.on("close",b),e.on("data",x),e.on("end",g),e.on("error",g),l=!1}},function(e,t,n){"use strict";function i(e,t){this.encoder=e,this.addBOM=!0}function a(e,t){this.decoder=e,this.pass=!1,this.options=t||{}}t.PrependBOM=i,i.prototype.write=function(e){return this.addBOM&&(e="\ufeff"+e,this.addBOM=!1),this.encoder.write(e)},i.prototype.end=function(){return this.encoder.end()},t.StripBOM=a,a.prototype.write=function(e){var t=this.decoder.write(e);return this.pass||!t?t:("\ufeff"===t[0]&&(t=t.slice(1),"function"==typeof this.options.stripBOM&&this.options.stripBOM()),this.pass=!0,t)},a.prototype.end=function(){return this.decoder.end()}},function(e,t,n){"use strict";for(var i=[n(92),n(93),n(94),n(95),n(96),n(97),n(98),n(99)],a=0;a<i.length;a++){e=i[a];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])}},function(e,t,n){"use strict";var i=n(9).Buffer;function a(e,t){this.enc=e.encodingName,this.bomAware=e.bomAware,"base64"===this.enc?this.encoder=c:"cesu8"===this.enc&&(this.enc="utf8",this.encoder=p,"💩"!==i.from("eda0bdedb2a9","hex").toString()&&(this.decoder=l,this.defaultCharUnicode=t.defaultCharUnicode))}e.exports={utf8:{type:"_internal",bomAware:!0},cesu8:{type:"_internal",bomAware:!0},unicode11utf8:"utf8",ucs2:{type:"_internal",bomAware:!0},utf16le:"ucs2",binary:{type:"_internal"},base64:{type:"_internal"},hex:{type:"_internal"},_internal:a},a.prototype.encoder=s,a.prototype.decoder=r;var o=n(40).StringDecoder;function r(e,t){o.call(this,t.enc)}function s(e,t){this.enc=t.enc}function c(e,t){this.prevStr=""}function p(e,t){}function l(e,t){this.acc=0,this.contBytes=0,this.accBytes=0,this.defaultCharUnicode=t.defaultCharUnicode}o.prototype.end||(o.prototype.end=function(){}),r.prototype=o.prototype,s.prototype.write=function(e){return i.from(e,this.enc)},s.prototype.end=function(){},c.prototype.write=function(e){var t=(e=this.prevStr+e).length-e.length%4;return this.prevStr=e.slice(t),e=e.slice(0,t),i.from(e,"base64")},c.prototype.end=function(){return i.from(this.prevStr,"base64")},p.prototype.write=function(e){for(var t=i.alloc(3*e.length),n=0,a=0;a<e.length;a++){var o=e.charCodeAt(a);o<128?t[n++]=o:o<2048?(t[n++]=192+(o>>>6),t[n++]=128+(63&o)):(t[n++]=224+(o>>>12),t[n++]=128+(o>>>6&63),t[n++]=128+(63&o))}return t.slice(0,n)},p.prototype.end=function(){},l.prototype.write=function(e){for(var t=this.acc,n=this.contBytes,i=this.accBytes,a="",o=0;o<e.length;o++){var r=e[o];128!=(192&r)?(n>0&&(a+=this.defaultCharUnicode,n=0),r<128?a+=String.fromCharCode(r):r<224?(t=31&r,n=1,i=1):r<240?(t=15&r,n=2,i=1):a+=this.defaultCharUnicode):n>0?(t=t<<6|63&r,i++,0===--n&&(a+=2===i&&t<128&&t>0?this.defaultCharUnicode:3===i&&t<2048?this.defaultCharUnicode:String.fromCharCode(t))):a+=this.defaultCharUnicode}return this.acc=t,this.contBytes=n,this.accBytes=i,a},l.prototype.end=function(){var e=0;return this.contBytes>0&&(e+=this.defaultCharUnicode),e}},function(e,t,n){"use strict";var i=n(9).Buffer;function a(){}function o(){}function r(){this.overflowByte=-1}function s(e,t){this.iconv=t}function c(e,t){void 0===(e=e||{}).addBOM&&(e.addBOM=!0),this.encoder=t.iconv.getEncoder("utf-16le",e)}function p(e,t){this.decoder=null,this.initialBytes=[],this.initialBytesLen=0,this.options=e||{},this.iconv=t.iconv}function l(e,t){var n=t||"utf-16le";if(e.length>=2)if(254==e[0]&&255==e[1])n="utf-16be";else if(255==e[0]&&254==e[1])n="utf-16le";else{for(var i=0,a=0,o=Math.min(e.length-e.length%2,64),r=0;r<o;r+=2)0===e[r]&&0!==e[r+1]&&a++,0!==e[r]&&0===e[r+1]&&i++;a>i?n="utf-16be":a<i&&(n="utf-16le")}return n}t.utf16be=a,a.prototype.encoder=o,a.prototype.decoder=r,a.prototype.bomAware=!0,o.prototype.write=function(e){for(var t=i.from(e,"ucs2"),n=0;n<t.length;n+=2){var a=t[n];t[n]=t[n+1],t[n+1]=a}return t},o.prototype.end=function(){},r.prototype.write=function(e){if(0==e.length)return"";var t=i.alloc(e.length+1),n=0,a=0;for(-1!==this.overflowByte&&(t[0]=e[0],t[1]=this.overflowByte,n=1,a=2);n<e.length-1;n+=2,a+=2)t[a]=e[n+1],t[a+1]=e[n];return this.overflowByte=n==e.length-1?e[e.length-1]:-1,t.slice(0,a).toString("ucs2")},r.prototype.end=function(){},t.utf16=s,s.prototype.encoder=c,s.prototype.decoder=p,c.prototype.write=function(e){return this.encoder.write(e)},c.prototype.end=function(){return this.encoder.end()},p.prototype.write=function(e){if(!this.decoder){if(this.initialBytes.push(e),this.initialBytesLen+=e.length,this.initialBytesLen<16)return"";var t=l(e=i.concat(this.initialBytes),this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(t,this.options),this.initialBytes.length=this.initialBytesLen=0}return this.decoder.write(e)},p.prototype.end=function(){if(!this.decoder){var e=i.concat(this.initialBytes),t=l(e,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(t,this.options);var n=this.decoder.write(e),a=this.decoder.end();return a?n+a:n}return this.decoder.end()}},function(e,t,n){"use strict";var i=n(9).Buffer;function a(e,t){this.iconv=t}t.utf7=a,t.unicode11utf7="utf7",a.prototype.encoder=r,a.prototype.decoder=s,a.prototype.bomAware=!0;var o=/[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;function r(e,t){this.iconv=t.iconv}function s(e,t){this.iconv=t.iconv,this.inBase64=!1,this.base64Accum=""}r.prototype.write=function(e){return i.from(e.replace(o,function(e){return"+"+("+"===e?"":this.iconv.encode(e,"utf16-be").toString("base64").replace(/=+$/,""))+"-"}.bind(this)))},r.prototype.end=function(){};for(var c=/[A-Za-z0-9\/+]/,p=[],l=0;l<256;l++)p[l]=c.test(String.fromCharCode(l));var u="+".charCodeAt(0),d="-".charCodeAt(0),m="&".charCodeAt(0);function f(e,t){this.iconv=t}function h(e,t){this.iconv=t.iconv,this.inBase64=!1,this.base64Accum=i.alloc(6),this.base64AccumIdx=0}function v(e,t){this.iconv=t.iconv,this.inBase64=!1,this.base64Accum=""}s.prototype.write=function(e){for(var t="",n=0,a=this.inBase64,o=this.base64Accum,r=0;r<e.length;r++)if(a){if(!p[e[r]]){if(r==n&&e[r]==d)t+="+";else{var s=o+e.slice(n,r).toString();t+=this.iconv.decode(i.from(s,"base64"),"utf16-be")}e[r]!=d&&r--,n=r+1,a=!1,o=""}}else e[r]==u&&(t+=this.iconv.decode(e.slice(n,r),"ascii"),n=r+1,a=!0);if(a){var c=(s=o+e.slice(n).toString()).length-s.length%8;o=s.slice(c),s=s.slice(0,c),t+=this.iconv.decode(i.from(s,"base64"),"utf16-be")}else t+=this.iconv.decode(e.slice(n),"ascii");return this.inBase64=a,this.base64Accum=o,t},s.prototype.end=function(){var e="";return this.inBase64&&this.base64Accum.length>0&&(e=this.iconv.decode(i.from(this.base64Accum,"base64"),"utf16-be")),this.inBase64=!1,this.base64Accum="",e},t.utf7imap=f,f.prototype.encoder=h,f.prototype.decoder=v,f.prototype.bomAware=!0,h.prototype.write=function(e){for(var t=this.inBase64,n=this.base64Accum,a=this.base64AccumIdx,o=i.alloc(5*e.length+10),r=0,s=0;s<e.length;s++){var c=e.charCodeAt(s);32<=c&&c<=126?(t&&(a>0&&(r+=o.write(n.slice(0,a).toString("base64").replace(/\//g,",").replace(/=+$/,""),r),a=0),o[r++]=d,t=!1),t||(o[r++]=c,c===m&&(o[r++]=d))):(t||(o[r++]=m,t=!0),t&&(n[a++]=c>>8,n[a++]=255&c,a==n.length&&(r+=o.write(n.toString("base64").replace(/\//g,","),r),a=0)))}return this.inBase64=t,this.base64AccumIdx=a,o.slice(0,r)},h.prototype.end=function(){var e=i.alloc(10),t=0;return this.inBase64&&(this.base64AccumIdx>0&&(t+=e.write(this.base64Accum.slice(0,this.base64AccumIdx).toString("base64").replace(/\//g,",").replace(/=+$/,""),t),this.base64AccumIdx=0),e[t++]=d,this.inBase64=!1),e.slice(0,t)};var x=p.slice();x[",".charCodeAt(0)]=!0,v.prototype.write=function(e){for(var t="",n=0,a=this.inBase64,o=this.base64Accum,r=0;r<e.length;r++)if(a){if(!x[e[r]]){if(r==n&&e[r]==d)t+="&";else{var s=o+e.slice(n,r).toString().replace(/,/g,"/");t+=this.iconv.decode(i.from(s,"base64"),"utf16-be")}e[r]!=d&&r--,n=r+1,a=!1,o=""}}else e[r]==m&&(t+=this.iconv.decode(e.slice(n,r),"ascii"),n=r+1,a=!0);if(a){var c=(s=o+e.slice(n).toString().replace(/,/g,"/")).length-s.length%8;o=s.slice(c),s=s.slice(0,c),t+=this.iconv.decode(i.from(s,"base64"),"utf16-be")}else t+=this.iconv.decode(e.slice(n),"ascii");return this.inBase64=a,this.base64Accum=o,t},v.prototype.end=function(){var e="";return this.inBase64&&this.base64Accum.length>0&&(e=this.iconv.decode(i.from(this.base64Accum,"base64"),"utf16-be")),this.inBase64=!1,this.base64Accum="",e}},function(e,t,n){"use strict";var i=n(9).Buffer;function a(e,t){if(!e)throw new Error("SBCS codec is called without the data.");if(!e.chars||128!==e.chars.length&&256!==e.chars.length)throw new Error("Encoding '"+e.type+"' has incorrect 'chars' (must be of len 128 or 256)");if(128===e.chars.length){for(var n="",a=0;a<128;a++)n+=String.fromCharCode(a);e.chars=n+e.chars}this.decodeBuf=new i.from(e.chars,"ucs2");var o=new i.alloc(65536,t.defaultCharSingleByte.charCodeAt(0));for(a=0;a<e.chars.length;a++)o[e.chars.charCodeAt(a)]=a;this.encodeBuf=o}function o(e,t){this.encodeBuf=t.encodeBuf}function r(e,t){this.decodeBuf=t.decodeBuf}t._sbcs=a,a.prototype.encoder=o,a.prototype.decoder=r,o.prototype.write=function(e){for(var t=i.alloc(e.length),n=0;n<e.length;n++)t[n]=this.encodeBuf[e.charCodeAt(n)];return t},o.prototype.end=function(){},r.prototype.write=function(e){for(var t=this.decodeBuf,n=i.alloc(2*e.length),a=0,o=0,r=0;r<e.length;r++)a=2*e[r],n[o=2*r]=t[a],n[o+1]=t[a+1];return n.toString("ucs2")},r.prototype.end=function(){}},function(e,t,n){"use strict";e.exports={10029:"maccenteuro",maccenteuro:{type:"_sbcs",chars:"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ"},808:"cp808",ibm808:"cp808",cp808:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ "},ascii8bit:"ascii",usascii:"ascii",ansix34:"ascii",ansix341968:"ascii",ansix341986:"ascii",csascii:"ascii",cp367:"ascii",ibm367:"ascii",isoir6:"ascii",iso646us:"ascii",iso646irv:"ascii",us:"ascii",latin1:"iso88591",latin2:"iso88592",latin3:"iso88593",latin4:"iso88594",latin5:"iso88599",latin6:"iso885910",latin7:"iso885913",latin8:"iso885914",latin9:"iso885915",latin10:"iso885916",csisolatin1:"iso88591",csisolatin2:"iso88592",csisolatin3:"iso88593",csisolatin4:"iso88594",csisolatincyrillic:"iso88595",csisolatinarabic:"iso88596",csisolatingreek:"iso88597",csisolatinhebrew:"iso88598",csisolatin5:"iso88599",csisolatin6:"iso885910",l1:"iso88591",l2:"iso88592",l3:"iso88593",l4:"iso88594",l5:"iso88599",l6:"iso885910",l7:"iso885913",l8:"iso885914",l9:"iso885915",l10:"iso885916",isoir14:"iso646jp",isoir57:"iso646cn",isoir100:"iso88591",isoir101:"iso88592",isoir109:"iso88593",isoir110:"iso88594",isoir144:"iso88595",isoir127:"iso88596",isoir126:"iso88597",isoir138:"iso88598",isoir148:"iso88599",isoir157:"iso885910",isoir166:"tis620",isoir179:"iso885913",isoir199:"iso885914",isoir203:"iso885915",isoir226:"iso885916",cp819:"iso88591",ibm819:"iso88591",cyrillic:"iso88595",arabic:"iso88596",arabic8:"iso88596",ecma114:"iso88596",asmo708:"iso88596",greek:"iso88597",greek8:"iso88597",ecma118:"iso88597",elot928:"iso88597",hebrew:"iso88598",hebrew8:"iso88598",turkish:"iso88599",turkish8:"iso88599",thai:"iso885911",thai8:"iso885911",celtic:"iso885914",celtic8:"iso885914",isoceltic:"iso885914",tis6200:"tis620",tis62025291:"tis620",tis62025330:"tis620",10000:"macroman",10006:"macgreek",10007:"maccyrillic",10079:"maciceland",10081:"macturkish",cspc8codepage437:"cp437",cspc775baltic:"cp775",cspc850multilingual:"cp850",cspcp852:"cp852",cspc862latinhebrew:"cp862",cpgr:"cp869",msee:"cp1250",mscyrl:"cp1251",msansi:"cp1252",msgreek:"cp1253",msturk:"cp1254",mshebr:"cp1255",msarab:"cp1256",winbaltrim:"cp1257",cp20866:"koi8r",20866:"koi8r",ibm878:"koi8r",cskoi8r:"koi8r",cp21866:"koi8u",21866:"koi8u",ibm1168:"koi8u",strk10482002:"rk1048",tcvn5712:"tcvn",tcvn57121:"tcvn",gb198880:"iso646cn",cn:"iso646cn",csiso14jisc6220ro:"iso646jp",jisc62201969ro:"iso646jp",jp:"iso646jp",cshproman8:"hproman8",r8:"hproman8",roman8:"hproman8",xroman8:"hproman8",ibm1051:"hproman8",mac:"macintosh",csmacintosh:"macintosh"}},function(e,t,n){"use strict";e.exports={437:"cp437",737:"cp737",775:"cp775",850:"cp850",852:"cp852",855:"cp855",856:"cp856",857:"cp857",858:"cp858",860:"cp860",861:"cp861",862:"cp862",863:"cp863",864:"cp864",865:"cp865",866:"cp866",869:"cp869",874:"windows874",922:"cp922",1046:"cp1046",1124:"cp1124",1125:"cp1125",1129:"cp1129",1133:"cp1133",1161:"cp1161",1162:"cp1162",1163:"cp1163",1250:"windows1250",1251:"windows1251",1252:"windows1252",1253:"windows1253",1254:"windows1254",1255:"windows1255",1256:"windows1256",1257:"windows1257",1258:"windows1258",28591:"iso88591",28592:"iso88592",28593:"iso88593",28594:"iso88594",28595:"iso88595",28596:"iso88596",28597:"iso88597",28598:"iso88598",28599:"iso88599",28600:"iso885910",28601:"iso885911",28603:"iso885913",28604:"iso885914",28605:"iso885915",28606:"iso885916",windows874:{type:"_sbcs",chars:"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"},win874:"windows874",cp874:"windows874",windows1250:{type:"_sbcs",chars:"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"},win1250:"windows1250",cp1250:"windows1250",windows1251:{type:"_sbcs",chars:"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"},win1251:"windows1251",cp1251:"windows1251",windows1252:{type:"_sbcs",chars:"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},win1252:"windows1252",cp1252:"windows1252",windows1253:{type:"_sbcs",chars:"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"},win1253:"windows1253",cp1253:"windows1253",windows1254:{type:"_sbcs",chars:"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"},win1254:"windows1254",cp1254:"windows1254",windows1255:{type:"_sbcs",chars:"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"},win1255:"windows1255",cp1255:"windows1255",windows1256:{type:"_sbcs",chars:"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے"},win1256:"windows1256",cp1256:"windows1256",windows1257:{type:"_sbcs",chars:"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙"},win1257:"windows1257",cp1257:"windows1257",windows1258:{type:"_sbcs",chars:"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"},win1258:"windows1258",cp1258:"windows1258",iso88591:{type:"_sbcs",chars:" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},cp28591:"iso88591",iso88592:{type:"_sbcs",chars:" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"},cp28592:"iso88592",iso88593:{type:"_sbcs",chars:" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙"},cp28593:"iso88593",iso88594:{type:"_sbcs",chars:" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙"},cp28594:"iso88594",iso88595:{type:"_sbcs",chars:" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ"},cp28595:"iso88595",iso88596:{type:"_sbcs",chars:" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������"},cp28596:"iso88596",iso88597:{type:"_sbcs",chars:" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"},cp28597:"iso88597",iso88598:{type:"_sbcs",chars:" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"},cp28598:"iso88598",iso88599:{type:"_sbcs",chars:" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"},cp28599:"iso88599",iso885910:{type:"_sbcs",chars:" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ"},cp28600:"iso885910",iso885911:{type:"_sbcs",chars:" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"},cp28601:"iso885911",iso885913:{type:"_sbcs",chars:" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’"},cp28603:"iso885913",iso885914:{type:"_sbcs",chars:" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ"},cp28604:"iso885914",iso885915:{type:"_sbcs",chars:" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},cp28605:"iso885915",iso885916:{type:"_sbcs",chars:" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ"},cp28606:"iso885916",cp437:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm437:"cp437",csibm437:"cp437",cp737:{type:"_sbcs",chars:"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ "},ibm737:"cp737",csibm737:"cp737",cp775:{type:"_sbcs",chars:"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ "},ibm775:"cp775",csibm775:"cp775",cp850:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "},ibm850:"cp850",csibm850:"cp850",cp852:{type:"_sbcs",chars:"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ "},ibm852:"cp852",csibm852:"cp852",cp855:{type:"_sbcs",chars:"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ "},ibm855:"cp855",csibm855:"cp855",cp856:{type:"_sbcs",chars:"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ "},ibm856:"cp856",csibm856:"cp856",cp857:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ "},ibm857:"cp857",csibm857:"cp857",cp858:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "},ibm858:"cp858",csibm858:"cp858",cp860:{type:"_sbcs",chars:"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm860:"cp860",csibm860:"cp860",cp861:{type:"_sbcs",chars:"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm861:"cp861",csibm861:"cp861",cp862:{type:"_sbcs",chars:"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm862:"cp862",csibm862:"cp862",cp863:{type:"_sbcs",chars:"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm863:"cp863",csibm863:"cp863",cp864:{type:"_sbcs",chars:"\0\b\t\n\v\f\r !\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�"},ibm864:"cp864",csibm864:"cp864",cp865:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm865:"cp865",csibm865:"cp865",cp866:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ "},ibm866:"cp866",csibm866:"cp866",cp869:{type:"_sbcs",chars:"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ "},ibm869:"cp869",csibm869:"cp869",cp922:{type:"_sbcs",chars:" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ"},ibm922:"cp922",csibm922:"cp922",cp1046:{type:"_sbcs",chars:"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�"},ibm1046:"cp1046",csibm1046:"cp1046",cp1124:{type:"_sbcs",chars:" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ"},ibm1124:"cp1124",csibm1124:"cp1124",cp1125:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ "},ibm1125:"cp1125",csibm1125:"cp1125",cp1129:{type:"_sbcs",chars:" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"},ibm1129:"cp1129",csibm1129:"cp1129",cp1133:{type:"_sbcs",chars:" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�"},ibm1133:"cp1133",csibm1133:"cp1133",cp1161:{type:"_sbcs",chars:"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ "},ibm1161:"cp1161",csibm1161:"cp1161",cp1162:{type:"_sbcs",chars:"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"},ibm1162:"cp1162",csibm1162:"cp1162",cp1163:{type:"_sbcs",chars:" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"},ibm1163:"cp1163",csibm1163:"cp1163",maccroatian:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ"},maccyrillic:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"},macgreek:{type:"_sbcs",chars:"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�"},maciceland:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},macroman:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},macromania:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},macthai:{type:"_sbcs",chars:"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู\ufeff​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����"},macturkish:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ"},macukraine:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"},koi8r:{type:"_sbcs",chars:"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},koi8u:{type:"_sbcs",chars:"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},koi8ru:{type:"_sbcs",chars:"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},koi8t:{type:"_sbcs",chars:"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},armscii8:{type:"_sbcs",chars:" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�"},rk1048:{type:"_sbcs",chars:"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"},tcvn:{type:"_sbcs",chars:"\0ÚỤỪỬỮ\b\t\n\v\f\rỨỰỲỶỸÝỴ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ"},georgianacademy:{type:"_sbcs",chars:"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},georgianps:{type:"_sbcs",chars:"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},pt154:{type:"_sbcs",chars:"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"},viscii:{type:"_sbcs",chars:"\0ẲẴẪ\b\t\n\v\f\rỶỸỴ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ"},iso646cn:{type:"_sbcs",chars:"\0\b\t\n\v\f\r !\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"},iso646jp:{type:"_sbcs",chars:"\0\b\t\n\v\f\r !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"},hproman8:{type:"_sbcs",chars:" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�"},macintosh:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},ascii:{type:"_sbcs",chars:"��������������������������������������������������������������������������������������������������������������������������������"},tis620:{type:"_sbcs",chars:"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"}}},function(e,t,n){"use strict";var i=n(9).Buffer;t._dbcs=p;for(var a=-1,o=-2,r=-1e3,s=new Array(256),c=0;c<256;c++)s[c]=a;function p(e,t){if(this.encodingName=e.encodingName,!e)throw new Error("DBCS codec is called without the data.");if(!e.table)throw new Error("Encoding '"+this.encodingName+"' has no data.");var n=e.table();this.decodeTables=[],this.decodeTables[0]=s.slice(0),this.decodeTableSeq=[];for(var i=0;i<n.length;i++)this._addDecodeChunk(n[i]);this.defaultCharUnicode=t.defaultCharUnicode,this.encodeTable=[],this.encodeTableSeq=[];var c={};if(e.encodeSkipVals)for(i=0;i<e.encodeSkipVals.length;i++){var p=e.encodeSkipVals[i];if("number"==typeof p)c[p]=!0;else for(var l=p.from;l<=p.to;l++)c[l]=!0}if(this._fillEncodeTable(0,0,c),e.encodeAdd)for(var u in e.encodeAdd)Object.prototype.hasOwnProperty.call(e.encodeAdd,u)&&this._setEncodeChar(u.charCodeAt(0),e.encodeAdd[u]);if(this.defCharSB=this.encodeTable[0][t.defaultCharSingleByte.charCodeAt(0)],this.defCharSB===a&&(this.defCharSB=this.encodeTable[0]["?"]),this.defCharSB===a&&(this.defCharSB="?".charCodeAt(0)),"function"==typeof e.gb18030){this.gb18030=e.gb18030();var d=this.decodeTables.length,m=this.decodeTables[d]=s.slice(0),f=this.decodeTables.length,h=this.decodeTables[f]=s.slice(0);for(i=129;i<=254;i++){var v=r-this.decodeTables[0][i],x=this.decodeTables[v];for(l=48;l<=57;l++)x[l]=r-d}for(i=129;i<=254;i++)m[i]=r-f;for(i=48;i<=57;i++)h[i]=o}}function l(e,t){this.leadSurrogate=-1,this.seqObj=void 0,this.encodeTable=t.encodeTable,this.encodeTableSeq=t.encodeTableSeq,this.defaultCharSingleByte=t.defCharSB,this.gb18030=t.gb18030}function u(e,t){this.nodeIdx=0,this.prevBuf=i.alloc(0),this.decodeTables=t.decodeTables,this.decodeTableSeq=t.decodeTableSeq,this.defaultCharUnicode=t.defaultCharUnicode,this.gb18030=t.gb18030}function d(e,t){if(e[0]>t)return-1;for(var n=0,i=e.length;n<i-1;){var a=n+Math.floor((i-n+1)/2);e[a]<=t?n=a:i=a}return n}p.prototype.encoder=l,p.prototype.decoder=u,p.prototype._getDecodeTrieNode=function(e){for(var t=[];e>0;e>>=8)t.push(255&e);0==t.length&&t.push(0);for(var n=this.decodeTables[0],i=t.length-1;i>0;i--){var o=n[t[i]];if(o==a)n[t[i]]=r-this.decodeTables.length,this.decodeTables.push(n=s.slice(0));else{if(!(o<=r))throw new Error("Overwrite byte in "+this.encodingName+", addr: "+e.toString(16));n=this.decodeTables[r-o]}}return n},p.prototype._addDecodeChunk=function(e){var t=parseInt(e[0],16),n=this._getDecodeTrieNode(t);t&=255;for(var i=1;i<e.length;i++){var a=e[i];if("string"==typeof a)for(var o=0;o<a.length;){var r=a.charCodeAt(o++);if(55296<=r&&r<56320){var s=a.charCodeAt(o++);if(!(56320<=s&&s<57344))throw new Error("Incorrect surrogate pair in "+this.encodingName+" at chunk "+e[0]);n[t++]=65536+1024*(r-55296)+(s-56320)}else if(4080<r&&r<=4095){for(var c=4095-r+2,p=[],l=0;l<c;l++)p.push(a.charCodeAt(o++));n[t++]=-10-this.decodeTableSeq.length,this.decodeTableSeq.push(p)}else n[t++]=r}else{if("number"!=typeof a)throw new Error("Incorrect type '"+typeof a+"' given in "+this.encodingName+" at chunk "+e[0]);var u=n[t-1]+1;for(o=0;o<a;o++)n[t++]=u++}}if(t>255)throw new Error("Incorrect chunk in "+this.encodingName+" at addr "+e[0]+": too long"+t)},p.prototype._getEncodeBucket=function(e){var t=e>>8;return void 0===this.encodeTable[t]&&(this.encodeTable[t]=s.slice(0)),this.encodeTable[t]},p.prototype._setEncodeChar=function(e,t){var n=this._getEncodeBucket(e),i=255&e;n[i]<=-10?this.encodeTableSeq[-10-n[i]][-1]=t:n[i]==a&&(n[i]=t)},p.prototype._setEncodeSequence=function(e,t){var n,i=e[0],o=this._getEncodeBucket(i),r=255&i;o[r]<=-10?n=this.encodeTableSeq[-10-o[r]]:(n={},o[r]!==a&&(n[-1]=o[r]),o[r]=-10-this.encodeTableSeq.length,this.encodeTableSeq.push(n));for(var s=1;s<e.length-1;s++){var c=n[i];"object"==typeof c?n=c:(n=n[i]={},void 0!==c&&(n[-1]=c))}n[i=e[e.length-1]]=t},p.prototype._fillEncodeTable=function(e,t,n){for(var i=this.decodeTables[e],a=0;a<256;a++){var o=i[a],s=t+a;n[s]||(o>=0?this._setEncodeChar(o,s):o<=r?this._fillEncodeTable(r-o,s<<8,n):o<=-10&&this._setEncodeSequence(this.decodeTableSeq[-10-o],s))}},l.prototype.write=function(e){for(var t=i.alloc(e.length*(this.gb18030?4:3)),n=this.leadSurrogate,o=this.seqObj,r=-1,s=0,c=0;;){if(-1===r){if(s==e.length)break;var p=e.charCodeAt(s++)}else{p=r;r=-1}if(55296<=p&&p<57344)if(p<56320){if(-1===n){n=p;continue}n=p,p=a}else-1!==n?(p=65536+1024*(n-55296)+(p-56320),n=-1):p=a;else-1!==n&&(r=p,p=a,n=-1);var l=a;if(void 0!==o&&p!=a){var u=o[p];if("object"==typeof u){o=u;continue}"number"==typeof u?l=u:null==u&&void 0!==(u=o[-1])&&(l=u,r=p),o=void 0}else if(p>=0){var m=this.encodeTable[p>>8];if(void 0!==m&&(l=m[255&p]),l<=-10){o=this.encodeTableSeq[-10-l];continue}if(l==a&&this.gb18030){var f=d(this.gb18030.uChars,p);if(-1!=f){l=this.gb18030.gbChars[f]+(p-this.gb18030.uChars[f]);t[c++]=129+Math.floor(l/12600),l%=12600,t[c++]=48+Math.floor(l/1260),l%=1260,t[c++]=129+Math.floor(l/10),l%=10,t[c++]=48+l;continue}}}l===a&&(l=this.defaultCharSingleByte),l<256?t[c++]=l:l<65536?(t[c++]=l>>8,t[c++]=255&l):(t[c++]=l>>16,t[c++]=l>>8&255,t[c++]=255&l)}return this.seqObj=o,this.leadSurrogate=n,t.slice(0,c)},l.prototype.end=function(){if(-1!==this.leadSurrogate||void 0!==this.seqObj){var e=i.alloc(10),t=0;if(this.seqObj){var n=this.seqObj[-1];void 0!==n&&(n<256?e[t++]=n:(e[t++]=n>>8,e[t++]=255&n)),this.seqObj=void 0}return-1!==this.leadSurrogate&&(e[t++]=this.defaultCharSingleByte,this.leadSurrogate=-1),e.slice(0,t)}},l.prototype.findIdx=d,u.prototype.write=function(e){var t=i.alloc(2*e.length),n=this.nodeIdx,s=this.prevBuf,c=this.prevBuf.length,p=-this.prevBuf.length;c>0&&(s=i.concat([s,e.slice(0,10)]));for(var l=0,u=0;l<e.length;l++){var m,f=l>=0?e[l]:s[l+c];if((m=this.decodeTables[n][f])>=0);else if(m===a)l=p,m=this.defaultCharUnicode.charCodeAt(0);else if(m===o){var h=p>=0?e.slice(p,l+1):s.slice(p+c,l+1+c),v=12600*(h[0]-129)+1260*(h[1]-48)+10*(h[2]-129)+(h[3]-48),x=d(this.gb18030.gbChars,v);m=this.gb18030.uChars[x]+v-this.gb18030.gbChars[x]}else{if(m<=r){n=r-m;continue}if(!(m<=-10))throw new Error("iconv-lite internal error: invalid decoding table value "+m+" at "+n+"/"+f);for(var g=this.decodeTableSeq[-10-m],b=0;b<g.length-1;b++)m=g[b],t[u++]=255&m,t[u++]=m>>8;m=g[g.length-1]}if(m>65535){m-=65536;var y=55296+Math.floor(m/1024);t[u++]=255&y,t[u++]=y>>8,m=56320+m%1024}t[u++]=255&m,t[u++]=m>>8,n=0,p=l+1}return this.nodeIdx=n,this.prevBuf=p>=0?e.slice(p):s.slice(p+c),t.slice(0,u).toString("ucs2")},u.prototype.end=function(){for(var e="";this.prevBuf.length>0;){e+=this.defaultCharUnicode;var t=this.prevBuf.slice(1);this.prevBuf=i.alloc(0),this.nodeIdx=0,t.length>0&&(e+=this.write(t))}return this.nodeIdx=0,e}},function(e,t,n){"use strict";e.exports={shiftjis:{type:"_dbcs",table:function(){return n(100)},encodeAdd:{"¥":92,"‾":126},encodeSkipVals:[{from:60736,to:63808}]},csshiftjis:"shiftjis",mskanji:"shiftjis",sjis:"shiftjis",windows31j:"shiftjis",ms31j:"shiftjis",xsjis:"shiftjis",windows932:"shiftjis",ms932:"shiftjis",932:"shiftjis",cp932:"shiftjis",eucjp:{type:"_dbcs",table:function(){return n(101)},encodeAdd:{"¥":92,"‾":126}},gb2312:"cp936",gb231280:"cp936",gb23121980:"cp936",csgb2312:"cp936",csiso58gb231280:"cp936",euccn:"cp936",windows936:"cp936",ms936:"cp936",936:"cp936",cp936:{type:"_dbcs",table:function(){return n(27)}},gbk:{type:"_dbcs",table:function(){return n(27).concat(n(41))}},xgbk:"gbk",isoir58:"gbk",gb18030:{type:"_dbcs",table:function(){return n(27).concat(n(41))},gb18030:function(){return n(102)},encodeSkipVals:[128],encodeAdd:{"€":41699}},chinese:"gb18030",windows949:"cp949",ms949:"cp949",949:"cp949",cp949:{type:"_dbcs",table:function(){return n(103)}},cseuckr:"cp949",csksc56011987:"cp949",euckr:"cp949",isoir149:"cp949",korean:"cp949",ksc56011987:"cp949",ksc56011989:"cp949",ksc5601:"cp949",windows950:"cp950",ms950:"cp950",950:"cp950",cp950:{type:"_dbcs",table:function(){return n(42)}},big5:"big5hkscs",big5hkscs:{type:"_dbcs",table:function(){return n(42).concat(n(104))},encodeSkipVals:[41676]},cnbig5:"big5hkscs",csbig5:"big5hkscs",xxbig5:"big5hkscs"}},function(e){e.exports=[["0","\0",128],["a1","｡",62],["8140","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×"],["8180","÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓"],["81b8","∈∋⊆⊇⊂⊃∪∩"],["81c8","∧∨￢⇒⇔∀∃"],["81da","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],["81f0","Å‰♯♭♪†‡¶"],["81fc","◯"],["824f","０",9],["8260","Ａ",25],["8281","ａ",25],["829f","ぁ",82],["8340","ァ",62],["8380","ム",22],["839f","Α",16,"Σ",6],["83bf","α",16,"σ",6],["8440","А",5,"ЁЖ",25],["8470","а",5,"ёж",7],["8480","о",17],["849f","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],["8740","①",19,"Ⅰ",9],["875f","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],["877e","㍻"],["8780","〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],["889f","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],["8940","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円"],["8980","園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],["8a40","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫"],["8a80","橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],["8b40","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救"],["8b80","朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],["8c40","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨"],["8c80","劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],["8d40","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降"],["8d80","項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],["8e40","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止"],["8e80","死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],["8f40","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳"],["8f80","準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],["9040","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨"],["9080","逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],["9140","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻"],["9180","操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],["9240","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄"],["9280","逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],["9340","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬"],["9380","凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],["9440","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅"],["9480","楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],["9540","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷"],["9580","斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],["9640","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆"],["9680","摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],["9740","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲"],["9780","沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],["9840","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],["989f","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],["9940","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭"],["9980","凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],["9a40","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸"],["9a80","噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],["9b40","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀"],["9b80","它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],["9c40","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠"],["9c80","怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],["9d40","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫"],["9d80","捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],["9e40","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎"],["9e80","梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],["9f40","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯"],["9f80","麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],["e040","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝"],["e080","烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],["e140","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿"],["e180","痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],["e240","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰"],["e280","窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],["e340","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷"],["e380","縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],["e440","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤"],["e480","艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],["e540","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬"],["e580","蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],["e640","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧"],["e680","諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],["e740","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜"],["e780","轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],["e840","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙"],["e880","閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],["e940","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃"],["e980","騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],["ea40","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯"],["ea80","黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙"],["ed40","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏"],["ed80","塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],["ee40","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙"],["ee80","蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],["eeef","ⅰ",9,"￢￤＇＂"],["f040","",62],["f080","",124],["f140","",62],["f180","",124],["f240","",62],["f280","",124],["f340","",62],["f380","",124],["f440","",62],["f480","",124],["f540","",62],["f580","",124],["f640","",62],["f680","",124],["f740","",62],["f780","",124],["f840","",62],["f880","",124],["f940",""],["fa40","ⅰ",9,"Ⅰ",9,"￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊"],["fa80","兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯"],["fb40","涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神"],["fb80","祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙"],["fc40","髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"]]},function(e){e.exports=[["0","\0",127],["8ea1","｡",62],["a1a1","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇"],["a2a1","◆□■△▲▽▼※〒→←↑↓〓"],["a2ba","∈∋⊆⊇⊂⊃∪∩"],["a2ca","∧∨￢⇒⇔∀∃"],["a2dc","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],["a2f2","Å‰♯♭♪†‡¶"],["a2fe","◯"],["a3b0","０",9],["a3c1","Ａ",25],["a3e1","ａ",25],["a4a1","ぁ",82],["a5a1","ァ",85],["a6a1","Α",16,"Σ",6],["a6c1","α",16,"σ",6],["a7a1","А",5,"ЁЖ",25],["a7d1","а",5,"ёж",25],["a8a1","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],["ada1","①",19,"Ⅰ",9],["adc0","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],["addf","㍻〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],["b0a1","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],["b1a1","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応"],["b2a1","押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],["b3a1","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱"],["b4a1","粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],["b5a1","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京"],["b6a1","供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],["b7a1","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲"],["b8a1","検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],["b9a1","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込"],["baa1","此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],["bba1","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時"],["bca1","次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],["bda1","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償"],["bea1","勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],["bfa1","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾"],["c0a1","澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],["c1a1","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎"],["c2a1","臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],["c3a1","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵"],["c4a1","帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],["c5a1","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到"],["c6a1","董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],["c7a1","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦"],["c8a1","函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],["c9a1","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服"],["caa1","福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],["cba1","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満"],["cca1","漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],["cda1","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃"],["cea1","痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],["cfa1","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],["d0a1","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],["d1a1","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨"],["d2a1","辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],["d3a1","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉"],["d4a1","圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],["d5a1","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓"],["d6a1","屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],["d7a1","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚"],["d8a1","悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],["d9a1","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼"],["daa1","據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],["dba1","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍"],["dca1","棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],["dda1","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾"],["dea1","沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],["dfa1","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼"],["e0a1","燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],["e1a1","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰"],["e2a1","癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],["e3a1","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐"],["e4a1","筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],["e5a1","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺"],["e6a1","罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],["e7a1","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙"],["e8a1","茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],["e9a1","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙"],["eaa1","蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],["eba1","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫"],["eca1","譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],["eda1","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸"],["eea1","遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],["efa1","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞"],["f0a1","陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],["f1a1","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷"],["f2a1","髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],["f3a1","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠"],["f4a1","堯槇遙瑤凜熙"],["f9a1","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德"],["faa1","忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],["fba1","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚"],["fca1","釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],["fcf1","ⅰ",9,"￢￤＇＂"],["8fa2af","˘ˇ¸˙˝¯˛˚～΄΅"],["8fa2c2","¡¦¿"],["8fa2eb","ºª©®™¤№"],["8fa6e1","ΆΈΉΊΪ"],["8fa6e7","Ό"],["8fa6e9","ΎΫ"],["8fa6ec","Ώ"],["8fa6f1","άέήίϊΐόςύϋΰώ"],["8fa7c2","Ђ",10,"ЎЏ"],["8fa7f2","ђ",10,"ўџ"],["8fa9a1","ÆĐ"],["8fa9a4","Ħ"],["8fa9a6","Ĳ"],["8fa9a8","ŁĿ"],["8fa9ab","ŊØŒ"],["8fa9af","ŦÞ"],["8fa9c1","æđðħıĳĸłŀŉŋøœßŧþ"],["8faaa1","ÁÀÄÂĂǍĀĄÅÃĆĈČÇĊĎÉÈËÊĚĖĒĘ"],["8faaba","ĜĞĢĠĤÍÌÏÎǏİĪĮĨĴĶĹĽĻŃŇŅÑÓÒÖÔǑŐŌÕŔŘŖŚŜŠŞŤŢÚÙÜÛŬǓŰŪŲŮŨǗǛǙǕŴÝŸŶŹŽŻ"],["8faba1","áàäâăǎāąåãćĉčçċďéèëêěėēęǵĝğ"],["8fabbd","ġĥíìïîǐ"],["8fabc5","īįĩĵķĺľļńňņñóòöôǒőōõŕřŗśŝšşťţúùüûŭǔűūųůũǘǜǚǖŵýÿŷźžż"],["8fb0a1","丂丄丅丌丒丟丣两丨丫丮丯丰丵乀乁乄乇乑乚乜乣乨乩乴乵乹乿亍亖亗亝亯亹仃仐仚仛仠仡仢仨仯仱仳仵份仾仿伀伂伃伈伋伌伒伕伖众伙伮伱你伳伵伷伹伻伾佀佂佈佉佋佌佒佔佖佘佟佣佪佬佮佱佷佸佹佺佽佾侁侂侄"],["8fb1a1","侅侉侊侌侎侐侒侓侔侗侙侚侞侟侲侷侹侻侼侽侾俀俁俅俆俈俉俋俌俍俏俒俜俠俢俰俲俼俽俿倀倁倄倇倊倌倎倐倓倗倘倛倜倝倞倢倧倮倰倲倳倵偀偁偂偅偆偊偌偎偑偒偓偗偙偟偠偢偣偦偧偪偭偰偱倻傁傃傄傆傊傎傏傐"],["8fb2a1","傒傓傔傖傛傜傞",4,"傪傯傰傹傺傽僀僃僄僇僌僎僐僓僔僘僜僝僟僢僤僦僨僩僯僱僶僺僾儃儆儇儈儋儌儍儎僲儐儗儙儛儜儝儞儣儧儨儬儭儯儱儳儴儵儸儹兂兊兏兓兕兗兘兟兤兦兾冃冄冋冎冘冝冡冣冭冸冺冼冾冿凂"],["8fb3a1","凈减凑凒凓凕凘凞凢凥凮凲凳凴凷刁刂刅划刓刕刖刘刢刨刱刲刵刼剅剉剕剗剘剚剜剟剠剡剦剮剷剸剹劀劂劅劊劌劓劕劖劗劘劚劜劤劥劦劧劯劰劶劷劸劺劻劽勀勄勆勈勌勏勑勔勖勛勜勡勥勨勩勪勬勰勱勴勶勷匀匃匊匋"],["8fb4a1","匌匑匓匘匛匜匞匟匥匧匨匩匫匬匭匰匲匵匼匽匾卂卌卋卙卛卡卣卥卬卭卲卹卾厃厇厈厎厓厔厙厝厡厤厪厫厯厲厴厵厷厸厺厽叀叅叏叒叓叕叚叝叞叠另叧叵吂吓吚吡吧吨吪启吱吴吵呃呄呇呍呏呞呢呤呦呧呩呫呭呮呴呿"],["8fb5a1","咁咃咅咈咉咍咑咕咖咜咟咡咦咧咩咪咭咮咱咷咹咺咻咿哆哊响哎哠哪哬哯哶哼哾哿唀唁唅唈唉唌唍唎唕唪唫唲唵唶唻唼唽啁啇啉啊啍啐啑啘啚啛啞啠啡啤啦啿喁喂喆喈喎喏喑喒喓喔喗喣喤喭喲喿嗁嗃嗆嗉嗋嗌嗎嗑嗒"],["8fb6a1","嗓嗗嗘嗛嗞嗢嗩嗶嗿嘅嘈嘊嘍",5,"嘙嘬嘰嘳嘵嘷嘹嘻嘼嘽嘿噀噁噃噄噆噉噋噍噏噔噞噠噡噢噣噦噩噭噯噱噲噵嚄嚅嚈嚋嚌嚕嚙嚚嚝嚞嚟嚦嚧嚨嚩嚫嚬嚭嚱嚳嚷嚾囅囉囊囋囏囐囌囍囙囜囝囟囡囤",4,"囱囫园"],["8fb7a1","囶囷圁圂圇圊圌圑圕圚圛圝圠圢圣圤圥圩圪圬圮圯圳圴圽圾圿坅坆坌坍坒坢坥坧坨坫坭",4,"坳坴坵坷坹坺坻坼坾垁垃垌垔垗垙垚垜垝垞垟垡垕垧垨垩垬垸垽埇埈埌埏埕埝埞埤埦埧埩埭埰埵埶埸埽埾埿堃堄堈堉埡"],["8fb8a1","堌堍堛堞堟堠堦堧堭堲堹堿塉塌塍塏塐塕塟塡塤塧塨塸塼塿墀墁墇墈墉墊墌墍墏墐墔墖墝墠墡墢墦墩墱墲壄墼壂壈壍壎壐壒壔壖壚壝壡壢壩壳夅夆夋夌夒夓夔虁夝夡夣夤夨夯夰夳夵夶夿奃奆奒奓奙奛奝奞奟奡奣奫奭"],["8fb9a1","奯奲奵奶她奻奼妋妌妎妒妕妗妟妤妧妭妮妯妰妳妷妺妼姁姃姄姈姊姍姒姝姞姟姣姤姧姮姯姱姲姴姷娀娄娌娍娎娒娓娞娣娤娧娨娪娭娰婄婅婇婈婌婐婕婞婣婥婧婭婷婺婻婾媋媐媓媖媙媜媞媟媠媢媧媬媱媲媳媵媸媺媻媿"],["8fbaa1","嫄嫆嫈嫏嫚嫜嫠嫥嫪嫮嫵嫶嫽嬀嬁嬈嬗嬴嬙嬛嬝嬡嬥嬭嬸孁孋孌孒孖孞孨孮孯孼孽孾孿宁宄宆宊宎宐宑宓宔宖宨宩宬宭宯宱宲宷宺宼寀寁寍寏寖",4,"寠寯寱寴寽尌尗尞尟尣尦尩尫尬尮尰尲尵尶屙屚屜屢屣屧屨屩"],["8fbba1","屭屰屴屵屺屻屼屽岇岈岊岏岒岝岟岠岢岣岦岪岲岴岵岺峉峋峒峝峗峮峱峲峴崁崆崍崒崫崣崤崦崧崱崴崹崽崿嵂嵃嵆嵈嵕嵑嵙嵊嵟嵠嵡嵢嵤嵪嵭嵰嵹嵺嵾嵿嶁嶃嶈嶊嶒嶓嶔嶕嶙嶛嶟嶠嶧嶫嶰嶴嶸嶹巃巇巋巐巎巘巙巠巤"],["8fbca1","巩巸巹帀帇帍帒帔帕帘帟帠帮帨帲帵帾幋幐幉幑幖幘幛幜幞幨幪",4,"幰庀庋庎庢庤庥庨庪庬庱庳庽庾庿廆廌廋廎廑廒廔廕廜廞廥廫异弆弇弈弎弙弜弝弡弢弣弤弨弫弬弮弰弴弶弻弽弿彀彄彅彇彍彐彔彘彛彠彣彤彧"],["8fbda1","彯彲彴彵彸彺彽彾徉徍徏徖徜徝徢徧徫徤徬徯徰徱徸忄忇忈忉忋忐",4,"忞忡忢忨忩忪忬忭忮忯忲忳忶忺忼怇怊怍怓怔怗怘怚怟怤怭怳怵恀恇恈恉恌恑恔恖恗恝恡恧恱恾恿悂悆悈悊悎悑悓悕悘悝悞悢悤悥您悰悱悷"],["8fbea1","悻悾惂惄惈惉惊惋惎惏惔惕惙惛惝惞惢惥惲惵惸惼惽愂愇愊愌愐",4,"愖愗愙愜愞愢愪愫愰愱愵愶愷愹慁慅慆慉慞慠慬慲慸慻慼慿憀憁憃憄憋憍憒憓憗憘憜憝憟憠憥憨憪憭憸憹憼懀懁懂懎懏懕懜懝懞懟懡懢懧懩懥"],["8fbfa1","懬懭懯戁戃戄戇戓戕戜戠戢戣戧戩戫戹戽扂扃扄扆扌扐扑扒扔扖扚扜扤扭扯扳扺扽抍抎抏抐抦抨抳抶抷抺抾抿拄拎拕拖拚拪拲拴拼拽挃挄挊挋挍挐挓挖挘挩挪挭挵挶挹挼捁捂捃捄捆捊捋捎捒捓捔捘捛捥捦捬捭捱捴捵"],["8fc0a1","捸捼捽捿掂掄掇掊掐掔掕掙掚掞掤掦掭掮掯掽揁揅揈揎揑揓揔揕揜揠揥揪揬揲揳揵揸揹搉搊搐搒搔搘搞搠搢搤搥搩搪搯搰搵搽搿摋摏摑摒摓摔摚摛摜摝摟摠摡摣摭摳摴摻摽撅撇撏撐撑撘撙撛撝撟撡撣撦撨撬撳撽撾撿"],["8fc1a1","擄擉擊擋擌擎擐擑擕擗擤擥擩擪擭擰擵擷擻擿攁攄攈攉攊攏攓攔攖攙攛攞攟攢攦攩攮攱攺攼攽敃敇敉敐敒敔敟敠敧敫敺敽斁斅斊斒斕斘斝斠斣斦斮斲斳斴斿旂旈旉旎旐旔旖旘旟旰旲旴旵旹旾旿昀昄昈昉昍昑昒昕昖昝"],["8fc2a1","昞昡昢昣昤昦昩昪昫昬昮昰昱昳昹昷晀晅晆晊晌晑晎晗晘晙晛晜晠晡曻晪晫晬晾晳晵晿晷晸晹晻暀晼暋暌暍暐暒暙暚暛暜暟暠暤暭暱暲暵暻暿曀曂曃曈曌曎曏曔曛曟曨曫曬曮曺朅朇朎朓朙朜朠朢朳朾杅杇杈杌杔杕杝"],["8fc3a1","杦杬杮杴杶杻极构枎枏枑枓枖枘枙枛枰枱枲枵枻枼枽柹柀柂柃柅柈柉柒柗柙柜柡柦柰柲柶柷桒栔栙栝栟栨栧栬栭栯栰栱栳栻栿桄桅桊桌桕桗桘桛桫桮",4,"桵桹桺桻桼梂梄梆梈梖梘梚梜梡梣梥梩梪梮梲梻棅棈棌棏"],["8fc4a1","棐棑棓棖棙棜棝棥棨棪棫棬棭棰棱棵棶棻棼棽椆椉椊椐椑椓椖椗椱椳椵椸椻楂楅楉楎楗楛楣楤楥楦楨楩楬楰楱楲楺楻楿榀榍榒榖榘榡榥榦榨榫榭榯榷榸榺榼槅槈槑槖槗槢槥槮槯槱槳槵槾樀樁樃樏樑樕樚樝樠樤樨樰樲"],["8fc5a1","樴樷樻樾樿橅橆橉橊橎橐橑橒橕橖橛橤橧橪橱橳橾檁檃檆檇檉檋檑檛檝檞檟檥檫檯檰檱檴檽檾檿櫆櫉櫈櫌櫐櫔櫕櫖櫜櫝櫤櫧櫬櫰櫱櫲櫼櫽欂欃欆欇欉欏欐欑欗欛欞欤欨欫欬欯欵欶欻欿歆歊歍歒歖歘歝歠歧歫歮歰歵歽"],["8fc6a1","歾殂殅殗殛殟殠殢殣殨殩殬殭殮殰殸殹殽殾毃毄毉毌毖毚毡毣毦毧毮毱毷毹毿氂氄氅氉氍氎氐氒氙氟氦氧氨氬氮氳氵氶氺氻氿汊汋汍汏汒汔汙汛汜汫汭汯汴汶汸汹汻沅沆沇沉沔沕沗沘沜沟沰沲沴泂泆泍泏泐泑泒泔泖"],["8fc7a1","泚泜泠泧泩泫泬泮泲泴洄洇洊洎洏洑洓洚洦洧洨汧洮洯洱洹洼洿浗浞浟浡浥浧浯浰浼涂涇涑涒涔涖涗涘涪涬涴涷涹涽涿淄淈淊淎淏淖淛淝淟淠淢淥淩淯淰淴淶淼渀渄渞渢渧渲渶渹渻渼湄湅湈湉湋湏湑湒湓湔湗湜湝湞"],["8fc8a1","湢湣湨湳湻湽溍溓溙溠溧溭溮溱溳溻溿滀滁滃滇滈滊滍滎滏滫滭滮滹滻滽漄漈漊漌漍漖漘漚漛漦漩漪漯漰漳漶漻漼漭潏潑潒潓潗潙潚潝潞潡潢潨潬潽潾澃澇澈澋澌澍澐澒澓澔澖澚澟澠澥澦澧澨澮澯澰澵澶澼濅濇濈濊"],["8fc9a1","濚濞濨濩濰濵濹濼濽瀀瀅瀆瀇瀍瀗瀠瀣瀯瀴瀷瀹瀼灃灄灈灉灊灋灔灕灝灞灎灤灥灬灮灵灶灾炁炅炆炔",4,"炛炤炫炰炱炴炷烊烑烓烔烕烖烘烜烤烺焃",4,"焋焌焏焞焠焫焭焯焰焱焸煁煅煆煇煊煋煐煒煗煚煜煞煠"],["8fcaa1","煨煹熀熅熇熌熒熚熛熠熢熯熰熲熳熺熿燀燁燄燋燌燓燖燙燚燜燸燾爀爇爈爉爓爗爚爝爟爤爫爯爴爸爹牁牂牃牅牎牏牐牓牕牖牚牜牞牠牣牨牫牮牯牱牷牸牻牼牿犄犉犍犎犓犛犨犭犮犱犴犾狁狇狉狌狕狖狘狟狥狳狴狺狻"],["8fcba1","狾猂猄猅猇猋猍猒猓猘猙猞猢猤猧猨猬猱猲猵猺猻猽獃獍獐獒獖獘獝獞獟獠獦獧獩獫獬獮獯獱獷獹獼玀玁玃玅玆玎玐玓玕玗玘玜玞玟玠玢玥玦玪玫玭玵玷玹玼玽玿珅珆珉珋珌珏珒珓珖珙珝珡珣珦珧珩珴珵珷珹珺珻珽"],["8fcca1","珿琀琁琄琇琊琑琚琛琤琦琨",9,"琹瑀瑃瑄瑆瑇瑋瑍瑑瑒瑗瑝瑢瑦瑧瑨瑫瑭瑮瑱瑲璀璁璅璆璇璉璏璐璑璒璘璙璚璜璟璠璡璣璦璨璩璪璫璮璯璱璲璵璹璻璿瓈瓉瓌瓐瓓瓘瓚瓛瓞瓟瓤瓨瓪瓫瓯瓴瓺瓻瓼瓿甆"],["8fcda1","甒甖甗甠甡甤甧甩甪甯甶甹甽甾甿畀畃畇畈畎畐畒畗畞畟畡畯畱畹",5,"疁疅疐疒疓疕疙疜疢疤疴疺疿痀痁痄痆痌痎痏痗痜痟痠痡痤痧痬痮痯痱痹瘀瘂瘃瘄瘇瘈瘊瘌瘏瘒瘓瘕瘖瘙瘛瘜瘝瘞瘣瘥瘦瘩瘭瘲瘳瘵瘸瘹"],["8fcea1","瘺瘼癊癀癁癃癄癅癉癋癕癙癟癤癥癭癮癯癱癴皁皅皌皍皕皛皜皝皟皠皢",6,"皪皭皽盁盅盉盋盌盎盔盙盠盦盨盬盰盱盶盹盼眀眆眊眎眒眔眕眗眙眚眜眢眨眭眮眯眴眵眶眹眽眾睂睅睆睊睍睎睏睒睖睗睜睞睟睠睢"],["8fcfa1","睤睧睪睬睰睲睳睴睺睽瞀瞄瞌瞍瞔瞕瞖瞚瞟瞢瞧瞪瞮瞯瞱瞵瞾矃矉矑矒矕矙矞矟矠矤矦矪矬矰矱矴矸矻砅砆砉砍砎砑砝砡砢砣砭砮砰砵砷硃硄硇硈硌硎硒硜硞硠硡硣硤硨硪确硺硾碊碏碔碘碡碝碞碟碤碨碬碭碰碱碲碳"],["8fd0a1","碻碽碿磇磈磉磌磎磒磓磕磖磤磛磟磠磡磦磪磲磳礀磶磷磺磻磿礆礌礐礚礜礞礟礠礥礧礩礭礱礴礵礻礽礿祄祅祆祊祋祏祑祔祘祛祜祧祩祫祲祹祻祼祾禋禌禑禓禔禕禖禘禛禜禡禨禩禫禯禱禴禸离秂秄秇秈秊秏秔秖秚秝秞"],["8fd1a1","秠秢秥秪秫秭秱秸秼稂稃稇稉稊稌稑稕稛稞稡稧稫稭稯稰稴稵稸稹稺穄穅穇穈穌穕穖穙穜穝穟穠穥穧穪穭穵穸穾窀窂窅窆窊窋窐窑窔窞窠窣窬窳窵窹窻窼竆竉竌竎竑竛竨竩竫竬竱竴竻竽竾笇笔笟笣笧笩笪笫笭笮笯笰"],["8fd2a1","笱笴笽笿筀筁筇筎筕筠筤筦筩筪筭筯筲筳筷箄箉箎箐箑箖箛箞箠箥箬箯箰箲箵箶箺箻箼箽篂篅篈篊篔篖篗篙篚篛篨篪篲篴篵篸篹篺篼篾簁簂簃簄簆簉簋簌簎簏簙簛簠簥簦簨簬簱簳簴簶簹簺籆籊籕籑籒籓籙",5],["8fd3a1","籡籣籧籩籭籮籰籲籹籼籽粆粇粏粔粞粠粦粰粶粷粺粻粼粿糄糇糈糉糍糏糓糔糕糗糙糚糝糦糩糫糵紃紇紈紉紏紑紒紓紖紝紞紣紦紪紭紱紼紽紾絀絁絇絈絍絑絓絗絙絚絜絝絥絧絪絰絸絺絻絿綁綂綃綅綆綈綋綌綍綑綖綗綝"],["8fd4a1","綞綦綧綪綳綶綷綹緂",4,"緌緍緎緗緙縀緢緥緦緪緫緭緱緵緶緹緺縈縐縑縕縗縜縝縠縧縨縬縭縯縳縶縿繄繅繇繎繐繒繘繟繡繢繥繫繮繯繳繸繾纁纆纇纊纍纑纕纘纚纝纞缼缻缽缾缿罃罄罇罏罒罓罛罜罝罡罣罤罥罦罭"],["8fd5a1","罱罽罾罿羀羋羍羏羐羑羖羗羜羡羢羦羪羭羴羼羿翀翃翈翎翏翛翟翣翥翨翬翮翯翲翺翽翾翿耇耈耊耍耎耏耑耓耔耖耝耞耟耠耤耦耬耮耰耴耵耷耹耺耼耾聀聄聠聤聦聭聱聵肁肈肎肜肞肦肧肫肸肹胈胍胏胒胔胕胗胘胠胭胮"],["8fd6a1","胰胲胳胶胹胺胾脃脋脖脗脘脜脞脠脤脧脬脰脵脺脼腅腇腊腌腒腗腠腡腧腨腩腭腯腷膁膐膄膅膆膋膎膖膘膛膞膢膮膲膴膻臋臃臅臊臎臏臕臗臛臝臞臡臤臫臬臰臱臲臵臶臸臹臽臿舀舃舏舓舔舙舚舝舡舢舨舲舴舺艃艄艅艆"],["8fd7a1","艋艎艏艑艖艜艠艣艧艭艴艻艽艿芀芁芃芄芇芉芊芎芑芔芖芘芚芛芠芡芣芤芧芨芩芪芮芰芲芴芷芺芼芾芿苆苐苕苚苠苢苤苨苪苭苯苶苷苽苾茀茁茇茈茊茋荔茛茝茞茟茡茢茬茭茮茰茳茷茺茼茽荂荃荄荇荍荎荑荕荖荗荰荸"],["8fd8a1","荽荿莀莂莄莆莍莒莔莕莘莙莛莜莝莦莧莩莬莾莿菀菇菉菏菐菑菔菝荓菨菪菶菸菹菼萁萆萊萏萑萕萙莭萯萹葅葇葈葊葍葏葑葒葖葘葙葚葜葠葤葥葧葪葰葳葴葶葸葼葽蒁蒅蒒蒓蒕蒞蒦蒨蒩蒪蒯蒱蒴蒺蒽蒾蓀蓂蓇蓈蓌蓏蓓"],["8fd9a1","蓜蓧蓪蓯蓰蓱蓲蓷蔲蓺蓻蓽蔂蔃蔇蔌蔎蔐蔜蔞蔢蔣蔤蔥蔧蔪蔫蔯蔳蔴蔶蔿蕆蕏",4,"蕖蕙蕜",6,"蕤蕫蕯蕹蕺蕻蕽蕿薁薅薆薉薋薌薏薓薘薝薟薠薢薥薧薴薶薷薸薼薽薾薿藂藇藊藋藎薭藘藚藟藠藦藨藭藳藶藼"],["8fdaa1","藿蘀蘄蘅蘍蘎蘐蘑蘒蘘蘙蘛蘞蘡蘧蘩蘶蘸蘺蘼蘽虀虂虆虒虓虖虗虘虙虝虠",4,"虩虬虯虵虶虷虺蚍蚑蚖蚘蚚蚜蚡蚦蚧蚨蚭蚱蚳蚴蚵蚷蚸蚹蚿蛀蛁蛃蛅蛑蛒蛕蛗蛚蛜蛠蛣蛥蛧蚈蛺蛼蛽蜄蜅蜇蜋蜎蜏蜐蜓蜔蜙蜞蜟蜡蜣"],["8fdba1","蜨蜮蜯蜱蜲蜹蜺蜼蜽蜾蝀蝃蝅蝍蝘蝝蝡蝤蝥蝯蝱蝲蝻螃",6,"螋螌螐螓螕螗螘螙螞螠螣螧螬螭螮螱螵螾螿蟁蟈蟉蟊蟎蟕蟖蟙蟚蟜蟟蟢蟣蟤蟪蟫蟭蟱蟳蟸蟺蟿蠁蠃蠆蠉蠊蠋蠐蠙蠒蠓蠔蠘蠚蠛蠜蠞蠟蠨蠭蠮蠰蠲蠵"],["8fdca1","蠺蠼衁衃衅衈衉衊衋衎衑衕衖衘衚衜衟衠衤衩衱衹衻袀袘袚袛袜袟袠袨袪袺袽袾裀裊",4,"裑裒裓裛裞裧裯裰裱裵裷褁褆褍褎褏褕褖褘褙褚褜褠褦褧褨褰褱褲褵褹褺褾襀襂襅襆襉襏襒襗襚襛襜襡襢襣襫襮襰襳襵襺"],["8fdda1","襻襼襽覉覍覐覔覕覛覜覟覠覥覰覴覵覶覷覼觔",4,"觥觩觫觭觱觳觶觹觽觿訄訅訇訏訑訒訔訕訞訠訢訤訦訫訬訯訵訷訽訾詀詃詅詇詉詍詎詓詖詗詘詜詝詡詥詧詵詶詷詹詺詻詾詿誀誃誆誋誏誐誒誖誗誙誟誧誩誮誯誳"],["8fdea1","誶誷誻誾諃諆諈諉諊諑諓諔諕諗諝諟諬諰諴諵諶諼諿謅謆謋謑謜謞謟謊謭謰謷謼譂",4,"譈譒譓譔譙譍譞譣譭譶譸譹譼譾讁讄讅讋讍讏讔讕讜讞讟谸谹谽谾豅豇豉豋豏豑豓豔豗豘豛豝豙豣豤豦豨豩豭豳豵豶豻豾貆"],["8fdfa1","貇貋貐貒貓貙貛貜貤貹貺賅賆賉賋賏賖賕賙賝賡賨賬賯賰賲賵賷賸賾賿贁贃贉贒贗贛赥赩赬赮赿趂趄趈趍趐趑趕趞趟趠趦趫趬趯趲趵趷趹趻跀跅跆跇跈跊跎跑跔跕跗跙跤跥跧跬跰趼跱跲跴跽踁踄踅踆踋踑踔踖踠踡踢"],["8fe0a1","踣踦踧踱踳踶踷踸踹踽蹀蹁蹋蹍蹎蹏蹔蹛蹜蹝蹞蹡蹢蹩蹬蹭蹯蹰蹱蹹蹺蹻躂躃躉躐躒躕躚躛躝躞躢躧躩躭躮躳躵躺躻軀軁軃軄軇軏軑軔軜軨軮軰軱軷軹軺軭輀輂輇輈輏輐輖輗輘輞輠輡輣輥輧輨輬輭輮輴輵輶輷輺轀轁"],["8fe1a1","轃轇轏轑",4,"轘轝轞轥辝辠辡辤辥辦辵辶辸达迀迁迆迊迋迍运迒迓迕迠迣迤迨迮迱迵迶迻迾适逄逈逌逘逛逨逩逯逪逬逭逳逴逷逿遃遄遌遛遝遢遦遧遬遰遴遹邅邈邋邌邎邐邕邗邘邙邛邠邡邢邥邰邲邳邴邶邽郌邾郃"],["8fe2a1","郄郅郇郈郕郗郘郙郜郝郟郥郒郶郫郯郰郴郾郿鄀鄄鄅鄆鄈鄍鄐鄔鄖鄗鄘鄚鄜鄞鄠鄥鄢鄣鄧鄩鄮鄯鄱鄴鄶鄷鄹鄺鄼鄽酃酇酈酏酓酗酙酚酛酡酤酧酭酴酹酺酻醁醃醅醆醊醎醑醓醔醕醘醞醡醦醨醬醭醮醰醱醲醳醶醻醼醽醿"],["8fe3a1","釂釃釅釓釔釗釙釚釞釤釥釩釪釬",5,"釷釹釻釽鈀鈁鈄鈅鈆鈇鈉鈊鈌鈐鈒鈓鈖鈘鈜鈝鈣鈤鈥鈦鈨鈮鈯鈰鈳鈵鈶鈸鈹鈺鈼鈾鉀鉂鉃鉆鉇鉊鉍鉎鉏鉑鉘鉙鉜鉝鉠鉡鉥鉧鉨鉩鉮鉯鉰鉵",4,"鉻鉼鉽鉿銈銉銊銍銎銒銗"],["8fe4a1","銙銟銠銤銥銧銨銫銯銲銶銸銺銻銼銽銿",4,"鋅鋆鋇鋈鋋鋌鋍鋎鋐鋓鋕鋗鋘鋙鋜鋝鋟鋠鋡鋣鋥鋧鋨鋬鋮鋰鋹鋻鋿錀錂錈錍錑錔錕錜錝錞錟錡錤錥錧錩錪錳錴錶錷鍇鍈鍉鍐鍑鍒鍕鍗鍘鍚鍞鍤鍥鍧鍩鍪鍭鍯鍰鍱鍳鍴鍶"],["8fe5a1","鍺鍽鍿鎀鎁鎂鎈鎊鎋鎍鎏鎒鎕鎘鎛鎞鎡鎣鎤鎦鎨鎫鎴鎵鎶鎺鎩鏁鏄鏅鏆鏇鏉",4,"鏓鏙鏜鏞鏟鏢鏦鏧鏹鏷鏸鏺鏻鏽鐁鐂鐄鐈鐉鐍鐎鐏鐕鐖鐗鐟鐮鐯鐱鐲鐳鐴鐻鐿鐽鑃鑅鑈鑊鑌鑕鑙鑜鑟鑡鑣鑨鑫鑭鑮鑯鑱鑲钄钃镸镹"],["8fe6a1","镾閄閈閌閍閎閝閞閟閡閦閩閫閬閴閶閺閽閿闆闈闉闋闐闑闒闓闙闚闝闞闟闠闤闦阝阞阢阤阥阦阬阱阳阷阸阹阺阼阽陁陒陔陖陗陘陡陮陴陻陼陾陿隁隂隃隄隉隑隖隚隝隟隤隥隦隩隮隯隳隺雊雒嶲雘雚雝雞雟雩雯雱雺霂"],["8fe7a1","霃霅霉霚霛霝霡霢霣霨霱霳靁靃靊靎靏靕靗靘靚靛靣靧靪靮靳靶靷靸靻靽靿鞀鞉鞕鞖鞗鞙鞚鞞鞟鞢鞬鞮鞱鞲鞵鞶鞸鞹鞺鞼鞾鞿韁韄韅韇韉韊韌韍韎韐韑韔韗韘韙韝韞韠韛韡韤韯韱韴韷韸韺頇頊頙頍頎頔頖頜頞頠頣頦"],["8fe8a1","頫頮頯頰頲頳頵頥頾顄顇顊顑顒顓顖顗顙顚顢顣顥顦顪顬颫颭颮颰颴颷颸颺颻颿飂飅飈飌飡飣飥飦飧飪飳飶餂餇餈餑餕餖餗餚餛餜餟餢餦餧餫餱",4,"餹餺餻餼饀饁饆饇饈饍饎饔饘饙饛饜饞饟饠馛馝馟馦馰馱馲馵"],["8fe9a1","馹馺馽馿駃駉駓駔駙駚駜駞駧駪駫駬駰駴駵駹駽駾騂騃騄騋騌騐騑騖騞騠騢騣騤騧騭騮騳騵騶騸驇驁驄驊驋驌驎驑驔驖驝骪骬骮骯骲骴骵骶骹骻骾骿髁髃髆髈髎髐髒髕髖髗髛髜髠髤髥髧髩髬髲髳髵髹髺髽髿",4],["8feaa1","鬄鬅鬈鬉鬋鬌鬍鬎鬐鬒鬖鬙鬛鬜鬠鬦鬫鬭鬳鬴鬵鬷鬹鬺鬽魈魋魌魕魖魗魛魞魡魣魥魦魨魪",4,"魳魵魷魸魹魿鮀鮄鮅鮆鮇鮉鮊鮋鮍鮏鮐鮔鮚鮝鮞鮦鮧鮩鮬鮰鮱鮲鮷鮸鮻鮼鮾鮿鯁鯇鯈鯎鯐鯗鯘鯝鯟鯥鯧鯪鯫鯯鯳鯷鯸"],["8feba1","鯹鯺鯽鯿鰀鰂鰋鰏鰑鰖鰘鰙鰚鰜鰞鰢鰣鰦",4,"鰱鰵鰶鰷鰽鱁鱃鱄鱅鱉鱊鱎鱏鱐鱓鱔鱖鱘鱛鱝鱞鱟鱣鱩鱪鱜鱫鱨鱮鱰鱲鱵鱷鱻鳦鳲鳷鳹鴋鴂鴑鴗鴘鴜鴝鴞鴯鴰鴲鴳鴴鴺鴼鵅鴽鵂鵃鵇鵊鵓鵔鵟鵣鵢鵥鵩鵪鵫鵰鵶鵷鵻"],["8feca1","鵼鵾鶃鶄鶆鶊鶍鶎鶒鶓鶕鶖鶗鶘鶡鶪鶬鶮鶱鶵鶹鶼鶿鷃鷇鷉鷊鷔鷕鷖鷗鷚鷞鷟鷠鷥鷧鷩鷫鷮鷰鷳鷴鷾鸊鸂鸇鸎鸐鸑鸒鸕鸖鸙鸜鸝鹺鹻鹼麀麂麃麄麅麇麎麏麖麘麛麞麤麨麬麮麯麰麳麴麵黆黈黋黕黟黤黧黬黭黮黰黱黲黵"],["8feda1","黸黿鼂鼃鼉鼏鼐鼑鼒鼔鼖鼗鼙鼚鼛鼟鼢鼦鼪鼫鼯鼱鼲鼴鼷鼹鼺鼼鼽鼿齁齃",4,"齓齕齖齗齘齚齝齞齨齩齭",4,"齳齵齺齽龏龐龑龒龔龖龗龞龡龢龣龥"]]},function(e){e.exports={uChars:[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],gbChars:[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189e3]}},function(e){e.exports=[["0","\0",127],["8141","갂갃갅갆갋",4,"갘갞갟갡갢갣갥",6,"갮갲갳갴"],["8161","갵갶갷갺갻갽갾갿걁",9,"걌걎",5,"걕"],["8181","걖걗걙걚걛걝",18,"걲걳걵걶걹걻",4,"겂겇겈겍겎겏겑겒겓겕",6,"겞겢",5,"겫겭겮겱",6,"겺겾겿곀곂곃곅곆곇곉곊곋곍",7,"곖곘",7,"곢곣곥곦곩곫곭곮곲곴곷",4,"곾곿괁괂괃괅괇",4,"괎괐괒괓"],["8241","괔괕괖괗괙괚괛괝괞괟괡",7,"괪괫괮",5],["8261","괶괷괹괺괻괽",6,"굆굈굊",5,"굑굒굓굕굖굗"],["8281","굙",7,"굢굤",7,"굮굯굱굲굷굸굹굺굾궀궃",4,"궊궋궍궎궏궑",10,"궞",5,"궥",17,"궸",7,"귂귃귅귆귇귉",6,"귒귔",7,"귝귞귟귡귢귣귥",18],["8341","귺귻귽귾긂",5,"긊긌긎",5,"긕",7],["8361","긝",18,"긲긳긵긶긹긻긼"],["8381","긽긾긿깂깄깇깈깉깋깏깑깒깓깕깗",4,"깞깢깣깤깦깧깪깫깭깮깯깱",6,"깺깾",5,"꺆",5,"꺍",46,"꺿껁껂껃껅",6,"껎껒",5,"껚껛껝",8],["8441","껦껧껩껪껬껮",5,"껵껶껷껹껺껻껽",8],["8461","꼆꼉꼊꼋꼌꼎꼏꼑",18],["8481","꼤",7,"꼮꼯꼱꼳꼵",6,"꼾꽀꽄꽅꽆꽇꽊",5,"꽑",10,"꽞",5,"꽦",18,"꽺",5,"꾁꾂꾃꾅꾆꾇꾉",6,"꾒꾓꾔꾖",5,"꾝",26,"꾺꾻꾽꾾"],["8541","꾿꿁",5,"꿊꿌꿏",4,"꿕",6,"꿝",4],["8561","꿢",5,"꿪",5,"꿲꿳꿵꿶꿷꿹",6,"뀂뀃"],["8581","뀅",6,"뀍뀎뀏뀑뀒뀓뀕",6,"뀞",9,"뀩",26,"끆끇끉끋끍끏끐끑끒끖끘끚끛끜끞",29,"끾끿낁낂낃낅",6,"낎낐낒",5,"낛낝낞낣낤"],["8641","낥낦낧낪낰낲낶낷낹낺낻낽",6,"냆냊",5,"냒"],["8661","냓냕냖냗냙",6,"냡냢냣냤냦",10],["8681","냱",22,"넊넍넎넏넑넔넕넖넗넚넞",4,"넦넧넩넪넫넭",6,"넶넺",5,"녂녃녅녆녇녉",6,"녒녓녖녗녙녚녛녝녞녟녡",22,"녺녻녽녾녿놁놃",4,"놊놌놎놏놐놑놕놖놗놙놚놛놝"],["8741","놞",9,"놩",15],["8761","놹",18,"뇍뇎뇏뇑뇒뇓뇕"],["8781","뇖",5,"뇞뇠",7,"뇪뇫뇭뇮뇯뇱",7,"뇺뇼뇾",5,"눆눇눉눊눍",6,"눖눘눚",5,"눡",18,"눵",6,"눽",26,"뉙뉚뉛뉝뉞뉟뉡",6,"뉪",4],["8841","뉯",4,"뉶",5,"뉽",6,"늆늇늈늊",4],["8861","늏늒늓늕늖늗늛",4,"늢늤늧늨늩늫늭늮늯늱늲늳늵늶늷"],["8881","늸",15,"닊닋닍닎닏닑닓",4,"닚닜닞닟닠닡닣닧닩닪닰닱닲닶닼닽닾댂댃댅댆댇댉",6,"댒댖",5,"댝",54,"덗덙덚덝덠덡덢덣"],["8941","덦덨덪덬덭덯덲덳덵덶덷덹",6,"뎂뎆",5,"뎍"],["8961","뎎뎏뎑뎒뎓뎕",10,"뎢",5,"뎩뎪뎫뎭"],["8981","뎮",21,"돆돇돉돊돍돏돑돒돓돖돘돚돜돞돟돡돢돣돥돦돧돩",18,"돽",18,"됑",6,"됙됚됛됝됞됟됡",6,"됪됬",7,"됵",15],["8a41","둅",10,"둒둓둕둖둗둙",6,"둢둤둦"],["8a61","둧",4,"둭",18,"뒁뒂"],["8a81","뒃",4,"뒉",19,"뒞",5,"뒥뒦뒧뒩뒪뒫뒭",7,"뒶뒸뒺",5,"듁듂듃듅듆듇듉",6,"듑듒듓듔듖",5,"듞듟듡듢듥듧",4,"듮듰듲",5,"듹",26,"딖딗딙딚딝"],["8b41","딞",5,"딦딫",4,"딲딳딵딶딷딹",6,"땂땆"],["8b61","땇땈땉땊땎땏땑땒땓땕",6,"땞땢",8],["8b81","땫",52,"떢떣떥떦떧떩떬떭떮떯떲떶",4,"떾떿뗁뗂뗃뗅",6,"뗎뗒",5,"뗙",18,"뗭",18],["8c41","똀",15,"똒똓똕똖똗똙",4],["8c61","똞",6,"똦",5,"똭",6,"똵",5],["8c81","똻",12,"뙉",26,"뙥뙦뙧뙩",50,"뚞뚟뚡뚢뚣뚥",5,"뚭뚮뚯뚰뚲",16],["8d41","뛃",16,"뛕",8],["8d61","뛞",17,"뛱뛲뛳뛵뛶뛷뛹뛺"],["8d81","뛻",4,"뜂뜃뜄뜆",33,"뜪뜫뜭뜮뜱",6,"뜺뜼",7,"띅띆띇띉띊띋띍",6,"띖",9,"띡띢띣띥띦띧띩",6,"띲띴띶",5,"띾띿랁랂랃랅",6,"랎랓랔랕랚랛랝랞"],["8e41","랟랡",6,"랪랮",5,"랶랷랹",8],["8e61","럂",4,"럈럊",19],["8e81","럞",13,"럮럯럱럲럳럵",6,"럾렂",4,"렊렋렍렎렏렑",6,"렚렜렞",5,"렦렧렩렪렫렭",6,"렶렺",5,"롁롂롃롅",11,"롒롔",7,"롞롟롡롢롣롥",6,"롮롰롲",5,"롹롺롻롽",7],["8f41","뢅",7,"뢎",17],["8f61","뢠",7,"뢩",6,"뢱뢲뢳뢵뢶뢷뢹",4],["8f81","뢾뢿룂룄룆",5,"룍룎룏룑룒룓룕",7,"룞룠룢",5,"룪룫룭룮룯룱",6,"룺룼룾",5,"뤅",18,"뤙",6,"뤡",26,"뤾뤿륁륂륃륅",6,"륍륎륐륒",5],["9041","륚륛륝륞륟륡",6,"륪륬륮",5,"륶륷륹륺륻륽"],["9061","륾",5,"릆릈릋릌릏",15],["9081","릟",12,"릮릯릱릲릳릵",6,"릾맀맂",5,"맊맋맍맓",4,"맚맜맟맠맢맦맧맩맪맫맭",6,"맶맻",4,"먂",5,"먉",11,"먖",33,"먺먻먽먾먿멁멃멄멅멆"],["9141","멇멊멌멏멐멑멒멖멗멙멚멛멝",6,"멦멪",5],["9161","멲멳멵멶멷멹",9,"몆몈몉몊몋몍",5],["9181","몓",20,"몪몭몮몯몱몳",4,"몺몼몾",5,"뫅뫆뫇뫉",14,"뫚",33,"뫽뫾뫿묁묂묃묅",7,"묎묐묒",5,"묙묚묛묝묞묟묡",6],["9241","묨묪묬",7,"묷묹묺묿",4,"뭆뭈뭊뭋뭌뭎뭑뭒"],["9261","뭓뭕뭖뭗뭙",7,"뭢뭤",7,"뭭",4],["9281","뭲",21,"뮉뮊뮋뮍뮎뮏뮑",18,"뮥뮦뮧뮩뮪뮫뮭",6,"뮵뮶뮸",7,"믁믂믃믅믆믇믉",6,"믑믒믔",35,"믺믻믽믾밁"],["9341","밃",4,"밊밎밐밒밓밙밚밠밡밢밣밦밨밪밫밬밮밯밲밳밵"],["9361","밶밷밹",6,"뱂뱆뱇뱈뱊뱋뱎뱏뱑",8],["9381","뱚뱛뱜뱞",37,"벆벇벉벊벍벏",4,"벖벘벛",4,"벢벣벥벦벩",6,"벲벶",5,"벾벿볁볂볃볅",7,"볎볒볓볔볖볗볙볚볛볝",22,"볷볹볺볻볽"],["9441","볾",5,"봆봈봊",5,"봑봒봓봕",8],["9461","봞",5,"봥",6,"봭",12],["9481","봺",5,"뵁",6,"뵊뵋뵍뵎뵏뵑",6,"뵚",9,"뵥뵦뵧뵩",22,"붂붃붅붆붋",4,"붒붔붖붗붘붛붝",6,"붥",10,"붱",6,"붹",24],["9541","뷒뷓뷖뷗뷙뷚뷛뷝",11,"뷪",5,"뷱"],["9561","뷲뷳뷵뷶뷷뷹",6,"븁븂븄븆",5,"븎븏븑븒븓"],["9581","븕",6,"븞븠",35,"빆빇빉빊빋빍빏",4,"빖빘빜빝빞빟빢빣빥빦빧빩빫",4,"빲빶",4,"빾빿뺁뺂뺃뺅",6,"뺎뺒",5,"뺚",13,"뺩",14],["9641","뺸",23,"뻒뻓"],["9661","뻕뻖뻙",6,"뻡뻢뻦",5,"뻭",8],["9681","뻶",10,"뼂",5,"뼊",13,"뼚뼞",33,"뽂뽃뽅뽆뽇뽉",6,"뽒뽓뽔뽖",44],["9741","뾃",16,"뾕",8],["9761","뾞",17,"뾱",7],["9781","뾹",11,"뿆",5,"뿎뿏뿑뿒뿓뿕",6,"뿝뿞뿠뿢",89,"쀽쀾쀿"],["9841","쁀",16,"쁒",5,"쁙쁚쁛"],["9861","쁝쁞쁟쁡",6,"쁪",15],["9881","쁺",21,"삒삓삕삖삗삙",6,"삢삤삦",5,"삮삱삲삷",4,"삾샂샃샄샆샇샊샋샍샎샏샑",6,"샚샞",5,"샦샧샩샪샫샭",6,"샶샸샺",5,"섁섂섃섅섆섇섉",6,"섑섒섓섔섖",5,"섡섢섥섨섩섪섫섮"],["9941","섲섳섴섵섷섺섻섽섾섿셁",6,"셊셎",5,"셖셗"],["9961","셙셚셛셝",6,"셦셪",5,"셱셲셳셵셶셷셹셺셻"],["9981","셼",8,"솆",5,"솏솑솒솓솕솗",4,"솞솠솢솣솤솦솧솪솫솭솮솯솱",11,"솾",5,"쇅쇆쇇쇉쇊쇋쇍",6,"쇕쇖쇙",6,"쇡쇢쇣쇥쇦쇧쇩",6,"쇲쇴",7,"쇾쇿숁숂숃숅",6,"숎숐숒",5,"숚숛숝숞숡숢숣"],["9a41","숤숥숦숧숪숬숮숰숳숵",16],["9a61","쉆쉇쉉",6,"쉒쉓쉕쉖쉗쉙",6,"쉡쉢쉣쉤쉦"],["9a81","쉧",4,"쉮쉯쉱쉲쉳쉵",6,"쉾슀슂",5,"슊",5,"슑",6,"슙슚슜슞",5,"슦슧슩슪슫슮",5,"슶슸슺",33,"싞싟싡싢싥",5,"싮싰싲싳싴싵싷싺싽싾싿쌁",6,"쌊쌋쌎쌏"],["9b41","쌐쌑쌒쌖쌗쌙쌚쌛쌝",6,"쌦쌧쌪",8],["9b61","쌳",17,"썆",7],["9b81","썎",25,"썪썫썭썮썯썱썳",4,"썺썻썾",5,"쎅쎆쎇쎉쎊쎋쎍",50,"쏁",22,"쏚"],["9c41","쏛쏝쏞쏡쏣",4,"쏪쏫쏬쏮",5,"쏶쏷쏹",5],["9c61","쏿",8,"쐉",6,"쐑",9],["9c81","쐛",8,"쐥",6,"쐭쐮쐯쐱쐲쐳쐵",6,"쐾",9,"쑉",26,"쑦쑧쑩쑪쑫쑭",6,"쑶쑷쑸쑺",5,"쒁",18,"쒕",6,"쒝",12],["9d41","쒪",13,"쒹쒺쒻쒽",8],["9d61","쓆",25],["9d81","쓠",8,"쓪",5,"쓲쓳쓵쓶쓷쓹쓻쓼쓽쓾씂",9,"씍씎씏씑씒씓씕",6,"씝",10,"씪씫씭씮씯씱",6,"씺씼씾",5,"앆앇앋앏앐앑앒앖앚앛앜앟앢앣앥앦앧앩",6,"앲앶",5,"앾앿얁얂얃얅얆얈얉얊얋얎얐얒얓얔"],["9e41","얖얙얚얛얝얞얟얡",7,"얪",9,"얶"],["9e61","얷얺얿",4,"엋엍엏엒엓엕엖엗엙",6,"엢엤엦엧"],["9e81","엨엩엪엫엯엱엲엳엵엸엹엺엻옂옃옄옉옊옋옍옎옏옑",6,"옚옝",6,"옦옧옩옪옫옯옱옲옶옸옺옼옽옾옿왂왃왅왆왇왉",6,"왒왖",5,"왞왟왡",10,"왭왮왰왲",5,"왺왻왽왾왿욁",6,"욊욌욎",5,"욖욗욙욚욛욝",6,"욦"],["9f41","욨욪",5,"욲욳욵욶욷욻",4,"웂웄웆",5,"웎"],["9f61","웏웑웒웓웕",6,"웞웟웢",5,"웪웫웭웮웯웱웲"],["9f81","웳",4,"웺웻웼웾",5,"윆윇윉윊윋윍",6,"윖윘윚",5,"윢윣윥윦윧윩",6,"윲윴윶윸윹윺윻윾윿읁읂읃읅",4,"읋읎읐읙읚읛읝읞읟읡",6,"읩읪읬",7,"읶읷읹읺읻읿잀잁잂잆잋잌잍잏잒잓잕잙잛",4,"잢잧",4,"잮잯잱잲잳잵잶잷"],["a041","잸잹잺잻잾쟂",5,"쟊쟋쟍쟏쟑",6,"쟙쟚쟛쟜"],["a061","쟞",5,"쟥쟦쟧쟩쟪쟫쟭",13],["a081","쟻",4,"젂젃젅젆젇젉젋",4,"젒젔젗",4,"젞젟젡젢젣젥",6,"젮젰젲",5,"젹젺젻젽젾젿졁",6,"졊졋졎",5,"졕",26,"졲졳졵졶졷졹졻",4,"좂좄좈좉좊좎",5,"좕",7,"좞좠좢좣좤"],["a141","좥좦좧좩",18,"좾좿죀죁"],["a161","죂죃죅죆죇죉죊죋죍",6,"죖죘죚",5,"죢죣죥"],["a181","죦",14,"죶",5,"죾죿줁줂줃줇",4,"줎　、。·‥…¨〃­―∥＼∼‘’“”〔〕〈",9,"±×÷≠≤≥∞∴°′″℃Å￠￡￥♂♀∠⊥⌒∂∇≡≒§※☆★○●◎◇◆□■△▲▽▼→←↑↓↔〓≪≫√∽∝∵∫∬∈∋⊆⊇⊂⊃∪∩∧∨￢"],["a241","줐줒",5,"줙",18],["a261","줭",6,"줵",18],["a281","쥈",7,"쥒쥓쥕쥖쥗쥙",6,"쥢쥤",7,"쥭쥮쥯⇒⇔∀∃´～ˇ˘˝˚˙¸˛¡¿ː∮∑∏¤℉‰◁◀▷▶♤♠♡♥♧♣⊙◈▣◐◑▒▤▥▨▧▦▩♨☏☎☜☞¶†‡↕↗↙↖↘♭♩♪♬㉿㈜№㏇™㏂㏘℡€®"],["a341","쥱쥲쥳쥵",6,"쥽",10,"즊즋즍즎즏"],["a361","즑",6,"즚즜즞",16],["a381","즯",16,"짂짃짅짆짉짋",4,"짒짔짗짘짛！",58,"￦］",32,"￣"],["a441","짞짟짡짣짥짦짨짩짪짫짮짲",5,"짺짻짽짾짿쨁쨂쨃쨄"],["a461","쨅쨆쨇쨊쨎",5,"쨕쨖쨗쨙",12],["a481","쨦쨧쨨쨪",28,"ㄱ",93],["a541","쩇",4,"쩎쩏쩑쩒쩓쩕",6,"쩞쩢",5,"쩩쩪"],["a561","쩫",17,"쩾",5,"쪅쪆"],["a581","쪇",16,"쪙",14,"ⅰ",9],["a5b0","Ⅰ",9],["a5c1","Α",16,"Σ",6],["a5e1","α",16,"σ",6],["a641","쪨",19,"쪾쪿쫁쫂쫃쫅"],["a661","쫆",5,"쫎쫐쫒쫔쫕쫖쫗쫚",5,"쫡",6],["a681","쫨쫩쫪쫫쫭",6,"쫵",18,"쬉쬊─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂┒┑┚┙┖┕┎┍┞┟┡┢┦┧┩┪┭┮┱┲┵┶┹┺┽┾╀╁╃",7],["a741","쬋",4,"쬑쬒쬓쬕쬖쬗쬙",6,"쬢",7],["a761","쬪",22,"쭂쭃쭄"],["a781","쭅쭆쭇쭊쭋쭍쭎쭏쭑",6,"쭚쭛쭜쭞",5,"쭥",7,"㎕㎖㎗ℓ㎘㏄㎣㎤㎥㎦㎙",9,"㏊㎍㎎㎏㏏㎈㎉㏈㎧㎨㎰",9,"㎀",4,"㎺",5,"㎐",4,"Ω㏀㏁㎊㎋㎌㏖㏅㎭㎮㎯㏛㎩㎪㎫㎬㏝㏐㏓㏃㏉㏜㏆"],["a841","쭭",10,"쭺",14],["a861","쮉",18,"쮝",6],["a881","쮤",19,"쮹",11,"ÆÐªĦ"],["a8a6","Ĳ"],["a8a8","ĿŁØŒºÞŦŊ"],["a8b1","㉠",27,"ⓐ",25,"①",14,"½⅓⅔¼¾⅛⅜⅝⅞"],["a941","쯅",14,"쯕",10],["a961","쯠쯡쯢쯣쯥쯦쯨쯪",18],["a981","쯽",14,"찎찏찑찒찓찕",6,"찞찟찠찣찤æđðħıĳĸŀłøœßþŧŋŉ㈀",27,"⒜",25,"⑴",14,"¹²³⁴ⁿ₁₂₃₄"],["aa41","찥찦찪찫찭찯찱",6,"찺찿",4,"챆챇챉챊챋챍챎"],["aa61","챏",4,"챖챚",5,"챡챢챣챥챧챩",6,"챱챲"],["aa81","챳챴챶",29,"ぁ",82],["ab41","첔첕첖첗첚첛첝첞첟첡",6,"첪첮",5,"첶첷첹"],["ab61","첺첻첽",6,"쳆쳈쳊",5,"쳑쳒쳓쳕",5],["ab81","쳛",8,"쳥",6,"쳭쳮쳯쳱",12,"ァ",85],["ac41","쳾쳿촀촂",5,"촊촋촍촎촏촑",6,"촚촜촞촟촠"],["ac61","촡촢촣촥촦촧촩촪촫촭",11,"촺",4],["ac81","촿",28,"쵝쵞쵟А",5,"ЁЖ",25],["acd1","а",5,"ёж",25],["ad41","쵡쵢쵣쵥",6,"쵮쵰쵲",5,"쵹",7],["ad61","춁",6,"춉",10,"춖춗춙춚춛춝춞춟"],["ad81","춠춡춢춣춦춨춪",5,"춱",18,"췅"],["ae41","췆",5,"췍췎췏췑",16],["ae61","췢",5,"췩췪췫췭췮췯췱",6,"췺췼췾",4],["ae81","츃츅츆츇츉츊츋츍",6,"츕츖츗츘츚",5,"츢츣츥츦츧츩츪츫"],["af41","츬츭츮츯츲츴츶",19],["af61","칊",13,"칚칛칝칞칢",5,"칪칬"],["af81","칮",5,"칶칷칹칺칻칽",6,"캆캈캊",5,"캒캓캕캖캗캙"],["b041","캚",5,"캢캦",5,"캮",12],["b061","캻",5,"컂",19],["b081","컖",13,"컦컧컩컪컭",6,"컶컺",5,"가각간갇갈갉갊감",7,"같",4,"갠갤갬갭갯갰갱갸갹갼걀걋걍걔걘걜거걱건걷걸걺검겁것겄겅겆겉겊겋게겐겔겜겝겟겠겡겨격겪견겯결겸겹겻겼경곁계곈곌곕곗고곡곤곧골곪곬곯곰곱곳공곶과곽관괄괆"],["b141","켂켃켅켆켇켉",6,"켒켔켖",5,"켝켞켟켡켢켣"],["b161","켥",6,"켮켲",5,"켹",11],["b181","콅",14,"콖콗콙콚콛콝",6,"콦콨콪콫콬괌괍괏광괘괜괠괩괬괭괴괵괸괼굄굅굇굉교굔굘굡굣구국군굳굴굵굶굻굼굽굿궁궂궈궉권궐궜궝궤궷귀귁귄귈귐귑귓규균귤그극근귿글긁금급긋긍긔기긱긴긷길긺김깁깃깅깆깊까깍깎깐깔깖깜깝깟깠깡깥깨깩깬깰깸"],["b241","콭콮콯콲콳콵콶콷콹",6,"쾁쾂쾃쾄쾆",5,"쾍"],["b261","쾎",18,"쾢",5,"쾩"],["b281","쾪",5,"쾱",18,"쿅",6,"깹깻깼깽꺄꺅꺌꺼꺽꺾껀껄껌껍껏껐껑께껙껜껨껫껭껴껸껼꼇꼈꼍꼐꼬꼭꼰꼲꼴꼼꼽꼿꽁꽂꽃꽈꽉꽐꽜꽝꽤꽥꽹꾀꾄꾈꾐꾑꾕꾜꾸꾹꾼꿀꿇꿈꿉꿋꿍꿎꿔꿜꿨꿩꿰꿱꿴꿸뀀뀁뀄뀌뀐뀔뀜뀝뀨끄끅끈끊끌끎끓끔끕끗끙"],["b341","쿌",19,"쿢쿣쿥쿦쿧쿩"],["b361","쿪",5,"쿲쿴쿶",5,"쿽쿾쿿퀁퀂퀃퀅",5],["b381","퀋",5,"퀒",5,"퀙",19,"끝끼끽낀낄낌낍낏낑나낙낚난낟날낡낢남납낫",4,"낱낳내낵낸낼냄냅냇냈냉냐냑냔냘냠냥너넉넋넌널넒넓넘넙넛넜넝넣네넥넨넬넴넵넷넸넹녀녁년녈념녑녔녕녘녜녠노녹논놀놂놈놉놋농높놓놔놘놜놨뇌뇐뇔뇜뇝"],["b441","퀮",5,"퀶퀷퀹퀺퀻퀽",6,"큆큈큊",5],["b461","큑큒큓큕큖큗큙",6,"큡",10,"큮큯"],["b481","큱큲큳큵",6,"큾큿킀킂",18,"뇟뇨뇩뇬뇰뇹뇻뇽누눅눈눋눌눔눕눗눙눠눴눼뉘뉜뉠뉨뉩뉴뉵뉼늄늅늉느늑는늘늙늚늠늡늣능늦늪늬늰늴니닉닌닐닒님닙닛닝닢다닥닦단닫",4,"닳담답닷",4,"닿대댁댄댈댐댑댓댔댕댜더덕덖던덛덜덞덟덤덥"],["b541","킕",14,"킦킧킩킪킫킭",5],["b561","킳킶킸킺",5,"탂탃탅탆탇탊",5,"탒탖",4],["b581","탛탞탟탡탢탣탥",6,"탮탲",5,"탹",11,"덧덩덫덮데덱덴델뎀뎁뎃뎄뎅뎌뎐뎔뎠뎡뎨뎬도독돈돋돌돎돐돔돕돗동돛돝돠돤돨돼됐되된될됨됩됫됴두둑둔둘둠둡둣둥둬뒀뒈뒝뒤뒨뒬뒵뒷뒹듀듄듈듐듕드득든듣들듦듬듭듯등듸디딕딘딛딜딤딥딧딨딩딪따딱딴딸"],["b641","턅",7,"턎",17],["b661","턠",15,"턲턳턵턶턷턹턻턼턽턾"],["b681","턿텂텆",5,"텎텏텑텒텓텕",6,"텞텠텢",5,"텩텪텫텭땀땁땃땄땅땋때땍땐땔땜땝땟땠땡떠떡떤떨떪떫떰떱떳떴떵떻떼떽뗀뗄뗌뗍뗏뗐뗑뗘뗬또똑똔똘똥똬똴뙈뙤뙨뚜뚝뚠뚤뚫뚬뚱뛔뛰뛴뛸뜀뜁뜅뜨뜩뜬뜯뜰뜸뜹뜻띄띈띌띔띕띠띤띨띰띱띳띵라락란랄람랍랏랐랑랒랖랗"],["b741","텮",13,"텽",6,"톅톆톇톉톊"],["b761","톋",20,"톢톣톥톦톧"],["b781","톩",6,"톲톴톶톷톸톹톻톽톾톿퇁",14,"래랙랜랠램랩랫랬랭랴략랸럇량러럭런럴럼럽럿렀렁렇레렉렌렐렘렙렛렝려력련렬렴렵렷렸령례롄롑롓로록론롤롬롭롯롱롸롼뢍뢨뢰뢴뢸룀룁룃룅료룐룔룝룟룡루룩룬룰룸룹룻룽뤄뤘뤠뤼뤽륀륄륌륏륑류륙륜률륨륩"],["b841","퇐",7,"퇙",17],["b861","퇫",8,"퇵퇶퇷퇹",13],["b881","툈툊",5,"툑",24,"륫륭르륵른를름릅릇릉릊릍릎리릭린릴림립릿링마막만많",4,"맘맙맛망맞맡맣매맥맨맬맴맵맷맸맹맺먀먁먈먕머먹먼멀멂멈멉멋멍멎멓메멕멘멜멤멥멧멨멩며멱면멸몃몄명몇몌모목몫몬몰몲몸몹못몽뫄뫈뫘뫙뫼"],["b941","툪툫툮툯툱툲툳툵",6,"툾퉀퉂",5,"퉉퉊퉋퉌"],["b961","퉍",14,"퉝",6,"퉥퉦퉧퉨"],["b981","퉩",22,"튂튃튅튆튇튉튊튋튌묀묄묍묏묑묘묜묠묩묫무묵묶문묻물묽묾뭄뭅뭇뭉뭍뭏뭐뭔뭘뭡뭣뭬뮈뮌뮐뮤뮨뮬뮴뮷므믄믈믐믓미믹민믿밀밂밈밉밋밌밍및밑바",4,"받",4,"밤밥밧방밭배백밴밸뱀뱁뱃뱄뱅뱉뱌뱍뱐뱝버벅번벋벌벎범법벗"],["ba41","튍튎튏튒튓튔튖",5,"튝튞튟튡튢튣튥",6,"튭"],["ba61","튮튯튰튲",5,"튺튻튽튾틁틃",4,"틊틌",5],["ba81","틒틓틕틖틗틙틚틛틝",6,"틦",9,"틲틳틵틶틷틹틺벙벚베벡벤벧벨벰벱벳벴벵벼벽변별볍볏볐병볕볘볜보복볶본볼봄봅봇봉봐봔봤봬뵀뵈뵉뵌뵐뵘뵙뵤뵨부북분붇불붉붊붐붑붓붕붙붚붜붤붰붸뷔뷕뷘뷜뷩뷰뷴뷸븀븃븅브븍븐블븜븝븟비빅빈빌빎빔빕빗빙빚빛빠빡빤"],["bb41","틻",4,"팂팄팆",5,"팏팑팒팓팕팗",4,"팞팢팣"],["bb61","팤팦팧팪팫팭팮팯팱",6,"팺팾",5,"퍆퍇퍈퍉"],["bb81","퍊",31,"빨빪빰빱빳빴빵빻빼빽뺀뺄뺌뺍뺏뺐뺑뺘뺙뺨뻐뻑뻔뻗뻘뻠뻣뻤뻥뻬뼁뼈뼉뼘뼙뼛뼜뼝뽀뽁뽄뽈뽐뽑뽕뾔뾰뿅뿌뿍뿐뿔뿜뿟뿡쀼쁑쁘쁜쁠쁨쁩삐삑삔삘삠삡삣삥사삭삯산삳살삵삶삼삽삿샀상샅새색샌샐샘샙샛샜생샤"],["bc41","퍪",17,"퍾퍿펁펂펃펅펆펇"],["bc61","펈펉펊펋펎펒",5,"펚펛펝펞펟펡",6,"펪펬펮"],["bc81","펯",4,"펵펶펷펹펺펻펽",6,"폆폇폊",5,"폑",5,"샥샨샬샴샵샷샹섀섄섈섐섕서",4,"섣설섦섧섬섭섯섰성섶세섹센셀셈셉셋셌셍셔셕션셜셤셥셧셨셩셰셴셸솅소속솎손솔솖솜솝솟송솥솨솩솬솰솽쇄쇈쇌쇔쇗쇘쇠쇤쇨쇰쇱쇳쇼쇽숀숄숌숍숏숑수숙순숟술숨숩숫숭"],["bd41","폗폙",7,"폢폤",7,"폮폯폱폲폳폵폶폷"],["bd61","폸폹폺폻폾퐀퐂",5,"퐉",13],["bd81","퐗",5,"퐞",25,"숯숱숲숴쉈쉐쉑쉔쉘쉠쉥쉬쉭쉰쉴쉼쉽쉿슁슈슉슐슘슛슝스슥슨슬슭슴습슷승시식신싣실싫심십싯싱싶싸싹싻싼쌀쌈쌉쌌쌍쌓쌔쌕쌘쌜쌤쌥쌨쌩썅써썩썬썰썲썸썹썼썽쎄쎈쎌쏀쏘쏙쏜쏟쏠쏢쏨쏩쏭쏴쏵쏸쐈쐐쐤쐬쐰"],["be41","퐸",7,"푁푂푃푅",14],["be61","푔",7,"푝푞푟푡푢푣푥",7,"푮푰푱푲"],["be81","푳",4,"푺푻푽푾풁풃",4,"풊풌풎",5,"풕",8,"쐴쐼쐽쑈쑤쑥쑨쑬쑴쑵쑹쒀쒔쒜쒸쒼쓩쓰쓱쓴쓸쓺쓿씀씁씌씐씔씜씨씩씬씰씸씹씻씽아악안앉않알앍앎앓암압앗았앙앝앞애액앤앨앰앱앳앴앵야약얀얄얇얌얍얏양얕얗얘얜얠얩어억언얹얻얼얽얾엄",6,"엌엎"],["bf41","풞",10,"풪",14],["bf61","풹",18,"퓍퓎퓏퓑퓒퓓퓕"],["bf81","퓖",5,"퓝퓞퓠",7,"퓩퓪퓫퓭퓮퓯퓱",6,"퓹퓺퓼에엑엔엘엠엡엣엥여역엮연열엶엷염",5,"옅옆옇예옌옐옘옙옛옜오옥온올옭옮옰옳옴옵옷옹옻와왁완왈왐왑왓왔왕왜왝왠왬왯왱외왹왼욀욈욉욋욍요욕욘욜욤욥욧용우욱운울욹욺움웁웃웅워웍원월웜웝웠웡웨"],["c041","퓾",5,"픅픆픇픉픊픋픍",6,"픖픘",5],["c061","픞",25],["c081","픸픹픺픻픾픿핁핂핃핅",6,"핎핐핒",5,"핚핛핝핞핟핡핢핣웩웬웰웸웹웽위윅윈윌윔윕윗윙유육윤율윰윱윳융윷으윽은을읊음읍읏응",7,"읜읠읨읫이익인일읽읾잃임입잇있잉잊잎자작잔잖잗잘잚잠잡잣잤장잦재잭잰잴잼잽잿쟀쟁쟈쟉쟌쟎쟐쟘쟝쟤쟨쟬저적전절젊"],["c141","핤핦핧핪핬핮",5,"핶핷핹핺핻핽",6,"햆햊햋"],["c161","햌햍햎햏햑",19,"햦햧"],["c181","햨",31,"점접젓정젖제젝젠젤젬젭젯젱져젼졀졈졉졌졍졔조족존졸졺좀좁좃종좆좇좋좌좍좔좝좟좡좨좼좽죄죈죌죔죕죗죙죠죡죤죵주죽준줄줅줆줌줍줏중줘줬줴쥐쥑쥔쥘쥠쥡쥣쥬쥰쥴쥼즈즉즌즐즘즙즛증지직진짇질짊짐집짓"],["c241","헊헋헍헎헏헑헓",4,"헚헜헞",5,"헦헧헩헪헫헭헮"],["c261","헯",4,"헶헸헺",5,"혂혃혅혆혇혉",6,"혒"],["c281","혖",5,"혝혞혟혡혢혣혥",7,"혮",9,"혺혻징짖짙짚짜짝짠짢짤짧짬짭짯짰짱째짹짼쨀쨈쨉쨋쨌쨍쨔쨘쨩쩌쩍쩐쩔쩜쩝쩟쩠쩡쩨쩽쪄쪘쪼쪽쫀쫄쫌쫍쫏쫑쫓쫘쫙쫠쫬쫴쬈쬐쬔쬘쬠쬡쭁쭈쭉쭌쭐쭘쭙쭝쭤쭸쭹쮜쮸쯔쯤쯧쯩찌찍찐찔찜찝찡찢찧차착찬찮찰참찹찻"],["c341","혽혾혿홁홂홃홄홆홇홊홌홎홏홐홒홓홖홗홙홚홛홝",4],["c361","홢",4,"홨홪",5,"홲홳홵",11],["c381","횁횂횄횆",5,"횎횏횑횒횓횕",7,"횞횠횢",5,"횩횪찼창찾채책챈챌챔챕챗챘챙챠챤챦챨챰챵처척천철첨첩첫첬청체첵첸첼쳄쳅쳇쳉쳐쳔쳤쳬쳰촁초촉촌촐촘촙촛총촤촨촬촹최쵠쵤쵬쵭쵯쵱쵸춈추축춘출춤춥춧충춰췄췌췐취췬췰췸췹췻췽츄츈츌츔츙츠측츤츨츰츱츳층"],["c441","횫횭횮횯횱",7,"횺횼",7,"훆훇훉훊훋"],["c461","훍훎훏훐훒훓훕훖훘훚",5,"훡훢훣훥훦훧훩",4],["c481","훮훯훱훲훳훴훶",5,"훾훿휁휂휃휅",11,"휒휓휔치칙친칟칠칡침칩칫칭카칵칸칼캄캅캇캉캐캑캔캘캠캡캣캤캥캬캭컁커컥컨컫컬컴컵컷컸컹케켁켄켈켐켑켓켕켜켠켤켬켭켯켰켱켸코콕콘콜콤콥콧콩콰콱콴콸쾀쾅쾌쾡쾨쾰쿄쿠쿡쿤쿨쿰쿱쿳쿵쿼퀀퀄퀑퀘퀭퀴퀵퀸퀼"],["c541","휕휖휗휚휛휝휞휟휡",6,"휪휬휮",5,"휶휷휹"],["c561","휺휻휽",6,"흅흆흈흊",5,"흒흓흕흚",4],["c581","흟흢흤흦흧흨흪흫흭흮흯흱흲흳흵",6,"흾흿힀힂",5,"힊힋큄큅큇큉큐큔큘큠크큭큰클큼큽킁키킥킨킬킴킵킷킹타탁탄탈탉탐탑탓탔탕태택탠탤탬탭탯탰탱탸턍터턱턴털턺텀텁텃텄텅테텍텐텔템텝텟텡텨텬텼톄톈토톡톤톨톰톱톳통톺톼퇀퇘퇴퇸툇툉툐투툭툰툴툼툽툿퉁퉈퉜"],["c641","힍힎힏힑",6,"힚힜힞",5],["c6a1","퉤튀튁튄튈튐튑튕튜튠튤튬튱트특튼튿틀틂틈틉틋틔틘틜틤틥티틱틴틸팀팁팃팅파팍팎판팔팖팜팝팟팠팡팥패팩팬팰팸팹팻팼팽퍄퍅퍼퍽펀펄펌펍펏펐펑페펙펜펠펨펩펫펭펴편펼폄폅폈평폐폘폡폣포폭폰폴폼폽폿퐁"],["c7a1","퐈퐝푀푄표푠푤푭푯푸푹푼푿풀풂품풉풋풍풔풩퓌퓐퓔퓜퓟퓨퓬퓰퓸퓻퓽프픈플픔픕픗피픽핀필핌핍핏핑하학한할핥함합핫항해핵핸핼햄햅햇했행햐향허헉헌헐헒험헙헛헝헤헥헨헬헴헵헷헹혀혁현혈혐협혓혔형혜혠"],["c8a1","혤혭호혹혼홀홅홈홉홋홍홑화확환활홧황홰홱홴횃횅회획횐횔횝횟횡효횬횰횹횻후훅훈훌훑훔훗훙훠훤훨훰훵훼훽휀휄휑휘휙휜휠휨휩휫휭휴휵휸휼흄흇흉흐흑흔흖흗흘흙흠흡흣흥흩희흰흴흼흽힁히힉힌힐힘힙힛힝"],["caa1","伽佳假價加可呵哥嘉嫁家暇架枷柯歌珂痂稼苛茄街袈訶賈跏軻迦駕刻却各恪慤殼珏脚覺角閣侃刊墾奸姦干幹懇揀杆柬桿澗癎看磵稈竿簡肝艮艱諫間乫喝曷渴碣竭葛褐蝎鞨勘坎堪嵌感憾戡敢柑橄減甘疳監瞰紺邯鑑鑒龕"],["cba1","匣岬甲胛鉀閘剛堈姜岡崗康强彊慷江畺疆糠絳綱羌腔舡薑襁講鋼降鱇介价個凱塏愷愾慨改槪漑疥皆盖箇芥蓋豈鎧開喀客坑更粳羹醵倨去居巨拒据據擧渠炬祛距踞車遽鉅鋸乾件健巾建愆楗腱虔蹇鍵騫乞傑杰桀儉劍劒檢"],["cca1","瞼鈐黔劫怯迲偈憩揭擊格檄激膈覡隔堅牽犬甄絹繭肩見譴遣鵑抉決潔結缺訣兼慊箝謙鉗鎌京俓倞傾儆勁勍卿坰境庚徑慶憬擎敬景暻更梗涇炅烱璟璥瓊痙硬磬竟競絅經耕耿脛莖警輕逕鏡頃頸驚鯨係啓堺契季屆悸戒桂械"],["cda1","棨溪界癸磎稽系繫繼計誡谿階鷄古叩告呱固姑孤尻庫拷攷故敲暠枯槁沽痼皐睾稿羔考股膏苦苽菰藁蠱袴誥賈辜錮雇顧高鼓哭斛曲梏穀谷鵠困坤崑昆梱棍滾琨袞鯤汨滑骨供公共功孔工恐恭拱控攻珙空蚣貢鞏串寡戈果瓜"],["cea1","科菓誇課跨過鍋顆廓槨藿郭串冠官寬慣棺款灌琯瓘管罐菅觀貫關館刮恝括适侊光匡壙廣曠洸炚狂珖筐胱鑛卦掛罫乖傀塊壞怪愧拐槐魁宏紘肱轟交僑咬喬嬌嶠巧攪敎校橋狡皎矯絞翹膠蕎蛟較轎郊餃驕鮫丘久九仇俱具勾"],["cfa1","區口句咎嘔坵垢寇嶇廐懼拘救枸柩構歐毆毬求溝灸狗玖球瞿矩究絿耉臼舅舊苟衢謳購軀逑邱鉤銶駒驅鳩鷗龜國局菊鞠鞫麴君窘群裙軍郡堀屈掘窟宮弓穹窮芎躬倦券勸卷圈拳捲權淃眷厥獗蕨蹶闕机櫃潰詭軌饋句晷歸貴"],["d0a1","鬼龜叫圭奎揆槻珪硅窺竅糾葵規赳逵閨勻均畇筠菌鈞龜橘克剋劇戟棘極隙僅劤勤懃斤根槿瑾筋芹菫覲謹近饉契今妗擒昑檎琴禁禽芩衾衿襟金錦伋及急扱汲級給亘兢矜肯企伎其冀嗜器圻基埼夔奇妓寄岐崎己幾忌技旗旣"],["d1a1","朞期杞棋棄機欺氣汽沂淇玘琦琪璂璣畸畿碁磯祁祇祈祺箕紀綺羈耆耭肌記譏豈起錡錤飢饑騎騏驥麒緊佶吉拮桔金喫儺喇奈娜懦懶拏拿癩",5,"那樂",4,"諾酪駱亂卵暖欄煖爛蘭難鸞捏捺南嵐枏楠湳濫男藍襤拉"],["d2a1","納臘蠟衲囊娘廊",4,"乃來內奈柰耐冷女年撚秊念恬拈捻寧寗努勞奴弩怒擄櫓爐瑙盧",5,"駑魯",10,"濃籠聾膿農惱牢磊腦賂雷尿壘",7,"嫩訥杻紐勒",5,"能菱陵尼泥匿溺多茶"],["d3a1","丹亶但單團壇彖斷旦檀段湍短端簞緞蛋袒鄲鍛撻澾獺疸達啖坍憺擔曇淡湛潭澹痰聃膽蕁覃談譚錟沓畓答踏遝唐堂塘幢戇撞棠當糖螳黨代垈坮大對岱帶待戴擡玳臺袋貸隊黛宅德悳倒刀到圖堵塗導屠島嶋度徒悼挑掉搗桃"],["d4a1","棹櫂淘渡滔濤燾盜睹禱稻萄覩賭跳蹈逃途道都鍍陶韜毒瀆牘犢獨督禿篤纛讀墩惇敦旽暾沌焞燉豚頓乭突仝冬凍動同憧東桐棟洞潼疼瞳童胴董銅兜斗杜枓痘竇荳讀豆逗頭屯臀芚遁遯鈍得嶝橙燈登等藤謄鄧騰喇懶拏癩羅"],["d5a1","蘿螺裸邏樂洛烙珞絡落諾酪駱丹亂卵欄欒瀾爛蘭鸞剌辣嵐擥攬欖濫籃纜藍襤覽拉臘蠟廊朗浪狼琅瑯螂郞來崍徠萊冷掠略亮倆兩凉梁樑粮粱糧良諒輛量侶儷勵呂廬慮戾旅櫚濾礪藜蠣閭驢驪麗黎力曆歷瀝礫轢靂憐戀攣漣"],["d6a1","煉璉練聯蓮輦連鍊冽列劣洌烈裂廉斂殮濂簾獵令伶囹寧岺嶺怜玲笭羚翎聆逞鈴零靈領齡例澧禮醴隷勞怒撈擄櫓潞瀘爐盧老蘆虜路輅露魯鷺鹵碌祿綠菉錄鹿麓論壟弄朧瀧瓏籠聾儡瀨牢磊賂賚賴雷了僚寮廖料燎療瞭聊蓼"],["d7a1","遼鬧龍壘婁屢樓淚漏瘻累縷蔞褸鏤陋劉旒柳榴流溜瀏琉瑠留瘤硫謬類六戮陸侖倫崙淪綸輪律慄栗率隆勒肋凜凌楞稜綾菱陵俚利厘吏唎履悧李梨浬犁狸理璃異痢籬罹羸莉裏裡里釐離鯉吝潾燐璘藺躪隣鱗麟林淋琳臨霖砬"],["d8a1","立笠粒摩瑪痲碼磨馬魔麻寞幕漠膜莫邈万卍娩巒彎慢挽晩曼滿漫灣瞞萬蔓蠻輓饅鰻唜抹末沫茉襪靺亡妄忘忙望網罔芒茫莽輞邙埋妹媒寐昧枚梅每煤罵買賣邁魅脈貊陌驀麥孟氓猛盲盟萌冪覓免冕勉棉沔眄眠綿緬面麵滅"],["d9a1","蔑冥名命明暝椧溟皿瞑茗蓂螟酩銘鳴袂侮冒募姆帽慕摸摹暮某模母毛牟牡瑁眸矛耗芼茅謀謨貌木沐牧目睦穆鶩歿沒夢朦蒙卯墓妙廟描昴杳渺猫竗苗錨務巫憮懋戊拇撫无楙武毋無珷畝繆舞茂蕪誣貿霧鵡墨默們刎吻問文"],["daa1","汶紊紋聞蚊門雯勿沕物味媚尾嵋彌微未梶楣渼湄眉米美薇謎迷靡黴岷悶愍憫敏旻旼民泯玟珉緡閔密蜜謐剝博拍搏撲朴樸泊珀璞箔粕縛膊舶薄迫雹駁伴半反叛拌搬攀斑槃泮潘班畔瘢盤盼磐磻礬絆般蟠返頒飯勃拔撥渤潑"],["dba1","發跋醱鉢髮魃倣傍坊妨尨幇彷房放方旁昉枋榜滂磅紡肪膀舫芳蒡蚌訪謗邦防龐倍俳北培徘拜排杯湃焙盃背胚裴裵褙賠輩配陪伯佰帛柏栢白百魄幡樊煩燔番磻繁蕃藩飜伐筏罰閥凡帆梵氾汎泛犯範范法琺僻劈壁擘檗璧癖"],["dca1","碧蘗闢霹便卞弁變辨辯邊別瞥鱉鼈丙倂兵屛幷昞昺柄棅炳甁病秉竝輧餠騈保堡報寶普步洑湺潽珤甫菩補褓譜輔伏僕匐卜宓復服福腹茯蔔複覆輹輻馥鰒本乶俸奉封峯峰捧棒烽熢琫縫蓬蜂逢鋒鳳不付俯傅剖副否咐埠夫婦"],["dda1","孚孵富府復扶敷斧浮溥父符簿缶腐腑膚艀芙莩訃負賦賻赴趺部釜阜附駙鳧北分吩噴墳奔奮忿憤扮昐汾焚盆粉糞紛芬賁雰不佛弗彿拂崩朋棚硼繃鵬丕備匕匪卑妃婢庇悲憊扉批斐枇榧比毖毗毘沸泌琵痺砒碑秕秘粃緋翡肥"],["dea1","脾臂菲蜚裨誹譬費鄙非飛鼻嚬嬪彬斌檳殯浜濱瀕牝玭貧賓頻憑氷聘騁乍事些仕伺似使俟僿史司唆嗣四士奢娑寫寺射巳師徙思捨斜斯柶査梭死沙泗渣瀉獅砂社祀祠私篩紗絲肆舍莎蓑蛇裟詐詞謝賜赦辭邪飼駟麝削數朔索"],["dfa1","傘刪山散汕珊産疝算蒜酸霰乷撒殺煞薩三參杉森渗芟蔘衫揷澁鈒颯上傷像償商喪嘗孀尙峠常床庠廂想桑橡湘爽牀狀相祥箱翔裳觴詳象賞霜塞璽賽嗇塞穡索色牲生甥省笙墅壻嶼序庶徐恕抒捿敍暑曙書栖棲犀瑞筮絮緖署"],["e0a1","胥舒薯西誓逝鋤黍鼠夕奭席惜昔晳析汐淅潟石碩蓆釋錫仙僊先善嬋宣扇敾旋渲煽琁瑄璇璿癬禪線繕羨腺膳船蘚蟬詵跣選銑鐥饍鮮卨屑楔泄洩渫舌薛褻設說雪齧剡暹殲纖蟾贍閃陝攝涉燮葉城姓宬性惺成星晟猩珹盛省筬"],["e1a1","聖聲腥誠醒世勢歲洗稅笹細說貰召嘯塑宵小少巢所掃搔昭梳沼消溯瀟炤燒甦疏疎瘙笑篠簫素紹蔬蕭蘇訴逍遡邵銷韶騷俗屬束涑粟續謖贖速孫巽損蓀遜飡率宋悚松淞訟誦送頌刷殺灑碎鎖衰釗修受嗽囚垂壽嫂守岫峀帥愁"],["e2a1","戍手授搜收數樹殊水洙漱燧狩獸琇璲瘦睡秀穗竪粹綏綬繡羞脩茱蒐蓚藪袖誰讐輸遂邃酬銖銹隋隧隨雖需須首髓鬚叔塾夙孰宿淑潚熟琡璹肅菽巡徇循恂旬栒楯橓殉洵淳珣盾瞬筍純脣舜荀蓴蕣詢諄醇錞順馴戌術述鉥崇崧"],["e3a1","嵩瑟膝蝨濕拾習褶襲丞乘僧勝升承昇繩蠅陞侍匙嘶始媤尸屎屍市弑恃施是時枾柴猜矢示翅蒔蓍視試詩諡豕豺埴寔式息拭植殖湜熄篒蝕識軾食飾伸侁信呻娠宸愼新晨燼申神紳腎臣莘薪藎蜃訊身辛辰迅失室實悉審尋心沁"],["e4a1","沈深瀋甚芯諶什十拾雙氏亞俄兒啞娥峨我牙芽莪蛾衙訝阿雅餓鴉鵝堊岳嶽幄惡愕握樂渥鄂鍔顎鰐齷安岸按晏案眼雁鞍顔鮟斡謁軋閼唵岩巖庵暗癌菴闇壓押狎鴨仰央怏昻殃秧鴦厓哀埃崖愛曖涯碍艾隘靄厄扼掖液縊腋額"],["e5a1","櫻罌鶯鸚也倻冶夜惹揶椰爺耶若野弱掠略約若葯蒻藥躍亮佯兩凉壤孃恙揚攘敭暘梁楊樣洋瀁煬痒瘍禳穰糧羊良襄諒讓釀陽量養圄御於漁瘀禦語馭魚齬億憶抑檍臆偃堰彦焉言諺孼蘖俺儼嚴奄掩淹嶪業円予余勵呂女如廬"],["e6a1","旅歟汝濾璵礖礪與艅茹輿轝閭餘驪麗黎亦力域役易曆歷疫繹譯轢逆驛嚥堧姸娟宴年延憐戀捐挻撚椽沇沿涎涓淵演漣烟然煙煉燃燕璉硏硯秊筵緣練縯聯衍軟輦蓮連鉛鍊鳶列劣咽悅涅烈熱裂說閱厭廉念捻染殮炎焰琰艶苒"],["e7a1","簾閻髥鹽曄獵燁葉令囹塋寧嶺嶸影怜映暎楹榮永泳渶潁濚瀛瀯煐營獰玲瑛瑩瓔盈穎纓羚聆英詠迎鈴鍈零霙靈領乂倪例刈叡曳汭濊猊睿穢芮藝蘂禮裔詣譽豫醴銳隸霓預五伍俉傲午吾吳嗚塢墺奧娛寤悟惡懊敖旿晤梧汚澳"],["e8a1","烏熬獒筽蜈誤鰲鼇屋沃獄玉鈺溫瑥瘟穩縕蘊兀壅擁瓮甕癰翁邕雍饔渦瓦窩窪臥蛙蝸訛婉完宛梡椀浣玩琓琬碗緩翫脘腕莞豌阮頑曰往旺枉汪王倭娃歪矮外嵬巍猥畏了僚僥凹堯夭妖姚寥寮尿嶢拗搖撓擾料曜樂橈燎燿瑤療"],["e9a1","窈窯繇繞耀腰蓼蟯要謠遙遼邀饒慾欲浴縟褥辱俑傭冗勇埇墉容庸慂榕涌湧溶熔瑢用甬聳茸蓉踊鎔鏞龍于佑偶優又友右宇寓尤愚憂旴牛玗瑀盂祐禑禹紆羽芋藕虞迂遇郵釪隅雨雩勖彧旭昱栯煜稶郁頊云暈橒殞澐熉耘芸蕓"],["eaa1","運隕雲韻蔚鬱亐熊雄元原員圓園垣媛嫄寃怨愿援沅洹湲源爰猿瑗苑袁轅遠阮院願鴛月越鉞位偉僞危圍委威尉慰暐渭爲瑋緯胃萎葦蔿蝟衛褘謂違韋魏乳侑儒兪劉唯喩孺宥幼幽庾悠惟愈愉揄攸有杻柔柚柳楡楢油洧流游溜"],["eba1","濡猶猷琉瑜由留癒硫紐維臾萸裕誘諛諭踰蹂遊逾遺酉釉鍮類六堉戮毓肉育陸倫允奫尹崙淪潤玧胤贇輪鈗閏律慄栗率聿戎瀜絨融隆垠恩慇殷誾銀隱乙吟淫蔭陰音飮揖泣邑凝應膺鷹依倚儀宜意懿擬椅毅疑矣義艤薏蟻衣誼"],["eca1","議醫二以伊利吏夷姨履已弛彛怡易李梨泥爾珥理異痍痢移罹而耳肄苡荑裏裡貽貳邇里離飴餌匿溺瀷益翊翌翼謚人仁刃印吝咽因姻寅引忍湮燐璘絪茵藺蚓認隣靭靷鱗麟一佚佾壹日溢逸鎰馹任壬妊姙恁林淋稔臨荏賃入卄"],["eda1","立笠粒仍剩孕芿仔刺咨姉姿子字孜恣慈滋炙煮玆瓷疵磁紫者自茨蔗藉諮資雌作勺嚼斫昨灼炸爵綽芍酌雀鵲孱棧殘潺盞岑暫潛箴簪蠶雜丈仗匠場墻壯奬將帳庄張掌暲杖樟檣欌漿牆狀獐璋章粧腸臟臧莊葬蔣薔藏裝贓醬長"],["eea1","障再哉在宰才材栽梓渽滓災縡裁財載齋齎爭箏諍錚佇低儲咀姐底抵杵楮樗沮渚狙猪疽箸紵苧菹著藷詛貯躇這邸雎齟勣吊嫡寂摘敵滴狄炙的積笛籍績翟荻謫賊赤跡蹟迪迹適鏑佃佺傳全典前剪塡塼奠專展廛悛戰栓殿氈澱"],["efa1","煎琠田甸畑癲筌箋箭篆纏詮輾轉鈿銓錢鐫電顚顫餞切截折浙癤竊節絶占岾店漸点粘霑鮎點接摺蝶丁井亭停偵呈姃定幀庭廷征情挺政整旌晶晸柾楨檉正汀淀淨渟湞瀞炡玎珽町睛碇禎程穽精綎艇訂諪貞鄭酊釘鉦鋌錠霆靖"],["f0a1","靜頂鼎制劑啼堤帝弟悌提梯濟祭第臍薺製諸蹄醍除際霽題齊俎兆凋助嘲弔彫措操早晁曺曹朝條棗槽漕潮照燥爪璪眺祖祚租稠窕粗糟組繰肇藻蚤詔調趙躁造遭釣阻雕鳥族簇足鏃存尊卒拙猝倧宗從悰慫棕淙琮種終綜縱腫"],["f1a1","踪踵鍾鐘佐坐左座挫罪主住侏做姝胄呪周嗾奏宙州廚晝朱柱株注洲湊澍炷珠疇籌紂紬綢舟蛛註誅走躊輳週酎酒鑄駐竹粥俊儁准埈寯峻晙樽浚準濬焌畯竣蠢逡遵雋駿茁中仲衆重卽櫛楫汁葺增憎曾拯烝甑症繒蒸證贈之只"],["f2a1","咫地址志持指摯支旨智枝枳止池沚漬知砥祉祗紙肢脂至芝芷蜘誌識贄趾遲直稙稷織職唇嗔塵振搢晉晋桭榛殄津溱珍瑨璡畛疹盡眞瞋秦縉縝臻蔯袗診賑軫辰進鎭陣陳震侄叱姪嫉帙桎瓆疾秩窒膣蛭質跌迭斟朕什執潗緝輯"],["f3a1","鏶集徵懲澄且侘借叉嗟嵯差次此磋箚茶蹉車遮捉搾着窄錯鑿齪撰澯燦璨瓚竄簒纂粲纘讚贊鑽餐饌刹察擦札紮僭參塹慘慙懺斬站讒讖倉倡創唱娼廠彰愴敞昌昶暢槍滄漲猖瘡窓脹艙菖蒼債埰寀寨彩採砦綵菜蔡采釵冊柵策"],["f4a1","責凄妻悽處倜刺剔尺慽戚拓擲斥滌瘠脊蹠陟隻仟千喘天川擅泉淺玔穿舛薦賤踐遷釧闡阡韆凸哲喆徹撤澈綴輟轍鐵僉尖沾添甛瞻簽籤詹諂堞妾帖捷牒疊睫諜貼輒廳晴淸聽菁請靑鯖切剃替涕滯締諦逮遞體初剿哨憔抄招梢"],["f5a1","椒楚樵炒焦硝礁礎秒稍肖艸苕草蕉貂超酢醋醮促囑燭矗蜀觸寸忖村邨叢塚寵悤憁摠總聰蔥銃撮催崔最墜抽推椎楸樞湫皺秋芻萩諏趨追鄒酋醜錐錘鎚雛騶鰍丑畜祝竺筑築縮蓄蹙蹴軸逐春椿瑃出朮黜充忠沖蟲衝衷悴膵萃"],["f6a1","贅取吹嘴娶就炊翠聚脆臭趣醉驟鷲側仄厠惻測層侈値嗤峙幟恥梔治淄熾痔痴癡稚穉緇緻置致蚩輜雉馳齒則勅飭親七柒漆侵寢枕沈浸琛砧針鍼蟄秤稱快他咤唾墮妥惰打拖朶楕舵陀馱駝倬卓啄坼度托拓擢晫柝濁濯琢琸託"],["f7a1","鐸呑嘆坦彈憚歎灘炭綻誕奪脫探眈耽貪塔搭榻宕帑湯糖蕩兌台太怠態殆汰泰笞胎苔跆邰颱宅擇澤撑攄兎吐土討慟桶洞痛筒統通堆槌腿褪退頹偸套妬投透鬪慝特闖坡婆巴把播擺杷波派爬琶破罷芭跛頗判坂板版瓣販辦鈑"],["f8a1","阪八叭捌佩唄悖敗沛浿牌狽稗覇貝彭澎烹膨愎便偏扁片篇編翩遍鞭騙貶坪平枰萍評吠嬖幣廢弊斃肺蔽閉陛佈包匍匏咆哺圃布怖抛抱捕暴泡浦疱砲胞脯苞葡蒲袍褒逋鋪飽鮑幅暴曝瀑爆輻俵剽彪慓杓標漂瓢票表豹飇飄驃"],["f9a1","品稟楓諷豊風馮彼披疲皮被避陂匹弼必泌珌畢疋筆苾馝乏逼下何厦夏廈昰河瑕荷蝦賀遐霞鰕壑學虐謔鶴寒恨悍旱汗漢澣瀚罕翰閑閒限韓割轄函含咸啣喊檻涵緘艦銜陷鹹合哈盒蛤閤闔陜亢伉姮嫦巷恒抗杭桁沆港缸肛航"],["faa1","行降項亥偕咳垓奚孩害懈楷海瀣蟹解該諧邂駭骸劾核倖幸杏荇行享向嚮珦鄕響餉饗香噓墟虛許憲櫶獻軒歇險驗奕爀赫革俔峴弦懸晛泫炫玄玹現眩睍絃絢縣舷衒見賢鉉顯孑穴血頁嫌俠協夾峽挾浹狹脅脇莢鋏頰亨兄刑型"],["fba1","形泂滎瀅灐炯熒珩瑩荊螢衡逈邢鎣馨兮彗惠慧暳蕙蹊醯鞋乎互呼壕壺好岵弧戶扈昊晧毫浩淏湖滸澔濠濩灝狐琥瑚瓠皓祜糊縞胡芦葫蒿虎號蝴護豪鎬頀顥惑或酷婚昏混渾琿魂忽惚笏哄弘汞泓洪烘紅虹訌鴻化和嬅樺火畵"],["fca1","禍禾花華話譁貨靴廓擴攫確碻穫丸喚奐宦幻患換歡晥桓渙煥環紈還驩鰥活滑猾豁闊凰幌徨恍惶愰慌晃晄榥況湟滉潢煌璜皇篁簧荒蝗遑隍黃匯回廻徊恢悔懷晦會檜淮澮灰獪繪膾茴蛔誨賄劃獲宖橫鐄哮嚆孝效斅曉梟涍淆"],["fda1","爻肴酵驍侯候厚后吼喉嗅帿後朽煦珝逅勛勳塤壎焄熏燻薰訓暈薨喧暄煊萱卉喙毁彙徽揮暉煇諱輝麾休携烋畦虧恤譎鷸兇凶匈洶胸黑昕欣炘痕吃屹紇訖欠欽歆吸恰洽翕興僖凞喜噫囍姬嬉希憙憘戱晞曦熙熹熺犧禧稀羲詰"]]},function(e){e.exports=[["8740","䏰䰲䘃䖦䕸𧉧䵷䖳𧲱䳢𧳅㮕䜶䝄䱇䱀𤊿𣘗𧍒𦺋𧃒䱗𪍑䝏䗚䲅𧱬䴇䪤䚡𦬣爥𥩔𡩣𣸆𣽡晍囻"],["8767","綕夝𨮹㷴霴𧯯寛𡵞媤㘥𩺰嫑宷峼杮薓𩥅瑡璝㡵𡵓𣚞𦀡㻬"],["87a1","𥣞㫵竼龗𤅡𨤍𣇪𠪊𣉞䌊蒄龖鐯䤰蘓墖靊鈘秐稲晠権袝瑌篅枂稬剏遆㓦珄𥶹瓆鿇垳䤯呌䄱𣚎堘穲𧭥讏䚮𦺈䆁𥶙箮𢒼鿈𢓁𢓉𢓌鿉蔄𣖻䂴鿊䓡𪷿拁灮鿋"],["8840","㇀",4,"𠄌㇅𠃑𠃍㇆㇇𠃋𡿨㇈𠃊㇉㇊㇋㇌𠄎㇍㇎ĀÁǍÀĒÉĚÈŌÓǑÒ࿿Ê̄Ế࿿Ê̌ỀÊāáǎàɑēéěèīíǐìōóǒòūúǔùǖǘǚ"],["88a1","ǜü࿿ê̄ế࿿ê̌ềêɡ⏚⏛"],["8940","𪎩𡅅"],["8943","攊"],["8946","丽滝鵎釟"],["894c","𧜵撑会伨侨兖兴农凤务动医华发变团声处备夲头学实実岚庆总斉柾栄桥济炼电纤纬纺织经统缆缷艺苏药视设询车轧轮"],["89a1","琑糼緍楆竉刧"],["89ab","醌碸酞肼"],["89b0","贋胶𠧧"],["89b5","肟黇䳍鷉鸌䰾𩷶𧀎鸊𪄳㗁"],["89c1","溚舾甙"],["89c5","䤑马骏龙禇𨑬𡷊𠗐𢫦两亁亀亇亿仫伷㑌侽㹈倃傈㑽㒓㒥円夅凛凼刅争剹劐匧㗇厩㕑厰㕓参吣㕭㕲㚁咓咣咴咹哐哯唘唣唨㖘唿㖥㖿嗗㗅"],["8a40","𧶄唥"],["8a43","𠱂𠴕𥄫喐𢳆㧬𠍁蹆𤶸𩓥䁓𨂾睺𢰸㨴䟕𨅝𦧲𤷪擝𠵼𠾴𠳕𡃴撍蹾𠺖𠰋𠽤𢲩𨉖𤓓"],["8a64","𠵆𩩍𨃩䟴𤺧𢳂骲㩧𩗴㿭㔆𥋇𩟔𧣈𢵄鵮頕"],["8a76","䏙𦂥撴哣𢵌𢯊𡁷㧻𡁯"],["8aa1","𦛚𦜖𧦠擪𥁒𠱃蹨𢆡𨭌𠜱"],["8aac","䠋𠆩㿺塳𢶍"],["8ab2","𤗈𠓼𦂗𠽌𠶖啹䂻䎺"],["8abb","䪴𢩦𡂝膪飵𠶜捹㧾𢝵跀嚡摼㹃"],["8ac9","𪘁𠸉𢫏𢳉"],["8ace","𡃈𣧂㦒㨆𨊛㕸𥹉𢃇噒𠼱𢲲𩜠㒼氽𤸻"],["8adf","𧕴𢺋𢈈𪙛𨳍𠹺𠰴𦠜羓𡃏𢠃𢤹㗻𥇣𠺌𠾍𠺪㾓𠼰𠵇𡅏𠹌"],["8af6","𠺫𠮩𠵈𡃀𡄽㿹𢚖搲𠾭"],["8b40","𣏴𧘹𢯎𠵾𠵿𢱑𢱕㨘𠺘𡃇𠼮𪘲𦭐𨳒𨶙𨳊閪哌苄喹"],["8b55","𩻃鰦骶𧝞𢷮煀腭胬尜𦕲脴㞗卟𨂽醶𠻺𠸏𠹷𠻻㗝𤷫㘉𠳖嚯𢞵𡃉𠸐𠹸𡁸𡅈𨈇𡑕𠹹𤹐𢶤婔𡀝𡀞𡃵𡃶垜𠸑"],["8ba1","𧚔𨋍𠾵𠹻𥅾㜃𠾶𡆀𥋘𪊽𤧚𡠺𤅷𨉼墙剨㘚𥜽箲孨䠀䬬鼧䧧鰟鮍𥭴𣄽嗻㗲嚉丨夂𡯁屮靑𠂆乛亻㔾尣彑忄㣺扌攵歺氵氺灬爫丬犭𤣩罒礻糹罓𦉪㓁"],["8bde","𦍋耂肀𦘒𦥑卝衤见𧢲讠贝钅镸长门𨸏韦页风飞饣𩠐鱼鸟黄歯龜丷𠂇阝户钢"],["8c40","倻淾𩱳龦㷉袏𤅎灷峵䬠𥇍㕙𥴰愢𨨲辧釶熑朙玺𣊁𪄇㲋𡦀䬐磤琂冮𨜏䀉橣𪊺䈣蘏𠩯稪𩥇𨫪靕灍匤𢁾鏴盙𨧣龧矝亣俰傼丯众龨吴綋墒壐𡶶庒庙忂𢜒斋"],["8ca1","𣏹椙橃𣱣泿"],["8ca7","爀𤔅玌㻛𤨓嬕璹讃𥲤𥚕窓篬糃繬苸薗龩袐龪躹龫迏蕟駠鈡龬𨶹𡐿䁱䊢娚"],["8cc9","顨杫䉶圽"],["8cce","藖𤥻芿𧄍䲁𦵴嵻𦬕𦾾龭龮宖龯曧繛湗秊㶈䓃𣉖𢞖䎚䔶"],["8ce6","峕𣬚諹屸㴒𣕑嵸龲煗䕘𤃬𡸣䱷㥸㑊𠆤𦱁諌侴𠈹妿腬顖𩣺弻"],["8d40","𠮟"],["8d42","𢇁𨥭䄂䚻𩁹㼇龳𪆵䃸㟖䛷𦱆䅼𨚲𧏿䕭㣔𥒚䕡䔛䶉䱻䵶䗪㿈𤬏㙡䓞䒽䇭崾嵈嵖㷼㠏嶤嶹㠠㠸幂庽弥徃㤈㤔㤿㥍惗愽峥㦉憷憹懏㦸戬抐拥挘㧸嚱"],["8da1","㨃揢揻搇摚㩋擀崕嘡龟㪗斆㪽旿晓㫲暒㬢朖㭂枤栀㭘桊梄㭲㭱㭻椉楃牜楤榟榅㮼槖㯝橥橴橱檂㯬檙㯲檫檵櫔櫶殁毁毪汵沪㳋洂洆洦涁㳯涤涱渕渘温溆𨧀溻滢滚齿滨滩漤漴㵆𣽁澁澾㵪㵵熷岙㶊瀬㶑灐灔灯灿炉𠌥䏁㗱𠻘"],["8e40","𣻗垾𦻓焾𥟠㙎榢𨯩孴穉𥣡𩓙穥穽𥦬窻窰竂竃燑𦒍䇊竚竝竪䇯咲𥰁笋筕笩𥌎𥳾箢筯莜𥮴𦱿篐萡箒箸𥴠㶭𥱥蒒篺簆簵𥳁籄粃𤢂粦晽𤕸糉糇糦籴糳糵糎"],["8ea1","繧䔝𦹄絝𦻖璍綉綫焵綳緒𤁗𦀩緤㴓緵𡟹緥𨍭縝𦄡𦅚繮纒䌫鑬縧罀罁罇礶𦋐駡羗𦍑羣𡙡𠁨䕜𣝦䔃𨌺翺𦒉者耈耝耨耯𪂇𦳃耻耼聡𢜔䦉𦘦𣷣𦛨朥肧𨩈脇脚墰𢛶汿𦒘𤾸擧𡒊舘𡡞橓𤩥𤪕䑺舩𠬍𦩒𣵾俹𡓽蓢荢𦬊𤦧𣔰𡝳𣷸芪椛芳䇛"],["8f40","蕋苐茚𠸖𡞴㛁𣅽𣕚艻苢茘𣺋𦶣𦬅𦮗𣗎㶿茝嗬莅䔋𦶥莬菁菓㑾𦻔橗蕚㒖𦹂𢻯葘𥯤葱㷓䓤檧葊𣲵祘蒨𦮖𦹷𦹃蓞萏莑䒠蒓蓤𥲑䉀𥳀䕃蔴嫲𦺙䔧蕳䔖枿蘖"],["8fa1","𨘥𨘻藁𧂈蘂𡖂𧃍䕫䕪蘨㙈𡢢号𧎚虾蝱𪃸蟮𢰧螱蟚蠏噡虬桖䘏衅衆𧗠𣶹𧗤衞袜䙛袴袵揁装睷𧜏覇覊覦覩覧覼𨨥觧𧤤𧪽誜瞓釾誐𧩙竩𧬺𣾏䜓𧬸煼謌謟𥐰𥕥謿譌譍誩𤩺讐讛誯𡛟䘕衏貛𧵔𧶏貫㜥𧵓賖𧶘𧶽贒贃𡤐賛灜贑𤳉㻐起"],["9040","趩𨀂𡀔𤦊㭼𨆼𧄌竧躭躶軃鋔輙輭𨍥𨐒辥錃𪊟𠩐辳䤪𨧞𨔽𣶻廸𣉢迹𪀔𨚼𨔁𢌥㦀𦻗逷𨔼𧪾遡𨕬𨘋邨𨜓郄𨛦邮都酧㫰醩釄粬𨤳𡺉鈎沟鉁鉢𥖹銹𨫆𣲛𨬌𥗛"],["90a1","𠴱錬鍫𨫡𨯫炏嫃𨫢𨫥䥥鉄𨯬𨰹𨯿鍳鑛躼閅閦鐦閠濶䊹𢙺𨛘𡉼𣸮䧟氜陻隖䅬隣𦻕懚隶磵𨫠隽双䦡𦲸𠉴𦐐𩂯𩃥𤫑𡤕𣌊霱虂霶䨏䔽䖅𤫩灵孁霛靜𩇕靗孊𩇫靟鐥僐𣂷𣂼鞉鞟鞱鞾韀韒韠𥑬韮琜𩐳響韵𩐝𧥺䫑頴頳顋顦㬎𧅵㵑𠘰𤅜"],["9140","𥜆飊颷飈飇䫿𦴧𡛓喰飡飦飬鍸餹𤨩䭲𩡗𩤅駵騌騻騐驘𥜥㛄𩂱𩯕髠髢𩬅髴䰎鬔鬭𨘀倴鬴𦦨㣃𣁽魐魀𩴾婅𡡣鮎𤉋鰂鯿鰌𩹨鷔𩾷𪆒𪆫𪃡𪄣𪇟鵾鶃𪄴鸎梈"],["91a1","鷄𢅛𪆓𪈠𡤻𪈳鴹𪂹𪊴麐麕麞麢䴴麪麯𤍤黁㭠㧥㴝伲㞾𨰫鼂鼈䮖鐤𦶢鼗鼖鼹嚟嚊齅馸𩂋韲葿齢齩竜龎爖䮾𤥵𤦻煷𤧸𤍈𤩑玞𨯚𡣺禟𨥾𨸶鍩鏳𨩄鋬鎁鏋𨥬𤒹爗㻫睲穃烐𤑳𤏸煾𡟯炣𡢾𣖙㻇𡢅𥐯𡟸㜢𡛻𡠹㛡𡝴𡣑𥽋㜣𡛀坛𤨥𡏾𡊨"],["9240","𡏆𡒶蔃𣚦蔃葕𤦔𧅥𣸱𥕜𣻻𧁒䓴𣛮𩦝𦼦柹㜳㰕㷧塬𡤢栐䁗𣜿𤃡𤂋𤄏𦰡哋嚞𦚱嚒𠿟𠮨𠸍鏆𨬓鎜仸儫㠙𤐶亼𠑥𠍿佋侊𥙑婨𠆫𠏋㦙𠌊𠐔㐵伩𠋀𨺳𠉵諚𠈌亘"],["92a1","働儍侢伃𤨎𣺊佂倮偬傁俌俥偘僼兙兛兝兞湶𣖕𣸹𣺿浲𡢄𣺉冨凃𠗠䓝𠒣𠒒𠒑赺𨪜𠜎剙劤𠡳勡鍮䙺熌𤎌𠰠𤦬𡃤槑𠸝瑹㻞璙琔瑖玘䮎𤪼𤂍叐㖄爏𤃉喴𠍅响𠯆圝鉝雴鍦埝垍坿㘾壋媙𨩆𡛺𡝯𡜐娬妸銏婾嫏娒𥥆𡧳𡡡𤊕㛵洅瑃娡𥺃"],["9340","媁𨯗𠐓鏠璌𡌃焅䥲鐈𨧻鎽㞠尞岞幞幈𡦖𡥼𣫮廍孏𡤃𡤄㜁𡢠㛝𡛾㛓脪𨩇𡶺𣑲𨦨弌弎𡤧𡞫婫𡜻孄蘔𧗽衠恾𢡠𢘫忛㺸𢖯𢖾𩂈𦽳懀𠀾𠁆𢘛憙憘恵𢲛𢴇𤛔𩅍"],["93a1","摱𤙥𢭪㨩𢬢𣑐𩣪𢹸挷𪑛撶挱揑𤧣𢵧护𢲡搻敫楲㯴𣂎𣊭𤦉𣊫唍𣋠𡣙𩐿曎𣊉𣆳㫠䆐𥖄𨬢𥖏𡛼𥕛𥐥磮𣄃𡠪𣈴㑤𣈏𣆂𤋉暎𦴤晫䮓昰𧡰𡷫晣𣋒𣋡昞𥡲㣑𣠺𣞼㮙𣞢𣏾瓐㮖枏𤘪梶栞㯄檾㡣𣟕𤒇樳橒櫉欅𡤒攑梘橌㯗橺歗𣿀𣲚鎠鋲𨯪𨫋"],["9440","銉𨀞𨧜鑧涥漋𤧬浧𣽿㶏渄𤀼娽渊塇洤硂焻𤌚𤉶烱牐犇犔𤞏𤜥兹𤪤𠗫瑺𣻸𣙟𤩊𤤗𥿡㼆㺱𤫟𨰣𣼵悧㻳瓌琼鎇琷䒟𦷪䕑疃㽣𤳙𤴆㽘畕癳𪗆㬙瑨𨫌𤦫𤦎㫻"],["94a1","㷍𤩎㻿𤧅𤣳釺圲鍂𨫣𡡤僟𥈡𥇧睸𣈲眎眏睻𤚗𣞁㩞𤣰琸璛㺿𤪺𤫇䃈𤪖𦆮錇𥖁砞碍碈磒珐祙𧝁𥛣䄎禛蒖禥樭𣻺稺秴䅮𡛦䄲鈵秱𠵌𤦌𠊙𣶺𡝮㖗啫㕰㚪𠇔𠰍竢婙𢛵𥪯𥪜娍𠉛磰娪𥯆竾䇹籝籭䈑𥮳𥺼𥺦糍𤧹𡞰粎籼粮檲緜縇緓罎𦉡"],["9540","𦅜𧭈綗𥺂䉪𦭵𠤖柖𠁎𣗏埄𦐒𦏸𤥢翝笧𠠬𥫩𥵃笌𥸎駦虅驣樜𣐿㧢𤧷𦖭騟𦖠蒀𧄧𦳑䓪脷䐂胆脉腂𦞴飃𦩂艢艥𦩑葓𦶧蘐𧈛媆䅿𡡀嬫𡢡嫤𡣘蚠蜨𣶏蠭𧐢娂"],["95a1","衮佅袇袿裦襥襍𥚃襔𧞅𧞄𨯵𨯙𨮜𨧹㺭蒣䛵䛏㟲訽訜𩑈彍鈫𤊄旔焩烄𡡅鵭貟賩𧷜妚矃姰䍮㛔踪躧𤰉輰轊䋴汘澻𢌡䢛潹溋𡟚鯩㚵𤤯邻邗啱䤆醻鐄𨩋䁢𨫼鐧𨰝𨰻蓥訫閙閧閗閖𨴴瑅㻂𤣿𤩂𤏪㻧𣈥随𨻧𨹦𨹥㻌𤧭𤩸𣿮琒瑫㻼靁𩂰"],["9640","桇䨝𩂓𥟟靝鍨𨦉𨰦𨬯𦎾銺嬑譩䤼珹𤈛鞛靱餸𠼦巁𨯅𤪲頟𩓚鋶𩗗釥䓀𨭐𤩧𨭤飜𨩅㼀鈪䤥萔餻饍𧬆㷽馛䭯馪驜𨭥𥣈檏騡嫾騯𩣱䮐𩥈馼䮽䮗鍽塲𡌂堢𤦸"],["96a1","𡓨硄𢜟𣶸棅㵽鑘㤧慐𢞁𢥫愇鱏鱓鱻鰵鰐魿鯏𩸭鮟𪇵𪃾鴡䲮𤄄鸘䲰鴌𪆴𪃭𪃳𩤯鶥蒽𦸒𦿟𦮂藼䔳𦶤𦺄𦷰萠藮𦸀𣟗𦁤秢𣖜𣙀䤭𤧞㵢鏛銾鍈𠊿碹鉷鑍俤㑀遤𥕝砽硔碶硋𡝗𣇉𤥁㚚佲濚濙瀞瀞吔𤆵垻壳垊鴖埗焴㒯𤆬燫𦱀𤾗嬨𡞵𨩉"],["9740","愌嫎娋䊼𤒈㜬䭻𨧼鎻鎸𡣖𠼝葲𦳀𡐓𤋺𢰦𤏁妔𣶷𦝁綨𦅛𦂤𤦹𤦋𨧺鋥珢㻩璴𨭣𡢟㻡𤪳櫘珳珻㻖𤨾𤪔𡟙𤩦𠎧𡐤𤧥瑈𤤖炥𤥶銄珦鍟𠓾錱𨫎𨨖鎆𨯧𥗕䤵𨪂煫"],["97a1","𤥃𠳿嚤𠘚𠯫𠲸唂秄𡟺緾𡛂𤩐𡡒䔮鐁㜊𨫀𤦭妰𡢿𡢃𧒄媡㛢𣵛㚰鉟婹𨪁𡡢鍴㳍𠪴䪖㦊僴㵩㵌𡎜煵䋻𨈘渏𩃤䓫浗𧹏灧沯㳖𣿭𣸭渂漌㵯𠏵畑㚼㓈䚀㻚䡱姄鉮䤾轁𨰜𦯀堒埈㛖𡑒烾𤍢𤩱𢿣𡊰𢎽梹楧𡎘𣓥𧯴𣛟𨪃𣟖𣏺𤲟樚𣚭𦲷萾䓟䓎"],["9840","𦴦𦵑𦲂𦿞漗𧄉茽𡜺菭𦲀𧁓𡟛妉媂𡞳婡婱𡤅𤇼㜭姯𡜼㛇熎鎐暚𤊥婮娫𤊓樫𣻹𧜶𤑛𤋊焝𤉙𨧡侰𦴨峂𤓎𧹍𤎽樌𤉖𡌄炦焳𤏩㶥泟勇𤩏繥姫崯㷳彜𤩝𡟟綤萦"],["98a1","咅𣫺𣌀𠈔坾𠣕𠘙㿥𡾞𪊶瀃𩅛嵰玏糓𨩙𩐠俈翧狍猐𧫴猸猹𥛶獁獈㺩𧬘遬燵𤣲珡臶㻊県㻑沢国琙琞琟㻢㻰㻴㻺瓓㼎㽓畂畭畲疍㽼痈痜㿀癍㿗癴㿜発𤽜熈嘣覀塩䀝睃䀹条䁅㗛瞘䁪䁯属瞾矋売砘点砜䂨砹硇硑硦葈𥔵礳栃礲䄃"],["9940","䄉禑禙辻稆込䅧窑䆲窼艹䇄竏竛䇏両筢筬筻簒簛䉠䉺类粜䊌粸䊔糭输烀𠳏総緔緐緽羮羴犟䎗耠耥笹耮耱联㷌垴炠肷胩䏭脌猪脎脒畠脔䐁㬹腖腙腚"],["99a1","䐓堺腼膄䐥膓䐭膥埯臁臤艔䒏芦艶苊苘苿䒰荗险榊萅烵葤惣蒈䔄蒾蓡蓸蔐蔸蕒䔻蕯蕰藠䕷虲蚒蚲蛯际螋䘆䘗袮裿褤襇覑𧥧訩訸誔誴豑賔賲贜䞘塟跃䟭仮踺嗘坔蹱嗵躰䠷軎転軤軭軲辷迁迊迌逳駄䢭飠鈓䤞鈨鉘鉫銱銮銿"],["9a40","鋣鋫鋳鋴鋽鍃鎄鎭䥅䥑麿鐗匁鐝鐭鐾䥪鑔鑹锭関䦧间阳䧥枠䨤靀䨵鞲韂噔䫤惨颹䬙飱塄餎餙冴餜餷饂饝饢䭰駅䮝騼鬏窃魩鮁鯝鯱鯴䱭鰠㝯𡯂鵉鰺"],["9aa1","黾噐鶓鶽鷀鷼银辶鹻麬麱麽黆铜黢黱黸竈齄𠂔𠊷𠎠椚铃妬𠓗塀铁㞹𠗕𠘕𠙶𡚺块煳𠫂𠫍𠮿呪吆𠯋咞𠯻𠰻𠱓𠱥𠱼惧𠲍噺𠲵𠳝𠳭𠵯𠶲𠷈楕鰯螥𠸄𠸎𠻗𠾐𠼭𠹳尠𠾼帋𡁜𡁏𡁶朞𡁻𡂈𡂖㙇𡂿𡃓𡄯𡄻卤蒭𡋣𡍵𡌶讁𡕷𡘙𡟃𡟇乸炻𡠭𡥪"],["9b40","𡨭𡩅𡰪𡱰𡲬𡻈拃𡻕𡼕熘桕𢁅槩㛈𢉼𢏗𢏺𢜪𢡱𢥏苽𢥧𢦓𢫕覥𢫨辠𢬎鞸𢬿顇骽𢱌"],["9b62","𢲈𢲷𥯨𢴈𢴒𢶷𢶕𢹂𢽴𢿌𣀳𣁦𣌟𣏞徱晈暿𧩹𣕧𣗳爁𤦺矗𣘚𣜖纇𠍆墵朎"],["9ba1","椘𣪧𧙗𥿢𣸑𣺹𧗾𢂚䣐䪸𤄙𨪚𤋮𤌍𤀻𤌴𤎖𤩅𠗊凒𠘑妟𡺨㮾𣳿𤐄𤓖垈𤙴㦛𤜯𨗨𩧉㝢𢇃譞𨭎駖𤠒𤣻𤨕爉𤫀𠱸奥𤺥𤾆𠝹軚𥀬劏圿煱𥊙𥐙𣽊𤪧喼𥑆𥑮𦭒釔㑳𥔿𧘲𥕞䜘𥕢𥕦𥟇𤤿𥡝偦㓻𣏌惞𥤃䝼𨥈𥪮𥮉𥰆𡶐垡煑澶𦄂𧰒遖𦆲𤾚譢𦐂𦑊"],["9c40","嵛𦯷輶𦒄𡤜諪𤧶𦒈𣿯𦔒䯀𦖿𦚵𢜛鑥𥟡憕娧晉侻嚹𤔡𦛼乪𤤴陖涏𦲽㘘襷𦞙𦡮𦐑𦡞營𦣇筂𩃀𠨑𦤦鄄𦤹穅鷰𦧺騦𦨭㙟𦑩𠀡禃𦨴𦭛崬𣔙菏𦮝䛐𦲤画补𦶮墶"],["9ca1","㜜𢖍𧁋𧇍㱔𧊀𧊅銁𢅺𧊋錰𧋦𤧐氹钟𧑐𠻸蠧裵𢤦𨑳𡞱溸𤨪𡠠㦤㚹尐秣䔿暶𩲭𩢤襃𧟌𧡘囖䃟𡘊㦡𣜯𨃨𡏅熭荦𧧝𩆨婧䲷𧂯𨦫𧧽𧨊𧬋𧵦𤅺筃祾𨀉澵𪋟樃𨌘厢𦸇鎿栶靝𨅯𨀣𦦵𡏭𣈯𨁈嶅𨰰𨂃圕頣𨥉嶫𤦈斾槕叒𤪥𣾁㰑朶𨂐𨃴𨄮𡾡𨅏"],["9d40","𨆉𨆯𨈚𨌆𨌯𨎊㗊𨑨𨚪䣺揦𨥖砈鉕𨦸䏲𨧧䏟𨧨𨭆𨯔姸𨰉輋𨿅𩃬筑𩄐𩄼㷷𩅞𤫊运犏嚋𩓧𩗩𩖰𩖸𩜲𩣑𩥉𩥪𩧃𩨨𩬎𩵚𩶛纟𩻸𩼣䲤镇𪊓熢𪋿䶑递𪗋䶜𠲜达嗁"],["9da1","辺𢒰边𤪓䔉繿潖檱仪㓤𨬬𧢝㜺躀𡟵𨀤𨭬𨮙𧨾𦚯㷫𧙕𣲷𥘵𥥖亚𥺁𦉘嚿𠹭踎孭𣺈𤲞揞拐𡟶𡡻攰嘭𥱊吚𥌑㷆𩶘䱽嘢嘞罉𥻘奵𣵀蝰东𠿪𠵉𣚺脗鵞贘瘻鱅癎瞹鍅吲腈苷嘥脲萘肽嗪祢噃吖𠺝㗎嘅嗱曱𨋢㘭甴嗰喺咗啲𠱁𠲖廐𥅈𠹶𢱢"],["9e40","𠺢麫絚嗞𡁵抝靭咔賍燶酶揼掹揾啩𢭃鱲𢺳冚㓟𠶧冧呍唞唓癦踭𦢊疱肶蠄螆裇膶萜𡃁䓬猄𤜆宐茋𦢓噻𢛴𧴯𤆣𧵳𦻐𧊶酰𡇙鈈𣳼𪚩𠺬𠻹牦𡲢䝎𤿂𧿹𠿫䃺"],["9ea1","鱝攟𢶠䣳𤟠𩵼𠿬𠸊恢𧖣𠿭"],["9ead","𦁈𡆇熣纎鵐业丄㕷嬍沲卧㚬㧜卽㚥𤘘墚𤭮舭呋垪𥪕𠥹"],["9ec5","㩒𢑥獴𩺬䴉鯭𣳾𩼰䱛𤾩𩖞𩿞葜𣶶𧊲𦞳𣜠挮紥𣻷𣸬㨪逈勌㹴㙺䗩𠒎癀嫰𠺶硺𧼮墧䂿噼鮋嵴癔𪐴麅䳡痹㟻愙𣃚𤏲"],["9ef5","噝𡊩垧𤥣𩸆刴𧂮㖭汊鵼"],["9f40","籖鬹埞𡝬屓擓𩓐𦌵𧅤蚭𠴨𦴢𤫢𠵱"],["9f4f","凾𡼏嶎霃𡷑麁遌笟鬂峑箣扨挵髿篏鬪籾鬮籂粆鰕篼鬉鼗鰛𤤾齚啳寃俽麘俲剠㸆勑坧偖妷帒韈鶫轜呩鞴饀鞺匬愰"],["9fa1","椬叚鰊鴂䰻陁榀傦畆𡝭駚剳"],["9fae","酙隁酜"],["9fb2","酑𨺗捿𦴣櫊嘑醎畺抅𠏼獏籰𥰡𣳽"],["9fc1","𤤙盖鮝个𠳔莾衂"],["9fc9","届槀僭坺刟巵从氱𠇲伹咜哚劚趂㗾弌㗳"],["9fdb","歒酼龥鮗頮颴骺麨麄煺笔"],["9fe7","毺蠘罸"],["9feb","嘠𪙊蹷齓"],["9ff0","跔蹏鸜踁抂𨍽踨蹵竓𤩷稾磘泪詧瘇"],["a040","𨩚鼦泎蟖痃𪊲硓咢贌狢獱謭猂瓱賫𤪻蘯徺袠䒷"],["a055","𡠻𦸅"],["a058","詾𢔛"],["a05b","惽癧髗鵄鍮鮏蟵"],["a063","蠏賷猬霡鮰㗖犲䰇籑饊𦅙慙䰄麖慽"],["a073","坟慯抦戹拎㩜懢厪𣏵捤栂㗒"],["a0a1","嵗𨯂迚𨸹"],["a0a6","僙𡵆礆匲阸𠼻䁥"],["a0ae","矾"],["a0b0","糂𥼚糚稭聦聣絍甅瓲覔舚朌聢𧒆聛瓰脃眤覉𦟌畓𦻑螩蟎臈螌詉貭譃眫瓸蓚㘵榲趦"],["a0d4","覩瑨涹蟁𤀑瓧㷛煶悤憜㳑煢恷"],["a0e2","罱𨬭牐惩䭾删㰘𣳇𥻗𧙖𥔱𡥄𡋾𩤃𦷜𧂭峁𦆭𨨏𣙷𠃮𦡆𤼎䕢嬟𦍌齐麦𦉫"],["a3c0","␀",31,"␡"],["c6a1","①",9,"⑴",9,"ⅰ",9,"丶丿亅亠冂冖冫勹匸卩厶夊宀巛⼳广廴彐彡攴无疒癶辵隶¨ˆヽヾゝゞ〃仝々〆〇ー［］✽ぁ",23],["c740","す",58,"ァアィイ"],["c7a1","ゥ",81,"А",5,"ЁЖ",4],["c840","Л",26,"ёж",25,"⇧↸↹㇏𠃌乚𠂊刂䒑"],["c8a1","龰冈龱𧘇"],["c8cd","￢￤＇＂㈱№℡゛゜⺀⺄⺆⺇⺈⺊⺌⺍⺕⺜⺝⺥⺧⺪⺬⺮⺶⺼⺾⻆⻊⻌⻍⻏⻖⻗⻞⻣"],["c8f5","ʃɐɛɔɵœøŋʊɪ"],["f9fe","￭"],["fa40","𠕇鋛𠗟𣿅蕌䊵珯况㙉𤥂𨧤鍄𡧛苮𣳈砼杄拟𤤳𨦪𠊠𦮳𡌅侫𢓭倈𦴩𧪄𣘀𤪱𢔓倩𠍾徤𠎀𠍇滛𠐟偽儁㑺儎顬㝃萖𤦤𠒇兠𣎴兪𠯿𢃼𠋥𢔰𠖎𣈳𡦃宂蝽𠖳𣲙冲冸"],["faa1","鴴凉减凑㳜凓𤪦决凢卂凭菍椾𣜭彻刋刦刼劵剗劔効勅簕蕂勠蘍𦬓包𨫞啉滙𣾀𠥔𣿬匳卄𠯢泋𡜦栛珕恊㺪㣌𡛨燝䒢卭却𨚫卾卿𡖖𡘓矦厓𨪛厠厫厮玧𥝲㽙玜叁叅汉义埾叙㪫𠮏叠𣿫𢶣叶𠱷吓灹唫晗浛呭𦭓𠵴啝咏咤䞦𡜍𠻝㶴𠵍"],["fb40","𨦼𢚘啇䳭启琗喆喩嘅𡣗𤀺䕒𤐵暳𡂴嘷曍𣊊暤暭噍噏磱囱鞇叾圀囯园𨭦㘣𡉏坆𤆥汮炋坂㚱𦱾埦𡐖堃𡑔𤍣堦𤯵塜墪㕡壠壜𡈼壻寿坃𪅐𤉸鏓㖡够梦㛃湙"],["fba1","𡘾娤啓𡚒蔅姉𠵎𦲁𦴪𡟜姙𡟻𡞲𦶦浱𡠨𡛕姹𦹅媫婣㛦𤦩婷㜈媖瑥嫓𦾡𢕔㶅𡤑㜲𡚸広勐孶斈孼𧨎䀄䡝𠈄寕慠𡨴𥧌𠖥寳宝䴐尅𡭄尓珎尔𡲥𦬨屉䣝岅峩峯嶋𡷹𡸷崐崘嵆𡺤岺巗苼㠭𤤁𢁉𢅳芇㠶㯂帮檊幵幺𤒼𠳓厦亷廐厨𡝱帉廴𨒂"],["fc40","廹廻㢠廼栾鐛弍𠇁弢㫞䢮𡌺强𦢈𢏐彘𢑱彣鞽𦹮彲鍀𨨶徧嶶㵟𥉐𡽪𧃸𢙨釖𠊞𨨩怱暅𡡷㥣㷇㘹垐𢞴祱㹀悞悤悳𤦂𤦏𧩓璤僡媠慤萤慂慈𦻒憁凴𠙖憇宪𣾷"],["fca1","𢡟懓𨮝𩥝懐㤲𢦀𢣁怣慜攞掋𠄘担𡝰拕𢸍捬𤧟㨗搸揸𡎎𡟼撐澊𢸶頔𤂌𥜝擡擥鑻㩦携㩗敍漖𤨨𤨣斅敭敟𣁾斵𤥀䬷旑䃘𡠩无旣忟𣐀昘𣇷𣇸晄𣆤𣆥晋𠹵晧𥇦晳晴𡸽𣈱𨗴𣇈𥌓矅𢣷馤朂𤎜𤨡㬫槺𣟂杞杧杢𤇍𩃭柗䓩栢湐鈼栁𣏦𦶠桝"],["fd40","𣑯槡樋𨫟楳棃𣗍椁椀㴲㨁𣘼㮀枬楡𨩊䋼椶榘㮡𠏉荣傐槹𣙙𢄪橅𣜃檝㯳枱櫈𩆜㰍欝𠤣惞欵歴𢟍溵𣫛𠎵𡥘㝀吡𣭚毡𣻼毜氷𢒋𤣱𦭑汚舦汹𣶼䓅𣶽𤆤𤤌𤤀"],["fda1","𣳉㛥㳫𠴲鮃𣇹𢒑羏样𦴥𦶡𦷫涖浜湼漄𤥿𤂅𦹲蔳𦽴凇沜渝萮𨬡港𣸯瑓𣾂秌湏媑𣁋濸㜍澝𣸰滺𡒗𤀽䕕鏰潄潜㵎潴𩅰㴻澟𤅄濓𤂑𤅕𤀹𣿰𣾴𤄿凟𤅖𤅗𤅀𦇝灋灾炧炁烌烕烖烟䄄㷨熴熖𤉷焫煅媈煊煮岜𤍥煏鍢𤋁焬𤑚𤨧𤨢熺𨯨炽爎"],["fe40","鑂爕夑鑃爤鍁𥘅爮牀𤥴梽牕牗㹕𣁄栍漽犂猪猫𤠣𨠫䣭𨠄猨献珏玪𠰺𦨮珉瑉𤇢𡛧𤨤昣㛅𤦷𤦍𤧻珷琕椃𤨦琹𠗃㻗瑜𢢭瑠𨺲瑇珤瑶莹瑬㜰瑴鏱樬璂䥓𤪌"],["fea1","𤅟𤩹𨮏孆𨰃𡢞瓈𡦈甎瓩甞𨻙𡩋寗𨺬鎅畍畊畧畮𤾂㼄𤴓疎瑝疞疴瘂瘬癑癏癯癶𦏵皐臯㟸𦤑𦤎皡皥皷盌𦾟葢𥂝𥅽𡸜眞眦着撯𥈠睘𣊬瞯𨥤𨥨𡛁矴砉𡍶𤨒棊碯磇磓隥礮𥗠磗礴碱𧘌辸袄𨬫𦂃𢘜禆褀椂禀𥡗禝𧬹礼禩渪𧄦㺨秆𩄍秔"]]},function(e,t,n){"use strict";var i=n(10).Buffer,a=n(5).Transform;function o(e,t){this.conv=e,(t=t||{}).decodeStrings=!1,a.call(this,t)}function r(e,t){this.conv=e,(t=t||{}).encoding=this.encoding="utf8",a.call(this,t)}e.exports=function(e){e.encodeStream=function(t,n){return new o(e.getEncoder(t,n),n)},e.decodeStream=function(t,n){return new r(e.getDecoder(t,n),n)},e.supportsStreams=!0,e.IconvLiteEncoderStream=o,e.IconvLiteDecoderStream=r,e._collect=r.prototype.collect},o.prototype=Object.create(a.prototype,{constructor:{value:o}}),o.prototype._transform=function(e,t,n){if("string"!=typeof e)return n(new Error("Iconv encoding stream needs strings as its input."));try{var i=this.conv.write(e);i&&i.length&&this.push(i),n()}catch(e){n(e)}},o.prototype._flush=function(e){try{var t=this.conv.end();t&&t.length&&this.push(t),e()}catch(t){e(t)}},o.prototype.collect=function(e){var t=[];return this.on("error",e),this.on("data",function(e){t.push(e)}),this.on("end",function(){e(null,i.concat(t))}),this},r.prototype=Object.create(a.prototype,{constructor:{value:r}}),r.prototype._transform=function(e,t,n){if(!i.isBuffer(e))return n(new Error("Iconv decoding stream needs buffers as its input."));try{var a=this.conv.write(e);a&&a.length&&this.push(a,this.encoding),n()}catch(e){n(e)}},r.prototype._flush=function(e){try{var t=this.conv.end();t&&t.length&&this.push(t,this.encoding),e()}catch(t){e(t)}},r.prototype.collect=function(e){var t="";return this.on("error",e),this.on("data",function(e){t+=e}),this.on("end",function(){e(null,t)}),this}},function(e,t,n){"use strict";var i=n(10).Buffer;e.exports=function(e){var t=void 0;e.supportsNodeEncodingsExtension=!(i.from||new i(0)instanceof Uint8Array),e.extendNodeEncodings=function(){if(!t){if(t={},!e.supportsNodeEncodingsExtension)return console.error("ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node"),void console.error("See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility");var a={hex:!0,utf8:!0,"utf-8":!0,ascii:!0,binary:!0,base64:!0,ucs2:!0,"ucs-2":!0,utf16le:!0,"utf-16le":!0};i.isNativeEncoding=function(e){return e&&a[e.toLowerCase()]};var o=n(10).SlowBuffer;if(t.SlowBufferToString=o.prototype.toString,o.prototype.toString=function(n,a,o){return n=String(n||"utf8").toLowerCase(),i.isNativeEncoding(n)?t.SlowBufferToString.call(this,n,a,o):(void 0===a&&(a=0),void 0===o&&(o=this.length),e.decode(this.slice(a,o),n))},t.SlowBufferWrite=o.prototype.write,o.prototype.write=function(n,a,o,r){if(isFinite(a))isFinite(o)||(r=o,o=void 0);else{var s=r;r=a,a=o,o=s}a=+a||0;var c=this.length-a;if(o?(o=+o)>c&&(o=c):o=c,r=String(r||"utf8").toLowerCase(),i.isNativeEncoding(r))return t.SlowBufferWrite.call(this,n,a,o,r);if(n.length>0&&(o<0||a<0))throw new RangeError("attempt to write beyond buffer bounds");var p=e.encode(n,r);return p.length<o&&(o=p.length),p.copy(this,a,0,o),o},t.BufferIsEncoding=i.isEncoding,i.isEncoding=function(t){return i.isNativeEncoding(t)||e.encodingExists(t)},t.BufferByteLength=i.byteLength,i.byteLength=o.byteLength=function(n,a){return a=String(a||"utf8").toLowerCase(),i.isNativeEncoding(a)?t.BufferByteLength.call(this,n,a):e.encode(n,a).length},t.BufferToString=i.prototype.toString,i.prototype.toString=function(n,a,o){return n=String(n||"utf8").toLowerCase(),i.isNativeEncoding(n)?t.BufferToString.call(this,n,a,o):(void 0===a&&(a=0),void 0===o&&(o=this.length),e.decode(this.slice(a,o),n))},t.BufferWrite=i.prototype.write,i.prototype.write=function(n,a,o,r){var s=a,c=o,p=r;if(isFinite(a))isFinite(o)||(r=o,o=void 0);else{var l=r;r=a,a=o,o=l}if(r=String(r||"utf8").toLowerCase(),i.isNativeEncoding(r))return t.BufferWrite.call(this,n,s,c,p);a=+a||0;var u=this.length-a;if(o?(o=+o)>u&&(o=u):o=u,n.length>0&&(o<0||a<0))throw new RangeError("attempt to write beyond buffer bounds");var d=e.encode(n,r);return d.length<o&&(o=d.length),d.copy(this,a,0,o),o},e.supportsStreams){var r=n(5).Readable;t.ReadableSetEncoding=r.prototype.setEncoding,r.prototype.setEncoding=function(t,n){this._readableState.decoder=e.getDecoder(t,n),this._readableState.encoding=t},r.prototype.collect=e._collect}}},e.undoExtendNodeEncodings=function(){if(e.supportsNodeEncodingsExtension){if(!t)throw new Error("require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.");delete i.isNativeEncoding;var a=n(10).SlowBuffer;if(a.prototype.toString=t.SlowBufferToString,a.prototype.write=t.SlowBufferWrite,i.isEncoding=t.BufferIsEncoding,i.byteLength=t.BufferByteLength,i.prototype.toString=t.BufferToString,i.prototype.write=t.BufferWrite,e.supportsStreams){var o=n(5).Readable;o.prototype.setEncoding=t.ReadableSetEncoding,delete o.prototype.collect}t=void 0}}}},function(e,t,n){"use strict";
/*!
 * ee-first
 * Copyright(c) 2014 Jonathan Ong
 * MIT Licensed
 */function i(e,t){return function(n){for(var i=new Array(arguments.length),a="error"===e?n:null,o=0;o<i.length;o++)i[o]=arguments[o];t(a,this,e,i)}}e.exports=function(e,t){if(!Array.isArray(e))throw new TypeError("arg must be an array of [ee, events...] arrays");for(var n=[],a=0;a<e.length;a++){var o=e[a];if(!Array.isArray(o)||o.length<2)throw new TypeError("each array member must be [ee, events...]");for(var r=o[0],s=1;s<o.length;s++){var c=o[s],p=i(c,l);r.on(c,p),n.push({ee:r,event:c,fn:p})}}function l(){u(),t.apply(null,arguments)}function u(){for(var e,t=0;t<n.length;t++)(e=n[t]).ee.removeListener(e.event,e.fn)}function d(e){t=e}return d.cancel=u,d}},function(e,t){e.exports=require("zlib")},function(e,t){
/*!
 * media-typer
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */
var n=/; *([!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+) *= *("(?:[ !\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u0020-\u007e])*"|[!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+) */g,i=/^[\u0020-\u007e\u0080-\u00ff]+$/,a=/^[!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+$/,o=/\\([\u0000-\u007f])/g,r=/([\\"])/g,s=/^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/,c=/^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/,p=/^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;function l(e){var t=String(e);if(a.test(t))return t;if(t.length>0&&!i.test(t))throw new TypeError("invalid parameter value");return'"'+t.replace(r,"\\$1")+'"'}t.format=function(e){if(!e||"object"!=typeof e)throw new TypeError("argument obj is required");var t=e.parameters,n=e.subtype,i=e.suffix,o=e.type;if(!o||!c.test(o))throw new TypeError("invalid type");if(!n||!s.test(n))throw new TypeError("invalid subtype");var r=o+"/"+n;if(i){if(!c.test(i))throw new TypeError("invalid suffix");r+="+"+i}if(t&&"object"==typeof t)for(var p,u=Object.keys(t).sort(),d=0;d<u.length;d++){if(p=u[d],!a.test(p))throw new TypeError("invalid parameter name");r+="; "+p+"="+l(t[p])}return r},t.parse=function(e){if(!e)throw new TypeError("argument string is required");"object"==typeof e&&(e=function(e){if("function"==typeof e.getHeader)return e.getHeader("content-type");if("object"==typeof e.headers)return e.headers&&e.headers["content-type"]}(e));if("string"!=typeof e)throw new TypeError("argument string is required to be a string");var t,i,a,r=e.indexOf(";"),s=function(e){var t=p.exec(e.toLowerCase());if(!t)throw new TypeError("invalid media type");var n,i=t[1],a=t[2],o=a.lastIndexOf("+");-1!==o&&(n=a.substr(o+1),a=a.substr(0,o));return{type:i,subtype:a,suffix:n}}(-1!==r?e.substr(0,r):e),c={};n.lastIndex=r;for(;i=n.exec(e);){if(i.index!==r)throw new TypeError("invalid parameter format");r+=i[0].length,t=i[1].toLowerCase(),'"'===(a=i[2])[0]&&(a=a.substr(1,a.length-2).replace(o,"$1")),c[t]=a}if(-1!==r&&r!==e.length)throw new TypeError("invalid parameter format");return s.parameters=c,s}},function(e,t,n){
/*!
 * mime-db
 * Copyright(c) 2014 Jonathan Ong
 * MIT Licensed
 */
e.exports=n(111)},function(e){e.exports={"application/1d-interleaved-parityfec":{source:"iana"},"application/3gpdash-qoe-report+xml":{source:"iana",compressible:!0},"application/3gpp-ims+xml":{source:"iana",compressible:!0},"application/a2l":{source:"iana"},"application/activemessage":{source:"iana"},"application/activity+json":{source:"iana",compressible:!0},"application/alto-costmap+json":{source:"iana",compressible:!0},"application/alto-costmapfilter+json":{source:"iana",compressible:!0},"application/alto-directory+json":{source:"iana",compressible:!0},"application/alto-endpointcost+json":{source:"iana",compressible:!0},"application/alto-endpointcostparams+json":{source:"iana",compressible:!0},"application/alto-endpointprop+json":{source:"iana",compressible:!0},"application/alto-endpointpropparams+json":{source:"iana",compressible:!0},"application/alto-error+json":{source:"iana",compressible:!0},"application/alto-networkmap+json":{source:"iana",compressible:!0},"application/alto-networkmapfilter+json":{source:"iana",compressible:!0},"application/aml":{source:"iana"},"application/andrew-inset":{source:"iana",extensions:["ez"]},"application/applefile":{source:"iana"},"application/applixware":{source:"apache",extensions:["aw"]},"application/atf":{source:"iana"},"application/atfx":{source:"iana"},"application/atom+xml":{source:"iana",compressible:!0,extensions:["atom"]},"application/atomcat+xml":{source:"iana",compressible:!0,extensions:["atomcat"]},"application/atomdeleted+xml":{source:"iana",compressible:!0},"application/atomicmail":{source:"iana"},"application/atomsvc+xml":{source:"iana",compressible:!0,extensions:["atomsvc"]},"application/atxml":{source:"iana"},"application/auth-policy+xml":{source:"iana",compressible:!0},"application/bacnet-xdd+zip":{source:"iana",compressible:!1},"application/batch-smtp":{source:"iana"},"application/bdoc":{compressible:!1,extensions:["bdoc"]},"application/beep+xml":{source:"iana",compressible:!0},"application/calendar+json":{source:"iana",compressible:!0},"application/calendar+xml":{source:"iana",compressible:!0},"application/call-completion":{source:"iana"},"application/cals-1840":{source:"iana"},"application/cbor":{source:"iana"},"application/cccex":{source:"iana"},"application/ccmp+xml":{source:"iana",compressible:!0},"application/ccxml+xml":{source:"iana",compressible:!0,extensions:["ccxml"]},"application/cdfx+xml":{source:"iana",compressible:!0},"application/cdmi-capability":{source:"iana",extensions:["cdmia"]},"application/cdmi-container":{source:"iana",extensions:["cdmic"]},"application/cdmi-domain":{source:"iana",extensions:["cdmid"]},"application/cdmi-object":{source:"iana",extensions:["cdmio"]},"application/cdmi-queue":{source:"iana",extensions:["cdmiq"]},"application/cdni":{source:"iana"},"application/cea":{source:"iana"},"application/cea-2018+xml":{source:"iana",compressible:!0},"application/cellml+xml":{source:"iana",compressible:!0},"application/cfw":{source:"iana"},"application/clue_info+xml":{source:"iana",compressible:!0},"application/cms":{source:"iana"},"application/cnrp+xml":{source:"iana",compressible:!0},"application/coap-group+json":{source:"iana",compressible:!0},"application/coap-payload":{source:"iana"},"application/commonground":{source:"iana"},"application/conference-info+xml":{source:"iana",compressible:!0},"application/cose":{source:"iana"},"application/cose-key":{source:"iana"},"application/cose-key-set":{source:"iana"},"application/cpl+xml":{source:"iana",compressible:!0},"application/csrattrs":{source:"iana"},"application/csta+xml":{source:"iana",compressible:!0},"application/cstadata+xml":{source:"iana",compressible:!0},"application/csvm+json":{source:"iana",compressible:!0},"application/cu-seeme":{source:"apache",extensions:["cu"]},"application/cwt":{source:"iana"},"application/cybercash":{source:"iana"},"application/dart":{compressible:!0},"application/dash+xml":{source:"iana",compressible:!0,extensions:["mpd"]},"application/dashdelta":{source:"iana"},"application/davmount+xml":{source:"iana",compressible:!0,extensions:["davmount"]},"application/dca-rft":{source:"iana"},"application/dcd":{source:"iana"},"application/dec-dx":{source:"iana"},"application/dialog-info+xml":{source:"iana",compressible:!0},"application/dicom":{source:"iana"},"application/dicom+json":{source:"iana",compressible:!0},"application/dicom+xml":{source:"iana",compressible:!0},"application/dii":{source:"iana"},"application/dit":{source:"iana"},"application/dns":{source:"iana"},"application/dns+json":{source:"iana",compressible:!0},"application/dns-message":{source:"iana"},"application/docbook+xml":{source:"apache",compressible:!0,extensions:["dbk"]},"application/dskpp+xml":{source:"iana",compressible:!0},"application/dssc+der":{source:"iana",extensions:["dssc"]},"application/dssc+xml":{source:"iana",compressible:!0,extensions:["xdssc"]},"application/dvcs":{source:"iana"},"application/ecmascript":{source:"iana",compressible:!0,extensions:["ecma","es"]},"application/edi-consent":{source:"iana"},"application/edi-x12":{source:"iana",compressible:!1},"application/edifact":{source:"iana",compressible:!1},"application/efi":{source:"iana"},"application/emergencycalldata.comment+xml":{source:"iana",compressible:!0},"application/emergencycalldata.control+xml":{source:"iana",compressible:!0},"application/emergencycalldata.deviceinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.ecall.msd":{source:"iana"},"application/emergencycalldata.providerinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.serviceinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.subscriberinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.veds+xml":{source:"iana",compressible:!0},"application/emma+xml":{source:"iana",compressible:!0,extensions:["emma"]},"application/emotionml+xml":{source:"iana",compressible:!0},"application/encaprtp":{source:"iana"},"application/epp+xml":{source:"iana",compressible:!0},"application/epub+zip":{source:"iana",compressible:!1,extensions:["epub"]},"application/eshop":{source:"iana"},"application/exi":{source:"iana",extensions:["exi"]},"application/expect-ct-report+json":{source:"iana",compressible:!0},"application/fastinfoset":{source:"iana"},"application/fastsoap":{source:"iana"},"application/fdt+xml":{source:"iana",compressible:!0},"application/fhir+json":{source:"iana",compressible:!0},"application/fhir+xml":{source:"iana",compressible:!0},"application/fido.trusted-apps+json":{compressible:!0},"application/fits":{source:"iana"},"application/font-sfnt":{source:"iana"},"application/font-tdpfr":{source:"iana",extensions:["pfr"]},"application/font-woff":{source:"iana",compressible:!1},"application/framework-attributes+xml":{source:"iana",compressible:!0},"application/geo+json":{source:"iana",compressible:!0,extensions:["geojson"]},"application/geo+json-seq":{source:"iana"},"application/geopackage+sqlite3":{source:"iana"},"application/geoxacml+xml":{source:"iana",compressible:!0},"application/gltf-buffer":{source:"iana"},"application/gml+xml":{source:"iana",compressible:!0,extensions:["gml"]},"application/gpx+xml":{source:"apache",compressible:!0,extensions:["gpx"]},"application/gxf":{source:"apache",extensions:["gxf"]},"application/gzip":{source:"iana",compressible:!1,extensions:["gz"]},"application/h224":{source:"iana"},"application/held+xml":{source:"iana",compressible:!0},"application/hjson":{extensions:["hjson"]},"application/http":{source:"iana"},"application/hyperstudio":{source:"iana",extensions:["stk"]},"application/ibe-key-request+xml":{source:"iana",compressible:!0},"application/ibe-pkg-reply+xml":{source:"iana",compressible:!0},"application/ibe-pp-data":{source:"iana"},"application/iges":{source:"iana"},"application/im-iscomposing+xml":{source:"iana",compressible:!0},"application/index":{source:"iana"},"application/index.cmd":{source:"iana"},"application/index.obj":{source:"iana"},"application/index.response":{source:"iana"},"application/index.vnd":{source:"iana"},"application/inkml+xml":{source:"iana",compressible:!0,extensions:["ink","inkml"]},"application/iotp":{source:"iana"},"application/ipfix":{source:"iana",extensions:["ipfix"]},"application/ipp":{source:"iana"},"application/isup":{source:"iana"},"application/its+xml":{source:"iana",compressible:!0},"application/java-archive":{source:"apache",compressible:!1,extensions:["jar","war","ear"]},"application/java-serialized-object":{source:"apache",compressible:!1,extensions:["ser"]},"application/java-vm":{source:"apache",compressible:!1,extensions:["class"]},"application/javascript":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["js","mjs"]},"application/jf2feed+json":{source:"iana",compressible:!0},"application/jose":{source:"iana"},"application/jose+json":{source:"iana",compressible:!0},"application/jrd+json":{source:"iana",compressible:!0},"application/json":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["json","map"]},"application/json-patch+json":{source:"iana",compressible:!0},"application/json-seq":{source:"iana"},"application/json5":{extensions:["json5"]},"application/jsonml+json":{source:"apache",compressible:!0,extensions:["jsonml"]},"application/jwk+json":{source:"iana",compressible:!0},"application/jwk-set+json":{source:"iana",compressible:!0},"application/jwt":{source:"iana"},"application/kpml-request+xml":{source:"iana",compressible:!0},"application/kpml-response+xml":{source:"iana",compressible:!0},"application/ld+json":{source:"iana",compressible:!0,extensions:["jsonld"]},"application/lgr+xml":{source:"iana",compressible:!0},"application/link-format":{source:"iana"},"application/load-control+xml":{source:"iana",compressible:!0},"application/lost+xml":{source:"iana",compressible:!0,extensions:["lostxml"]},"application/lostsync+xml":{source:"iana",compressible:!0},"application/lxf":{source:"iana"},"application/mac-binhex40":{source:"iana",extensions:["hqx"]},"application/mac-compactpro":{source:"apache",extensions:["cpt"]},"application/macwriteii":{source:"iana"},"application/mads+xml":{source:"iana",compressible:!0,extensions:["mads"]},"application/manifest+json":{charset:"UTF-8",compressible:!0,extensions:["webmanifest"]},"application/marc":{source:"iana",extensions:["mrc"]},"application/marcxml+xml":{source:"iana",compressible:!0,extensions:["mrcx"]},"application/mathematica":{source:"iana",extensions:["ma","nb","mb"]},"application/mathml+xml":{source:"iana",compressible:!0,extensions:["mathml"]},"application/mathml-content+xml":{source:"iana",compressible:!0},"application/mathml-presentation+xml":{source:"iana",compressible:!0},"application/mbms-associated-procedure-description+xml":{source:"iana",compressible:!0},"application/mbms-deregister+xml":{source:"iana",compressible:!0},"application/mbms-envelope+xml":{source:"iana",compressible:!0},"application/mbms-msk+xml":{source:"iana",compressible:!0},"application/mbms-msk-response+xml":{source:"iana",compressible:!0},"application/mbms-protection-description+xml":{source:"iana",compressible:!0},"application/mbms-reception-report+xml":{source:"iana",compressible:!0},"application/mbms-register+xml":{source:"iana",compressible:!0},"application/mbms-register-response+xml":{source:"iana",compressible:!0},"application/mbms-schedule+xml":{source:"iana",compressible:!0},"application/mbms-user-service-description+xml":{source:"iana",compressible:!0},"application/mbox":{source:"iana",extensions:["mbox"]},"application/media-policy-dataset+xml":{source:"iana",compressible:!0},"application/media_control+xml":{source:"iana",compressible:!0},"application/mediaservercontrol+xml":{source:"iana",compressible:!0,extensions:["mscml"]},"application/merge-patch+json":{source:"iana",compressible:!0},"application/metalink+xml":{source:"apache",compressible:!0,extensions:["metalink"]},"application/metalink4+xml":{source:"iana",compressible:!0,extensions:["meta4"]},"application/mets+xml":{source:"iana",compressible:!0,extensions:["mets"]},"application/mf4":{source:"iana"},"application/mikey":{source:"iana"},"application/mmt-usd+xml":{source:"iana",compressible:!0},"application/mods+xml":{source:"iana",compressible:!0,extensions:["mods"]},"application/moss-keys":{source:"iana"},"application/moss-signature":{source:"iana"},"application/mosskey-data":{source:"iana"},"application/mosskey-request":{source:"iana"},"application/mp21":{source:"iana",extensions:["m21","mp21"]},"application/mp4":{source:"iana",extensions:["mp4s","m4p"]},"application/mpeg4-generic":{source:"iana"},"application/mpeg4-iod":{source:"iana"},"application/mpeg4-iod-xmt":{source:"iana"},"application/mrb-consumer+xml":{source:"iana",compressible:!0},"application/mrb-publish+xml":{source:"iana",compressible:!0},"application/msc-ivr+xml":{source:"iana",compressible:!0},"application/msc-mixer+xml":{source:"iana",compressible:!0},"application/msword":{source:"iana",compressible:!1,extensions:["doc","dot"]},"application/mud+json":{source:"iana",compressible:!0},"application/mxf":{source:"iana",extensions:["mxf"]},"application/n-quads":{source:"iana",extensions:["nq"]},"application/n-triples":{source:"iana",extensions:["nt"]},"application/nasdata":{source:"iana"},"application/news-checkgroups":{source:"iana"},"application/news-groupinfo":{source:"iana"},"application/news-transmission":{source:"iana"},"application/nlsml+xml":{source:"iana",compressible:!0},"application/node":{source:"iana"},"application/nss":{source:"iana"},"application/ocsp-request":{source:"iana"},"application/ocsp-response":{source:"iana"},"application/octet-stream":{source:"iana",compressible:!1,extensions:["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{source:"iana",extensions:["oda"]},"application/odm+xml":{source:"iana",compressible:!0},"application/odx":{source:"iana"},"application/oebps-package+xml":{source:"iana",compressible:!0,extensions:["opf"]},"application/ogg":{source:"iana",compressible:!1,extensions:["ogx"]},"application/omdoc+xml":{source:"apache",compressible:!0,extensions:["omdoc"]},"application/onenote":{source:"apache",extensions:["onetoc","onetoc2","onetmp","onepkg"]},"application/oxps":{source:"iana",extensions:["oxps"]},"application/p2p-overlay+xml":{source:"iana",compressible:!0},"application/parityfec":{source:"iana"},"application/passport":{source:"iana"},"application/patch-ops-error+xml":{source:"iana",compressible:!0,extensions:["xer"]},"application/pdf":{source:"iana",compressible:!1,extensions:["pdf"]},"application/pdx":{source:"iana"},"application/pem-certificate-chain":{source:"iana"},"application/pgp-encrypted":{source:"iana",compressible:!1,extensions:["pgp"]},"application/pgp-keys":{source:"iana"},"application/pgp-signature":{source:"iana",extensions:["asc","sig"]},"application/pics-rules":{source:"apache",extensions:["prf"]},"application/pidf+xml":{source:"iana",compressible:!0},"application/pidf-diff+xml":{source:"iana",compressible:!0},"application/pkcs10":{source:"iana",extensions:["p10"]},"application/pkcs12":{source:"iana"},"application/pkcs7-mime":{source:"iana",extensions:["p7m","p7c"]},"application/pkcs7-signature":{source:"iana",extensions:["p7s"]},"application/pkcs8":{source:"iana",extensions:["p8"]},"application/pkcs8-encrypted":{source:"iana"},"application/pkix-attr-cert":{source:"iana",extensions:["ac"]},"application/pkix-cert":{source:"iana",extensions:["cer"]},"application/pkix-crl":{source:"iana",extensions:["crl"]},"application/pkix-pkipath":{source:"iana",extensions:["pkipath"]},"application/pkixcmp":{source:"iana",extensions:["pki"]},"application/pls+xml":{source:"iana",compressible:!0,extensions:["pls"]},"application/poc-settings+xml":{source:"iana",compressible:!0},"application/postscript":{source:"iana",compressible:!0,extensions:["ai","eps","ps"]},"application/ppsp-tracker+json":{source:"iana",compressible:!0},"application/problem+json":{source:"iana",compressible:!0},"application/problem+xml":{source:"iana",compressible:!0},"application/provenance+xml":{source:"iana",compressible:!0},"application/prs.alvestrand.titrax-sheet":{source:"iana"},"application/prs.cww":{source:"iana",extensions:["cww"]},"application/prs.hpub+zip":{source:"iana",compressible:!1},"application/prs.nprend":{source:"iana"},"application/prs.plucker":{source:"iana"},"application/prs.rdf-xml-crypt":{source:"iana"},"application/prs.xsf+xml":{source:"iana",compressible:!0},"application/pskc+xml":{source:"iana",compressible:!0,extensions:["pskcxml"]},"application/qsig":{source:"iana"},"application/raml+yaml":{compressible:!0,extensions:["raml"]},"application/raptorfec":{source:"iana"},"application/rdap+json":{source:"iana",compressible:!0},"application/rdf+xml":{source:"iana",compressible:!0,extensions:["rdf","owl"]},"application/reginfo+xml":{source:"iana",compressible:!0,extensions:["rif"]},"application/relax-ng-compact-syntax":{source:"iana",extensions:["rnc"]},"application/remote-printing":{source:"iana"},"application/reputon+json":{source:"iana",compressible:!0},"application/resource-lists+xml":{source:"iana",compressible:!0,extensions:["rl"]},"application/resource-lists-diff+xml":{source:"iana",compressible:!0,extensions:["rld"]},"application/rfc+xml":{source:"iana",compressible:!0},"application/riscos":{source:"iana"},"application/rlmi+xml":{source:"iana",compressible:!0},"application/rls-services+xml":{source:"iana",compressible:!0,extensions:["rs"]},"application/route-apd+xml":{source:"iana",compressible:!0},"application/route-s-tsid+xml":{source:"iana",compressible:!0},"application/route-usd+xml":{source:"iana",compressible:!0},"application/rpki-ghostbusters":{source:"iana",extensions:["gbr"]},"application/rpki-manifest":{source:"iana",extensions:["mft"]},"application/rpki-publication":{source:"iana"},"application/rpki-roa":{source:"iana",extensions:["roa"]},"application/rpki-updown":{source:"iana"},"application/rsd+xml":{source:"apache",compressible:!0,extensions:["rsd"]},"application/rss+xml":{source:"apache",compressible:!0,extensions:["rss"]},"application/rtf":{source:"iana",compressible:!0,extensions:["rtf"]},"application/rtploopback":{source:"iana"},"application/rtx":{source:"iana"},"application/samlassertion+xml":{source:"iana",compressible:!0},"application/samlmetadata+xml":{source:"iana",compressible:!0},"application/sbml+xml":{source:"iana",compressible:!0,extensions:["sbml"]},"application/scaip+xml":{source:"iana",compressible:!0},"application/scim+json":{source:"iana",compressible:!0},"application/scvp-cv-request":{source:"iana",extensions:["scq"]},"application/scvp-cv-response":{source:"iana",extensions:["scs"]},"application/scvp-vp-request":{source:"iana",extensions:["spq"]},"application/scvp-vp-response":{source:"iana",extensions:["spp"]},"application/sdp":{source:"iana",extensions:["sdp"]},"application/secevent+jwt":{source:"iana"},"application/senml+cbor":{source:"iana"},"application/senml+json":{source:"iana",compressible:!0},"application/senml+xml":{source:"iana",compressible:!0},"application/senml-exi":{source:"iana"},"application/sensml+cbor":{source:"iana"},"application/sensml+json":{source:"iana",compressible:!0},"application/sensml+xml":{source:"iana",compressible:!0},"application/sensml-exi":{source:"iana"},"application/sep+xml":{source:"iana",compressible:!0},"application/sep-exi":{source:"iana"},"application/session-info":{source:"iana"},"application/set-payment":{source:"iana"},"application/set-payment-initiation":{source:"iana",extensions:["setpay"]},"application/set-registration":{source:"iana"},"application/set-registration-initiation":{source:"iana",extensions:["setreg"]},"application/sgml":{source:"iana"},"application/sgml-open-catalog":{source:"iana"},"application/shf+xml":{source:"iana",compressible:!0,extensions:["shf"]},"application/sieve":{source:"iana"},"application/simple-filter+xml":{source:"iana",compressible:!0},"application/simple-message-summary":{source:"iana"},"application/simplesymbolcontainer":{source:"iana"},"application/slate":{source:"iana"},"application/smil":{source:"iana"},"application/smil+xml":{source:"iana",compressible:!0,extensions:["smi","smil"]},"application/smpte336m":{source:"iana"},"application/soap+fastinfoset":{source:"iana"},"application/soap+xml":{source:"iana",compressible:!0},"application/sparql-query":{source:"iana",extensions:["rq"]},"application/sparql-results+xml":{source:"iana",compressible:!0,extensions:["srx"]},"application/spirits-event+xml":{source:"iana",compressible:!0},"application/sql":{source:"iana"},"application/srgs":{source:"iana",extensions:["gram"]},"application/srgs+xml":{source:"iana",compressible:!0,extensions:["grxml"]},"application/sru+xml":{source:"iana",compressible:!0,extensions:["sru"]},"application/ssdl+xml":{source:"apache",compressible:!0,extensions:["ssdl"]},"application/ssml+xml":{source:"iana",compressible:!0,extensions:["ssml"]},"application/stix+json":{source:"iana",compressible:!0},"application/tamp-apex-update":{source:"iana"},"application/tamp-apex-update-confirm":{source:"iana"},"application/tamp-community-update":{source:"iana"},"application/tamp-community-update-confirm":{source:"iana"},"application/tamp-error":{source:"iana"},"application/tamp-sequence-adjust":{source:"iana"},"application/tamp-sequence-adjust-confirm":{source:"iana"},"application/tamp-status-query":{source:"iana"},"application/tamp-status-response":{source:"iana"},"application/tamp-update":{source:"iana"},"application/tamp-update-confirm":{source:"iana"},"application/tar":{compressible:!0},"application/taxii+json":{source:"iana",compressible:!0},"application/tei+xml":{source:"iana",compressible:!0,extensions:["tei","teicorpus"]},"application/tetra_isi":{source:"iana"},"application/thraud+xml":{source:"iana",compressible:!0,extensions:["tfi"]},"application/timestamp-query":{source:"iana"},"application/timestamp-reply":{source:"iana"},"application/timestamped-data":{source:"iana",extensions:["tsd"]},"application/tlsrpt+gzip":{source:"iana"},"application/tlsrpt+json":{source:"iana",compressible:!0},"application/tnauthlist":{source:"iana"},"application/trickle-ice-sdpfrag":{source:"iana"},"application/trig":{source:"iana"},"application/ttml+xml":{source:"iana",compressible:!0},"application/tve-trigger":{source:"iana"},"application/tzif":{source:"iana"},"application/tzif-leap":{source:"iana"},"application/ulpfec":{source:"iana"},"application/urc-grpsheet+xml":{source:"iana",compressible:!0},"application/urc-ressheet+xml":{source:"iana",compressible:!0},"application/urc-targetdesc+xml":{source:"iana",compressible:!0},"application/urc-uisocketdesc+xml":{source:"iana",compressible:!0},"application/vcard+json":{source:"iana",compressible:!0},"application/vcard+xml":{source:"iana",compressible:!0},"application/vemmi":{source:"iana"},"application/vividence.scriptfile":{source:"apache"},"application/vnd.1000minds.decision-model+xml":{source:"iana",compressible:!0},"application/vnd.3gpp-prose+xml":{source:"iana",compressible:!0},"application/vnd.3gpp-prose-pc3ch+xml":{source:"iana",compressible:!0},"application/vnd.3gpp-v2x-local-service-information":{source:"iana"},"application/vnd.3gpp.access-transfer-events+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.bsf+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.gmop+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mc-signalling-ear":{source:"iana"},"application/vnd.3gpp.mcdata-affiliation-command+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcdata-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcdata-payload":{source:"iana"},"application/vnd.3gpp.mcdata-service-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcdata-signalling":{source:"iana"},"application/vnd.3gpp.mcdata-ue-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcdata-user-profile+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-affiliation-command+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-floor-request+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-location-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-service-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-signed+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-ue-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-ue-init-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-user-profile+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-affiliation-command+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-affiliation-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-location-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-mbms-usage-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-service-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-transmission-request+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-ue-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-user-profile+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mid-call+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.pic-bw-large":{source:"iana",extensions:["plb"]},"application/vnd.3gpp.pic-bw-small":{source:"iana",extensions:["psb"]},"application/vnd.3gpp.pic-bw-var":{source:"iana",extensions:["pvb"]},"application/vnd.3gpp.sms":{source:"iana"},"application/vnd.3gpp.sms+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.srvcc-ext+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.srvcc-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.state-and-event-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.ussd+xml":{source:"iana",compressible:!0},"application/vnd.3gpp2.bcmcsinfo+xml":{source:"iana",compressible:!0},"application/vnd.3gpp2.sms":{source:"iana"},"application/vnd.3gpp2.tcap":{source:"iana",extensions:["tcap"]},"application/vnd.3lightssoftware.imagescal":{source:"iana"},"application/vnd.3m.post-it-notes":{source:"iana",extensions:["pwn"]},"application/vnd.accpac.simply.aso":{source:"iana",extensions:["aso"]},"application/vnd.accpac.simply.imp":{source:"iana",extensions:["imp"]},"application/vnd.acucobol":{source:"iana",extensions:["acu"]},"application/vnd.acucorp":{source:"iana",extensions:["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{source:"apache",compressible:!1,extensions:["air"]},"application/vnd.adobe.flash.movie":{source:"iana"},"application/vnd.adobe.formscentral.fcdt":{source:"iana",extensions:["fcdt"]},"application/vnd.adobe.fxp":{source:"iana",extensions:["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{source:"iana"},"application/vnd.adobe.xdp+xml":{source:"iana",compressible:!0,extensions:["xdp"]},"application/vnd.adobe.xfdf":{source:"iana",extensions:["xfdf"]},"application/vnd.aether.imp":{source:"iana"},"application/vnd.afpc.afplinedata":{source:"iana"},"application/vnd.afpc.modca":{source:"iana"},"application/vnd.ah-barcode":{source:"iana"},"application/vnd.ahead.space":{source:"iana",extensions:["ahead"]},"application/vnd.airzip.filesecure.azf":{source:"iana",extensions:["azf"]},"application/vnd.airzip.filesecure.azs":{source:"iana",extensions:["azs"]},"application/vnd.amadeus+json":{source:"iana",compressible:!0},"application/vnd.amazon.ebook":{source:"apache",extensions:["azw"]},"application/vnd.amazon.mobi8-ebook":{source:"iana"},"application/vnd.americandynamics.acc":{source:"iana",extensions:["acc"]},"application/vnd.amiga.ami":{source:"iana",extensions:["ami"]},"application/vnd.amundsen.maze+xml":{source:"iana",compressible:!0},"application/vnd.android.package-archive":{source:"apache",compressible:!1,extensions:["apk"]},"application/vnd.anki":{source:"iana"},"application/vnd.anser-web-certificate-issue-initiation":{source:"iana",extensions:["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{source:"apache",extensions:["fti"]},"application/vnd.antix.game-component":{source:"iana",extensions:["atx"]},"application/vnd.apache.thrift.binary":{source:"iana"},"application/vnd.apache.thrift.compact":{source:"iana"},"application/vnd.apache.thrift.json":{source:"iana"},"application/vnd.api+json":{source:"iana",compressible:!0},"application/vnd.apothekende.reservation+json":{source:"iana",compressible:!0},"application/vnd.apple.installer+xml":{source:"iana",compressible:!0,extensions:["mpkg"]},"application/vnd.apple.keynote":{source:"iana",extensions:["keynote"]},"application/vnd.apple.mpegurl":{source:"iana",extensions:["m3u8"]},"application/vnd.apple.numbers":{source:"iana",extensions:["numbers"]},"application/vnd.apple.pages":{source:"iana",extensions:["pages"]},"application/vnd.apple.pkpass":{compressible:!1,extensions:["pkpass"]},"application/vnd.arastra.swi":{source:"iana"},"application/vnd.aristanetworks.swi":{source:"iana",extensions:["swi"]},"application/vnd.artisan+json":{source:"iana",compressible:!0},"application/vnd.artsquare":{source:"iana"},"application/vnd.astraea-software.iota":{source:"iana",extensions:["iota"]},"application/vnd.audiograph":{source:"iana",extensions:["aep"]},"application/vnd.autopackage":{source:"iana"},"application/vnd.avalon+json":{source:"iana",compressible:!0},"application/vnd.avistar+xml":{source:"iana",compressible:!0},"application/vnd.balsamiq.bmml+xml":{source:"iana",compressible:!0},"application/vnd.balsamiq.bmpr":{source:"iana"},"application/vnd.banana-accounting":{source:"iana"},"application/vnd.bbf.usp.msg":{source:"iana"},"application/vnd.bbf.usp.msg+json":{source:"iana",compressible:!0},"application/vnd.bekitzur-stech+json":{source:"iana",compressible:!0},"application/vnd.bint.med-content":{source:"iana"},"application/vnd.biopax.rdf+xml":{source:"iana",compressible:!0},"application/vnd.blink-idb-value-wrapper":{source:"iana"},"application/vnd.blueice.multipass":{source:"iana",extensions:["mpm"]},"application/vnd.bluetooth.ep.oob":{source:"iana"},"application/vnd.bluetooth.le.oob":{source:"iana"},"application/vnd.bmi":{source:"iana",extensions:["bmi"]},"application/vnd.businessobjects":{source:"iana",extensions:["rep"]},"application/vnd.byu.uapi+json":{source:"iana",compressible:!0},"application/vnd.cab-jscript":{source:"iana"},"application/vnd.canon-cpdl":{source:"iana"},"application/vnd.canon-lips":{source:"iana"},"application/vnd.capasystems-pg+json":{source:"iana",compressible:!0},"application/vnd.cendio.thinlinc.clientconf":{source:"iana"},"application/vnd.century-systems.tcp_stream":{source:"iana"},"application/vnd.chemdraw+xml":{source:"iana",compressible:!0,extensions:["cdxml"]},"application/vnd.chess-pgn":{source:"iana"},"application/vnd.chipnuts.karaoke-mmd":{source:"iana",extensions:["mmd"]},"application/vnd.cinderella":{source:"iana",extensions:["cdy"]},"application/vnd.cirpack.isdn-ext":{source:"iana"},"application/vnd.citationstyles.style+xml":{source:"iana",compressible:!0,extensions:["csl"]},"application/vnd.claymore":{source:"iana",extensions:["cla"]},"application/vnd.cloanto.rp9":{source:"iana",extensions:["rp9"]},"application/vnd.clonk.c4group":{source:"iana",extensions:["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{source:"iana",extensions:["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{source:"iana",extensions:["c11amz"]},"application/vnd.coffeescript":{source:"iana"},"application/vnd.collabio.xodocuments.document":{source:"iana"},"application/vnd.collabio.xodocuments.document-template":{source:"iana"},"application/vnd.collabio.xodocuments.presentation":{source:"iana"},"application/vnd.collabio.xodocuments.presentation-template":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{source:"iana"},"application/vnd.collection+json":{source:"iana",compressible:!0},"application/vnd.collection.doc+json":{source:"iana",compressible:!0},"application/vnd.collection.next+json":{source:"iana",compressible:!0},"application/vnd.comicbook+zip":{source:"iana",compressible:!1},"application/vnd.comicbook-rar":{source:"iana"},"application/vnd.commerce-battelle":{source:"iana"},"application/vnd.commonspace":{source:"iana",extensions:["csp"]},"application/vnd.contact.cmsg":{source:"iana",extensions:["cdbcmsg"]},"application/vnd.coreos.ignition+json":{source:"iana",compressible:!0},"application/vnd.cosmocaller":{source:"iana",extensions:["cmc"]},"application/vnd.crick.clicker":{source:"iana",extensions:["clkx"]},"application/vnd.crick.clicker.keyboard":{source:"iana",extensions:["clkk"]},"application/vnd.crick.clicker.palette":{source:"iana",extensions:["clkp"]},"application/vnd.crick.clicker.template":{source:"iana",extensions:["clkt"]},"application/vnd.crick.clicker.wordbank":{source:"iana",extensions:["clkw"]},"application/vnd.criticaltools.wbs+xml":{source:"iana",compressible:!0,extensions:["wbs"]},"application/vnd.ctc-posml":{source:"iana",extensions:["pml"]},"application/vnd.ctct.ws+xml":{source:"iana",compressible:!0},"application/vnd.cups-pdf":{source:"iana"},"application/vnd.cups-postscript":{source:"iana"},"application/vnd.cups-ppd":{source:"iana",extensions:["ppd"]},"application/vnd.cups-raster":{source:"iana"},"application/vnd.cups-raw":{source:"iana"},"application/vnd.curl":{source:"iana"},"application/vnd.curl.car":{source:"apache",extensions:["car"]},"application/vnd.curl.pcurl":{source:"apache",extensions:["pcurl"]},"application/vnd.cyan.dean.root+xml":{source:"iana",compressible:!0},"application/vnd.cybank":{source:"iana"},"application/vnd.d2l.coursepackage1p0+zip":{source:"iana",compressible:!1},"application/vnd.dart":{source:"iana",compressible:!0,extensions:["dart"]},"application/vnd.data-vision.rdz":{source:"iana",extensions:["rdz"]},"application/vnd.datapackage+json":{source:"iana",compressible:!0},"application/vnd.dataresource+json":{source:"iana",compressible:!0},"application/vnd.debian.binary-package":{source:"iana"},"application/vnd.dece.data":{source:"iana",extensions:["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{source:"iana",compressible:!0,extensions:["uvt","uvvt"]},"application/vnd.dece.unspecified":{source:"iana",extensions:["uvx","uvvx"]},"application/vnd.dece.zip":{source:"iana",extensions:["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{source:"iana",extensions:["fe_launch"]},"application/vnd.desmume.movie":{source:"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{source:"iana"},"application/vnd.dm.delegation+xml":{source:"iana",compressible:!0},"application/vnd.dna":{source:"iana",extensions:["dna"]},"application/vnd.document+json":{source:"iana",compressible:!0},"application/vnd.dolby.mlp":{source:"apache",extensions:["mlp"]},"application/vnd.dolby.mobile.1":{source:"iana"},"application/vnd.dolby.mobile.2":{source:"iana"},"application/vnd.doremir.scorecloud-binary-document":{source:"iana"},"application/vnd.dpgraph":{source:"iana",extensions:["dpg"]},"application/vnd.dreamfactory":{source:"iana",extensions:["dfac"]},"application/vnd.drive+json":{source:"iana",compressible:!0},"application/vnd.ds-keypoint":{source:"apache",extensions:["kpxx"]},"application/vnd.dtg.local":{source:"iana"},"application/vnd.dtg.local.flash":{source:"iana"},"application/vnd.dtg.local.html":{source:"iana"},"application/vnd.dvb.ait":{source:"iana",extensions:["ait"]},"application/vnd.dvb.dvbj":{source:"iana"},"application/vnd.dvb.esgcontainer":{source:"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess2":{source:"iana"},"application/vnd.dvb.ipdcesgpdd":{source:"iana"},"application/vnd.dvb.ipdcroaming":{source:"iana"},"application/vnd.dvb.iptv.alfec-base":{source:"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{source:"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-container+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-generic+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-ia-msglist+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-ia-registration-request+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-ia-registration-response+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-init+xml":{source:"iana",compressible:!0},"application/vnd.dvb.pfr":{source:"iana"},"application/vnd.dvb.service":{source:"iana",extensions:["svc"]},"application/vnd.dxr":{source:"iana"},"application/vnd.dynageo":{source:"iana",extensions:["geo"]},"application/vnd.dzr":{source:"iana"},"application/vnd.easykaraoke.cdgdownload":{source:"iana"},"application/vnd.ecdis-update":{source:"iana"},"application/vnd.ecip.rlp":{source:"iana"},"application/vnd.ecowin.chart":{source:"iana",extensions:["mag"]},"application/vnd.ecowin.filerequest":{source:"iana"},"application/vnd.ecowin.fileupdate":{source:"iana"},"application/vnd.ecowin.series":{source:"iana"},"application/vnd.ecowin.seriesrequest":{source:"iana"},"application/vnd.ecowin.seriesupdate":{source:"iana"},"application/vnd.efi.img":{source:"iana"},"application/vnd.efi.iso":{source:"iana"},"application/vnd.emclient.accessrequest+xml":{source:"iana",compressible:!0},"application/vnd.enliven":{source:"iana",extensions:["nml"]},"application/vnd.enphase.envoy":{source:"iana"},"application/vnd.eprints.data+xml":{source:"iana",compressible:!0},"application/vnd.epson.esf":{source:"iana",extensions:["esf"]},"application/vnd.epson.msf":{source:"iana",extensions:["msf"]},"application/vnd.epson.quickanime":{source:"iana",extensions:["qam"]},"application/vnd.epson.salt":{source:"iana",extensions:["slt"]},"application/vnd.epson.ssf":{source:"iana",extensions:["ssf"]},"application/vnd.ericsson.quickcall":{source:"iana"},"application/vnd.espass-espass+zip":{source:"iana",compressible:!1},"application/vnd.eszigno3+xml":{source:"iana",compressible:!0,extensions:["es3","et3"]},"application/vnd.etsi.aoc+xml":{source:"iana",compressible:!0},"application/vnd.etsi.asic-e+zip":{source:"iana",compressible:!1},"application/vnd.etsi.asic-s+zip":{source:"iana",compressible:!1},"application/vnd.etsi.cug+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvcommand+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvdiscovery+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvprofile+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsad-bc+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsad-cod+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsad-npvr+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvservice+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsync+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvueprofile+xml":{source:"iana",compressible:!0},"application/vnd.etsi.mcid+xml":{source:"iana",compressible:!0},"application/vnd.etsi.mheg5":{source:"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{source:"iana",compressible:!0},"application/vnd.etsi.pstn+xml":{source:"iana",compressible:!0},"application/vnd.etsi.sci+xml":{source:"iana",compressible:!0},"application/vnd.etsi.simservs+xml":{source:"iana",compressible:!0},"application/vnd.etsi.timestamp-token":{source:"iana"},"application/vnd.etsi.tsl+xml":{source:"iana",compressible:!0},"application/vnd.etsi.tsl.der":{source:"iana"},"application/vnd.eudora.data":{source:"iana"},"application/vnd.evolv.ecig.profile":{source:"iana"},"application/vnd.evolv.ecig.settings":{source:"iana"},"application/vnd.evolv.ecig.theme":{source:"iana"},"application/vnd.exstream-empower+zip":{source:"iana",compressible:!1},"application/vnd.exstream-package":{source:"iana"},"application/vnd.ezpix-album":{source:"iana",extensions:["ez2"]},"application/vnd.ezpix-package":{source:"iana",extensions:["ez3"]},"application/vnd.f-secure.mobile":{source:"iana"},"application/vnd.fastcopy-disk-image":{source:"iana"},"application/vnd.fdf":{source:"iana",extensions:["fdf"]},"application/vnd.fdsn.mseed":{source:"iana",extensions:["mseed"]},"application/vnd.fdsn.seed":{source:"iana",extensions:["seed","dataless"]},"application/vnd.ffsns":{source:"iana"},"application/vnd.filmit.zfc":{source:"iana"},"application/vnd.fints":{source:"iana"},"application/vnd.firemonkeys.cloudcell":{source:"iana"},"application/vnd.flographit":{source:"iana",extensions:["gph"]},"application/vnd.fluxtime.clip":{source:"iana",extensions:["ftc"]},"application/vnd.font-fontforge-sfd":{source:"iana"},"application/vnd.framemaker":{source:"iana",extensions:["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{source:"iana",extensions:["fnc"]},"application/vnd.frogans.ltf":{source:"iana",extensions:["ltf"]},"application/vnd.fsc.weblaunch":{source:"iana",extensions:["fsc"]},"application/vnd.fujitsu.oasys":{source:"iana",extensions:["oas"]},"application/vnd.fujitsu.oasys2":{source:"iana",extensions:["oa2"]},"application/vnd.fujitsu.oasys3":{source:"iana",extensions:["oa3"]},"application/vnd.fujitsu.oasysgp":{source:"iana",extensions:["fg5"]},"application/vnd.fujitsu.oasysprs":{source:"iana",extensions:["bh2"]},"application/vnd.fujixerox.art-ex":{source:"iana"},"application/vnd.fujixerox.art4":{source:"iana"},"application/vnd.fujixerox.ddd":{source:"iana",extensions:["ddd"]},"application/vnd.fujixerox.docuworks":{source:"iana",extensions:["xdw"]},"application/vnd.fujixerox.docuworks.binder":{source:"iana",extensions:["xbd"]},"application/vnd.fujixerox.docuworks.container":{source:"iana"},"application/vnd.fujixerox.hbpl":{source:"iana"},"application/vnd.fut-misnet":{source:"iana"},"application/vnd.futoin+cbor":{source:"iana"},"application/vnd.futoin+json":{source:"iana",compressible:!0},"application/vnd.fuzzysheet":{source:"iana",extensions:["fzs"]},"application/vnd.genomatix.tuxedo":{source:"iana",extensions:["txd"]},"application/vnd.geo+json":{source:"iana",compressible:!0},"application/vnd.geocube+xml":{source:"iana",compressible:!0},"application/vnd.geogebra.file":{source:"iana",extensions:["ggb"]},"application/vnd.geogebra.tool":{source:"iana",extensions:["ggt"]},"application/vnd.geometry-explorer":{source:"iana",extensions:["gex","gre"]},"application/vnd.geonext":{source:"iana",extensions:["gxt"]},"application/vnd.geoplan":{source:"iana",extensions:["g2w"]},"application/vnd.geospace":{source:"iana",extensions:["g3w"]},"application/vnd.gerber":{source:"iana"},"application/vnd.globalplatform.card-content-mgt":{source:"iana"},"application/vnd.globalplatform.card-content-mgt-response":{source:"iana"},"application/vnd.gmx":{source:"iana",extensions:["gmx"]},"application/vnd.google-apps.document":{compressible:!1,extensions:["gdoc"]},"application/vnd.google-apps.presentation":{compressible:!1,extensions:["gslides"]},"application/vnd.google-apps.spreadsheet":{compressible:!1,extensions:["gsheet"]},"application/vnd.google-earth.kml+xml":{source:"iana",compressible:!0,extensions:["kml"]},"application/vnd.google-earth.kmz":{source:"iana",compressible:!1,extensions:["kmz"]},"application/vnd.gov.sk.e-form+xml":{source:"iana",compressible:!0},"application/vnd.gov.sk.e-form+zip":{source:"iana",compressible:!1},"application/vnd.gov.sk.xmldatacontainer+xml":{source:"iana",compressible:!0},"application/vnd.grafeq":{source:"iana",extensions:["gqf","gqs"]},"application/vnd.gridmp":{source:"iana"},"application/vnd.groove-account":{source:"iana",extensions:["gac"]},"application/vnd.groove-help":{source:"iana",extensions:["ghf"]},"application/vnd.groove-identity-message":{source:"iana",extensions:["gim"]},"application/vnd.groove-injector":{source:"iana",extensions:["grv"]},"application/vnd.groove-tool-message":{source:"iana",extensions:["gtm"]},"application/vnd.groove-tool-template":{source:"iana",extensions:["tpl"]},"application/vnd.groove-vcard":{source:"iana",extensions:["vcg"]},"application/vnd.hal+json":{source:"iana",compressible:!0},"application/vnd.hal+xml":{source:"iana",compressible:!0,extensions:["hal"]},"application/vnd.handheld-entertainment+xml":{source:"iana",compressible:!0,extensions:["zmm"]},"application/vnd.hbci":{source:"iana",extensions:["hbci"]},"application/vnd.hc+json":{source:"iana",compressible:!0},"application/vnd.hcl-bireports":{source:"iana"},"application/vnd.hdt":{source:"iana"},"application/vnd.heroku+json":{source:"iana",compressible:!0},"application/vnd.hhe.lesson-player":{source:"iana",extensions:["les"]},"application/vnd.hp-hpgl":{source:"iana",extensions:["hpgl"]},"application/vnd.hp-hpid":{source:"iana",extensions:["hpid"]},"application/vnd.hp-hps":{source:"iana",extensions:["hps"]},"application/vnd.hp-jlyt":{source:"iana",extensions:["jlt"]},"application/vnd.hp-pcl":{source:"iana",extensions:["pcl"]},"application/vnd.hp-pclxl":{source:"iana",extensions:["pclxl"]},"application/vnd.httphone":{source:"iana"},"application/vnd.hydrostatix.sof-data":{source:"iana",extensions:["sfd-hdstx"]},"application/vnd.hyper+json":{source:"iana",compressible:!0},"application/vnd.hyper-item+json":{source:"iana",compressible:!0},"application/vnd.hyperdrive+json":{source:"iana",compressible:!0},"application/vnd.hzn-3d-crossword":{source:"iana"},"application/vnd.ibm.afplinedata":{source:"iana"},"application/vnd.ibm.electronic-media":{source:"iana"},"application/vnd.ibm.minipay":{source:"iana",extensions:["mpy"]},"application/vnd.ibm.modcap":{source:"iana",extensions:["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{source:"iana",extensions:["irm"]},"application/vnd.ibm.secure-container":{source:"iana",extensions:["sc"]},"application/vnd.iccprofile":{source:"iana",extensions:["icc","icm"]},"application/vnd.ieee.1905":{source:"iana"},"application/vnd.igloader":{source:"iana",extensions:["igl"]},"application/vnd.imagemeter.folder+zip":{source:"iana",compressible:!1},"application/vnd.imagemeter.image+zip":{source:"iana",compressible:!1},"application/vnd.immervision-ivp":{source:"iana",extensions:["ivp"]},"application/vnd.immervision-ivu":{source:"iana",extensions:["ivu"]},"application/vnd.ims.imsccv1p1":{source:"iana"},"application/vnd.ims.imsccv1p2":{source:"iana"},"application/vnd.ims.imsccv1p3":{source:"iana"},"application/vnd.ims.lis.v2.result+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolproxy+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolproxy.id+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolsettings+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolsettings.simple+json":{source:"iana",compressible:!0},"application/vnd.informedcontrol.rms+xml":{source:"iana",compressible:!0},"application/vnd.informix-visionary":{source:"iana"},"application/vnd.infotech.project":{source:"iana"},"application/vnd.infotech.project+xml":{source:"iana",compressible:!0},"application/vnd.innopath.wamp.notification":{source:"iana"},"application/vnd.insors.igm":{source:"iana",extensions:["igm"]},"application/vnd.intercon.formnet":{source:"iana",extensions:["xpw","xpx"]},"application/vnd.intergeo":{source:"iana",extensions:["i2g"]},"application/vnd.intertrust.digibox":{source:"iana"},"application/vnd.intertrust.nncp":{source:"iana"},"application/vnd.intu.qbo":{source:"iana",extensions:["qbo"]},"application/vnd.intu.qfx":{source:"iana",extensions:["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.conceptitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.knowledgeitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.newsitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.newsmessage+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.packageitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.planningitem+xml":{source:"iana",compressible:!0},"application/vnd.ipunplugged.rcprofile":{source:"iana",extensions:["rcprofile"]},"application/vnd.irepository.package+xml":{source:"iana",compressible:!0,extensions:["irp"]},"application/vnd.is-xpr":{source:"iana",extensions:["xpr"]},"application/vnd.isac.fcs":{source:"iana",extensions:["fcs"]},"application/vnd.jam":{source:"iana",extensions:["jam"]},"application/vnd.japannet-directory-service":{source:"iana"},"application/vnd.japannet-jpnstore-wakeup":{source:"iana"},"application/vnd.japannet-payment-wakeup":{source:"iana"},"application/vnd.japannet-registration":{source:"iana"},"application/vnd.japannet-registration-wakeup":{source:"iana"},"application/vnd.japannet-setstore-wakeup":{source:"iana"},"application/vnd.japannet-verification":{source:"iana"},"application/vnd.japannet-verification-wakeup":{source:"iana"},"application/vnd.jcp.javame.midlet-rms":{source:"iana",extensions:["rms"]},"application/vnd.jisp":{source:"iana",extensions:["jisp"]},"application/vnd.joost.joda-archive":{source:"iana",extensions:["joda"]},"application/vnd.jsk.isdn-ngn":{source:"iana"},"application/vnd.kahootz":{source:"iana",extensions:["ktz","ktr"]},"application/vnd.kde.karbon":{source:"iana",extensions:["karbon"]},"application/vnd.kde.kchart":{source:"iana",extensions:["chrt"]},"application/vnd.kde.kformula":{source:"iana",extensions:["kfo"]},"application/vnd.kde.kivio":{source:"iana",extensions:["flw"]},"application/vnd.kde.kontour":{source:"iana",extensions:["kon"]},"application/vnd.kde.kpresenter":{source:"iana",extensions:["kpr","kpt"]},"application/vnd.kde.kspread":{source:"iana",extensions:["ksp"]},"application/vnd.kde.kword":{source:"iana",extensions:["kwd","kwt"]},"application/vnd.kenameaapp":{source:"iana",extensions:["htke"]},"application/vnd.kidspiration":{source:"iana",extensions:["kia"]},"application/vnd.kinar":{source:"iana",extensions:["kne","knp"]},"application/vnd.koan":{source:"iana",extensions:["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{source:"iana",extensions:["sse"]},"application/vnd.las.las+json":{source:"iana",compressible:!0},"application/vnd.las.las+xml":{source:"iana",compressible:!0,extensions:["lasxml"]},"application/vnd.leap+json":{source:"iana",compressible:!0},"application/vnd.liberty-request+xml":{source:"iana",compressible:!0},"application/vnd.llamagraphics.life-balance.desktop":{source:"iana",extensions:["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{source:"iana",compressible:!0,extensions:["lbe"]},"application/vnd.lotus-1-2-3":{source:"iana",extensions:["123"]},"application/vnd.lotus-approach":{source:"iana",extensions:["apr"]},"application/vnd.lotus-freelance":{source:"iana",extensions:["pre"]},"application/vnd.lotus-notes":{source:"iana",extensions:["nsf"]},"application/vnd.lotus-organizer":{source:"iana",extensions:["org"]},"application/vnd.lotus-screencam":{source:"iana",extensions:["scm"]},"application/vnd.lotus-wordpro":{source:"iana",extensions:["lwp"]},"application/vnd.macports.portpkg":{source:"iana",extensions:["portpkg"]},"application/vnd.mapbox-vector-tile":{source:"iana"},"application/vnd.marlin.drm.actiontoken+xml":{source:"iana",compressible:!0},"application/vnd.marlin.drm.conftoken+xml":{source:"iana",compressible:!0},"application/vnd.marlin.drm.license+xml":{source:"iana",compressible:!0},"application/vnd.marlin.drm.mdcf":{source:"iana"},"application/vnd.mason+json":{source:"iana",compressible:!0},"application/vnd.maxmind.maxmind-db":{source:"iana"},"application/vnd.mcd":{source:"iana",extensions:["mcd"]},"application/vnd.medcalcdata":{source:"iana",extensions:["mc1"]},"application/vnd.mediastation.cdkey":{source:"iana",extensions:["cdkey"]},"application/vnd.meridian-slingshot":{source:"iana"},"application/vnd.mfer":{source:"iana",extensions:["mwf"]},"application/vnd.mfmp":{source:"iana",extensions:["mfm"]},"application/vnd.micro+json":{source:"iana",compressible:!0},"application/vnd.micrografx.flo":{source:"iana",extensions:["flo"]},"application/vnd.micrografx.igx":{source:"iana",extensions:["igx"]},"application/vnd.microsoft.portable-executable":{source:"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{source:"iana"},"application/vnd.miele+json":{source:"iana",compressible:!0},"application/vnd.mif":{source:"iana",extensions:["mif"]},"application/vnd.minisoft-hp3000-save":{source:"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{source:"iana"},"application/vnd.mobius.daf":{source:"iana",extensions:["daf"]},"application/vnd.mobius.dis":{source:"iana",extensions:["dis"]},"application/vnd.mobius.mbk":{source:"iana",extensions:["mbk"]},"application/vnd.mobius.mqy":{source:"iana",extensions:["mqy"]},"application/vnd.mobius.msl":{source:"iana",extensions:["msl"]},"application/vnd.mobius.plc":{source:"iana",extensions:["plc"]},"application/vnd.mobius.txf":{source:"iana",extensions:["txf"]},"application/vnd.mophun.application":{source:"iana",extensions:["mpn"]},"application/vnd.mophun.certificate":{source:"iana",extensions:["mpc"]},"application/vnd.motorola.flexsuite":{source:"iana"},"application/vnd.motorola.flexsuite.adsi":{source:"iana"},"application/vnd.motorola.flexsuite.fis":{source:"iana"},"application/vnd.motorola.flexsuite.gotap":{source:"iana"},"application/vnd.motorola.flexsuite.kmr":{source:"iana"},"application/vnd.motorola.flexsuite.ttc":{source:"iana"},"application/vnd.motorola.flexsuite.wem":{source:"iana"},"application/vnd.motorola.iprm":{source:"iana"},"application/vnd.mozilla.xul+xml":{source:"iana",compressible:!0,extensions:["xul"]},"application/vnd.ms-3mfdocument":{source:"iana"},"application/vnd.ms-artgalry":{source:"iana",extensions:["cil"]},"application/vnd.ms-asf":{source:"iana"},"application/vnd.ms-cab-compressed":{source:"iana",extensions:["cab"]},"application/vnd.ms-color.iccprofile":{source:"apache"},"application/vnd.ms-excel":{source:"iana",compressible:!1,extensions:["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{source:"iana",extensions:["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{source:"iana",extensions:["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{source:"iana",extensions:["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{source:"iana",extensions:["xltm"]},"application/vnd.ms-fontobject":{source:"iana",compressible:!0,extensions:["eot"]},"application/vnd.ms-htmlhelp":{source:"iana",extensions:["chm"]},"application/vnd.ms-ims":{source:"iana",extensions:["ims"]},"application/vnd.ms-lrm":{source:"iana",extensions:["lrm"]},"application/vnd.ms-office.activex+xml":{source:"iana",compressible:!0},"application/vnd.ms-officetheme":{source:"iana",extensions:["thmx"]},"application/vnd.ms-opentype":{source:"apache",compressible:!0},"application/vnd.ms-outlook":{compressible:!1,extensions:["msg"]},"application/vnd.ms-package.obfuscated-opentype":{source:"apache"},"application/vnd.ms-pki.seccat":{source:"apache",extensions:["cat"]},"application/vnd.ms-pki.stl":{source:"apache",extensions:["stl"]},"application/vnd.ms-playready.initiator+xml":{source:"iana",compressible:!0},"application/vnd.ms-powerpoint":{source:"iana",compressible:!1,extensions:["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{source:"iana",extensions:["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{source:"iana",extensions:["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{source:"iana",extensions:["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{source:"iana",extensions:["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{source:"iana",extensions:["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{source:"iana",compressible:!0},"application/vnd.ms-printing.printticket+xml":{source:"apache",compressible:!0},"application/vnd.ms-printschematicket+xml":{source:"iana",compressible:!0},"application/vnd.ms-project":{source:"iana",extensions:["mpp","mpt"]},"application/vnd.ms-tnef":{source:"iana"},"application/vnd.ms-windows.devicepairing":{source:"iana"},"application/vnd.ms-windows.nwprinting.oob":{source:"iana"},"application/vnd.ms-windows.printerpairing":{source:"iana"},"application/vnd.ms-windows.wsd.oob":{source:"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.lic-resp":{source:"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.meter-resp":{source:"iana"},"application/vnd.ms-word.document.macroenabled.12":{source:"iana",extensions:["docm"]},"application/vnd.ms-word.template.macroenabled.12":{source:"iana",extensions:["dotm"]},"application/vnd.ms-works":{source:"iana",extensions:["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{source:"iana",extensions:["wpl"]},"application/vnd.ms-xpsdocument":{source:"iana",compressible:!1,extensions:["xps"]},"application/vnd.msa-disk-image":{source:"iana"},"application/vnd.mseq":{source:"iana",extensions:["mseq"]},"application/vnd.msign":{source:"iana"},"application/vnd.multiad.creator":{source:"iana"},"application/vnd.multiad.creator.cif":{source:"iana"},"application/vnd.music-niff":{source:"iana"},"application/vnd.musician":{source:"iana",extensions:["mus"]},"application/vnd.muvee.style":{source:"iana",extensions:["msty"]},"application/vnd.mynfc":{source:"iana",extensions:["taglet"]},"application/vnd.ncd.control":{source:"iana"},"application/vnd.ncd.reference":{source:"iana"},"application/vnd.nearst.inv+json":{source:"iana",compressible:!0},"application/vnd.nervana":{source:"iana"},"application/vnd.netfpx":{source:"iana"},"application/vnd.neurolanguage.nlu":{source:"iana",extensions:["nlu"]},"application/vnd.nimn":{source:"iana"},"application/vnd.nintendo.nitro.rom":{source:"iana"},"application/vnd.nintendo.snes.rom":{source:"iana"},"application/vnd.nitf":{source:"iana",extensions:["ntf","nitf"]},"application/vnd.noblenet-directory":{source:"iana",extensions:["nnd"]},"application/vnd.noblenet-sealer":{source:"iana",extensions:["nns"]},"application/vnd.noblenet-web":{source:"iana",extensions:["nnw"]},"application/vnd.nokia.catalogs":{source:"iana"},"application/vnd.nokia.conml+wbxml":{source:"iana"},"application/vnd.nokia.conml+xml":{source:"iana",compressible:!0},"application/vnd.nokia.iptv.config+xml":{source:"iana",compressible:!0},"application/vnd.nokia.isds-radio-presets":{source:"iana"},"application/vnd.nokia.landmark+wbxml":{source:"iana"},"application/vnd.nokia.landmark+xml":{source:"iana",compressible:!0},"application/vnd.nokia.landmarkcollection+xml":{source:"iana",compressible:!0},"application/vnd.nokia.n-gage.ac+xml":{source:"iana",compressible:!0},"application/vnd.nokia.n-gage.data":{source:"iana",extensions:["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{source:"iana",extensions:["n-gage"]},"application/vnd.nokia.ncd":{source:"iana"},"application/vnd.nokia.pcd+wbxml":{source:"iana"},"application/vnd.nokia.pcd+xml":{source:"iana",compressible:!0},"application/vnd.nokia.radio-preset":{source:"iana",extensions:["rpst"]},"application/vnd.nokia.radio-presets":{source:"iana",extensions:["rpss"]},"application/vnd.novadigm.edm":{source:"iana",extensions:["edm"]},"application/vnd.novadigm.edx":{source:"iana",extensions:["edx"]},"application/vnd.novadigm.ext":{source:"iana",extensions:["ext"]},"application/vnd.ntt-local.content-share":{source:"iana"},"application/vnd.ntt-local.file-transfer":{source:"iana"},"application/vnd.ntt-local.ogw_remote-access":{source:"iana"},"application/vnd.ntt-local.sip-ta_remote":{source:"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{source:"iana"},"application/vnd.oasis.opendocument.chart":{source:"iana",extensions:["odc"]},"application/vnd.oasis.opendocument.chart-template":{source:"iana",extensions:["otc"]},"application/vnd.oasis.opendocument.database":{source:"iana",extensions:["odb"]},"application/vnd.oasis.opendocument.formula":{source:"iana",extensions:["odf"]},"application/vnd.oasis.opendocument.formula-template":{source:"iana",extensions:["odft"]},"application/vnd.oasis.opendocument.graphics":{source:"iana",compressible:!1,extensions:["odg"]},"application/vnd.oasis.opendocument.graphics-template":{source:"iana",extensions:["otg"]},"application/vnd.oasis.opendocument.image":{source:"iana",extensions:["odi"]},"application/vnd.oasis.opendocument.image-template":{source:"iana",extensions:["oti"]},"application/vnd.oasis.opendocument.presentation":{source:"iana",compressible:!1,extensions:["odp"]},"application/vnd.oasis.opendocument.presentation-template":{source:"iana",extensions:["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{source:"iana",compressible:!1,extensions:["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{source:"iana",extensions:["ots"]},"application/vnd.oasis.opendocument.text":{source:"iana",compressible:!1,extensions:["odt"]},"application/vnd.oasis.opendocument.text-master":{source:"iana",extensions:["odm"]},"application/vnd.oasis.opendocument.text-template":{source:"iana",extensions:["ott"]},"application/vnd.oasis.opendocument.text-web":{source:"iana",extensions:["oth"]},"application/vnd.obn":{source:"iana"},"application/vnd.ocf+cbor":{source:"iana"},"application/vnd.oftn.l10n+json":{source:"iana",compressible:!0},"application/vnd.oipf.contentaccessdownload+xml":{source:"iana",compressible:!0},"application/vnd.oipf.contentaccessstreaming+xml":{source:"iana",compressible:!0},"application/vnd.oipf.cspg-hexbinary":{source:"iana"},"application/vnd.oipf.dae.svg+xml":{source:"iana",compressible:!0},"application/vnd.oipf.dae.xhtml+xml":{source:"iana",compressible:!0},"application/vnd.oipf.mippvcontrolmessage+xml":{source:"iana",compressible:!0},"application/vnd.oipf.pae.gem":{source:"iana"},"application/vnd.oipf.spdiscovery+xml":{source:"iana",compressible:!0},"application/vnd.oipf.spdlist+xml":{source:"iana",compressible:!0},"application/vnd.oipf.ueprofile+xml":{source:"iana",compressible:!0},"application/vnd.oipf.userprofile+xml":{source:"iana",compressible:!0},"application/vnd.olpc-sugar":{source:"iana",extensions:["xo"]},"application/vnd.oma-scws-config":{source:"iana"},"application/vnd.oma-scws-http-request":{source:"iana"},"application/vnd.oma-scws-http-response":{source:"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.drm-trigger+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.imd+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.ltkm":{source:"iana"},"application/vnd.oma.bcast.notification+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.provisioningtrigger":{source:"iana"},"application/vnd.oma.bcast.sgboot":{source:"iana"},"application/vnd.oma.bcast.sgdd+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.sgdu":{source:"iana"},"application/vnd.oma.bcast.simple-symbol-container":{source:"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.sprov+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.stkm":{source:"iana"},"application/vnd.oma.cab-address-book+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-feature-handler+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-pcc+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-subs-invite+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-user-prefs+xml":{source:"iana",compressible:!0},"application/vnd.oma.dcd":{source:"iana"},"application/vnd.oma.dcdc":{source:"iana"},"application/vnd.oma.dd2+xml":{source:"iana",compressible:!0,extensions:["dd2"]},"application/vnd.oma.drm.risd+xml":{source:"iana",compressible:!0},"application/vnd.oma.group-usage-list+xml":{source:"iana",compressible:!0},"application/vnd.oma.lwm2m+json":{source:"iana",compressible:!0},"application/vnd.oma.lwm2m+tlv":{source:"iana"},"application/vnd.oma.pal+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.detailed-progress-report+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.final-report+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.groups+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.invocation-descriptor+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.optimized-progress-report+xml":{source:"iana",compressible:!0},"application/vnd.oma.push":{source:"iana"},"application/vnd.oma.scidm.messages+xml":{source:"iana",compressible:!0},"application/vnd.oma.xcap-directory+xml":{source:"iana",compressible:!0},"application/vnd.omads-email+xml":{source:"iana",compressible:!0},"application/vnd.omads-file+xml":{source:"iana",compressible:!0},"application/vnd.omads-folder+xml":{source:"iana",compressible:!0},"application/vnd.omaloc-supl-init":{source:"iana"},"application/vnd.onepager":{source:"iana"},"application/vnd.onepagertamp":{source:"iana"},"application/vnd.onepagertamx":{source:"iana"},"application/vnd.onepagertat":{source:"iana"},"application/vnd.onepagertatp":{source:"iana"},"application/vnd.onepagertatx":{source:"iana"},"application/vnd.openblox.game+xml":{source:"iana",compressible:!0},"application/vnd.openblox.game-binary":{source:"iana"},"application/vnd.openeye.oeb":{source:"iana"},"application/vnd.openofficeorg.extension":{source:"apache",extensions:["oxt"]},"application/vnd.openstreetmap.data+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawing+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{source:"iana",compressible:!1,extensions:["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slide":{source:"iana",extensions:["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{source:"iana",extensions:["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.template":{source:"iana",extensions:["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{source:"iana",compressible:!1,extensions:["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{source:"iana",extensions:["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.theme+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.vmldrawing":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{source:"iana",compressible:!1,extensions:["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{source:"iana",extensions:["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-package.core-properties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-package.relationships+xml":{source:"iana",compressible:!0},"application/vnd.oracle.resource+json":{source:"iana",compressible:!0},"application/vnd.orange.indata":{source:"iana"},"application/vnd.osa.netdeploy":{source:"iana"},"application/vnd.osgeo.mapguide.package":{source:"iana",extensions:["mgp"]},"application/vnd.osgi.bundle":{source:"iana"},"application/vnd.osgi.dp":{source:"iana",extensions:["dp"]},"application/vnd.osgi.subsystem":{source:"iana",extensions:["esa"]},"application/vnd.otps.ct-kip+xml":{source:"iana",compressible:!0},"application/vnd.oxli.countgraph":{source:"iana"},"application/vnd.pagerduty+json":{source:"iana",compressible:!0},"application/vnd.palm":{source:"iana",extensions:["pdb","pqa","oprc"]},"application/vnd.panoply":{source:"iana"},"application/vnd.paos.xml":{source:"iana"},"application/vnd.patentdive":{source:"iana"},"application/vnd.patientecommsdoc":{source:"iana"},"application/vnd.pawaafile":{source:"iana",extensions:["paw"]},"application/vnd.pcos":{source:"iana"},"application/vnd.pg.format":{source:"iana",extensions:["str"]},"application/vnd.pg.osasli":{source:"iana",extensions:["ei6"]},"application/vnd.piaccess.application-licence":{source:"iana"},"application/vnd.picsel":{source:"iana",extensions:["efif"]},"application/vnd.pmi.widget":{source:"iana",extensions:["wg"]},"application/vnd.poc.group-advertisement+xml":{source:"iana",compressible:!0},"application/vnd.pocketlearn":{source:"iana",extensions:["plf"]},"application/vnd.powerbuilder6":{source:"iana",extensions:["pbd"]},"application/vnd.powerbuilder6-s":{source:"iana"},"application/vnd.powerbuilder7":{source:"iana"},"application/vnd.powerbuilder7-s":{source:"iana"},"application/vnd.powerbuilder75":{source:"iana"},"application/vnd.powerbuilder75-s":{source:"iana"},"application/vnd.preminet":{source:"iana"},"application/vnd.previewsystems.box":{source:"iana",extensions:["box"]},"application/vnd.proteus.magazine":{source:"iana",extensions:["mgz"]},"application/vnd.psfs":{source:"iana"},"application/vnd.publishare-delta-tree":{source:"iana",extensions:["qps"]},"application/vnd.pvi.ptid1":{source:"iana",extensions:["ptid"]},"application/vnd.pwg-multiplexed":{source:"iana"},"application/vnd.pwg-xhtml-print+xml":{source:"iana",compressible:!0},"application/vnd.qualcomm.brew-app-res":{source:"iana"},"application/vnd.quarantainenet":{source:"iana"},"application/vnd.quark.quarkxpress":{source:"iana",extensions:["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{source:"iana"},"application/vnd.radisys.moml+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-conf+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-conn+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-dialog+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-stream+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-conf+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-base+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-fax-detect+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-group+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-speech+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-transform+xml":{source:"iana",compressible:!0},"application/vnd.rainstor.data":{source:"iana"},"application/vnd.rapid":{source:"iana"},"application/vnd.rar":{source:"iana"},"application/vnd.realvnc.bed":{source:"iana",extensions:["bed"]},"application/vnd.recordare.musicxml":{source:"iana",extensions:["mxl"]},"application/vnd.recordare.musicxml+xml":{source:"iana",compressible:!0,extensions:["musicxml"]},"application/vnd.renlearn.rlprint":{source:"iana"},"application/vnd.restful+json":{source:"iana",compressible:!0},"application/vnd.rig.cryptonote":{source:"iana",extensions:["cryptonote"]},"application/vnd.rim.cod":{source:"apache",extensions:["cod"]},"application/vnd.rn-realmedia":{source:"apache",extensions:["rm"]},"application/vnd.rn-realmedia-vbr":{source:"apache",extensions:["rmvb"]},"application/vnd.route66.link66+xml":{source:"iana",compressible:!0,extensions:["link66"]},"application/vnd.rs-274x":{source:"iana"},"application/vnd.ruckus.download":{source:"iana"},"application/vnd.s3sms":{source:"iana"},"application/vnd.sailingtracker.track":{source:"iana",extensions:["st"]},"application/vnd.sbm.cid":{source:"iana"},"application/vnd.sbm.mid2":{source:"iana"},"application/vnd.scribus":{source:"iana"},"application/vnd.sealed.3df":{source:"iana"},"application/vnd.sealed.csf":{source:"iana"},"application/vnd.sealed.doc":{source:"iana"},"application/vnd.sealed.eml":{source:"iana"},"application/vnd.sealed.mht":{source:"iana"},"application/vnd.sealed.net":{source:"iana"},"application/vnd.sealed.ppt":{source:"iana"},"application/vnd.sealed.tiff":{source:"iana"},"application/vnd.sealed.xls":{source:"iana"},"application/vnd.sealedmedia.softseal.html":{source:"iana"},"application/vnd.sealedmedia.softseal.pdf":{source:"iana"},"application/vnd.seemail":{source:"iana",extensions:["see"]},"application/vnd.sema":{source:"iana",extensions:["sema"]},"application/vnd.semd":{source:"iana",extensions:["semd"]},"application/vnd.semf":{source:"iana",extensions:["semf"]},"application/vnd.shana.informed.formdata":{source:"iana",extensions:["ifm"]},"application/vnd.shana.informed.formtemplate":{source:"iana",extensions:["itp"]},"application/vnd.shana.informed.interchange":{source:"iana",extensions:["iif"]},"application/vnd.shana.informed.package":{source:"iana",extensions:["ipk"]},"application/vnd.shootproof+json":{source:"iana",compressible:!0},"application/vnd.sigrok.session":{source:"iana"},"application/vnd.simtech-mindmapper":{source:"iana",extensions:["twd","twds"]},"application/vnd.siren+json":{source:"iana",compressible:!0},"application/vnd.smaf":{source:"iana",extensions:["mmf"]},"application/vnd.smart.notebook":{source:"iana"},"application/vnd.smart.teacher":{source:"iana",extensions:["teacher"]},"application/vnd.software602.filler.form+xml":{source:"iana",compressible:!0},"application/vnd.software602.filler.form-xml-zip":{source:"iana"},"application/vnd.solent.sdkm+xml":{source:"iana",compressible:!0,extensions:["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{source:"iana",extensions:["dxp"]},"application/vnd.spotfire.sfs":{source:"iana",extensions:["sfs"]},"application/vnd.sqlite3":{source:"iana"},"application/vnd.sss-cod":{source:"iana"},"application/vnd.sss-dtf":{source:"iana"},"application/vnd.sss-ntf":{source:"iana"},"application/vnd.stardivision.calc":{source:"apache",extensions:["sdc"]},"application/vnd.stardivision.draw":{source:"apache",extensions:["sda"]},"application/vnd.stardivision.impress":{source:"apache",extensions:["sdd"]},"application/vnd.stardivision.math":{source:"apache",extensions:["smf"]},"application/vnd.stardivision.writer":{source:"apache",extensions:["sdw","vor"]},"application/vnd.stardivision.writer-global":{source:"apache",extensions:["sgl"]},"application/vnd.stepmania.package":{source:"iana",extensions:["smzip"]},"application/vnd.stepmania.stepchart":{source:"iana",extensions:["sm"]},"application/vnd.street-stream":{source:"iana"},"application/vnd.sun.wadl+xml":{source:"iana",compressible:!0,extensions:["wadl"]},"application/vnd.sun.xml.calc":{source:"apache",extensions:["sxc"]},"application/vnd.sun.xml.calc.template":{source:"apache",extensions:["stc"]},"application/vnd.sun.xml.draw":{source:"apache",extensions:["sxd"]},"application/vnd.sun.xml.draw.template":{source:"apache",extensions:["std"]},"application/vnd.sun.xml.impress":{source:"apache",extensions:["sxi"]},"application/vnd.sun.xml.impress.template":{source:"apache",extensions:["sti"]},"application/vnd.sun.xml.math":{source:"apache",extensions:["sxm"]},"application/vnd.sun.xml.writer":{source:"apache",extensions:["sxw"]},"application/vnd.sun.xml.writer.global":{source:"apache",extensions:["sxg"]},"application/vnd.sun.xml.writer.template":{source:"apache",extensions:["stw"]},"application/vnd.sus-calendar":{source:"iana",extensions:["sus","susp"]},"application/vnd.svd":{source:"iana",extensions:["svd"]},"application/vnd.swiftview-ics":{source:"iana"},"application/vnd.symbian.install":{source:"apache",extensions:["sis","sisx"]},"application/vnd.syncml+xml":{source:"iana",compressible:!0,extensions:["xsm"]},"application/vnd.syncml.dm+wbxml":{source:"iana",extensions:["bdm"]},"application/vnd.syncml.dm+xml":{source:"iana",compressible:!0,extensions:["xdm"]},"application/vnd.syncml.dm.notification":{source:"iana"},"application/vnd.syncml.dmddf+wbxml":{source:"iana"},"application/vnd.syncml.dmddf+xml":{source:"iana",compressible:!0},"application/vnd.syncml.dmtnds+wbxml":{source:"iana"},"application/vnd.syncml.dmtnds+xml":{source:"iana",compressible:!0},"application/vnd.syncml.ds.notification":{source:"iana"},"application/vnd.tableschema+json":{source:"iana",compressible:!0},"application/vnd.tao.intent-module-archive":{source:"iana",extensions:["tao"]},"application/vnd.tcpdump.pcap":{source:"iana",extensions:["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{source:"iana",compressible:!0},"application/vnd.tmd.mediaflex.api+xml":{source:"iana",compressible:!0},"application/vnd.tml":{source:"iana"},"application/vnd.tmobile-livetv":{source:"iana",extensions:["tmo"]},"application/vnd.tri.onesource":{source:"iana"},"application/vnd.trid.tpt":{source:"iana",extensions:["tpt"]},"application/vnd.triscape.mxs":{source:"iana",extensions:["mxs"]},"application/vnd.trueapp":{source:"iana",extensions:["tra"]},"application/vnd.truedoc":{source:"iana"},"application/vnd.ubisoft.webplayer":{source:"iana"},"application/vnd.ufdl":{source:"iana",extensions:["ufd","ufdl"]},"application/vnd.uiq.theme":{source:"iana",extensions:["utz"]},"application/vnd.umajin":{source:"iana",extensions:["umj"]},"application/vnd.unity":{source:"iana",extensions:["unityweb"]},"application/vnd.uoml+xml":{source:"iana",compressible:!0,extensions:["uoml"]},"application/vnd.uplanet.alert":{source:"iana"},"application/vnd.uplanet.alert-wbxml":{source:"iana"},"application/vnd.uplanet.bearer-choice":{source:"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{source:"iana"},"application/vnd.uplanet.cacheop":{source:"iana"},"application/vnd.uplanet.cacheop-wbxml":{source:"iana"},"application/vnd.uplanet.channel":{source:"iana"},"application/vnd.uplanet.channel-wbxml":{source:"iana"},"application/vnd.uplanet.list":{source:"iana"},"application/vnd.uplanet.list-wbxml":{source:"iana"},"application/vnd.uplanet.listcmd":{source:"iana"},"application/vnd.uplanet.listcmd-wbxml":{source:"iana"},"application/vnd.uplanet.signal":{source:"iana"},"application/vnd.uri-map":{source:"iana"},"application/vnd.valve.source.material":{source:"iana"},"application/vnd.vcx":{source:"iana",extensions:["vcx"]},"application/vnd.vd-study":{source:"iana"},"application/vnd.vectorworks":{source:"iana"},"application/vnd.vel+json":{source:"iana",compressible:!0},"application/vnd.verimatrix.vcas":{source:"iana"},"application/vnd.veryant.thin":{source:"iana"},"application/vnd.vidsoft.vidconference":{source:"iana"},"application/vnd.visio":{source:"iana",extensions:["vsd","vst","vss","vsw"]},"application/vnd.visionary":{source:"iana",extensions:["vis"]},"application/vnd.vividence.scriptfile":{source:"iana"},"application/vnd.vsf":{source:"iana",extensions:["vsf"]},"application/vnd.wap.sic":{source:"iana"},"application/vnd.wap.slc":{source:"iana"},"application/vnd.wap.wbxml":{source:"iana",extensions:["wbxml"]},"application/vnd.wap.wmlc":{source:"iana",extensions:["wmlc"]},"application/vnd.wap.wmlscriptc":{source:"iana",extensions:["wmlsc"]},"application/vnd.webturbo":{source:"iana",extensions:["wtb"]},"application/vnd.wfa.p2p":{source:"iana"},"application/vnd.wfa.wsc":{source:"iana"},"application/vnd.windows.devicepairing":{source:"iana"},"application/vnd.wmc":{source:"iana"},"application/vnd.wmf.bootstrap":{source:"iana"},"application/vnd.wolfram.mathematica":{source:"iana"},"application/vnd.wolfram.mathematica.package":{source:"iana"},"application/vnd.wolfram.player":{source:"iana",extensions:["nbp"]},"application/vnd.wordperfect":{source:"iana",extensions:["wpd"]},"application/vnd.wqd":{source:"iana",extensions:["wqd"]},"application/vnd.wrq-hp3000-labelled":{source:"iana"},"application/vnd.wt.stf":{source:"iana",extensions:["stf"]},"application/vnd.wv.csp+wbxml":{source:"iana"},"application/vnd.wv.csp+xml":{source:"iana",compressible:!0},"application/vnd.wv.ssp+xml":{source:"iana",compressible:!0},"application/vnd.xacml+json":{source:"iana",compressible:!0},"application/vnd.xara":{source:"iana",extensions:["xar"]},"application/vnd.xfdl":{source:"iana",extensions:["xfdl"]},"application/vnd.xfdl.webform":{source:"iana"},"application/vnd.xmi+xml":{source:"iana",compressible:!0},"application/vnd.xmpie.cpkg":{source:"iana"},"application/vnd.xmpie.dpkg":{source:"iana"},"application/vnd.xmpie.plan":{source:"iana"},"application/vnd.xmpie.ppkg":{source:"iana"},"application/vnd.xmpie.xlim":{source:"iana"},"application/vnd.yamaha.hv-dic":{source:"iana",extensions:["hvd"]},"application/vnd.yamaha.hv-script":{source:"iana",extensions:["hvs"]},"application/vnd.yamaha.hv-voice":{source:"iana",extensions:["hvp"]},"application/vnd.yamaha.openscoreformat":{source:"iana",extensions:["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{source:"iana",compressible:!0,extensions:["osfpvg"]},"application/vnd.yamaha.remote-setup":{source:"iana"},"application/vnd.yamaha.smaf-audio":{source:"iana",extensions:["saf"]},"application/vnd.yamaha.smaf-phrase":{source:"iana",extensions:["spf"]},"application/vnd.yamaha.through-ngn":{source:"iana"},"application/vnd.yamaha.tunnel-udpencap":{source:"iana"},"application/vnd.yaoweme":{source:"iana"},"application/vnd.yellowriver-custom-menu":{source:"iana",extensions:["cmp"]},"application/vnd.youtube.yt":{source:"iana"},"application/vnd.zul":{source:"iana",extensions:["zir","zirz"]},"application/vnd.zzazz.deck+xml":{source:"iana",compressible:!0,extensions:["zaz"]},"application/voicexml+xml":{source:"iana",compressible:!0,extensions:["vxml"]},"application/voucher-cms+json":{source:"iana",compressible:!0},"application/vq-rtcpxr":{source:"iana"},"application/wasm":{compressible:!0,extensions:["wasm"]},"application/watcherinfo+xml":{source:"iana",compressible:!0},"application/webpush-options+json":{source:"iana",compressible:!0},"application/whoispp-query":{source:"iana"},"application/whoispp-response":{source:"iana"},"application/widget":{source:"iana",extensions:["wgt"]},"application/winhlp":{source:"apache",extensions:["hlp"]},"application/wita":{source:"iana"},"application/wordperfect5.1":{source:"iana"},"application/wsdl+xml":{source:"iana",compressible:!0,extensions:["wsdl"]},"application/wspolicy+xml":{source:"iana",compressible:!0,extensions:["wspolicy"]},"application/x-7z-compressed":{source:"apache",compressible:!1,extensions:["7z"]},"application/x-abiword":{source:"apache",extensions:["abw"]},"application/x-ace-compressed":{source:"apache",extensions:["ace"]},"application/x-amf":{source:"apache"},"application/x-apple-diskimage":{source:"apache",extensions:["dmg"]},"application/x-arj":{compressible:!1,extensions:["arj"]},"application/x-authorware-bin":{source:"apache",extensions:["aab","x32","u32","vox"]},"application/x-authorware-map":{source:"apache",extensions:["aam"]},"application/x-authorware-seg":{source:"apache",extensions:["aas"]},"application/x-bcpio":{source:"apache",extensions:["bcpio"]},"application/x-bdoc":{compressible:!1,extensions:["bdoc"]},"application/x-bittorrent":{source:"apache",extensions:["torrent"]},"application/x-blorb":{source:"apache",extensions:["blb","blorb"]},"application/x-bzip":{source:"apache",compressible:!1,extensions:["bz"]},"application/x-bzip2":{source:"apache",compressible:!1,extensions:["bz2","boz"]},"application/x-cbr":{source:"apache",extensions:["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{source:"apache",extensions:["vcd"]},"application/x-cfs-compressed":{source:"apache",extensions:["cfs"]},"application/x-chat":{source:"apache",extensions:["chat"]},"application/x-chess-pgn":{source:"apache",extensions:["pgn"]},"application/x-chrome-extension":{extensions:["crx"]},"application/x-cocoa":{source:"nginx",extensions:["cco"]},"application/x-compress":{source:"apache"},"application/x-conference":{source:"apache",extensions:["nsc"]},"application/x-cpio":{source:"apache",extensions:["cpio"]},"application/x-csh":{source:"apache",extensions:["csh"]},"application/x-deb":{compressible:!1},"application/x-debian-package":{source:"apache",extensions:["deb","udeb"]},"application/x-dgc-compressed":{source:"apache",extensions:["dgc"]},"application/x-director":{source:"apache",extensions:["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{source:"apache",extensions:["wad"]},"application/x-dtbncx+xml":{source:"apache",compressible:!0,extensions:["ncx"]},"application/x-dtbook+xml":{source:"apache",compressible:!0,extensions:["dtb"]},"application/x-dtbresource+xml":{source:"apache",compressible:!0,extensions:["res"]},"application/x-dvi":{source:"apache",compressible:!1,extensions:["dvi"]},"application/x-envoy":{source:"apache",extensions:["evy"]},"application/x-eva":{source:"apache",extensions:["eva"]},"application/x-font-bdf":{source:"apache",extensions:["bdf"]},"application/x-font-dos":{source:"apache"},"application/x-font-framemaker":{source:"apache"},"application/x-font-ghostscript":{source:"apache",extensions:["gsf"]},"application/x-font-libgrx":{source:"apache"},"application/x-font-linux-psf":{source:"apache",extensions:["psf"]},"application/x-font-pcf":{source:"apache",extensions:["pcf"]},"application/x-font-snf":{source:"apache",extensions:["snf"]},"application/x-font-speedo":{source:"apache"},"application/x-font-sunos-news":{source:"apache"},"application/x-font-type1":{source:"apache",extensions:["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{source:"apache"},"application/x-freearc":{source:"apache",extensions:["arc"]},"application/x-futuresplash":{source:"apache",extensions:["spl"]},"application/x-gca-compressed":{source:"apache",extensions:["gca"]},"application/x-glulx":{source:"apache",extensions:["ulx"]},"application/x-gnumeric":{source:"apache",extensions:["gnumeric"]},"application/x-gramps-xml":{source:"apache",extensions:["gramps"]},"application/x-gtar":{source:"apache",extensions:["gtar"]},"application/x-gzip":{source:"apache"},"application/x-hdf":{source:"apache",extensions:["hdf"]},"application/x-httpd-php":{compressible:!0,extensions:["php"]},"application/x-install-instructions":{source:"apache",extensions:["install"]},"application/x-iso9660-image":{source:"apache",extensions:["iso"]},"application/x-java-archive-diff":{source:"nginx",extensions:["jardiff"]},"application/x-java-jnlp-file":{source:"apache",compressible:!1,extensions:["jnlp"]},"application/x-javascript":{compressible:!0},"application/x-latex":{source:"apache",compressible:!1,extensions:["latex"]},"application/x-lua-bytecode":{extensions:["luac"]},"application/x-lzh-compressed":{source:"apache",extensions:["lzh","lha"]},"application/x-makeself":{source:"nginx",extensions:["run"]},"application/x-mie":{source:"apache",extensions:["mie"]},"application/x-mobipocket-ebook":{source:"apache",extensions:["prc","mobi"]},"application/x-mpegurl":{compressible:!1},"application/x-ms-application":{source:"apache",extensions:["application"]},"application/x-ms-shortcut":{source:"apache",extensions:["lnk"]},"application/x-ms-wmd":{source:"apache",extensions:["wmd"]},"application/x-ms-wmz":{source:"apache",extensions:["wmz"]},"application/x-ms-xbap":{source:"apache",extensions:["xbap"]},"application/x-msaccess":{source:"apache",extensions:["mdb"]},"application/x-msbinder":{source:"apache",extensions:["obd"]},"application/x-mscardfile":{source:"apache",extensions:["crd"]},"application/x-msclip":{source:"apache",extensions:["clp"]},"application/x-msdos-program":{extensions:["exe"]},"application/x-msdownload":{source:"apache",extensions:["exe","dll","com","bat","msi"]},"application/x-msmediaview":{source:"apache",extensions:["mvb","m13","m14"]},"application/x-msmetafile":{source:"apache",extensions:["wmf","wmz","emf","emz"]},"application/x-msmoney":{source:"apache",extensions:["mny"]},"application/x-mspublisher":{source:"apache",extensions:["pub"]},"application/x-msschedule":{source:"apache",extensions:["scd"]},"application/x-msterminal":{source:"apache",extensions:["trm"]},"application/x-mswrite":{source:"apache",extensions:["wri"]},"application/x-netcdf":{source:"apache",extensions:["nc","cdf"]},"application/x-ns-proxy-autoconfig":{compressible:!0,extensions:["pac"]},"application/x-nzb":{source:"apache",extensions:["nzb"]},"application/x-perl":{source:"nginx",extensions:["pl","pm"]},"application/x-pilot":{source:"nginx",extensions:["prc","pdb"]},"application/x-pkcs12":{source:"apache",compressible:!1,extensions:["p12","pfx"]},"application/x-pkcs7-certificates":{source:"apache",extensions:["p7b","spc"]},"application/x-pkcs7-certreqresp":{source:"apache",extensions:["p7r"]},"application/x-rar-compressed":{source:"apache",compressible:!1,extensions:["rar"]},"application/x-redhat-package-manager":{source:"nginx",extensions:["rpm"]},"application/x-research-info-systems":{source:"apache",extensions:["ris"]},"application/x-sea":{source:"nginx",extensions:["sea"]},"application/x-sh":{source:"apache",compressible:!0,extensions:["sh"]},"application/x-shar":{source:"apache",extensions:["shar"]},"application/x-shockwave-flash":{source:"apache",compressible:!1,extensions:["swf"]},"application/x-silverlight-app":{source:"apache",extensions:["xap"]},"application/x-sql":{source:"apache",extensions:["sql"]},"application/x-stuffit":{source:"apache",compressible:!1,extensions:["sit"]},"application/x-stuffitx":{source:"apache",extensions:["sitx"]},"application/x-subrip":{source:"apache",extensions:["srt"]},"application/x-sv4cpio":{source:"apache",extensions:["sv4cpio"]},"application/x-sv4crc":{source:"apache",extensions:["sv4crc"]},"application/x-t3vm-image":{source:"apache",extensions:["t3"]},"application/x-tads":{source:"apache",extensions:["gam"]},"application/x-tar":{source:"apache",compressible:!0,extensions:["tar"]},"application/x-tcl":{source:"apache",extensions:["tcl","tk"]},"application/x-tex":{source:"apache",extensions:["tex"]},"application/x-tex-tfm":{source:"apache",extensions:["tfm"]},"application/x-texinfo":{source:"apache",extensions:["texinfo","texi"]},"application/x-tgif":{source:"apache",extensions:["obj"]},"application/x-ustar":{source:"apache",extensions:["ustar"]},"application/x-virtualbox-hdd":{compressible:!0,extensions:["hdd"]},"application/x-virtualbox-ova":{compressible:!0,extensions:["ova"]},"application/x-virtualbox-ovf":{compressible:!0,extensions:["ovf"]},"application/x-virtualbox-vbox":{compressible:!0,extensions:["vbox"]},"application/x-virtualbox-vbox-extpack":{compressible:!1,extensions:["vbox-extpack"]},"application/x-virtualbox-vdi":{compressible:!0,extensions:["vdi"]},"application/x-virtualbox-vhd":{compressible:!0,extensions:["vhd"]},"application/x-virtualbox-vmdk":{compressible:!0,extensions:["vmdk"]},"application/x-wais-source":{source:"apache",extensions:["src"]},"application/x-web-app-manifest+json":{compressible:!0,extensions:["webapp"]},"application/x-www-form-urlencoded":{source:"iana",compressible:!0},"application/x-x509-ca-cert":{source:"apache",extensions:["der","crt","pem"]},"application/x-xfig":{source:"apache",extensions:["fig"]},"application/x-xliff+xml":{source:"apache",compressible:!0,extensions:["xlf"]},"application/x-xpinstall":{source:"apache",compressible:!1,extensions:["xpi"]},"application/x-xz":{source:"apache",extensions:["xz"]},"application/x-zmachine":{source:"apache",extensions:["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{source:"iana"},"application/xacml+xml":{source:"iana",compressible:!0},"application/xaml+xml":{source:"apache",compressible:!0,extensions:["xaml"]},"application/xcap-att+xml":{source:"iana",compressible:!0},"application/xcap-caps+xml":{source:"iana",compressible:!0},"application/xcap-diff+xml":{source:"iana",compressible:!0,extensions:["xdf"]},"application/xcap-el+xml":{source:"iana",compressible:!0},"application/xcap-error+xml":{source:"iana",compressible:!0},"application/xcap-ns+xml":{source:"iana",compressible:!0},"application/xcon-conference-info+xml":{source:"iana",compressible:!0},"application/xcon-conference-info-diff+xml":{source:"iana",compressible:!0},"application/xenc+xml":{source:"iana",compressible:!0,extensions:["xenc"]},"application/xhtml+xml":{source:"iana",compressible:!0,extensions:["xhtml","xht"]},"application/xhtml-voice+xml":{source:"apache",compressible:!0},"application/xliff+xml":{source:"iana",compressible:!0},"application/xml":{source:"iana",compressible:!0,extensions:["xml","xsl","xsd","rng"]},"application/xml-dtd":{source:"iana",compressible:!0,extensions:["dtd"]},"application/xml-external-parsed-entity":{source:"iana"},"application/xml-patch+xml":{source:"iana",compressible:!0},"application/xmpp+xml":{source:"iana",compressible:!0},"application/xop+xml":{source:"iana",compressible:!0,extensions:["xop"]},"application/xproc+xml":{source:"apache",compressible:!0,extensions:["xpl"]},"application/xslt+xml":{source:"iana",compressible:!0,extensions:["xslt"]},"application/xspf+xml":{source:"apache",compressible:!0,extensions:["xspf"]},"application/xv+xml":{source:"iana",compressible:!0,extensions:["mxml","xhvml","xvml","xvm"]},"application/yang":{source:"iana",extensions:["yang"]},"application/yang-data+json":{source:"iana",compressible:!0},"application/yang-data+xml":{source:"iana",compressible:!0},"application/yang-patch+json":{source:"iana",compressible:!0},"application/yang-patch+xml":{source:"iana",compressible:!0},"application/yin+xml":{source:"iana",compressible:!0,extensions:["yin"]},"application/zip":{source:"iana",compressible:!1,extensions:["zip"]},"application/zlib":{source:"iana"},"application/zstd":{source:"iana"},"audio/1d-interleaved-parityfec":{source:"iana"},"audio/32kadpcm":{source:"iana"},"audio/3gpp":{source:"iana",compressible:!1,extensions:["3gpp"]},"audio/3gpp2":{source:"iana"},"audio/aac":{source:"iana"},"audio/ac3":{source:"iana"},"audio/adpcm":{source:"apache",extensions:["adp"]},"audio/amr":{source:"iana"},"audio/amr-wb":{source:"iana"},"audio/amr-wb+":{source:"iana"},"audio/aptx":{source:"iana"},"audio/asc":{source:"iana"},"audio/atrac-advanced-lossless":{source:"iana"},"audio/atrac-x":{source:"iana"},"audio/atrac3":{source:"iana"},"audio/basic":{source:"iana",compressible:!1,extensions:["au","snd"]},"audio/bv16":{source:"iana"},"audio/bv32":{source:"iana"},"audio/clearmode":{source:"iana"},"audio/cn":{source:"iana"},"audio/dat12":{source:"iana"},"audio/dls":{source:"iana"},"audio/dsr-es201108":{source:"iana"},"audio/dsr-es202050":{source:"iana"},"audio/dsr-es202211":{source:"iana"},"audio/dsr-es202212":{source:"iana"},"audio/dv":{source:"iana"},"audio/dvi4":{source:"iana"},"audio/eac3":{source:"iana"},"audio/encaprtp":{source:"iana"},"audio/evrc":{source:"iana"},"audio/evrc-qcp":{source:"iana"},"audio/evrc0":{source:"iana"},"audio/evrc1":{source:"iana"},"audio/evrcb":{source:"iana"},"audio/evrcb0":{source:"iana"},"audio/evrcb1":{source:"iana"},"audio/evrcnw":{source:"iana"},"audio/evrcnw0":{source:"iana"},"audio/evrcnw1":{source:"iana"},"audio/evrcwb":{source:"iana"},"audio/evrcwb0":{source:"iana"},"audio/evrcwb1":{source:"iana"},"audio/evs":{source:"iana"},"audio/fwdred":{source:"iana"},"audio/g711-0":{source:"iana"},"audio/g719":{source:"iana"},"audio/g722":{source:"iana"},"audio/g7221":{source:"iana"},"audio/g723":{source:"iana"},"audio/g726-16":{source:"iana"},"audio/g726-24":{source:"iana"},"audio/g726-32":{source:"iana"},"audio/g726-40":{source:"iana"},"audio/g728":{source:"iana"},"audio/g729":{source:"iana"},"audio/g7291":{source:"iana"},"audio/g729d":{source:"iana"},"audio/g729e":{source:"iana"},"audio/gsm":{source:"iana"},"audio/gsm-efr":{source:"iana"},"audio/gsm-hr-08":{source:"iana"},"audio/ilbc":{source:"iana"},"audio/ip-mr_v2.5":{source:"iana"},"audio/isac":{source:"apache"},"audio/l16":{source:"iana"},"audio/l20":{source:"iana"},"audio/l24":{source:"iana",compressible:!1},"audio/l8":{source:"iana"},"audio/lpc":{source:"iana"},"audio/melp":{source:"iana"},"audio/melp1200":{source:"iana"},"audio/melp2400":{source:"iana"},"audio/melp600":{source:"iana"},"audio/midi":{source:"apache",extensions:["mid","midi","kar","rmi"]},"audio/mobile-xmf":{source:"iana"},"audio/mp3":{compressible:!1,extensions:["mp3"]},"audio/mp4":{source:"iana",compressible:!1,extensions:["m4a","mp4a"]},"audio/mp4a-latm":{source:"iana"},"audio/mpa":{source:"iana"},"audio/mpa-robust":{source:"iana"},"audio/mpeg":{source:"iana",compressible:!1,extensions:["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{source:"iana"},"audio/musepack":{source:"apache"},"audio/ogg":{source:"iana",compressible:!1,extensions:["oga","ogg","spx"]},"audio/opus":{source:"iana"},"audio/parityfec":{source:"iana"},"audio/pcma":{source:"iana"},"audio/pcma-wb":{source:"iana"},"audio/pcmu":{source:"iana"},"audio/pcmu-wb":{source:"iana"},"audio/prs.sid":{source:"iana"},"audio/qcelp":{source:"iana"},"audio/raptorfec":{source:"iana"},"audio/red":{source:"iana"},"audio/rtp-enc-aescm128":{source:"iana"},"audio/rtp-midi":{source:"iana"},"audio/rtploopback":{source:"iana"},"audio/rtx":{source:"iana"},"audio/s3m":{source:"apache",extensions:["s3m"]},"audio/silk":{source:"apache",extensions:["sil"]},"audio/smv":{source:"iana"},"audio/smv-qcp":{source:"iana"},"audio/smv0":{source:"iana"},"audio/sp-midi":{source:"iana"},"audio/speex":{source:"iana"},"audio/t140c":{source:"iana"},"audio/t38":{source:"iana"},"audio/telephone-event":{source:"iana"},"audio/tetra_acelp":{source:"iana"},"audio/tone":{source:"iana"},"audio/uemclip":{source:"iana"},"audio/ulpfec":{source:"iana"},"audio/usac":{source:"iana"},"audio/vdvi":{source:"iana"},"audio/vmr-wb":{source:"iana"},"audio/vnd.3gpp.iufp":{source:"iana"},"audio/vnd.4sb":{source:"iana"},"audio/vnd.audiokoz":{source:"iana"},"audio/vnd.celp":{source:"iana"},"audio/vnd.cisco.nse":{source:"iana"},"audio/vnd.cmles.radio-events":{source:"iana"},"audio/vnd.cns.anp1":{source:"iana"},"audio/vnd.cns.inf1":{source:"iana"},"audio/vnd.dece.audio":{source:"iana",extensions:["uva","uvva"]},"audio/vnd.digital-winds":{source:"iana",extensions:["eol"]},"audio/vnd.dlna.adts":{source:"iana"},"audio/vnd.dolby.heaac.1":{source:"iana"},"audio/vnd.dolby.heaac.2":{source:"iana"},"audio/vnd.dolby.mlp":{source:"iana"},"audio/vnd.dolby.mps":{source:"iana"},"audio/vnd.dolby.pl2":{source:"iana"},"audio/vnd.dolby.pl2x":{source:"iana"},"audio/vnd.dolby.pl2z":{source:"iana"},"audio/vnd.dolby.pulse.1":{source:"iana"},"audio/vnd.dra":{source:"iana",extensions:["dra"]},"audio/vnd.dts":{source:"iana",extensions:["dts"]},"audio/vnd.dts.hd":{source:"iana",extensions:["dtshd"]},"audio/vnd.dts.uhd":{source:"iana"},"audio/vnd.dvb.file":{source:"iana"},"audio/vnd.everad.plj":{source:"iana"},"audio/vnd.hns.audio":{source:"iana"},"audio/vnd.lucent.voice":{source:"iana",extensions:["lvp"]},"audio/vnd.ms-playready.media.pya":{source:"iana",extensions:["pya"]},"audio/vnd.nokia.mobile-xmf":{source:"iana"},"audio/vnd.nortel.vbk":{source:"iana"},"audio/vnd.nuera.ecelp4800":{source:"iana",extensions:["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{source:"iana",extensions:["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{source:"iana",extensions:["ecelp9600"]},"audio/vnd.octel.sbc":{source:"iana"},"audio/vnd.presonus.multitrack":{source:"iana"},"audio/vnd.qcelp":{source:"iana"},"audio/vnd.rhetorex.32kadpcm":{source:"iana"},"audio/vnd.rip":{source:"iana",extensions:["rip"]},"audio/vnd.rn-realaudio":{compressible:!1},"audio/vnd.sealedmedia.softseal.mpeg":{source:"iana"},"audio/vnd.vmx.cvsd":{source:"iana"},"audio/vnd.wave":{compressible:!1},"audio/vorbis":{source:"iana",compressible:!1},"audio/vorbis-config":{source:"iana"},"audio/wav":{compressible:!1,extensions:["wav"]},"audio/wave":{compressible:!1,extensions:["wav"]},"audio/webm":{source:"apache",compressible:!1,extensions:["weba"]},"audio/x-aac":{source:"apache",compressible:!1,extensions:["aac"]},"audio/x-aiff":{source:"apache",extensions:["aif","aiff","aifc"]},"audio/x-caf":{source:"apache",compressible:!1,extensions:["caf"]},"audio/x-flac":{source:"apache",extensions:["flac"]},"audio/x-m4a":{source:"nginx",extensions:["m4a"]},"audio/x-matroska":{source:"apache",extensions:["mka"]},"audio/x-mpegurl":{source:"apache",extensions:["m3u"]},"audio/x-ms-wax":{source:"apache",extensions:["wax"]},"audio/x-ms-wma":{source:"apache",extensions:["wma"]},"audio/x-pn-realaudio":{source:"apache",extensions:["ram","ra"]},"audio/x-pn-realaudio-plugin":{source:"apache",extensions:["rmp"]},"audio/x-realaudio":{source:"nginx",extensions:["ra"]},"audio/x-tta":{source:"apache"},"audio/x-wav":{source:"apache",extensions:["wav"]},"audio/xm":{source:"apache",extensions:["xm"]},"chemical/x-cdx":{source:"apache",extensions:["cdx"]},"chemical/x-cif":{source:"apache",extensions:["cif"]},"chemical/x-cmdf":{source:"apache",extensions:["cmdf"]},"chemical/x-cml":{source:"apache",extensions:["cml"]},"chemical/x-csml":{source:"apache",extensions:["csml"]},"chemical/x-pdb":{source:"apache"},"chemical/x-xyz":{source:"apache",extensions:["xyz"]},"font/collection":{source:"iana",extensions:["ttc"]},"font/otf":{source:"iana",compressible:!0,extensions:["otf"]},"font/sfnt":{source:"iana"},"font/ttf":{source:"iana",extensions:["ttf"]},"font/woff":{source:"iana",extensions:["woff"]},"font/woff2":{source:"iana",extensions:["woff2"]},"image/aces":{source:"iana",extensions:["exr"]},"image/apng":{compressible:!1,extensions:["apng"]},"image/avci":{source:"iana"},"image/avcs":{source:"iana"},"image/bmp":{source:"iana",compressible:!0,extensions:["bmp"]},"image/cgm":{source:"iana",extensions:["cgm"]},"image/dicom-rle":{source:"iana",extensions:["drle"]},"image/emf":{source:"iana",extensions:["emf"]},"image/fits":{source:"iana",extensions:["fits"]},"image/g3fax":{source:"iana",extensions:["g3"]},"image/gif":{source:"iana",compressible:!1,extensions:["gif"]},"image/heic":{source:"iana",extensions:["heic"]},"image/heic-sequence":{source:"iana",extensions:["heics"]},"image/heif":{source:"iana",extensions:["heif"]},"image/heif-sequence":{source:"iana",extensions:["heifs"]},"image/ief":{source:"iana",extensions:["ief"]},"image/jls":{source:"iana",extensions:["jls"]},"image/jp2":{source:"iana",compressible:!1,extensions:["jp2","jpg2"]},"image/jpeg":{source:"iana",compressible:!1,extensions:["jpeg","jpg","jpe"]},"image/jpm":{source:"iana",compressible:!1,extensions:["jpm"]},"image/jpx":{source:"iana",compressible:!1,extensions:["jpx","jpf"]},"image/ktx":{source:"iana",extensions:["ktx"]},"image/naplps":{source:"iana"},"image/pjpeg":{compressible:!1},"image/png":{source:"iana",compressible:!1,extensions:["png"]},"image/prs.btif":{source:"iana",extensions:["btif"]},"image/prs.pti":{source:"iana",extensions:["pti"]},"image/pwg-raster":{source:"iana"},"image/sgi":{source:"apache",extensions:["sgi"]},"image/svg+xml":{source:"iana",compressible:!0,extensions:["svg","svgz"]},"image/t38":{source:"iana",extensions:["t38"]},"image/tiff":{source:"iana",compressible:!1,extensions:["tif","tiff"]},"image/tiff-fx":{source:"iana",extensions:["tfx"]},"image/vnd.adobe.photoshop":{source:"iana",compressible:!0,extensions:["psd"]},"image/vnd.airzip.accelerator.azv":{source:"iana",extensions:["azv"]},"image/vnd.cns.inf2":{source:"iana"},"image/vnd.dece.graphic":{source:"iana",extensions:["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{source:"iana",extensions:["djvu","djv"]},"image/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"image/vnd.dwg":{source:"iana",extensions:["dwg"]},"image/vnd.dxf":{source:"iana",extensions:["dxf"]},"image/vnd.fastbidsheet":{source:"iana",extensions:["fbs"]},"image/vnd.fpx":{source:"iana",extensions:["fpx"]},"image/vnd.fst":{source:"iana",extensions:["fst"]},"image/vnd.fujixerox.edmics-mmr":{source:"iana",extensions:["mmr"]},"image/vnd.fujixerox.edmics-rlc":{source:"iana",extensions:["rlc"]},"image/vnd.globalgraphics.pgb":{source:"iana"},"image/vnd.microsoft.icon":{source:"iana",extensions:["ico"]},"image/vnd.mix":{source:"iana"},"image/vnd.mozilla.apng":{source:"iana"},"image/vnd.ms-modi":{source:"iana",extensions:["mdi"]},"image/vnd.ms-photo":{source:"apache",extensions:["wdp"]},"image/vnd.net-fpx":{source:"iana",extensions:["npx"]},"image/vnd.radiance":{source:"iana"},"image/vnd.sealed.png":{source:"iana"},"image/vnd.sealedmedia.softseal.gif":{source:"iana"},"image/vnd.sealedmedia.softseal.jpg":{source:"iana"},"image/vnd.svf":{source:"iana"},"image/vnd.tencent.tap":{source:"iana",extensions:["tap"]},"image/vnd.valve.source.texture":{source:"iana",extensions:["vtf"]},"image/vnd.wap.wbmp":{source:"iana",extensions:["wbmp"]},"image/vnd.xiff":{source:"iana",extensions:["xif"]},"image/vnd.zbrush.pcx":{source:"iana",extensions:["pcx"]},"image/webp":{source:"apache",extensions:["webp"]},"image/wmf":{source:"iana",extensions:["wmf"]},"image/x-3ds":{source:"apache",extensions:["3ds"]},"image/x-cmu-raster":{source:"apache",extensions:["ras"]},"image/x-cmx":{source:"apache",extensions:["cmx"]},"image/x-freehand":{source:"apache",extensions:["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{source:"apache",compressible:!0,extensions:["ico"]},"image/x-jng":{source:"nginx",extensions:["jng"]},"image/x-mrsid-image":{source:"apache",extensions:["sid"]},"image/x-ms-bmp":{source:"nginx",compressible:!0,extensions:["bmp"]},"image/x-pcx":{source:"apache",extensions:["pcx"]},"image/x-pict":{source:"apache",extensions:["pic","pct"]},"image/x-portable-anymap":{source:"apache",extensions:["pnm"]},"image/x-portable-bitmap":{source:"apache",extensions:["pbm"]},"image/x-portable-graymap":{source:"apache",extensions:["pgm"]},"image/x-portable-pixmap":{source:"apache",extensions:["ppm"]},"image/x-rgb":{source:"apache",extensions:["rgb"]},"image/x-tga":{source:"apache",extensions:["tga"]},"image/x-xbitmap":{source:"apache",extensions:["xbm"]},"image/x-xcf":{compressible:!1},"image/x-xpixmap":{source:"apache",extensions:["xpm"]},"image/x-xwindowdump":{source:"apache",extensions:["xwd"]},"message/cpim":{source:"iana"},"message/delivery-status":{source:"iana"},"message/disposition-notification":{source:"iana",extensions:["disposition-notification"]},"message/external-body":{source:"iana"},"message/feedback-report":{source:"iana"},"message/global":{source:"iana",extensions:["u8msg"]},"message/global-delivery-status":{source:"iana",extensions:["u8dsn"]},"message/global-disposition-notification":{source:"iana",extensions:["u8mdn"]},"message/global-headers":{source:"iana",extensions:["u8hdr"]},"message/http":{source:"iana",compressible:!1},"message/imdn+xml":{source:"iana",compressible:!0},"message/news":{source:"iana"},"message/partial":{source:"iana",compressible:!1},"message/rfc822":{source:"iana",compressible:!0,extensions:["eml","mime"]},"message/s-http":{source:"iana"},"message/sip":{source:"iana"},"message/sipfrag":{source:"iana"},"message/tracking-status":{source:"iana"},"message/vnd.si.simp":{source:"iana"},"message/vnd.wfa.wsc":{source:"iana",extensions:["wsc"]},"model/3mf":{source:"iana"},"model/gltf+json":{source:"iana",compressible:!0,extensions:["gltf"]},"model/gltf-binary":{source:"iana",compressible:!0,extensions:["glb"]},"model/iges":{source:"iana",compressible:!1,extensions:["igs","iges"]},"model/mesh":{source:"iana",compressible:!1,extensions:["msh","mesh","silo"]},"model/stl":{source:"iana"},"model/vnd.collada+xml":{source:"iana",compressible:!0,extensions:["dae"]},"model/vnd.dwf":{source:"iana",extensions:["dwf"]},"model/vnd.flatland.3dml":{source:"iana"},"model/vnd.gdl":{source:"iana",extensions:["gdl"]},"model/vnd.gs-gdl":{source:"apache"},"model/vnd.gs.gdl":{source:"iana"},"model/vnd.gtw":{source:"iana",extensions:["gtw"]},"model/vnd.moml+xml":{source:"iana",compressible:!0},"model/vnd.mts":{source:"iana",extensions:["mts"]},"model/vnd.opengex":{source:"iana"},"model/vnd.parasolid.transmit.binary":{source:"iana"},"model/vnd.parasolid.transmit.text":{source:"iana"},"model/vnd.rosette.annotated-data-model":{source:"iana"},"model/vnd.usdz+zip":{source:"iana",compressible:!1},"model/vnd.valve.source.compiled-map":{source:"iana"},"model/vnd.vtu":{source:"iana",extensions:["vtu"]},"model/vrml":{source:"iana",compressible:!1,extensions:["wrl","vrml"]},"model/x3d+binary":{source:"apache",compressible:!1,extensions:["x3db","x3dbz"]},"model/x3d+fastinfoset":{source:"iana"},"model/x3d+vrml":{source:"apache",compressible:!1,extensions:["x3dv","x3dvz"]},"model/x3d+xml":{source:"iana",compressible:!0,extensions:["x3d","x3dz"]},"model/x3d-vrml":{source:"iana"},"multipart/alternative":{source:"iana",compressible:!1},"multipart/appledouble":{source:"iana"},"multipart/byteranges":{source:"iana"},"multipart/digest":{source:"iana"},"multipart/encrypted":{source:"iana",compressible:!1},"multipart/form-data":{source:"iana",compressible:!1},"multipart/header-set":{source:"iana"},"multipart/mixed":{source:"iana",compressible:!1},"multipart/multilingual":{source:"iana"},"multipart/parallel":{source:"iana"},"multipart/related":{source:"iana",compressible:!1},"multipart/report":{source:"iana"},"multipart/signed":{source:"iana",compressible:!1},"multipart/vnd.bint.med-plus":{source:"iana"},"multipart/voice-message":{source:"iana"},"multipart/x-mixed-replace":{source:"iana"},"text/1d-interleaved-parityfec":{source:"iana"},"text/cache-manifest":{source:"iana",compressible:!0,extensions:["appcache","manifest"]},"text/calendar":{source:"iana",extensions:["ics","ifb"]},"text/calender":{compressible:!0},"text/cmd":{compressible:!0},"text/coffeescript":{extensions:["coffee","litcoffee"]},"text/css":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["css"]},"text/csv":{source:"iana",compressible:!0,extensions:["csv"]},"text/csv-schema":{source:"iana"},"text/directory":{source:"iana"},"text/dns":{source:"iana"},"text/ecmascript":{source:"iana"},"text/encaprtp":{source:"iana"},"text/enriched":{source:"iana"},"text/fwdred":{source:"iana"},"text/grammar-ref-list":{source:"iana"},"text/html":{source:"iana",compressible:!0,extensions:["html","htm","shtml"]},"text/jade":{extensions:["jade"]},"text/javascript":{source:"iana",compressible:!0},"text/jcr-cnd":{source:"iana"},"text/jsx":{compressible:!0,extensions:["jsx"]},"text/less":{compressible:!0,extensions:["less"]},"text/markdown":{source:"iana",compressible:!0,extensions:["markdown","md"]},"text/mathml":{source:"nginx",extensions:["mml"]},"text/mizar":{source:"iana"},"text/n3":{source:"iana",compressible:!0,extensions:["n3"]},"text/parameters":{source:"iana"},"text/parityfec":{source:"iana"},"text/plain":{source:"iana",compressible:!0,extensions:["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{source:"iana"},"text/prs.fallenstein.rst":{source:"iana"},"text/prs.lines.tag":{source:"iana",extensions:["dsc"]},"text/prs.prop.logic":{source:"iana"},"text/raptorfec":{source:"iana"},"text/red":{source:"iana"},"text/rfc822-headers":{source:"iana"},"text/richtext":{source:"iana",compressible:!0,extensions:["rtx"]},"text/rtf":{source:"iana",compressible:!0,extensions:["rtf"]},"text/rtp-enc-aescm128":{source:"iana"},"text/rtploopback":{source:"iana"},"text/rtx":{source:"iana"},"text/sgml":{source:"iana",extensions:["sgml","sgm"]},"text/shex":{extensions:["shex"]},"text/slim":{extensions:["slim","slm"]},"text/strings":{source:"iana"},"text/stylus":{extensions:["stylus","styl"]},"text/t140":{source:"iana"},"text/tab-separated-values":{source:"iana",compressible:!0,extensions:["tsv"]},"text/troff":{source:"iana",extensions:["t","tr","roff","man","me","ms"]},"text/turtle":{source:"iana",charset:"UTF-8",extensions:["ttl"]},"text/ulpfec":{source:"iana"},"text/uri-list":{source:"iana",compressible:!0,extensions:["uri","uris","urls"]},"text/vcard":{source:"iana",compressible:!0,extensions:["vcard"]},"text/vnd.a":{source:"iana"},"text/vnd.abc":{source:"iana"},"text/vnd.ascii-art":{source:"iana"},"text/vnd.curl":{source:"iana",extensions:["curl"]},"text/vnd.curl.dcurl":{source:"apache",extensions:["dcurl"]},"text/vnd.curl.mcurl":{source:"apache",extensions:["mcurl"]},"text/vnd.curl.scurl":{source:"apache",extensions:["scurl"]},"text/vnd.debian.copyright":{source:"iana"},"text/vnd.dmclientscript":{source:"iana"},"text/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"text/vnd.esmertec.theme-descriptor":{source:"iana"},"text/vnd.fly":{source:"iana",extensions:["fly"]},"text/vnd.fmi.flexstor":{source:"iana",extensions:["flx"]},"text/vnd.gml":{source:"iana"},"text/vnd.graphviz":{source:"iana",extensions:["gv"]},"text/vnd.hgl":{source:"iana"},"text/vnd.in3d.3dml":{source:"iana",extensions:["3dml"]},"text/vnd.in3d.spot":{source:"iana",extensions:["spot"]},"text/vnd.iptc.newsml":{source:"iana"},"text/vnd.iptc.nitf":{source:"iana"},"text/vnd.latex-z":{source:"iana"},"text/vnd.motorola.reflex":{source:"iana"},"text/vnd.ms-mediapackage":{source:"iana"},"text/vnd.net2phone.commcenter.command":{source:"iana"},"text/vnd.radisys.msml-basic-layout":{source:"iana"},"text/vnd.senx.warpscript":{source:"iana"},"text/vnd.si.uricatalogue":{source:"iana"},"text/vnd.sun.j2me.app-descriptor":{source:"iana",extensions:["jad"]},"text/vnd.trolltech.linguist":{source:"iana"},"text/vnd.wap.si":{source:"iana"},"text/vnd.wap.sl":{source:"iana"},"text/vnd.wap.wml":{source:"iana",extensions:["wml"]},"text/vnd.wap.wmlscript":{source:"iana",extensions:["wmls"]},"text/vtt":{charset:"UTF-8",compressible:!0,extensions:["vtt"]},"text/x-asm":{source:"apache",extensions:["s","asm"]},"text/x-c":{source:"apache",extensions:["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{source:"nginx",extensions:["htc"]},"text/x-fortran":{source:"apache",extensions:["f","for","f77","f90"]},"text/x-gwt-rpc":{compressible:!0},"text/x-handlebars-template":{extensions:["hbs"]},"text/x-java-source":{source:"apache",extensions:["java"]},"text/x-jquery-tmpl":{compressible:!0},"text/x-lua":{extensions:["lua"]},"text/x-markdown":{compressible:!0,extensions:["mkd"]},"text/x-nfo":{source:"apache",extensions:["nfo"]},"text/x-opml":{source:"apache",extensions:["opml"]},"text/x-org":{compressible:!0,extensions:["org"]},"text/x-pascal":{source:"apache",extensions:["p","pas"]},"text/x-processing":{compressible:!0,extensions:["pde"]},"text/x-sass":{extensions:["sass"]},"text/x-scss":{extensions:["scss"]},"text/x-setext":{source:"apache",extensions:["etx"]},"text/x-sfv":{source:"apache",extensions:["sfv"]},"text/x-suse-ymp":{compressible:!0,extensions:["ymp"]},"text/x-uuencode":{source:"apache",extensions:["uu"]},"text/x-vcalendar":{source:"apache",extensions:["vcs"]},"text/x-vcard":{source:"apache",extensions:["vcf"]},"text/xml":{source:"iana",compressible:!0,extensions:["xml"]},"text/xml-external-parsed-entity":{source:"iana"},"text/yaml":{extensions:["yaml","yml"]},"video/1d-interleaved-parityfec":{source:"iana"},"video/3gpp":{source:"iana",extensions:["3gp","3gpp"]},"video/3gpp-tt":{source:"iana"},"video/3gpp2":{source:"iana",extensions:["3g2"]},"video/bmpeg":{source:"iana"},"video/bt656":{source:"iana"},"video/celb":{source:"iana"},"video/dv":{source:"iana"},"video/encaprtp":{source:"iana"},"video/h261":{source:"iana",extensions:["h261"]},"video/h263":{source:"iana",extensions:["h263"]},"video/h263-1998":{source:"iana"},"video/h263-2000":{source:"iana"},"video/h264":{source:"iana",extensions:["h264"]},"video/h264-rcdo":{source:"iana"},"video/h264-svc":{source:"iana"},"video/h265":{source:"iana"},"video/iso.segment":{source:"iana"},"video/jpeg":{source:"iana",extensions:["jpgv"]},"video/jpeg2000":{source:"iana"},"video/jpm":{source:"apache",extensions:["jpm","jpgm"]},"video/mj2":{source:"iana",extensions:["mj2","mjp2"]},"video/mp1s":{source:"iana"},"video/mp2p":{source:"iana"},"video/mp2t":{source:"iana",extensions:["ts"]},"video/mp4":{source:"iana",compressible:!1,extensions:["mp4","mp4v","mpg4"]},"video/mp4v-es":{source:"iana"},"video/mpeg":{source:"iana",compressible:!1,extensions:["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{source:"iana"},"video/mpv":{source:"iana"},"video/nv":{source:"iana"},"video/ogg":{source:"iana",compressible:!1,extensions:["ogv"]},"video/parityfec":{source:"iana"},"video/pointer":{source:"iana"},"video/quicktime":{source:"iana",compressible:!1,extensions:["qt","mov"]},"video/raptorfec":{source:"iana"},"video/raw":{source:"iana"},"video/rtp-enc-aescm128":{source:"iana"},"video/rtploopback":{source:"iana"},"video/rtx":{source:"iana"},"video/smpte291":{source:"iana"},"video/smpte292m":{source:"iana"},"video/ulpfec":{source:"iana"},"video/vc1":{source:"iana"},"video/vc2":{source:"iana"},"video/vnd.cctv":{source:"iana"},"video/vnd.dece.hd":{source:"iana",extensions:["uvh","uvvh"]},"video/vnd.dece.mobile":{source:"iana",extensions:["uvm","uvvm"]},"video/vnd.dece.mp4":{source:"iana"},"video/vnd.dece.pd":{source:"iana",extensions:["uvp","uvvp"]},"video/vnd.dece.sd":{source:"iana",extensions:["uvs","uvvs"]},"video/vnd.dece.video":{source:"iana",extensions:["uvv","uvvv"]},"video/vnd.directv.mpeg":{source:"iana"},"video/vnd.directv.mpeg-tts":{source:"iana"},"video/vnd.dlna.mpeg-tts":{source:"iana"},"video/vnd.dvb.file":{source:"iana",extensions:["dvb"]},"video/vnd.fvt":{source:"iana",extensions:["fvt"]},"video/vnd.hns.video":{source:"iana"},"video/vnd.iptvforum.1dparityfec-1010":{source:"iana"},"video/vnd.iptvforum.1dparityfec-2005":{source:"iana"},"video/vnd.iptvforum.2dparityfec-1010":{source:"iana"},"video/vnd.iptvforum.2dparityfec-2005":{source:"iana"},"video/vnd.iptvforum.ttsavc":{source:"iana"},"video/vnd.iptvforum.ttsmpeg2":{source:"iana"},"video/vnd.motorola.video":{source:"iana"},"video/vnd.motorola.videop":{source:"iana"},"video/vnd.mpegurl":{source:"iana",extensions:["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{source:"iana",extensions:["pyv"]},"video/vnd.nokia.interleaved-multimedia":{source:"iana"},"video/vnd.nokia.mp4vr":{source:"iana"},"video/vnd.nokia.videovoip":{source:"iana"},"video/vnd.objectvideo":{source:"iana"},"video/vnd.radgamettools.bink":{source:"iana"},"video/vnd.radgamettools.smacker":{source:"iana"},"video/vnd.sealed.mpeg1":{source:"iana"},"video/vnd.sealed.mpeg4":{source:"iana"},"video/vnd.sealed.swf":{source:"iana"},"video/vnd.sealedmedia.softseal.mov":{source:"iana"},"video/vnd.uvvu.mp4":{source:"iana",extensions:["uvu","uvvu"]},"video/vnd.vivo":{source:"iana",extensions:["viv"]},"video/vp8":{source:"iana"},"video/webm":{source:"apache",compressible:!1,extensions:["webm"]},"video/x-f4v":{source:"apache",extensions:["f4v"]},"video/x-fli":{source:"apache",extensions:["fli"]},"video/x-flv":{source:"apache",compressible:!1,extensions:["flv"]},"video/x-m4v":{source:"apache",extensions:["m4v"]},"video/x-matroska":{source:"apache",compressible:!1,extensions:["mkv","mk3d","mks"]},"video/x-mng":{source:"apache",extensions:["mng"]},"video/x-ms-asf":{source:"apache",extensions:["asf","asx"]},"video/x-ms-vob":{source:"apache",extensions:["vob"]},"video/x-ms-wm":{source:"apache",extensions:["wm"]},"video/x-ms-wmv":{source:"apache",compressible:!1,extensions:["wmv"]},"video/x-ms-wmx":{source:"apache",extensions:["wmx"]},"video/x-ms-wvx":{source:"apache",extensions:["wvx"]},"video/x-msvideo":{source:"apache",extensions:["avi"]},"video/x-sgi-movie":{source:"apache",extensions:["movie"]},"video/x-smv":{source:"apache",extensions:["smv"]},"x-conference/x-cooltalk":{source:"apache",extensions:["ice"]},"x-shader/x-fragment":{compressible:!0},"x-shader/x-vertex":{compressible:!0}}},function(e,t,n){"use strict";
/*!
 * body-parser
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(11),a=n(1)("body-parser:raw"),o=n(18),r=n(13);e.exports=function(e){var t=e||{},n=!1!==t.inflate,s="number"!=typeof t.limit?i.parse(t.limit||"100kb"):t.limit,c=t.type||"application/octet-stream",p=t.verify||!1;if(!1!==p&&"function"!=typeof p)throw new TypeError("option verify must be function");var l="function"!=typeof c?function(e){return function(t){return Boolean(r(t,e))}}(c):c;function u(e){return e}return function(e,t,i){return e._body?(a("body already parsed"),void i()):(e.body=e.body||{},r.hasBody(e)?(a("content-type %j",e.headers["content-type"]),l(e)?void o(e,t,i,u,a,{encoding:null,inflate:n,limit:s,verify:p}):(a("skip parsing"),void i())):(a("skip empty body"),void i()))}}},function(e,t,n){"use strict";
/*!
 * body-parser
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(11),a=n(17),o=n(1)("body-parser:text"),r=n(18),s=n(13);e.exports=function(e){var t=e||{},n=t.defaultCharset||"utf-8",c=!1!==t.inflate,p="number"!=typeof t.limit?i.parse(t.limit||"100kb"):t.limit,l=t.type||"text/plain",u=t.verify||!1;if(!1!==u&&"function"!=typeof u)throw new TypeError("option verify must be function");var d="function"!=typeof l?function(e){return function(t){return Boolean(s(t,e))}}(l):l;function m(e){return e}return function(e,t,i){if(e._body)return o("body already parsed"),void i();if(e.body=e.body||{},!s.hasBody(e))return o("skip empty body"),void i();if(o("content-type %j",e.headers["content-type"]),!d(e))return o("skip parsing"),void i();var l=function(e){try{return(a.parse(e).parameters.charset||"").toLowerCase()}catch(e){return}}(e)||n;r(e,t,i,m,o,{encoding:l,inflate:c,limit:p,verify:u})}}},function(e,t,n){"use strict";
/*!
 * body-parser
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(11),a=n(17),o=n(8),r=n(1)("body-parser:urlencoded"),s=n(3)("body-parser"),c=n(18),p=n(13);e.exports=function(e){var t=e||{};void 0===t.extended&&s("undefined extended: provide extended option");var n=!1!==t.extended,l=!1!==t.inflate,m="number"!=typeof t.limit?i.parse(t.limit||"100kb"):t.limit,f=t.type||"application/x-www-form-urlencoded",h=t.verify||!1;if(!1!==h&&"function"!=typeof h)throw new TypeError("option verify must be function");var v=n?function(e){var t=void 0!==e.parameterLimit?e.parameterLimit:1e3,n=d("qs");if(isNaN(t)||t<1)throw new TypeError("option parameterLimit must be a positive number");isFinite(t)&&(t|=0);return function(e){var i=u(e,t);if(void 0===i)throw r("too many parameters"),o(413,"too many parameters",{type:"parameters.too.many"});var a=Math.max(100,i);return r("parse extended urlencoding"),n(e,{allowPrototypes:!0,arrayLimit:a,depth:1/0,parameterLimit:t})}}(t):function(e){var t=void 0!==e.parameterLimit?e.parameterLimit:1e3,n=d("querystring");if(isNaN(t)||t<1)throw new TypeError("option parameterLimit must be a positive number");isFinite(t)&&(t|=0);return function(e){var i=u(e,t);if(void 0===i)throw r("too many parameters"),o(413,"too many parameters",{type:"parameters.too.many"});return r("parse urlencoding"),n(e,void 0,void 0,{maxKeys:t})}}(t),x="function"!=typeof f?function(e){return function(t){return Boolean(p(t,e))}}(f):f;function g(e){return e.length?v(e):{}}return function(e,t,n){if(e._body)return r("body already parsed"),void n();if(e.body=e.body||{},!p.hasBody(e))return r("skip empty body"),void n();if(r("content-type %j",e.headers["content-type"]),!x(e))return r("skip parsing"),void n();var i=function(e){try{return(a.parse(e).parameters.charset||"").toLowerCase()}catch(e){return}}(e)||"utf-8";if("utf-8"!==i)return r("invalid charset"),void n(o(415,'unsupported charset "'+i.toUpperCase()+'"',{charset:i,type:"charset.unsupported"}));c(e,t,n,g,r,{debug:r,encoding:i,inflate:l,limit:m,verify:h})}};var l=Object.create(null);function u(e,t){for(var n=0,i=0;-1!==(i=e.indexOf("&",i));)if(i++,++n===t)return;return n}function d(e){var t=l[e];if(void 0!==t)return t.parse;switch(e){case"qs":t=n(28);break;case"querystring":t=n(47)}return l[e]=t,t.parse}},function(e,t,n){"use strict";var i=n(45),a=n(46),o={brackets:function(e){return e+"[]"},indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},r=Date.prototype.toISOString,s={delimiter:"&",encode:!0,encoder:i.encode,encodeValuesOnly:!1,serializeDate:function(e){return r.call(e)},skipNulls:!1,strictNullHandling:!1},c=function e(t,n,a,o,r,c,p,l,u,d,m,f){var h=t;if("function"==typeof p)h=p(n,h);else if(h instanceof Date)h=d(h);else if(null===h){if(o)return c&&!f?c(n,s.encoder):n;h=""}if("string"==typeof h||"number"==typeof h||"boolean"==typeof h||i.isBuffer(h))return c?[m(f?n:c(n,s.encoder))+"="+m(c(h,s.encoder))]:[m(n)+"="+m(String(h))];var v,x=[];if(void 0===h)return x;if(Array.isArray(p))v=p;else{var g=Object.keys(h);v=l?g.sort(l):g}for(var b=0;b<v.length;++b){var y=v[b];r&&null===h[y]||(x=Array.isArray(h)?x.concat(e(h[y],a(n,y),a,o,r,c,p,l,u,d,m,f)):x.concat(e(h[y],n+(u?"."+y:"["+y+"]"),a,o,r,c,p,l,u,d,m,f)))}return x};e.exports=function(e,t){var n=e,r=t?i.assign({},t):{};if(null!==r.encoder&&void 0!==r.encoder&&"function"!=typeof r.encoder)throw new TypeError("Encoder has to be a function.");var p=void 0===r.delimiter?s.delimiter:r.delimiter,l="boolean"==typeof r.strictNullHandling?r.strictNullHandling:s.strictNullHandling,u="boolean"==typeof r.skipNulls?r.skipNulls:s.skipNulls,d="boolean"==typeof r.encode?r.encode:s.encode,m="function"==typeof r.encoder?r.encoder:s.encoder,f="function"==typeof r.sort?r.sort:null,h=void 0!==r.allowDots&&r.allowDots,v="function"==typeof r.serializeDate?r.serializeDate:s.serializeDate,x="boolean"==typeof r.encodeValuesOnly?r.encodeValuesOnly:s.encodeValuesOnly;if(void 0===r.format)r.format=a.default;else if(!Object.prototype.hasOwnProperty.call(a.formatters,r.format))throw new TypeError("Unknown format option provided.");var g,b,y=a.formatters[r.format];"function"==typeof r.filter?n=(b=r.filter)("",n):Array.isArray(r.filter)&&(g=b=r.filter);var w,k=[];if("object"!=typeof n||null===n)return"";w=r.arrayFormat in o?r.arrayFormat:"indices"in r?r.indices?"indices":"repeat":"indices";var _=o[w];g||(g=Object.keys(n)),f&&g.sort(f);for(var j=0;j<g.length;++j){var E=g[j];u&&null===n[E]||(k=k.concat(c(n[E],E,_,l,u,d?m:null,b,f,h,v,y,x)))}var S=k.join(p),C=!0===r.addQueryPrefix?"?":"";return S.length>0?C+S:""}},function(e,t,n){"use strict";var i=n(45),a=Object.prototype.hasOwnProperty,o={allowDots:!1,allowPrototypes:!1,arrayLimit:20,decoder:i.decode,delimiter:"&",depth:5,parameterLimit:1e3,plainObjects:!1,strictNullHandling:!1},r=function(e,t,n){if(e){var i=n.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,o=/(\[[^[\]]*])/g,r=/(\[[^[\]]*])/.exec(i),s=r?i.slice(0,r.index):i,c=[];if(s){if(!n.plainObjects&&a.call(Object.prototype,s)&&!n.allowPrototypes)return;c.push(s)}for(var p=0;null!==(r=o.exec(i))&&p<n.depth;){if(p+=1,!n.plainObjects&&a.call(Object.prototype,r[1].slice(1,-1))&&!n.allowPrototypes)return;c.push(r[1])}return r&&c.push("["+i.slice(r.index)+"]"),function(e,t,n){for(var i=t,a=e.length-1;a>=0;--a){var o,r=e[a];if("[]"===r)o=(o=[]).concat(i);else{o=n.plainObjects?Object.create(null):{};var s="["===r.charAt(0)&&"]"===r.charAt(r.length-1)?r.slice(1,-1):r,c=parseInt(s,10);!isNaN(c)&&r!==s&&String(c)===s&&c>=0&&n.parseArrays&&c<=n.arrayLimit?(o=[])[c]=i:o[s]=i}i=o}return i}(c,t,n)}};e.exports=function(e,t){var n=t?i.assign({},t):{};if(null!==n.decoder&&void 0!==n.decoder&&"function"!=typeof n.decoder)throw new TypeError("Decoder has to be a function.");if(n.ignoreQueryPrefix=!0===n.ignoreQueryPrefix,n.delimiter="string"==typeof n.delimiter||i.isRegExp(n.delimiter)?n.delimiter:o.delimiter,n.depth="number"==typeof n.depth?n.depth:o.depth,n.arrayLimit="number"==typeof n.arrayLimit?n.arrayLimit:o.arrayLimit,n.parseArrays=!1!==n.parseArrays,n.decoder="function"==typeof n.decoder?n.decoder:o.decoder,n.allowDots="boolean"==typeof n.allowDots?n.allowDots:o.allowDots,n.plainObjects="boolean"==typeof n.plainObjects?n.plainObjects:o.plainObjects,n.allowPrototypes="boolean"==typeof n.allowPrototypes?n.allowPrototypes:o.allowPrototypes,n.parameterLimit="number"==typeof n.parameterLimit?n.parameterLimit:o.parameterLimit,n.strictNullHandling="boolean"==typeof n.strictNullHandling?n.strictNullHandling:o.strictNullHandling,""===e||null==e)return n.plainObjects?Object.create(null):{};for(var s="string"==typeof e?function(e,t){for(var n={},i=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,r=t.parameterLimit===1/0?void 0:t.parameterLimit,s=i.split(t.delimiter,r),c=0;c<s.length;++c){var p,l,u=s[c],d=u.indexOf("]="),m=-1===d?u.indexOf("="):d+1;-1===m?(p=t.decoder(u,o.decoder),l=t.strictNullHandling?null:""):(p=t.decoder(u.slice(0,m),o.decoder),l=t.decoder(u.slice(m+1),o.decoder)),a.call(n,p)?n[p]=[].concat(n[p]).concat(l):n[p]=l}return n}(e,n):e,c=n.plainObjects?Object.create(null):{},p=Object.keys(s),l=0;l<p.length;++l){var u=p[l],d=r(u,s[u],n);c=i.merge(c,d,n)}return i.compact(c)}},function(e,t,n){"use strict";
/*!
 * merge-descriptors
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,t,n){if(!e)throw new TypeError("argument dest is required");if(!t)throw new TypeError("argument src is required");void 0===n&&(n=!0);return Object.getOwnPropertyNames(t).forEach(function(a){if(n||!i.call(e,a)){var o=Object.getOwnPropertyDescriptor(t,a);Object.defineProperty(e,a,o)}}),e};var i=Object.prototype.hasOwnProperty},function(e,t,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(119),a=n(48),o=n(31),r=n(122),s=n(51),c=n(1)("express:application"),p=n(123),l=n(15),u=n(7).compileETag,d=n(7).compileQueryParser,m=n(7).compileTrust,f=n(3)("express"),h=n(21),v=n(22),x=n(0).resolve,g=n(16),b=Array.prototype.slice,y=e.exports={};function w(e){"test"!==this.get("env")&&console.error(e.stack||e.toString())}y.init=function(){this.cache={},this.engines={},this.settings={},this.defaultConfiguration()},y.defaultConfiguration=function(){var e="production";this.enable("x-powered-by"),this.set("etag","weak"),this.set("env",e),this.set("query parser","extended"),this.set("subdomain offset",2),this.set("trust proxy",!1),Object.defineProperty(this.settings,"@@symbol:trust_proxy_default",{configurable:!0,value:!0}),c("booting in %s mode",e),this.on("mount",function(e){!0===this.settings["@@symbol:trust_proxy_default"]&&"function"==typeof e.settings["trust proxy fn"]&&(delete this.settings["trust proxy"],delete this.settings["trust proxy fn"]),g(this.request,e.request),g(this.response,e.response),g(this.engines,e.engines),g(this.settings,e.settings)}),this.locals=Object.create(null),this.mountpath="/",this.locals.settings=this.settings,this.set("view",p),this.set("views",x("views")),this.set("jsonp callback name","callback"),this.enable("view cache"),Object.defineProperty(this,"router",{get:function(){throw new Error("'app.router' is deprecated!\nPlease see the 3.x to 4.x migration guide for details on how to update your app.")}})},y.lazyrouter=function(){this._router||(this._router=new a({caseSensitive:this.enabled("case sensitive routing"),strict:this.enabled("strict routing")}),this._router.use(s(this.get("query parser fn"))),this._router.use(r.init(this)))},y.handle=function(e,t,n){var a=this._router,o=n||i(e,t,{env:this.get("env"),onerror:w.bind(this)});if(!a)return c("no routes defined on app"),void o();a.handle(e,t,o)},y.use=function(e){var t=0,n="/";if("function"!=typeof e){for(var i=e;Array.isArray(i)&&0!==i.length;)i=i[0];"function"!=typeof i&&(t=1,n=e)}var a=h(b.call(arguments,t));if(0===a.length)throw new TypeError("app.use() requires a middleware function");this.lazyrouter();var o=this._router;return a.forEach(function(e){if(!e||!e.handle||!e.set)return o.use(n,e);c(".use app under %s",n),e.mountpath=n,e.parent=this,o.use(n,function(t,n,i){var a=t.app;e.handle(t,n,function(e){g(t,a.request),g(n,a.response),i(e)})}),e.emit("mount",this)},this),this},y.route=function(e){return this.lazyrouter(),this._router.route(e)},y.engine=function(e,t){if("function"!=typeof t)throw new Error("callback function required");var n="."!==e[0]?"."+e:e;return this.engines[n]=t,this},y.param=function(e,t){if(this.lazyrouter(),Array.isArray(e)){for(var n=0;n<e.length;n++)this.param(e[n],t);return this}return this._router.param(e,t),this},y.set=function(e,t){if(1===arguments.length)return this.settings[e];switch(c('set "%s" to %o',e,t),this.settings[e]=t,e){case"etag":this.set("etag fn",u(t));break;case"query parser":this.set("query parser fn",d(t));break;case"trust proxy":this.set("trust proxy fn",m(t)),Object.defineProperty(this.settings,"@@symbol:trust_proxy_default",{configurable:!0,value:!1})}return this},y.path=function(){return this.parent?this.parent.path()+this.mountpath:""},y.enabled=function(e){return Boolean(this.set(e))},y.disabled=function(e){return!this.set(e)},y.enable=function(e){return this.set(e,!0)},y.disable=function(e){return this.set(e,!1)},o.forEach(function(e){y[e]=function(t){if("get"===e&&1===arguments.length)return this.set(t);this.lazyrouter();var n=this._router.route(t);return n[e].apply(n,b.call(arguments,1)),this}}),y.all=function(e){this.lazyrouter();for(var t=this._router.route(e),n=b.call(arguments,1),i=0;i<o.length;i++)t[o[i]].apply(t,n);return this},y.del=f.function(y.delete,"app.del: Use app.delete instead"),y.render=function(e,t,n){var i,a=this.cache,o=n,r=this.engines,s=t,c={};if("function"==typeof t&&(o=t,s={}),v(c,this.locals),s._locals&&v(c,s._locals),v(c,s),null==c.cache&&(c.cache=this.enabled("view cache")),c.cache&&(i=a[e]),!i){if(!(i=new(this.get("view"))(e,{defaultEngine:this.get("view engine"),root:this.get("views"),engines:r})).path){var p=Array.isArray(i.root)&&i.root.length>1?'directories "'+i.root.slice(0,-1).join('", "')+'" or "'+i.root[i.root.length-1]+'"':'directory "'+i.root+'"',l=new Error('Failed to lookup view "'+e+'" in views '+p);return l.view=i,o(l)}c.cache&&(a[e]=i)}!function(e,t,n){try{e.render(t,n)}catch(e){n(e)}}(i,c,o)},y.listen=function(){var e=l.createServer(this);return e.listen.apply(e,arguments)}},function(e,t,n){"use strict";
/*!
 * finalhandler
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(1)("finalhandler"),a=n(19),o=n(20),r=n(12),s=n(14),c=n(30),p=n(43),l=/\x20{2}/g,u=/\n/g,d="function"==typeof setImmediate?setImmediate:function(e){process.nextTick(e.bind.apply(e,arguments))},m=r.isFinished;function f(e){return"boolean"!=typeof e.headersSent?Boolean(e._header):e.headersSent}e.exports=function(e,t,n){var h=n||{},v=h.env||"production",x=h.onerror;return function(n){var h,g,b;if(n||!f(t)){if(n?(void 0===(b=function(e){if("number"==typeof e.status&&e.status>=400&&e.status<600)return e.status;if("number"==typeof e.statusCode&&e.statusCode>=400&&e.statusCode<600)return e.statusCode;return}(n))?b=function(e){var t=e.statusCode;("number"!=typeof t||t<400||t>599)&&(t=500);return t}(t):h=function(e){if(!e.headers||"object"!=typeof e.headers)return;for(var t=Object.create(null),n=Object.keys(e.headers),i=0;i<n.length;i++){var a=n[i];t[a]=e.headers[a]}return t}(n),g=function(e,t,n){var i;"production"!==n&&((i=e.stack)||"function"!=typeof e.toString||(i=e.toString()));return i||c[t]}(n,b,v)):(b=404,g="Cannot "+e.method+" "+a(function(e){try{return s.original(e).pathname}catch(e){return"resource"}}(e))),i("default %s",b),n&&x&&d(x,n,e,t),f(t))return i("cannot %d after headers sent",b),void e.socket.destroy();!function(e,t,n,i,a){function s(){var r=function(e){return'<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>'+o(e).replace(u,"<br>").replace(l," &nbsp;")+"</pre>\n</body>\n</html>\n"}(a);t.statusCode=n,t.statusMessage=c[n],function(e,t){if(!t)return;for(var n=Object.keys(t),i=0;i<n.length;i++){var a=n[i];e.setHeader(a,t[a])}}(t,i),t.setHeader("Content-Security-Policy","default-src 'self'"),t.setHeader("X-Content-Type-Options","nosniff"),t.setHeader("Content-Type","text/html; charset=utf-8"),t.setHeader("Content-Length",Buffer.byteLength(r,"utf8")),"HEAD"!==e.method?t.end(r,"utf8"):t.end()}if(m(e))return void s();p(e),r(e,s),e.resume()}(e,t,b,h,g)}else i("cannot 404 after headers sent")}}},function(e){e.exports={100:"Continue",101:"Switching Protocols",102:"Processing",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",208:"Already Reported",226:"IM Used",300:"Multiple Choices",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",306:"(Unused)",307:"Temporary Redirect",308:"Permanent Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Payload Too Large",414:"URI Too Long",415:"Unsupported Media Type",416:"Range Not Satisfiable",417:"Expectation Failed",418:"I'm a teapot",421:"Misdirected Request",422:"Unprocessable Entity",423:"Locked",424:"Failed Dependency",425:"Unordered Collection",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",451:"Unavailable For Legal Reasons",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",509:"Bandwidth Limit Exceeded",510:"Not Extended",511:"Network Authentication Required"}},function(e,t){e.exports=function e(t,i,a){a=a||{};i=i||[];var o=a.strict;var r=!1!==a.end;var s=a.sensitive?"":"i";var c=0;var p=i.length;var l=0;var u=0;var d;if(t instanceof RegExp){for(;d=n.exec(t.source);)i.push({name:u++,optional:!1,offset:d.index});return t}if(Array.isArray(t))return t=t.map(function(t){return e(t,i,a).source}),new RegExp("(?:"+t.join("|")+")",s);t=("^"+t+(o?"":"/"===t[t.length-1]?"?":"/?")).replace(/\/\(/g,"/(?:").replace(/([\/\.])/g,"\\$1").replace(/(\\\/)?(\\\.)?:(\w+)(\(.*?\))?(\*)?(\?)?/g,function(e,t,n,a,o,r,s,p){t=t||"",n=n||"",o=o||"([^\\/"+n+"]+?)",s=s||"",i.push({name:a,optional:!!s,offset:p+c});var l=(s?"":t)+"(?:"+n+(s?t:"")+o+(r?"((?:[\\/"+n+"].+?)?)":"")+")"+s;return c+=l.length-e.length,l}).replace(/\*/g,function(e,t){for(var n=i.length;n-- >p&&i[n].offset>t;)i[n].offset+=3;return"(.*)"});for(;d=n.exec(t);){for(var m=0,f=d.index;"\\"===t.charAt(--f);)m++;m%2!=1&&((p+l===i.length||i[p+l].offset>d.index)&&i.splice(p+l,0,{name:u++,optional:!1,offset:d.index}),l++)}t+=r?"$":"/"===t[t.length-1]?"":"(?=\\/|$)";return new RegExp(t,s)};var n=/\((?!\?)/g},function(e,t,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(16);t.init=function(e){return function(t,n,a){e.enabled("x-powered-by")&&n.setHeader("X-Powered-By","Express"),t.res=n,n.req=t,t.next=a,i(t,e.request),i(n,e.response),n.locals=n.locals||Object.create(null),a()}}},function(e,t,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(1)("express:view"),a=n(0),o=n(6),r=a.dirname,s=a.basename,c=a.extname,p=a.join,l=a.resolve;function u(e,t){var a=t||{};if(this.defaultEngine=a.defaultEngine,this.ext=c(e),this.name=e,this.root=a.root,!this.ext&&!this.defaultEngine)throw new Error("No default engine was specified and no extension was provided.");var o=e;if(this.ext||(this.ext="."!==this.defaultEngine[0]?"."+this.defaultEngine:this.defaultEngine,o+=this.ext),!a.engines[this.ext]){var r=this.ext.substr(1);i('require "%s"',r);var s=n(124)(r).__express;if("function"!=typeof s)throw new Error('Module "'+r+'" does not provide a view engine.');a.engines[this.ext]=s}this.engine=a.engines[this.ext],this.path=this.lookup(o)}function d(e){i('stat "%s"',e);try{return o.statSync(e)}catch(e){return}}e.exports=u,u.prototype.lookup=function(e){var t,n=[].concat(this.root);i('lookup "%s"',e);for(var a=0;a<n.length&&!t;a++){var o=n[a],c=l(o,e),p=r(c),u=s(c);t=this.resolve(p,u)}return t},u.prototype.render=function(e,t){i('render "%s"',this.path),this.engine(this.path,e,t)},u.prototype.resolve=function(e,t){var n=this.ext,i=p(e,t),a=d(i);return a&&a.isFile()?i:(a=d(i=p(e,s(t,n),"index"+n)))&&a.isFile()?i:void 0}},function(e,t){function n(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=124},function(e,t,n){"use strict";
/*!
 * destroy
 * Copyright(c) 2014 Jonathan Ong
 * MIT Licensed
 */var i=n(6).ReadStream,a=n(5);function o(){"number"==typeof this.fd&&this.close()}e.exports=function(e){if(e instanceof i)return function(e){e.destroy(),"function"==typeof e.close&&e.on("open",o);return e}(e);if(!(e instanceof a))return e;"function"==typeof e.destroy&&e.destroy();return e}},function(e,t,n){n(0);var i=n(6);function a(){this.types=Object.create(null),this.extensions=Object.create(null)}a.prototype.define=function(e){for(var t in e){for(var n=e[t],i=0;i<n.length;i++)process.env.DEBUG_MIME&&this.types[n[i]]&&console.warn((this._loading||"define()").replace(/.*\//,""),'changes "'+n[i]+'" extension type from '+this.types[n[i]]+" to "+t),this.types[n[i]]=t;this.extensions[t]||(this.extensions[t]=n[0])}},a.prototype.load=function(e){this._loading=e;var t={};i.readFileSync(e,"ascii").split(/[\r\n]+/).forEach(function(e){var n=e.replace(/\s*#.*|^\s*|\s*$/g,"").split(/\s+/);t[n.shift()]=n}),this.define(t),this._loading=null},a.prototype.lookup=function(e,t){var n=e.replace(/^.*[\.\/\\]/,"").toLowerCase();return this.types[n]||t||this.default_type},a.prototype.extension=function(e){var t=e.match(/^\s*([^;\s]*)(?:;|\s|$)/)[1].toLowerCase();return this.extensions[t]};var o=new a;o.define(n(127)),o.default_type=o.lookup("bin"),o.Mime=a,o.charsets={lookup:function(e,t){return/^text\/|^application\/(javascript|json)/.test(e)?"UTF-8":t}},e.exports=o},function(e){e.exports={"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomsvc+xml":["atomsvc"],"application/bdoc":["bdoc"],"application/ccxml+xml":["ccxml"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["ecma"],"application/emma+xml":["emma"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/font-tdpfr":["pfr"],"application/font-woff":["woff"],"application/font-woff2":["woff2"],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/prs.cww":["cww"],"application/pskc+xml":["pskcxml"],"application/rdf+xml":["rdf"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/vnd.3gpp.pic-bw-large":["plb"],"application/vnd.3gpp.pic-bw-small":["psb"],"application/vnd.3gpp.pic-bw-var":["pvb"],"application/vnd.3gpp2.tcap":["tcap"],"application/vnd.3m.post-it-notes":["pwn"],"application/vnd.accpac.simply.aso":["aso"],"application/vnd.accpac.simply.imp":["imp"],"application/vnd.acucobol":["acu"],"application/vnd.acucorp":["atc","acutc"],"application/vnd.adobe.air-application-installer-package+zip":["air"],"application/vnd.adobe.formscentral.fcdt":["fcdt"],"application/vnd.adobe.fxp":["fxp","fxpl"],"application/vnd.adobe.xdp+xml":["xdp"],"application/vnd.adobe.xfdf":["xfdf"],"application/vnd.ahead.space":["ahead"],"application/vnd.airzip.filesecure.azf":["azf"],"application/vnd.airzip.filesecure.azs":["azs"],"application/vnd.amazon.ebook":["azw"],"application/vnd.americandynamics.acc":["acc"],"application/vnd.amiga.ami":["ami"],"application/vnd.android.package-archive":["apk"],"application/vnd.anser-web-certificate-issue-initiation":["cii"],"application/vnd.anser-web-funds-transfer-initiation":["fti"],"application/vnd.antix.game-component":["atx"],"application/vnd.apple.installer+xml":["mpkg"],"application/vnd.apple.mpegurl":["m3u8"],"application/vnd.apple.pkpass":["pkpass"],"application/vnd.aristanetworks.swi":["swi"],"application/vnd.astraea-software.iota":["iota"],"application/vnd.audiograph":["aep"],"application/vnd.blueice.multipass":["mpm"],"application/vnd.bmi":["bmi"],"application/vnd.businessobjects":["rep"],"application/vnd.chemdraw+xml":["cdxml"],"application/vnd.chipnuts.karaoke-mmd":["mmd"],"application/vnd.cinderella":["cdy"],"application/vnd.claymore":["cla"],"application/vnd.cloanto.rp9":["rp9"],"application/vnd.clonk.c4group":["c4g","c4d","c4f","c4p","c4u"],"application/vnd.cluetrust.cartomobile-config":["c11amc"],"application/vnd.cluetrust.cartomobile-config-pkg":["c11amz"],"application/vnd.commonspace":["csp"],"application/vnd.contact.cmsg":["cdbcmsg"],"application/vnd.cosmocaller":["cmc"],"application/vnd.crick.clicker":["clkx"],"application/vnd.crick.clicker.keyboard":["clkk"],"application/vnd.crick.clicker.palette":["clkp"],"application/vnd.crick.clicker.template":["clkt"],"application/vnd.crick.clicker.wordbank":["clkw"],"application/vnd.criticaltools.wbs+xml":["wbs"],"application/vnd.ctc-posml":["pml"],"application/vnd.cups-ppd":["ppd"],"application/vnd.curl.car":["car"],"application/vnd.curl.pcurl":["pcurl"],"application/vnd.dart":["dart"],"application/vnd.data-vision.rdz":["rdz"],"application/vnd.dece.data":["uvf","uvvf","uvd","uvvd"],"application/vnd.dece.ttml+xml":["uvt","uvvt"],"application/vnd.dece.unspecified":["uvx","uvvx"],"application/vnd.dece.zip":["uvz","uvvz"],"application/vnd.denovo.fcselayout-link":["fe_launch"],"application/vnd.dna":["dna"],"application/vnd.dolby.mlp":["mlp"],"application/vnd.dpgraph":["dpg"],"application/vnd.dreamfactory":["dfac"],"application/vnd.ds-keypoint":["kpxx"],"application/vnd.dvb.ait":["ait"],"application/vnd.dvb.service":["svc"],"application/vnd.dynageo":["geo"],"application/vnd.ecowin.chart":["mag"],"application/vnd.enliven":["nml"],"application/vnd.epson.esf":["esf"],"application/vnd.epson.msf":["msf"],"application/vnd.epson.quickanime":["qam"],"application/vnd.epson.salt":["slt"],"application/vnd.epson.ssf":["ssf"],"application/vnd.eszigno3+xml":["es3","et3"],"application/vnd.ezpix-album":["ez2"],"application/vnd.ezpix-package":["ez3"],"application/vnd.fdf":["fdf"],"application/vnd.fdsn.mseed":["mseed"],"application/vnd.fdsn.seed":["seed","dataless"],"application/vnd.flographit":["gph"],"application/vnd.fluxtime.clip":["ftc"],"application/vnd.framemaker":["fm","frame","maker","book"],"application/vnd.frogans.fnc":["fnc"],"application/vnd.frogans.ltf":["ltf"],"application/vnd.fsc.weblaunch":["fsc"],"application/vnd.fujitsu.oasys":["oas"],"application/vnd.fujitsu.oasys2":["oa2"],"application/vnd.fujitsu.oasys3":["oa3"],"application/vnd.fujitsu.oasysgp":["fg5"],"application/vnd.fujitsu.oasysprs":["bh2"],"application/vnd.fujixerox.ddd":["ddd"],"application/vnd.fujixerox.docuworks":["xdw"],"application/vnd.fujixerox.docuworks.binder":["xbd"],"application/vnd.fuzzysheet":["fzs"],"application/vnd.genomatix.tuxedo":["txd"],"application/vnd.geogebra.file":["ggb"],"application/vnd.geogebra.tool":["ggt"],"application/vnd.geometry-explorer":["gex","gre"],"application/vnd.geonext":["gxt"],"application/vnd.geoplan":["g2w"],"application/vnd.geospace":["g3w"],"application/vnd.gmx":["gmx"],"application/vnd.google-apps.document":["gdoc"],"application/vnd.google-apps.presentation":["gslides"],"application/vnd.google-apps.spreadsheet":["gsheet"],"application/vnd.google-earth.kml+xml":["kml"],"application/vnd.google-earth.kmz":["kmz"],"application/vnd.grafeq":["gqf","gqs"],"application/vnd.groove-account":["gac"],"application/vnd.groove-help":["ghf"],"application/vnd.groove-identity-message":["gim"],"application/vnd.groove-injector":["grv"],"application/vnd.groove-tool-message":["gtm"],"application/vnd.groove-tool-template":["tpl"],"application/vnd.groove-vcard":["vcg"],"application/vnd.hal+xml":["hal"],"application/vnd.handheld-entertainment+xml":["zmm"],"application/vnd.hbci":["hbci"],"application/vnd.hhe.lesson-player":["les"],"application/vnd.hp-hpgl":["hpgl"],"application/vnd.hp-hpid":["hpid"],"application/vnd.hp-hps":["hps"],"application/vnd.hp-jlyt":["jlt"],"application/vnd.hp-pcl":["pcl"],"application/vnd.hp-pclxl":["pclxl"],"application/vnd.hydrostatix.sof-data":["sfd-hdstx"],"application/vnd.ibm.minipay":["mpy"],"application/vnd.ibm.modcap":["afp","listafp","list3820"],"application/vnd.ibm.rights-management":["irm"],"application/vnd.ibm.secure-container":["sc"],"application/vnd.iccprofile":["icc","icm"],"application/vnd.igloader":["igl"],"application/vnd.immervision-ivp":["ivp"],"application/vnd.immervision-ivu":["ivu"],"application/vnd.insors.igm":["igm"],"application/vnd.intercon.formnet":["xpw","xpx"],"application/vnd.intergeo":["i2g"],"application/vnd.intu.qbo":["qbo"],"application/vnd.intu.qfx":["qfx"],"application/vnd.ipunplugged.rcprofile":["rcprofile"],"application/vnd.irepository.package+xml":["irp"],"application/vnd.is-xpr":["xpr"],"application/vnd.isac.fcs":["fcs"],"application/vnd.jam":["jam"],"application/vnd.jcp.javame.midlet-rms":["rms"],"application/vnd.jisp":["jisp"],"application/vnd.joost.joda-archive":["joda"],"application/vnd.kahootz":["ktz","ktr"],"application/vnd.kde.karbon":["karbon"],"application/vnd.kde.kchart":["chrt"],"application/vnd.kde.kformula":["kfo"],"application/vnd.kde.kivio":["flw"],"application/vnd.kde.kontour":["kon"],"application/vnd.kde.kpresenter":["kpr","kpt"],"application/vnd.kde.kspread":["ksp"],"application/vnd.kde.kword":["kwd","kwt"],"application/vnd.kenameaapp":["htke"],"application/vnd.kidspiration":["kia"],"application/vnd.kinar":["kne","knp"],"application/vnd.koan":["skp","skd","skt","skm"],"application/vnd.kodak-descriptor":["sse"],"application/vnd.las.las+xml":["lasxml"],"application/vnd.llamagraphics.life-balance.desktop":["lbd"],"application/vnd.llamagraphics.life-balance.exchange+xml":["lbe"],"application/vnd.lotus-1-2-3":["123"],"application/vnd.lotus-approach":["apr"],"application/vnd.lotus-freelance":["pre"],"application/vnd.lotus-notes":["nsf"],"application/vnd.lotus-organizer":["org"],"application/vnd.lotus-screencam":["scm"],"application/vnd.lotus-wordpro":["lwp"],"application/vnd.macports.portpkg":["portpkg"],"application/vnd.mcd":["mcd"],"application/vnd.medcalcdata":["mc1"],"application/vnd.mediastation.cdkey":["cdkey"],"application/vnd.mfer":["mwf"],"application/vnd.mfmp":["mfm"],"application/vnd.micrografx.flo":["flo"],"application/vnd.micrografx.igx":["igx"],"application/vnd.mif":["mif"],"application/vnd.mobius.daf":["daf"],"application/vnd.mobius.dis":["dis"],"application/vnd.mobius.mbk":["mbk"],"application/vnd.mobius.mqy":["mqy"],"application/vnd.mobius.msl":["msl"],"application/vnd.mobius.plc":["plc"],"application/vnd.mobius.txf":["txf"],"application/vnd.mophun.application":["mpn"],"application/vnd.mophun.certificate":["mpc"],"application/vnd.mozilla.xul+xml":["xul"],"application/vnd.ms-artgalry":["cil"],"application/vnd.ms-cab-compressed":["cab"],"application/vnd.ms-excel":["xls","xlm","xla","xlc","xlt","xlw"],"application/vnd.ms-excel.addin.macroenabled.12":["xlam"],"application/vnd.ms-excel.sheet.binary.macroenabled.12":["xlsb"],"application/vnd.ms-excel.sheet.macroenabled.12":["xlsm"],"application/vnd.ms-excel.template.macroenabled.12":["xltm"],"application/vnd.ms-fontobject":["eot"],"application/vnd.ms-htmlhelp":["chm"],"application/vnd.ms-ims":["ims"],"application/vnd.ms-lrm":["lrm"],"application/vnd.ms-officetheme":["thmx"],"application/vnd.ms-outlook":["msg"],"application/vnd.ms-pki.seccat":["cat"],"application/vnd.ms-pki.stl":["stl"],"application/vnd.ms-powerpoint":["ppt","pps","pot"],"application/vnd.ms-powerpoint.addin.macroenabled.12":["ppam"],"application/vnd.ms-powerpoint.presentation.macroenabled.12":["pptm"],"application/vnd.ms-powerpoint.slide.macroenabled.12":["sldm"],"application/vnd.ms-powerpoint.slideshow.macroenabled.12":["ppsm"],"application/vnd.ms-powerpoint.template.macroenabled.12":["potm"],"application/vnd.ms-project":["mpp","mpt"],"application/vnd.ms-word.document.macroenabled.12":["docm"],"application/vnd.ms-word.template.macroenabled.12":["dotm"],"application/vnd.ms-works":["wps","wks","wcm","wdb"],"application/vnd.ms-wpl":["wpl"],"application/vnd.ms-xpsdocument":["xps"],"application/vnd.mseq":["mseq"],"application/vnd.musician":["mus"],"application/vnd.muvee.style":["msty"],"application/vnd.mynfc":["taglet"],"application/vnd.neurolanguage.nlu":["nlu"],"application/vnd.nitf":["ntf","nitf"],"application/vnd.noblenet-directory":["nnd"],"application/vnd.noblenet-sealer":["nns"],"application/vnd.noblenet-web":["nnw"],"application/vnd.nokia.n-gage.data":["ngdat"],"application/vnd.nokia.n-gage.symbian.install":["n-gage"],"application/vnd.nokia.radio-preset":["rpst"],"application/vnd.nokia.radio-presets":["rpss"],"application/vnd.novadigm.edm":["edm"],"application/vnd.novadigm.edx":["edx"],"application/vnd.novadigm.ext":["ext"],"application/vnd.oasis.opendocument.chart":["odc"],"application/vnd.oasis.opendocument.chart-template":["otc"],"application/vnd.oasis.opendocument.database":["odb"],"application/vnd.oasis.opendocument.formula":["odf"],"application/vnd.oasis.opendocument.formula-template":["odft"],"application/vnd.oasis.opendocument.graphics":["odg"],"application/vnd.oasis.opendocument.graphics-template":["otg"],"application/vnd.oasis.opendocument.image":["odi"],"application/vnd.oasis.opendocument.image-template":["oti"],"application/vnd.oasis.opendocument.presentation":["odp"],"application/vnd.oasis.opendocument.presentation-template":["otp"],"application/vnd.oasis.opendocument.spreadsheet":["ods"],"application/vnd.oasis.opendocument.spreadsheet-template":["ots"],"application/vnd.oasis.opendocument.text":["odt"],"application/vnd.oasis.opendocument.text-master":["odm"],"application/vnd.oasis.opendocument.text-template":["ott"],"application/vnd.oasis.opendocument.text-web":["oth"],"application/vnd.olpc-sugar":["xo"],"application/vnd.oma.dd2+xml":["dd2"],"application/vnd.openofficeorg.extension":["oxt"],"application/vnd.openxmlformats-officedocument.presentationml.presentation":["pptx"],"application/vnd.openxmlformats-officedocument.presentationml.slide":["sldx"],"application/vnd.openxmlformats-officedocument.presentationml.slideshow":["ppsx"],"application/vnd.openxmlformats-officedocument.presentationml.template":["potx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":["xlsx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.template":["xltx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.document":["docx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.template":["dotx"],"application/vnd.osgeo.mapguide.package":["mgp"],"application/vnd.osgi.dp":["dp"],"application/vnd.osgi.subsystem":["esa"],"application/vnd.palm":["pdb","pqa","oprc"],"application/vnd.pawaafile":["paw"],"application/vnd.pg.format":["str"],"application/vnd.pg.osasli":["ei6"],"application/vnd.picsel":["efif"],"application/vnd.pmi.widget":["wg"],"application/vnd.pocketlearn":["plf"],"application/vnd.powerbuilder6":["pbd"],"application/vnd.previewsystems.box":["box"],"application/vnd.proteus.magazine":["mgz"],"application/vnd.publishare-delta-tree":["qps"],"application/vnd.pvi.ptid1":["ptid"],"application/vnd.quark.quarkxpress":["qxd","qxt","qwd","qwt","qxl","qxb"],"application/vnd.realvnc.bed":["bed"],"application/vnd.recordare.musicxml":["mxl"],"application/vnd.recordare.musicxml+xml":["musicxml"],"application/vnd.rig.cryptonote":["cryptonote"],"application/vnd.rim.cod":["cod"],"application/vnd.rn-realmedia":["rm"],"application/vnd.rn-realmedia-vbr":["rmvb"],"application/vnd.route66.link66+xml":["link66"],"application/vnd.sailingtracker.track":["st"],"application/vnd.seemail":["see"],"application/vnd.sema":["sema"],"application/vnd.semd":["semd"],"application/vnd.semf":["semf"],"application/vnd.shana.informed.formdata":["ifm"],"application/vnd.shana.informed.formtemplate":["itp"],"application/vnd.shana.informed.interchange":["iif"],"application/vnd.shana.informed.package":["ipk"],"application/vnd.simtech-mindmapper":["twd","twds"],"application/vnd.smaf":["mmf"],"application/vnd.smart.teacher":["teacher"],"application/vnd.solent.sdkm+xml":["sdkm","sdkd"],"application/vnd.spotfire.dxp":["dxp"],"application/vnd.spotfire.sfs":["sfs"],"application/vnd.stardivision.calc":["sdc"],"application/vnd.stardivision.draw":["sda"],"application/vnd.stardivision.impress":["sdd"],"application/vnd.stardivision.math":["smf"],"application/vnd.stardivision.writer":["sdw","vor"],"application/vnd.stardivision.writer-global":["sgl"],"application/vnd.stepmania.package":["smzip"],"application/vnd.stepmania.stepchart":["sm"],"application/vnd.sun.wadl+xml":["wadl"],"application/vnd.sun.xml.calc":["sxc"],"application/vnd.sun.xml.calc.template":["stc"],"application/vnd.sun.xml.draw":["sxd"],"application/vnd.sun.xml.draw.template":["std"],"application/vnd.sun.xml.impress":["sxi"],"application/vnd.sun.xml.impress.template":["sti"],"application/vnd.sun.xml.math":["sxm"],"application/vnd.sun.xml.writer":["sxw"],"application/vnd.sun.xml.writer.global":["sxg"],"application/vnd.sun.xml.writer.template":["stw"],"application/vnd.sus-calendar":["sus","susp"],"application/vnd.svd":["svd"],"application/vnd.symbian.install":["sis","sisx"],"application/vnd.syncml+xml":["xsm"],"application/vnd.syncml.dm+wbxml":["bdm"],"application/vnd.syncml.dm+xml":["xdm"],"application/vnd.tao.intent-module-archive":["tao"],"application/vnd.tcpdump.pcap":["pcap","cap","dmp"],"application/vnd.tmobile-livetv":["tmo"],"application/vnd.trid.tpt":["tpt"],"application/vnd.triscape.mxs":["mxs"],"application/vnd.trueapp":["tra"],"application/vnd.ufdl":["ufd","ufdl"],"application/vnd.uiq.theme":["utz"],"application/vnd.umajin":["umj"],"application/vnd.unity":["unityweb"],"application/vnd.uoml+xml":["uoml"],"application/vnd.vcx":["vcx"],"application/vnd.visio":["vsd","vst","vss","vsw"],"application/vnd.visionary":["vis"],"application/vnd.vsf":["vsf"],"application/vnd.wap.wbxml":["wbxml"],"application/vnd.wap.wmlc":["wmlc"],"application/vnd.wap.wmlscriptc":["wmlsc"],"application/vnd.webturbo":["wtb"],"application/vnd.wolfram.player":["nbp"],"application/vnd.wordperfect":["wpd"],"application/vnd.wqd":["wqd"],"application/vnd.wt.stf":["stf"],"application/vnd.xara":["xar"],"application/vnd.xfdl":["xfdl"],"application/vnd.yamaha.hv-dic":["hvd"],"application/vnd.yamaha.hv-script":["hvs"],"application/vnd.yamaha.hv-voice":["hvp"],"application/vnd.yamaha.openscoreformat":["osf"],"application/vnd.yamaha.openscoreformat.osfpvg+xml":["osfpvg"],"application/vnd.yamaha.smaf-audio":["saf"],"application/vnd.yamaha.smaf-phrase":["spf"],"application/vnd.yellowriver-custom-menu":["cmp"],"application/vnd.zul":["zir","zirz"],"application/vnd.zzazz.deck+xml":["zaz"],"application/voicexml+xml":["vxml"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/x-7z-compressed":["7z"],"application/x-abiword":["abw"],"application/x-ace-compressed":["ace"],"application/x-apple-diskimage":["dmg"],"application/x-arj":["arj"],"application/x-authorware-bin":["aab","x32","u32","vox"],"application/x-authorware-map":["aam"],"application/x-authorware-seg":["aas"],"application/x-bcpio":["bcpio"],"application/x-bdoc":["bdoc"],"application/x-bittorrent":["torrent"],"application/x-blorb":["blb","blorb"],"application/x-bzip":["bz"],"application/x-bzip2":["bz2","boz"],"application/x-cbr":["cbr","cba","cbt","cbz","cb7"],"application/x-cdlink":["vcd"],"application/x-cfs-compressed":["cfs"],"application/x-chat":["chat"],"application/x-chess-pgn":["pgn"],"application/x-chrome-extension":["crx"],"application/x-cocoa":["cco"],"application/x-conference":["nsc"],"application/x-cpio":["cpio"],"application/x-csh":["csh"],"application/x-debian-package":["deb","udeb"],"application/x-dgc-compressed":["dgc"],"application/x-director":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"],"application/x-doom":["wad"],"application/x-dtbncx+xml":["ncx"],"application/x-dtbook+xml":["dtb"],"application/x-dtbresource+xml":["res"],"application/x-dvi":["dvi"],"application/x-envoy":["evy"],"application/x-eva":["eva"],"application/x-font-bdf":["bdf"],"application/x-font-ghostscript":["gsf"],"application/x-font-linux-psf":["psf"],"application/x-font-otf":["otf"],"application/x-font-pcf":["pcf"],"application/x-font-snf":["snf"],"application/x-font-ttf":["ttf","ttc"],"application/x-font-type1":["pfa","pfb","pfm","afm"],"application/x-freearc":["arc"],"application/x-futuresplash":["spl"],"application/x-gca-compressed":["gca"],"application/x-glulx":["ulx"],"application/x-gnumeric":["gnumeric"],"application/x-gramps-xml":["gramps"],"application/x-gtar":["gtar"],"application/x-hdf":["hdf"],"application/x-httpd-php":["php"],"application/x-install-instructions":["install"],"application/x-iso9660-image":["iso"],"application/x-java-archive-diff":["jardiff"],"application/x-java-jnlp-file":["jnlp"],"application/x-latex":["latex"],"application/x-lua-bytecode":["luac"],"application/x-lzh-compressed":["lzh","lha"],"application/x-makeself":["run"],"application/x-mie":["mie"],"application/x-mobipocket-ebook":["prc","mobi"],"application/x-ms-application":["application"],"application/x-ms-shortcut":["lnk"],"application/x-ms-wmd":["wmd"],"application/x-ms-wmz":["wmz"],"application/x-ms-xbap":["xbap"],"application/x-msaccess":["mdb"],"application/x-msbinder":["obd"],"application/x-mscardfile":["crd"],"application/x-msclip":["clp"],"application/x-msdos-program":["exe"],"application/x-msdownload":["exe","dll","com","bat","msi"],"application/x-msmediaview":["mvb","m13","m14"],"application/x-msmetafile":["wmf","wmz","emf","emz"],"application/x-msmoney":["mny"],"application/x-mspublisher":["pub"],"application/x-msschedule":["scd"],"application/x-msterminal":["trm"],"application/x-mswrite":["wri"],"application/x-netcdf":["nc","cdf"],"application/x-ns-proxy-autoconfig":["pac"],"application/x-nzb":["nzb"],"application/x-perl":["pl","pm"],"application/x-pilot":["prc","pdb"],"application/x-pkcs12":["p12","pfx"],"application/x-pkcs7-certificates":["p7b","spc"],"application/x-pkcs7-certreqresp":["p7r"],"application/x-rar-compressed":["rar"],"application/x-redhat-package-manager":["rpm"],"application/x-research-info-systems":["ris"],"application/x-sea":["sea"],"application/x-sh":["sh"],"application/x-shar":["shar"],"application/x-shockwave-flash":["swf"],"application/x-silverlight-app":["xap"],"application/x-sql":["sql"],"application/x-stuffit":["sit"],"application/x-stuffitx":["sitx"],"application/x-subrip":["srt"],"application/x-sv4cpio":["sv4cpio"],"application/x-sv4crc":["sv4crc"],"application/x-t3vm-image":["t3"],"application/x-tads":["gam"],"application/x-tar":["tar"],"application/x-tcl":["tcl","tk"],"application/x-tex":["tex"],"application/x-tex-tfm":["tfm"],"application/x-texinfo":["texinfo","texi"],"application/x-tgif":["obj"],"application/x-ustar":["ustar"],"application/x-virtualbox-hdd":["hdd"],"application/x-virtualbox-ova":["ova"],"application/x-virtualbox-ovf":["ovf"],"application/x-virtualbox-vbox":["vbox"],"application/x-virtualbox-vbox-extpack":["vbox-extpack"],"application/x-virtualbox-vdi":["vdi"],"application/x-virtualbox-vhd":["vhd"],"application/x-virtualbox-vmdk":["vmdk"],"application/x-wais-source":["src"],"application/x-web-app-manifest+json":["webapp"],"application/x-x509-ca-cert":["der","crt","pem"],"application/x-xfig":["fig"],"application/x-xliff+xml":["xlf"],"application/x-xpinstall":["xpi"],"application/x-xz":["xz"],"application/x-zmachine":["z1","z2","z3","z4","z5","z6","z7","z8"],"application/xaml+xml":["xaml"],"application/xcap-diff+xml":["xdf"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":["3gpp"],"audio/adpcm":["adp"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mp3":["mp3"],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/vnd.dece.audio":["uva","uvva"],"audio/vnd.digital-winds":["eol"],"audio/vnd.dra":["dra"],"audio/vnd.dts":["dts"],"audio/vnd.dts.hd":["dtshd"],"audio/vnd.lucent.voice":["lvp"],"audio/vnd.ms-playready.media.pya":["pya"],"audio/vnd.nuera.ecelp4800":["ecelp4800"],"audio/vnd.nuera.ecelp7470":["ecelp7470"],"audio/vnd.nuera.ecelp9600":["ecelp9600"],"audio/vnd.rip":["rip"],"audio/wav":["wav"],"audio/wave":["wav"],"audio/webm":["weba"],"audio/x-aac":["aac"],"audio/x-aiff":["aif","aiff","aifc"],"audio/x-caf":["caf"],"audio/x-flac":["flac"],"audio/x-m4a":["m4a"],"audio/x-matroska":["mka"],"audio/x-mpegurl":["m3u"],"audio/x-ms-wax":["wax"],"audio/x-ms-wma":["wma"],"audio/x-pn-realaudio":["ram","ra"],"audio/x-pn-realaudio-plugin":["rmp"],"audio/x-realaudio":["ra"],"audio/x-wav":["wav"],"audio/xm":["xm"],"chemical/x-cdx":["cdx"],"chemical/x-cif":["cif"],"chemical/x-cmdf":["cmdf"],"chemical/x-cml":["cml"],"chemical/x-csml":["csml"],"chemical/x-xyz":["xyz"],"font/otf":["otf"],"image/apng":["apng"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/g3fax":["g3"],"image/gif":["gif"],"image/ief":["ief"],"image/jpeg":["jpeg","jpg","jpe"],"image/ktx":["ktx"],"image/png":["png"],"image/prs.btif":["btif"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/tiff":["tiff","tif"],"image/vnd.adobe.photoshop":["psd"],"image/vnd.dece.graphic":["uvi","uvvi","uvg","uvvg"],"image/vnd.djvu":["djvu","djv"],"image/vnd.dvb.subtitle":["sub"],"image/vnd.dwg":["dwg"],"image/vnd.dxf":["dxf"],"image/vnd.fastbidsheet":["fbs"],"image/vnd.fpx":["fpx"],"image/vnd.fst":["fst"],"image/vnd.fujixerox.edmics-mmr":["mmr"],"image/vnd.fujixerox.edmics-rlc":["rlc"],"image/vnd.ms-modi":["mdi"],"image/vnd.ms-photo":["wdp"],"image/vnd.net-fpx":["npx"],"image/vnd.wap.wbmp":["wbmp"],"image/vnd.xiff":["xif"],"image/webp":["webp"],"image/x-3ds":["3ds"],"image/x-cmu-raster":["ras"],"image/x-cmx":["cmx"],"image/x-freehand":["fh","fhc","fh4","fh5","fh7"],"image/x-icon":["ico"],"image/x-jng":["jng"],"image/x-mrsid-image":["sid"],"image/x-ms-bmp":["bmp"],"image/x-pcx":["pcx"],"image/x-pict":["pic","pct"],"image/x-portable-anymap":["pnm"],"image/x-portable-bitmap":["pbm"],"image/x-portable-graymap":["pgm"],"image/x-portable-pixmap":["ppm"],"image/x-rgb":["rgb"],"image/x-tga":["tga"],"image/x-xbitmap":["xbm"],"image/x-xpixmap":["xpm"],"image/x-xwindowdump":["xwd"],"message/rfc822":["eml","mime"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/vnd.collada+xml":["dae"],"model/vnd.dwf":["dwf"],"model/vnd.gdl":["gdl"],"model/vnd.gtw":["gtw"],"model/vnd.mts":["mts"],"model/vnd.vtu":["vtu"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["x3db","x3dbz"],"model/x3d+vrml":["x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/hjson":["hjson"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/prs.lines.tag":["dsc"],"text/richtext":["rtx"],"text/rtf":["rtf"],"text/sgml":["sgml","sgm"],"text/slim":["slim","slm"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vnd.curl":["curl"],"text/vnd.curl.dcurl":["dcurl"],"text/vnd.curl.mcurl":["mcurl"],"text/vnd.curl.scurl":["scurl"],"text/vnd.dvb.subtitle":["sub"],"text/vnd.fly":["fly"],"text/vnd.fmi.flexstor":["flx"],"text/vnd.graphviz":["gv"],"text/vnd.in3d.3dml":["3dml"],"text/vnd.in3d.spot":["spot"],"text/vnd.sun.j2me.app-descriptor":["jad"],"text/vnd.wap.wml":["wml"],"text/vnd.wap.wmlscript":["wmls"],"text/vtt":["vtt"],"text/x-asm":["s","asm"],"text/x-c":["c","cc","cxx","cpp","h","hh","dic"],"text/x-component":["htc"],"text/x-fortran":["f","for","f77","f90"],"text/x-handlebars-template":["hbs"],"text/x-java-source":["java"],"text/x-lua":["lua"],"text/x-markdown":["mkd"],"text/x-nfo":["nfo"],"text/x-opml":["opml"],"text/x-org":["org"],"text/x-pascal":["p","pas"],"text/x-processing":["pde"],"text/x-sass":["sass"],"text/x-scss":["scss"],"text/x-setext":["etx"],"text/x-sfv":["sfv"],"text/x-suse-ymp":["ymp"],"text/x-uuencode":["uu"],"text/x-vcalendar":["vcs"],"text/x-vcard":["vcf"],"text/xml":["xml"],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/jpeg":["jpgv"],"video/jpm":["jpm","jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/vnd.dece.hd":["uvh","uvvh"],"video/vnd.dece.mobile":["uvm","uvvm"],"video/vnd.dece.pd":["uvp","uvvp"],"video/vnd.dece.sd":["uvs","uvvs"],"video/vnd.dece.video":["uvv","uvvv"],"video/vnd.dvb.file":["dvb"],"video/vnd.fvt":["fvt"],"video/vnd.mpegurl":["mxu","m4u"],"video/vnd.ms-playready.media.pyv":["pyv"],"video/vnd.uvvu.mp4":["uvu","uvvu"],"video/vnd.vivo":["viv"],"video/webm":["webm"],"video/x-f4v":["f4v"],"video/x-fli":["fli"],"video/x-flv":["flv"],"video/x-m4v":["m4v"],"video/x-matroska":["mkv","mk3d","mks"],"video/x-mng":["mng"],"video/x-ms-asf":["asf","asx"],"video/x-ms-vob":["vob"],"video/x-ms-wm":["wm"],"video/x-ms-wmv":["wmv"],"video/x-ms-wmx":["wmx"],"video/x-ms-wvx":["wvx"],"video/x-msvideo":["avi"],"video/x-sgi-movie":["movie"],"video/x-smv":["smv"],"x-conference/x-cooltalk":["ice"]}},function(e,t,n){"use strict";
/*!
 * forwarded
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e){if(!e)throw new TypeError("argument req is required");var t=function(e){for(var t=e.length,n=[],i=e.length,a=e.length-1;a>=0;a--)switch(e.charCodeAt(a)){case 32:i===t&&(i=t=a);break;case 44:i!==t&&n.push(e.substring(i,t)),i=t=a;break;default:i=a}i!==t&&n.push(e.substring(i,t));return n}(e.headers["x-forwarded-for"]||"");return[e.connection.remoteAddress].concat(t)}},function(e,t,n){(function(e){(function(){var t,n,i,a,o,r,s;n={},null!==e&&e.exports?e.exports=n:this.ipaddr=n,s=function(e,t,n,i){var a,o;if(e.length!==t.length)throw new Error("ipaddr: cannot match CIDR for objects with different lengths");for(a=0;i>0;){if((o=n-i)<0&&(o=0),e[a]>>o!=t[a]>>o)return!1;i-=n,a+=1}return!0},n.subnetMatch=function(e,t,n){var i,a,o,r,s;for(o in null==n&&(n="unicast"),t)for(!(r=t[o])[0]||r[0]instanceof Array||(r=[r]),i=0,a=r.length;i<a;i++)if(s=r[i],e.kind()===s[0].kind()&&e.match.apply(e,s))return o;return n},n.IPv4=function(){function e(e){var t,n,i;if(4!==e.length)throw new Error("ipaddr: ipv4 octet count should be 4");for(t=0,n=e.length;t<n;t++)if(!(0<=(i=e[t])&&i<=255))throw new Error("ipaddr: ipv4 octet should fit in 8 bits");this.octets=e}return e.prototype.kind=function(){return"ipv4"},e.prototype.toString=function(){return this.octets.join(".")},e.prototype.toNormalizedString=function(){return this.toString()},e.prototype.toByteArray=function(){return this.octets.slice(0)},e.prototype.match=function(e,t){var n;if(void 0===t&&(e=(n=e)[0],t=n[1]),"ipv4"!==e.kind())throw new Error("ipaddr: cannot match ipv4 address with non-ipv4 one");return s(this.octets,e.octets,8,t)},e.prototype.SpecialRanges={unspecified:[[new e([0,0,0,0]),8]],broadcast:[[new e([255,255,255,255]),32]],multicast:[[new e([224,0,0,0]),4]],linkLocal:[[new e([169,254,0,0]),16]],loopback:[[new e([127,0,0,0]),8]],carrierGradeNat:[[new e([100,64,0,0]),10]],private:[[new e([10,0,0,0]),8],[new e([172,16,0,0]),12],[new e([192,168,0,0]),16]],reserved:[[new e([192,0,0,0]),24],[new e([192,0,2,0]),24],[new e([192,88,99,0]),24],[new e([198,51,100,0]),24],[new e([203,0,113,0]),24],[new e([240,0,0,0]),4]]},e.prototype.range=function(){return n.subnetMatch(this,this.SpecialRanges)},e.prototype.toIPv4MappedAddress=function(){return n.IPv6.parse("::ffff:"+this.toString())},e.prototype.prefixLengthFromSubnetMask=function(){var e,t,n,i,a,o,r;for(r={0:8,128:7,192:6,224:5,240:4,248:3,252:2,254:1,255:0},e=0,a=!1,t=n=3;n>=0;t=n+=-1){if(!((i=this.octets[t])in r))return null;if(o=r[i],a&&0!==o)return null;8!==o&&(a=!0),e+=o}return 32-e},e}(),i="(0?\\d+|0x[a-f0-9]+)",a={fourOctet:new RegExp("^"+i+"\\."+i+"\\."+i+"\\."+i+"$","i"),longValue:new RegExp("^"+i+"$","i")},n.IPv4.parser=function(e){var t,n,i,o,r;if(n=function(e){return"0"===e[0]&&"x"!==e[1]?parseInt(e,8):parseInt(e)},t=e.match(a.fourOctet))return function(){var e,a,o,r;for(r=[],e=0,a=(o=t.slice(1,6)).length;e<a;e++)i=o[e],r.push(n(i));return r}();if(t=e.match(a.longValue)){if((r=n(t[1]))>4294967295||r<0)throw new Error("ipaddr: address outside defined range");return function(){var e,t;for(t=[],o=e=0;e<=24;o=e+=8)t.push(r>>o&255);return t}().reverse()}return null},n.IPv6=function(){function e(e,t){var n,i,a,o,r,s;if(16===e.length)for(this.parts=[],n=i=0;i<=14;n=i+=2)this.parts.push(e[n]<<8|e[n+1]);else{if(8!==e.length)throw new Error("ipaddr: ipv6 part count should be 8 or 16");this.parts=e}for(a=0,o=(s=this.parts).length;a<o;a++)if(!(0<=(r=s[a])&&r<=65535))throw new Error("ipaddr: ipv6 part should fit in 16 bits");t&&(this.zoneId=t)}return e.prototype.kind=function(){return"ipv6"},e.prototype.toString=function(){return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/,"::")},e.prototype.toByteArray=function(){var e,t,n,i,a;for(e=[],t=0,n=(a=this.parts).length;t<n;t++)i=a[t],e.push(i>>8),e.push(255&i);return e},e.prototype.toNormalizedString=function(){var e,t,n;return e=function(){var e,n,i,a;for(a=[],e=0,n=(i=this.parts).length;e<n;e++)t=i[e],a.push(t.toString(16));return a}.call(this).join(":"),n="",this.zoneId&&(n="%"+this.zoneId),e+n},e.prototype.match=function(e,t){var n;if(void 0===t&&(e=(n=e)[0],t=n[1]),"ipv6"!==e.kind())throw new Error("ipaddr: cannot match ipv6 address with non-ipv6 one");return s(this.parts,e.parts,16,t)},e.prototype.SpecialRanges={unspecified:[new e([0,0,0,0,0,0,0,0]),128],linkLocal:[new e([65152,0,0,0,0,0,0,0]),10],multicast:[new e([65280,0,0,0,0,0,0,0]),8],loopback:[new e([0,0,0,0,0,0,0,1]),128],uniqueLocal:[new e([64512,0,0,0,0,0,0,0]),7],ipv4Mapped:[new e([0,0,0,0,0,65535,0,0]),96],rfc6145:[new e([0,0,0,0,65535,0,0,0]),96],rfc6052:[new e([100,65435,0,0,0,0,0,0]),96],"6to4":[new e([8194,0,0,0,0,0,0,0]),16],teredo:[new e([8193,0,0,0,0,0,0,0]),32],reserved:[[new e([8193,3512,0,0,0,0,0,0]),32]]},e.prototype.range=function(){return n.subnetMatch(this,this.SpecialRanges)},e.prototype.isIPv4MappedAddress=function(){return"ipv4Mapped"===this.range()},e.prototype.toIPv4Address=function(){var e,t,i;if(!this.isIPv4MappedAddress())throw new Error("ipaddr: trying to convert a generic ipv6 address to ipv4");return e=(i=this.parts.slice(-2))[0],t=i[1],new n.IPv4([e>>8,255&e,t>>8,255&t])},e.prototype.prefixLengthFromSubnetMask=function(){var e,t,n,i,a,o,r;for(r={0:16,32768:15,49152:14,57344:13,61440:12,63488:11,64512:10,65024:9,65280:8,65408:7,65472:6,65504:5,65520:4,65528:3,65532:2,65534:1,65535:0},e=0,a=!1,t=n=7;n>=0;t=n+=-1){if(!((i=this.parts[t])in r))return null;if(o=r[i],a&&0!==o)return null;16!==o&&(a=!0),e+=o}return 128-e},e}(),o="(?:[0-9a-f]+::?)+",r={zoneIndex:new RegExp("%[0-9a-z]{1,}","i"),native:new RegExp("^(::)?("+o+")?([0-9a-f]+)?(::)?(%[0-9a-z]{1,})?$","i"),transitional:new RegExp("^((?:"+o+")|(?:::)(?:"+o+")?)"+i+"\\."+i+"\\."+i+"\\."+i+"(%[0-9a-z]{1,})?$","i")},t=function(e,t){var n,i,a,o,s,c;if(e.indexOf("::")!==e.lastIndexOf("::"))return null;for((c=(e.match(r.zoneIndex)||[])[0])&&(c=c.substring(1),e=e.replace(/%.+$/,"")),n=0,i=-1;(i=e.indexOf(":",i+1))>=0;)n++;if("::"===e.substr(0,2)&&n--,"::"===e.substr(-2,2)&&n--,n>t)return null;for(s=t-n,o=":";s--;)o+="0:";return":"===(e=e.replace("::",o))[0]&&(e=e.slice(1)),":"===e[e.length-1]&&(e=e.slice(0,-1)),{parts:t=function(){var t,n,i,o;for(o=[],t=0,n=(i=e.split(":")).length;t<n;t++)a=i[t],o.push(parseInt(a,16));return o}(),zoneId:c}},n.IPv6.parser=function(e){var n,i,a,o,s,c,p;if(r.native.test(e))return t(e,8);if((o=e.match(r.transitional))&&(p=o[6]||"",(n=t(o[1].slice(0,-1)+p,6)).parts)){for(i=0,a=(c=[parseInt(o[2]),parseInt(o[3]),parseInt(o[4]),parseInt(o[5])]).length;i<a;i++)if(!(0<=(s=c[i])&&s<=255))return null;return n.parts.push(c[0]<<8|c[1]),n.parts.push(c[2]<<8|c[3]),{parts:n.parts,zoneId:n.zoneId}}return null},n.IPv4.isIPv4=n.IPv6.isIPv6=function(e){return null!==this.parser(e)},n.IPv4.isValid=function(e){try{return new this(this.parser(e)),!0}catch(e){return e,!1}},n.IPv4.isValidFourPartDecimal=function(e){return!(!n.IPv4.isValid(e)||!e.match(/^(0|[1-9]\d*)(\.(0|[1-9]\d*)){3}$/))},n.IPv6.isValid=function(e){var t;if("string"==typeof e&&-1===e.indexOf(":"))return!1;try{return new this((t=this.parser(e)).parts,t.zoneId),!0}catch(e){return e,!1}},n.IPv4.parse=function(e){var t;if(null===(t=this.parser(e)))throw new Error("ipaddr: string is not formatted like ip address");return new this(t)},n.IPv6.parse=function(e){var t;if(null===(t=this.parser(e)).parts)throw new Error("ipaddr: string is not formatted like ip address");return new this(t.parts,t.zoneId)},n.IPv4.parseCIDR=function(e){var t,n,i;if((n=e.match(/^(.+)\/(\d+)$/))&&(t=parseInt(n[2]))>=0&&t<=32)return i=[this.parse(n[1]),t],Object.defineProperty(i,"toString",{value:function(){return this.join("/")}}),i;throw new Error("ipaddr: string is not formatted like an IPv4 CIDR range")},n.IPv4.subnetMaskFromPrefixLength=function(e){var t,n,i;if((e=parseInt(e))<0||e>32)throw new Error("ipaddr: invalid IPv4 prefix length");for(i=[0,0,0,0],n=0,t=Math.floor(e/8);n<t;)i[n]=255,n++;return t<4&&(i[t]=Math.pow(2,e%8)-1<<8-e%8),new this(i)},n.IPv4.broadcastAddressFromCIDR=function(e){var t,n,i,a,o;try{for(i=(t=this.parseCIDR(e))[0].toByteArray(),o=this.subnetMaskFromPrefixLength(t[1]).toByteArray(),a=[],n=0;n<4;)a.push(parseInt(i[n],10)|255^parseInt(o[n],10)),n++;return new this(a)}catch(e){throw e,new Error("ipaddr: the address does not have IPv4 CIDR format")}},n.IPv4.networkAddressFromCIDR=function(e){var t,n,i,a,o;try{for(i=(t=this.parseCIDR(e))[0].toByteArray(),o=this.subnetMaskFromPrefixLength(t[1]).toByteArray(),a=[],n=0;n<4;)a.push(parseInt(i[n],10)&parseInt(o[n],10)),n++;return new this(a)}catch(e){throw e,new Error("ipaddr: the address does not have IPv4 CIDR format")}},n.IPv6.parseCIDR=function(e){var t,n,i;if((n=e.match(/^(.+)\/(\d+)$/))&&(t=parseInt(n[2]))>=0&&t<=128)return i=[this.parse(n[1]),t],Object.defineProperty(i,"toString",{value:function(){return this.join("/")}}),i;throw new Error("ipaddr: string is not formatted like an IPv6 CIDR range")},n.isValid=function(e){return n.IPv6.isValid(e)||n.IPv4.isValid(e)},n.parse=function(e){if(n.IPv6.isValid(e))return n.IPv6.parse(e);if(n.IPv4.isValid(e))return n.IPv4.parse(e);throw new Error("ipaddr: the address has neither IPv6 nor IPv4 format")},n.parseCIDR=function(e){try{return n.IPv6.parseCIDR(e)}catch(t){t;try{return n.IPv4.parseCIDR(e)}catch(e){throw e,new Error("ipaddr: the address has neither IPv6 nor IPv4 CIDR format")}}},n.fromByteArray=function(e){var t;if(4===(t=e.length))return new n.IPv4(e);if(16===t)return new n.IPv6(e);throw new Error("ipaddr: the binary input is neither an IPv6 nor IPv4 address")},n.process=function(e){var t;return"ipv6"===(t=this.parse(e)).kind()&&t.isIPv4MappedAddress()?t.toIPv4Address():t}}).call(this)}).call(this,n(57)(e))},function(e,t,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(131),a=n(3)("express"),o=n(26).isIP,r=n(13),s=n(15),c=n(54),p=n(55),l=n(14),u=n(56),d=Object.create(s.IncomingMessage.prototype);function m(e,t,n){Object.defineProperty(e,t,{configurable:!0,enumerable:!0,get:n})}e.exports=d,d.get=d.header=function(e){if(!e)throw new TypeError("name argument is required to req.get");if("string"!=typeof e)throw new TypeError("name must be a string to req.get");var t=e.toLowerCase();switch(t){case"referer":case"referrer":return this.headers.referrer||this.headers.referer;default:return this.headers[t]}},d.accepts=function(){var e=i(this);return e.types.apply(e,arguments)},d.acceptsEncodings=function(){var e=i(this);return e.encodings.apply(e,arguments)},d.acceptsEncoding=a.function(d.acceptsEncodings,"req.acceptsEncoding: Use acceptsEncodings instead"),d.acceptsCharsets=function(){var e=i(this);return e.charsets.apply(e,arguments)},d.acceptsCharset=a.function(d.acceptsCharsets,"req.acceptsCharset: Use acceptsCharsets instead"),d.acceptsLanguages=function(){var e=i(this);return e.languages.apply(e,arguments)},d.acceptsLanguage=a.function(d.acceptsLanguages,"req.acceptsLanguage: Use acceptsLanguages instead"),d.range=function(e,t){var n=this.get("Range");if(n)return p(e,n,t)},d.param=function(e,t){var n=this.params||{},i=this.body||{},o=this.query||{},r=1===arguments.length?"name":"name, default";return a("req.param("+r+"): Use req.params, req.body, or req.query instead"),null!=n[e]&&n.hasOwnProperty(e)?n[e]:null!=i[e]?i[e]:null!=o[e]?o[e]:t},d.is=function(e){var t=e;if(!Array.isArray(e)){t=new Array(arguments.length);for(var n=0;n<t.length;n++)t[n]=arguments[n]}return r(this,t)},m(d,"protocol",function(){var e=this.connection.encrypted?"https":"http";if(!this.app.get("trust proxy fn")(this.connection.remoteAddress,0))return e;var t=this.get("X-Forwarded-Proto")||e,n=t.indexOf(",");return-1!==n?t.substring(0,n).trim():t.trim()}),m(d,"secure",function(){return"https"===this.protocol}),m(d,"ip",function(){var e=this.app.get("trust proxy fn");return u(this,e)}),m(d,"ips",function(){var e=this.app.get("trust proxy fn"),t=u.all(this,e);return t.reverse().pop(),t}),m(d,"subdomains",function(){var e=this.hostname;if(!e)return[];var t=this.app.get("subdomain offset"),n=o(e)?[e]:e.split(".").reverse();return n.slice(t)}),m(d,"path",function(){return l(this).pathname}),m(d,"hostname",function(){var e=this.app.get("trust proxy fn"),t=this.get("X-Forwarded-Host");if(t&&e(this.connection.remoteAddress,0)||(t=this.get("Host")),t){var n="["===t[0]?t.indexOf("]")+1:0,i=t.indexOf(":",n);return-1!==i?t.substring(0,i):t}}),m(d,"host",a.function(function(){return this.hostname},"req.host: Use req.hostname instead")),m(d,"fresh",function(){var e=this.method,t=this.res,n=t.statusCode;return("GET"===e||"HEAD"===e)&&((n>=200&&n<300||304===n)&&c(this.headers,{etag:t.get("ETag"),"last-modified":t.get("Last-Modified")}))}),m(d,"stale",function(){return!this.fresh}),m(d,"xhr",function(){return"xmlhttprequest"===(this.get("X-Requested-With")||"").toLowerCase()})},function(e,t,n){"use strict";
/*!
 * accepts
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(132),a=n(44);function o(e){if(!(this instanceof o))return new o(e);this.headers=e.headers,this.negotiator=new i(e)}function r(e){return-1===e.indexOf("/")?a.lookup(e):e}function s(e){return"string"==typeof e}e.exports=o,o.prototype.type=o.prototype.types=function(e){var t=e;if(t&&!Array.isArray(t)){t=new Array(arguments.length);for(var n=0;n<t.length;n++)t[n]=arguments[n]}if(!t||0===t.length)return this.negotiator.mediaTypes();if(!this.headers.accept)return t[0];var i=t.map(r),a=this.negotiator.mediaTypes(i.filter(s))[0];return!!a&&t[i.indexOf(a)]},o.prototype.encoding=o.prototype.encodings=function(e){var t=e;if(t&&!Array.isArray(t)){t=new Array(arguments.length);for(var n=0;n<t.length;n++)t[n]=arguments[n]}return t&&0!==t.length?this.negotiator.encodings(t)[0]||!1:this.negotiator.encodings()},o.prototype.charset=o.prototype.charsets=function(e){var t=e;if(t&&!Array.isArray(t)){t=new Array(arguments.length);for(var n=0;n<t.length;n++)t[n]=arguments[n]}return t&&0!==t.length?this.negotiator.charsets(t)[0]||!1:this.negotiator.charsets()},o.prototype.lang=o.prototype.langs=o.prototype.language=o.prototype.languages=function(e){var t=e;if(t&&!Array.isArray(t)){t=new Array(arguments.length);for(var n=0;n<t.length;n++)t[n]=arguments[n]}return t&&0!==t.length?this.negotiator.languages(t)[0]||!1:this.negotiator.languages()}},function(e,t,n){"use strict";
/*!
 * negotiator
 * Copyright(c) 2012 Federico Romero
 * Copyright(c) 2012-2014 Isaac Z. Schlueter
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=Object.create(null);function a(e){if(!(this instanceof a))return new a(e);this.request=e}function o(e){var t=i[e];if(void 0!==t)return t;switch(e){case"charset":t=n(133);break;case"encoding":t=n(134);break;case"language":t=n(135);break;case"mediaType":t=n(136);break;default:throw new Error("Cannot find module '"+e+"'")}return i[e]=t,t}e.exports=a,e.exports.Negotiator=a,a.prototype.charset=function(e){var t=this.charsets(e);return t&&t[0]},a.prototype.charsets=function(e){return(0,o("charset").preferredCharsets)(this.request.headers["accept-charset"],e)},a.prototype.encoding=function(e){var t=this.encodings(e);return t&&t[0]},a.prototype.encodings=function(e){return(0,o("encoding").preferredEncodings)(this.request.headers["accept-encoding"],e)},a.prototype.language=function(e){var t=this.languages(e);return t&&t[0]},a.prototype.languages=function(e){return(0,o("language").preferredLanguages)(this.request.headers["accept-language"],e)},a.prototype.mediaType=function(e){var t=this.mediaTypes(e);return t&&t[0]},a.prototype.mediaTypes=function(e){return(0,o("mediaType").preferredMediaTypes)(this.request.headers.accept,e)},a.prototype.preferredCharset=a.prototype.charset,a.prototype.preferredCharsets=a.prototype.charsets,a.prototype.preferredEncoding=a.prototype.encoding,a.prototype.preferredEncodings=a.prototype.encodings,a.prototype.preferredLanguage=a.prototype.language,a.prototype.preferredLanguages=a.prototype.languages,a.prototype.preferredMediaType=a.prototype.mediaType,a.prototype.preferredMediaTypes=a.prototype.mediaTypes},function(e,t,n){"use strict";e.exports=r,e.exports.preferredCharsets=r;var i=/^\s*([^\s;]+)\s*(?:;(.*))?$/;function a(e,t){var n=i.exec(e);if(!n)return null;var a=n[1],o=1;if(n[2]){var r=n[2].split(";");for(t=0;t<r.length;t++){var s=r[t].trim().split("=");if("q"===s[0]){o=parseFloat(s[1]);break}}}return{charset:a,q:o,i:t}}function o(e,t,n){var i=0;if(t.charset.toLowerCase()===e.toLowerCase())i|=1;else if("*"!==t.charset)return null;return{i:n,o:t.i,q:t.q,s:i}}function r(e,t){var n=function(e){for(var t=e.split(","),n=0,i=0;n<t.length;n++){var o=a(t[n].trim(),n);o&&(t[i++]=o)}return t.length=i,t}(void 0===e?"*":e||"");if(!t)return n.filter(p).sort(s).map(c);var i=t.map(function(e,t){return function(e,t,n){for(var i={o:-1,q:0,s:0},a=0;a<t.length;a++){var r=o(e,t[a],n);r&&(i.s-r.s||i.q-r.q||i.o-r.o)<0&&(i=r)}return i}(e,n,t)});return i.filter(p).sort(s).map(function(e){return t[i.indexOf(e)]})}function s(e,t){return t.q-e.q||t.s-e.s||e.o-t.o||e.i-t.i||0}function c(e){return e.charset}function p(e){return e.q>0}},function(e,t,n){"use strict";e.exports=r,e.exports.preferredEncodings=r;var i=/^\s*([^\s;]+)\s*(?:;(.*))?$/;function a(e,t){var n=i.exec(e);if(!n)return null;var a=n[1],o=1;if(n[2]){var r=n[2].split(";");for(t=0;t<r.length;t++){var s=r[t].trim().split("=");if("q"===s[0]){o=parseFloat(s[1]);break}}}return{encoding:a,q:o,i:t}}function o(e,t,n){var i=0;if(t.encoding.toLowerCase()===e.toLowerCase())i|=1;else if("*"!==t.encoding)return null;return{i:n,o:t.i,q:t.q,s:i}}function r(e,t){var n=function(e){for(var t=e.split(","),n=!1,i=1,r=0,s=0;r<t.length;r++){var c=a(t[r].trim(),r);c&&(t[s++]=c,n=n||o("identity",c),i=Math.min(i,c.q||1))}return n||(t[s++]={encoding:"identity",q:i,i:r}),t.length=s,t}(e||"");if(!t)return n.filter(p).sort(s).map(c);var i=t.map(function(e,t){return function(e,t,n){for(var i={o:-1,q:0,s:0},a=0;a<t.length;a++){var r=o(e,t[a],n);r&&(i.s-r.s||i.q-r.q||i.o-r.o)<0&&(i=r)}return i}(e,n,t)});return i.filter(p).sort(s).map(function(e){return t[i.indexOf(e)]})}function s(e,t){return t.q-e.q||t.s-e.s||e.o-t.o||e.i-t.i||0}function c(e){return e.encoding}function p(e){return e.q>0}},function(e,t,n){"use strict";e.exports=r,e.exports.preferredLanguages=r;var i=/^\s*([^\s\-;]+)(?:-([^\s;]+))?\s*(?:;(.*))?$/;function a(e,t){var n=i.exec(e);if(!n)return null;var a=n[1],o=n[2],r=a;o&&(r+="-"+o);var s=1;if(n[3]){var c=n[3].split(";");for(t=0;t<c.length;t++){var p=c[t].split("=");"q"===p[0]&&(s=parseFloat(p[1]))}}return{prefix:a,suffix:o,q:s,i:t,full:r}}function o(e,t,n){var i=a(e);if(!i)return null;var o=0;if(t.full.toLowerCase()===i.full.toLowerCase())o|=4;else if(t.prefix.toLowerCase()===i.full.toLowerCase())o|=2;else if(t.full.toLowerCase()===i.prefix.toLowerCase())o|=1;else if("*"!==t.full)return null;return{i:n,o:t.i,q:t.q,s:o}}function r(e,t){var n=function(e){for(var t=e.split(","),n=0,i=0;n<t.length;n++){var o=a(t[n].trim(),n);o&&(t[i++]=o)}return t.length=i,t}(void 0===e?"*":e||"");if(!t)return n.filter(p).sort(s).map(c);var i=t.map(function(e,t){return function(e,t,n){for(var i={o:-1,q:0,s:0},a=0;a<t.length;a++){var r=o(e,t[a],n);r&&(i.s-r.s||i.q-r.q||i.o-r.o)<0&&(i=r)}return i}(e,n,t)});return i.filter(p).sort(s).map(function(e){return t[i.indexOf(e)]})}function s(e,t){return t.q-e.q||t.s-e.s||e.o-t.o||e.i-t.i||0}function c(e){return e.full}function p(e){return e.q>0}},function(e,t,n){"use strict";e.exports=s,e.exports.preferredMediaTypes=s;var i=/^\s*([^\s\/;]+)\/([^;\s]+)\s*(?:;(.*))?$/;function a(e){for(var t=function(e){for(var t=e.split(","),n=1,i=0;n<t.length;n++)u(t[i])%2==0?t[++i]=t[n]:t[i]+=","+t[n];return t.length=i+1,t}(e),n=0,i=0;n<t.length;n++){var a=o(t[n].trim(),n);a&&(t[i++]=a)}return t.length=i,t}function o(e,t){var n=i.exec(e);if(!n)return null;var a=Object.create(null),o=1,r=n[2],s=n[1];if(n[3])for(var c=function(e){for(var t=e.split(";"),n=1,i=0;n<t.length;n++)u(t[i])%2==0?t[++i]=t[n]:t[i]+=";"+t[n];t.length=i+1;for(var n=0;n<t.length;n++)t[n]=t[n].trim();return t}(n[3]).map(d),p=0;p<c.length;p++){var l=c[p],m=l[0].toLowerCase(),f=l[1],h=f&&'"'===f[0]&&'"'===f[f.length-1]?f.substr(1,f.length-2):f;if("q"===m){o=parseFloat(h);break}a[m]=h}return{type:s,subtype:r,params:a,q:o,i:t}}function r(e,t,n){var i=o(e),a=0;if(!i)return null;if(t.type.toLowerCase()==i.type.toLowerCase())a|=4;else if("*"!=t.type)return null;if(t.subtype.toLowerCase()==i.subtype.toLowerCase())a|=2;else if("*"!=t.subtype)return null;var r=Object.keys(t.params);if(r.length>0){if(!r.every(function(e){return"*"==t.params[e]||(t.params[e]||"").toLowerCase()==(i.params[e]||"").toLowerCase()}))return null;a|=1}return{i:n,o:t.i,q:t.q,s:a}}function s(e,t){var n=a(void 0===e?"*/*":e||"");if(!t)return n.filter(l).sort(c).map(p);var i=t.map(function(e,t){return function(e,t,n){for(var i={o:-1,q:0,s:0},a=0;a<t.length;a++){var o=r(e,t[a],n);o&&(i.s-o.s||i.q-o.q||i.o-o.o)<0&&(i=o)}return i}(e,n,t)});return i.filter(l).sort(c).map(function(e){return t[i.indexOf(e)]})}function c(e,t){return t.q-e.q||t.s-e.s||e.o-t.o||e.i-t.i||0}function p(e){return e.type+"/"+e.subtype}function l(e){return e.q>0}function u(e){for(var t=0,n=0;-1!==(n=e.indexOf('"',n));)t++,n++;return t}function d(e){var t,n,i=e.indexOf("=");return-1===i?t=e:(t=e.substr(0,i),n=e.substr(i+1)),[t,n]}},function(e,t,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(32).Buffer,a=n(52),o=n(3)("express"),r=n(19),s=n(20),c=n(15),p=n(7).isAbsolute,l=n(12),u=n(0),d=n(30),m=n(22),f=n(58).sign,h=n(7).normalizeType,v=n(7).normalizeTypes,x=n(7).setCharset,g=n(59),b=n(33),y=u.extname,w=b.mime,k=u.resolve,_=n(138),j=Object.create(c.ServerResponse.prototype);e.exports=j;var E=/;\s*charset\s*=/;function S(e,t,n,i){var a,o=!1;function r(){if(!o){o=!0;var e=new Error("Request aborted");e.code="ECONNABORTED",i(e)}}function s(e){o||(o=!0,i(e))}t.on("directory",function(){if(!o){o=!0;var e=new Error("EISDIR, read");e.code="EISDIR",i(e)}}),t.on("end",function(){o||(o=!0,i())}),t.on("error",s),t.on("file",function(){a=!1}),t.on("stream",function(){a=!0}),l(e,function(e){return e&&"ECONNRESET"===e.code?r():e?s(e):void(o||setImmediate(function(){!1===a||o?o||(o=!0,i()):r()}))}),n.headers&&t.on("headers",function(e){for(var t=n.headers,i=Object.keys(t),a=0;a<i.length;a++){var o=i[a];e.setHeader(o,t[o])}}),t.pipe(e)}function C(e,t,n,i){var a=t||n?JSON.stringify(e,t,n):JSON.stringify(e);return i&&(a=a.replace(/[<>&]/g,function(e){switch(e.charCodeAt(0)){case 60:return"\\u003c";case 62:return"\\u003e";case 38:return"\\u0026";default:return e}})),a}j.status=function(e){return this.statusCode=e,this},j.links=function(e){var t=this.get("Link")||"";return t&&(t+=", "),this.set("Link",t+Object.keys(e).map(function(t){return"<"+e[t]+'>; rel="'+t+'"'}).join(", "))},j.send=function(e){var t,n,a=e,r=this.req,s=this.app;switch(2===arguments.length&&("number"!=typeof arguments[0]&&"number"==typeof arguments[1]?(o("res.send(body, status): Use res.status(status).send(body) instead"),this.statusCode=arguments[1]):(o("res.send(status, body): Use res.status(status).send(body) instead"),this.statusCode=arguments[0],a=arguments[1])),"number"==typeof a&&1===arguments.length&&(this.get("Content-Type")||this.type("txt"),o("res.send(status): Use res.sendStatus(status) instead"),this.statusCode=a,a=d[a]),typeof a){case"string":this.get("Content-Type")||this.type("html");break;case"boolean":case"number":case"object":if(null===a)a="";else{if(!i.isBuffer(a))return this.json(a);this.get("Content-Type")||this.type("bin")}}"string"==typeof a&&(t="utf8","string"==typeof(n=this.get("Content-Type"))&&this.set("Content-Type",x(n,"utf-8")));var c,p,l=s.get("etag fn"),u=!this.get("ETag")&&"function"==typeof l;return void 0!==a&&(i.isBuffer(a)?c=a.length:!u&&a.length<1e3?c=i.byteLength(a,t):(a=i.from(a,t),t=void 0,c=a.length),this.set("Content-Length",c)),u&&void 0!==c&&(p=l(a,t))&&this.set("ETag",p),r.fresh&&(this.statusCode=304),204!==this.statusCode&&304!==this.statusCode||(this.removeHeader("Content-Type"),this.removeHeader("Content-Length"),this.removeHeader("Transfer-Encoding"),a=""),"HEAD"===r.method?this.end():this.end(a,t),this},j.json=function(e){var t=e;2===arguments.length&&("number"==typeof arguments[1]?(o("res.json(obj, status): Use res.status(status).json(obj) instead"),this.statusCode=arguments[1]):(o("res.json(status, obj): Use res.status(status).json(obj) instead"),this.statusCode=arguments[0],t=arguments[1]));var n=this.app,i=n.get("json escape"),a=C(t,n.get("json replacer"),n.get("json spaces"),i);return this.get("Content-Type")||this.set("Content-Type","application/json"),this.send(a)},j.jsonp=function(e){var t=e;2===arguments.length&&("number"==typeof arguments[1]?(o("res.jsonp(obj, status): Use res.status(status).json(obj) instead"),this.statusCode=arguments[1]):(o("res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead"),this.statusCode=arguments[0],t=arguments[1]));var n=this.app,i=n.get("json escape"),a=C(t,n.get("json replacer"),n.get("json spaces"),i),r=this.req.query[n.get("jsonp callback name")];return this.get("Content-Type")||(this.set("X-Content-Type-Options","nosniff"),this.set("Content-Type","application/json")),Array.isArray(r)&&(r=r[0]),"string"==typeof r&&0!==r.length&&(this.set("X-Content-Type-Options","nosniff"),this.set("Content-Type","text/javascript"),a="/**/ typeof "+(r=r.replace(/[^\[\]\w$.]/g,""))+" === 'function' && "+r+"("+(a=a.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029"))+");"),this.send(a)},j.sendStatus=function(e){var t=d[e]||String(e);return this.statusCode=e,this.type("txt"),this.send(t)},j.sendFile=function(e,t,n){var i=n,a=this.req,o=a.next,r=t||{};if(!e)throw new TypeError("path argument is required to res.sendFile");if("function"==typeof t&&(i=t,r={}),!r.root&&!p(e))throw new TypeError("path must be absolute or specify root to res.sendFile");var s=encodeURI(e);S(this,b(a,s,r),r,function(e){return i?i(e):e&&"EISDIR"===e.code?o():void(e&&"ECONNABORTED"!==e.code&&"write"!==e.syscall&&o(e))})},j.sendfile=function(e,t,n){var i=n,a=this.req,o=a.next,r=t||{};"function"==typeof t&&(i=t,r={}),S(this,b(a,e,r),r,function(e){return i?i(e):e&&"EISDIR"===e.code?o():void(e&&"ECONNABORTED"!==e.code&&"write"!==e.syscall&&o(e))})},j.sendfile=o.function(j.sendfile,"res.sendfile: Use res.sendFile instead"),j.download=function(e,t,n,i){var o=i,r=t,s=n||null;"function"==typeof t?(o=t,r=null,s=null):"function"==typeof n&&(o=n,s=null);var c={"Content-Disposition":a(r||e)};if(s&&s.headers)for(var p=Object.keys(s.headers),l=0;l<p.length;l++){var u=p[l];"content-disposition"!==u.toLowerCase()&&(c[u]=s.headers[u])}(s=Object.create(s)).headers=c;var d=k(e);return this.sendFile(d,s,o)},j.contentType=j.type=function(e){var t=-1===e.indexOf("/")?w.lookup(e):e;return this.set("Content-Type",t)},j.format=function(e){var t=this.req,n=t.next,i=e.default;i&&delete e.default;var a=Object.keys(e),o=a.length>0&&t.accepts(a);if(this.vary("Accept"),o)this.set("Content-Type",h(o).value),e[o](t,this,n);else if(i)i();else{var r=new Error("Not Acceptable");r.status=r.statusCode=406,r.types=v(a).map(function(e){return e.value}),n(r)}return this},j.attachment=function(e){return e&&this.type(y(e)),this.set("Content-Disposition",a(e)),this},j.append=function(e,t){var n=this.get(e),i=t;return n&&(i=Array.isArray(n)?n.concat(t):Array.isArray(t)?[n].concat(t):[n,t]),this.set(e,i)},j.set=j.header=function(e,t){if(2===arguments.length){var n=Array.isArray(t)?t.map(String):String(t);if("content-type"===e.toLowerCase()){if(Array.isArray(n))throw new TypeError("Content-Type cannot be set to an Array");if(!E.test(n)){var i=w.charsets.lookup(n.split(";")[0]);i&&(n+="; charset="+i.toLowerCase())}}this.setHeader(e,n)}else for(var a in e)this.set(a,e[a]);return this},j.get=function(e){return this.getHeader(e)},j.clearCookie=function(e,t){var n=m({expires:new Date(1),path:"/"},t);return this.cookie(e,"",n)},j.cookie=function(e,t,n){var i=m({},n),a=this.req.secret,o=i.signed;if(o&&!a)throw new Error('cookieParser("secret") required for signed cookies');var r="object"==typeof t?"j:"+JSON.stringify(t):String(t);return o&&(r="s:"+f(r,a)),"maxAge"in i&&(i.expires=new Date(Date.now()+i.maxAge),i.maxAge/=1e3),null==i.path&&(i.path="/"),this.append("Set-Cookie",g.serialize(e,String(r),i)),this},j.location=function(e){var t=e;return"back"===e&&(t=this.req.get("Referrer")||"/"),this.set("Location",r(t))},j.redirect=function(e){var t,n=e,a=302;2===arguments.length&&("number"==typeof arguments[0]?(a=arguments[0],n=arguments[1]):(o("res.redirect(url, status): Use res.redirect(status, url) instead"),a=arguments[1])),n=this.location(n).get("Location"),this.format({text:function(){t=d[a]+". Redirecting to "+n},html:function(){var e=s(n);t="<p>"+d[a]+'. Redirecting to <a href="'+e+'">'+e+"</a></p>"},default:function(){t=""}}),this.statusCode=a,this.set("Content-Length",i.byteLength(t)),"HEAD"===this.req.method?this.end():this.end(t)},j.vary=function(e){return!e||Array.isArray(e)&&!e.length?(o("res.vary(): Provide a field name"),this):(_(this,e),this)},j.render=function(e,t,n){var i=this.req.app,a=n,o=t||{},r=this.req,s=this;"function"==typeof t&&(a=t,o={}),o._locals=s.locals,a=a||function(e,t){if(e)return r.next(e);s.send(t)},i.render(e,o,a)}},function(e,t,n){"use strict";
/*!
 * vary
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,t){if(!e||!e.getHeader||!e.setHeader)throw new TypeError("res argument is required");var n=e.getHeader("Vary")||"",i=Array.isArray(n)?n.join(", "):String(n);(n=a(i,t))&&e.setHeader("Vary",n)},e.exports.append=a;var i=/^[!#$%&'*+\-.^_`|~0-9A-Za-z]+$/;function a(e,t){if("string"!=typeof e)throw new TypeError("header argument is required");if(!t)throw new TypeError("field argument is required");for(var n=Array.isArray(t)?t:o(String(t)),a=0;a<n.length;a++)if(!i.test(n[a]))throw new TypeError("field argument contains an invalid header name");if("*"===e)return e;var r=e,s=o(e.toLowerCase());if(-1!==n.indexOf("*")||-1!==s.indexOf("*"))return"*";for(var c=0;c<n.length;c++){var p=n[c].toLowerCase();-1===s.indexOf(p)&&(s.push(p),r=r?r+", "+n[c]:n[c])}return r}function o(e){for(var t=0,n=[],i=0,a=0,o=e.length;a<o;a++)switch(e.charCodeAt(a)){case 32:i===t&&(i=t=a+1);break;case 44:n.push(e.substring(i,t)),i=t=a+1;break;default:t=a+1}return n.push(e.substring(i,t)),n}},function(e,t,n){"use strict";
/*!
 * serve-static
 * Copyright(c) 2010 Sencha Inc.
 * Copyright(c) 2011 TJ Holowaychuk
 * Copyright(c) 2014-2016 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(19),a=n(20),o=n(14),r=n(0).resolve,s=n(33),c=n(29);e.exports=function(e,t){if(!e)throw new TypeError("root path required");if("string"!=typeof e)throw new TypeError("root path must be a string");var n=Object.create(t||null),p=!1!==n.fallthrough,l=!1!==n.redirect,u=n.setHeaders;if(u&&"function"!=typeof u)throw new TypeError("option setHeaders must be function");n.maxage=n.maxage||n.maxAge||0,n.root=r(e);var d=l?function(e){if(this.hasTrailingSlash())this.error(404);else{var t=o.original(this.req);t.path=null,t.pathname=function(e){for(var t=0;t<e.length&&47===e.charCodeAt(t);t++);return t>1?"/"+e.substr(t):e}(t.pathname+"/");var n,r,s=i(c.format(t)),p=(n="Redirecting",r='Redirecting to <a href="'+a(s)+'">'+a(s)+"</a>",'<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>'+n+"</title>\n</head>\n<body>\n<pre>"+r+"</pre>\n</body>\n</html>\n");e.statusCode=301,e.setHeader("Content-Type","text/html; charset=UTF-8"),e.setHeader("Content-Length",Buffer.byteLength(p)),e.setHeader("Content-Security-Policy","default-src 'self'"),e.setHeader("X-Content-Type-Options","nosniff"),e.setHeader("Location",s),e.end(p)}}:function(){this.error(404)};return function(e,t,i){if("GET"!==e.method&&"HEAD"!==e.method)return p?i():(t.statusCode=405,t.setHeader("Allow","GET, HEAD"),t.setHeader("Content-Length","0"),void t.end());var a=!p,r=o.original(e),c=o(e).pathname;"/"===c&&"/"!==r.pathname.substr(-1)&&(c="");var l=s(e,c,n);l.on("directory",d),u&&l.on("headers",u),p&&l.on("file",function(){a=!0}),l.on("error",function(e){!a&&e.statusCode<500?i():i(e)}),l.pipe(t)}},e.exports.mime=s.mime},function(e,t,n){"use strict";
/*!
 * cookie-parser
 * Copyright(c) 2014 TJ Holowaychuk
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(59),a=n(58);function o(e){if("string"==typeof e&&"j:"===e.substr(0,2))try{return JSON.parse(e.slice(2))}catch(e){return}}function r(e){for(var t,n,i=Object.keys(e),a=0;a<i.length;a++)(n=o(e[t=i[a]]))&&(e[t]=n);return e}function s(e,t){if("string"==typeof e){if("s:"!==e.substr(0,2))return e;for(var n=!t||Array.isArray(t)?t||[]:[t],i=0;i<n.length;i++){var o=a.unsign(e.slice(2),n[i]);if(!1!==o)return o}return!1}}function c(e,t){for(var n,i,a,o=Object.keys(e),r=Object.create(null),c=0;c<o.length;c++)(a=e[i=o[c]])!==(n=s(a,t))&&(r[i]=n,delete e[i]);return r}e.exports=function(e,t){var n=!e||Array.isArray(e)?e||[]:[e];return function(e,a,o){if(e.cookies)return o();var s=e.headers.cookie;if(e.secret=n[0],e.cookies=Object.create(null),e.signedCookies=Object.create(null),!s)return o();e.cookies=i.parse(s,t),0!==n.length&&(e.signedCookies=c(e.cookies,n),e.signedCookies=r(e.signedCookies)),e.cookies=r(e.cookies),o()}},e.exports.JSONCookie=o,e.exports.JSONCookies=r,e.exports.signedCookie=s,e.exports.signedCookies=c},function(e,t,n){"use strict";
/*!
 * morgan
 * Copyright(c) 2010 Sencha Inc.
 * Copyright(c) 2011 TJ Holowaychuk
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=l,e.exports.compile=u,e.exports.format=function(e,t){return l[e]=t,this},e.exports.token=function(e,t){return l[e]=t,this};var i=n(142),a=n(1)("morgan"),o=n(3)("morgan"),r=n(12),s=n(143),c=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],p=1e3;function l(e,t){var n=e,i=t||{};e&&"object"==typeof e&&(n=(i=e).format||"default",o("morgan(options): use morgan("+("string"==typeof n?JSON.stringify(n):"format")+", options) instead")),void 0===n&&o("undefined format: specify a format");var c=i.immediate,m=i.skip||!1,f="function"!=typeof n?function(e){var t=l[e]||e||l.default;return"function"!=typeof t?u(t):t}(n):n,v=i.buffer,x=i.stream||process.stdout;v&&(o("buffer option"),x=function(e,t){var n=[],i=null;function a(){i=null,e.write(n.join("")),n.length=0}return{write:function(e){null===i&&(i=setTimeout(a,t));n.push(e)}}}(x,"number"!=typeof v?p:v));return function(e,t,n){function i(){if(!1!==m&&m(e,t))a("skip request");else{var n=f(l,e,t);null!=n?(a("log request"),x.write(n+"\n")):a("skip line")}}e._startAt=void 0,e._startTime=void 0,e._remoteAddress=d(e),t._startAt=void 0,t._startTime=void 0,h.call(e),c?i():(s(t,h),r(t,i)),n()}}function u(e){if("string"!=typeof e)throw new TypeError("argument format must be a string");var t='  "use strict"\n  return '+String(JSON.stringify(e)).replace(/:([-\w]{2,})(?:\[([^\]]+)\])?/g,function(e,t,n){var i="req, res",a="tokens["+String(JSON.stringify(t))+"]";return void 0!==n&&(i+=", "+String(JSON.stringify(n))),'" +\n    ('+a+"("+i+') || "-") + "'});return new Function("tokens, req, res",t)}function d(e){return e.ip||e._remoteAddress||e.connection&&e.connection.remoteAddress||void 0}function m(e){return"boolean"!=typeof e.headersSent?Boolean(e._header):e.headersSent}function f(e){var t=String(e);return(1===t.length?"0":"")+t}function h(){this._startAt=process.hrtime(),this._startTime=new Date}l.format("combined",':remote-addr - :remote-user [:date[clf]] ":method :url HTTP/:http-version" :status :res[content-length] ":referrer" ":user-agent"'),l.format("common",':remote-addr - :remote-user [:date[clf]] ":method :url HTTP/:http-version" :status :res[content-length]'),l.format("default",':remote-addr - :remote-user [:date] ":method :url HTTP/:http-version" :status :res[content-length] ":referrer" ":user-agent"'),o.property(l,"default","default format: use combined format"),l.format("short",":remote-addr :remote-user :method :url HTTP/:http-version :status :res[content-length] - :response-time ms"),l.format("tiny",":method :url :status :res[content-length] - :response-time ms"),l.format("dev",function e(t,n,i){var a=m(i)?i.statusCode:void 0,o=a>=500?31:a>=400?33:a>=300?36:a>=200?32:0,r=e[o];return r||(r=e[o]=u("[0m:method :url ["+o+"m:status [0m:response-time ms - :res[content-length][0m")),r(t,n,i)}),l.token("url",function(e){return e.originalUrl||e.url}),l.token("method",function(e){return e.method}),l.token("response-time",function(e,t,n){if(e._startAt&&t._startAt)return(1e3*(t._startAt[0]-e._startAt[0])+1e-6*(t._startAt[1]-e._startAt[1])).toFixed(void 0===n?3:n)}),l.token("date",function(e,t,n){var i=new Date;switch(n||"web"){case"clf":return function(e){var t=e.getUTCDate(),n=e.getUTCHours(),i=e.getUTCMinutes(),a=e.getUTCSeconds(),o=e.getUTCFullYear(),r=c[e.getUTCMonth()];return f(t)+"/"+r+"/"+o+":"+f(n)+":"+f(i)+":"+f(a)+" +0000"}(i);case"iso":return i.toISOString();case"web":return i.toUTCString()}}),l.token("status",function(e,t){return m(t)?String(t.statusCode):void 0}),l.token("referrer",function(e){return e.headers.referer||e.headers.referrer}),l.token("remote-addr",d),l.token("remote-user",function(e){var t=i(e);return t?t.name:void 0}),l.token("http-version",function(e){return e.httpVersionMajor+"."+e.httpVersionMinor}),l.token("user-agent",function(e){return e.headers["user-agent"]}),l.token("req",function(e,t,n){var i=e.headers[n.toLowerCase()];return Array.isArray(i)?i.join(", "):i}),l.token("res",function(e,t,n){if(m(t)){var i=t.getHeader(n);return Array.isArray(i)?i.join(", "):i}})},function(e,t,n){"use strict";
/*!
 * basic-auth
 * Copyright(c) 2013 TJ Holowaychuk
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015-2016 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(32).Buffer;e.exports=function(e){if(!e)throw new TypeError("argument req is required");if("object"!=typeof e)throw new TypeError("argument req is required to be an object");return r(function(e){if(!e.headers||"object"!=typeof e.headers)throw new TypeError("argument req is required to have headers property");return e.headers.authorization}(e))},e.exports.parse=r;var a=/^ *(?:[Bb][Aa][Ss][Ii][Cc]) +([A-Za-z0-9._~+\/-]+=*) *$/,o=/^([^:]*):(.*)$/;function r(e){if("string"==typeof e){var t=a.exec(e);if(t){var n,r=o.exec((n=t[1],i.from(n,"base64").toString()));if(r)return new s(r[1],r[2])}}}function s(e,t){this.name=e,this.pass=t}},function(e,t,n){"use strict";
/*!
 * on-headers
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,t){if(!e)throw new TypeError("argument res is required");if("function"!=typeof t)throw new TypeError("argument listener must be a function");e.writeHead=function(e,t){var n=!1;return function(i){var a=function(e){var t=arguments.length,n=t>1&&"string"==typeof arguments[1]?2:1,i=t>=n+1?arguments[n]:void 0;this.statusCode=e,Array.isArray(i)?function(e,t){for(var n=0;n<t.length;n++)e.setHeader(t[n][0],t[n][1])}(this,i):i&&function(e,t){for(var n=Object.keys(t),i=0;i<n.length;i++){var a=n[i];a&&e.setHeader(a,t[a])}}(this,i);for(var a=new Array(Math.min(t,n)),o=0;o<a.length;o++)a[o]=arguments[o];return a}.apply(this,arguments);return n||(n=!0,t.call(this),"number"==typeof a[0]&&this.statusCode!==a[0]&&(a[0]=this.statusCode,a.length=1)),e.apply(this,a)}}(e.writeHead,t)}},function(e,t,n){"use strict";var i=n(4).EventEmitter,a=n(2),o=n(35),r=n(148),s=n(67),c=n(68),p=n(154),l=n(23),u=n(69),d=function(e){i.call(this),this.connectionParameters=new c(e),this.user=this.connectionParameters.user,this.database=this.connectionParameters.database,this.port=this.connectionParameters.port,this.host=this.connectionParameters.host,this.password=this.connectionParameters.password,this.replication=this.connectionParameters.replication;var t=e||{};this._Promise=t.Promise||global.Promise,this._types=new s(t.types),this._ending=!1,this._connecting=!1,this._connected=!1,this._connectionError=!1,this._queryable=!0,this.connection=t.connection||new u({stream:t.stream,ssl:this.connectionParameters.ssl,keepAlive:t.keepAlive||!1,encoding:this.connectionParameters.client_encoding||"utf8"}),this.queryQueue=[],this.binary=t.binary||l.binary,this.processID=null,this.secretKey=null,this.ssl=this.connectionParameters.ssl||!1};a.inherits(d,i),d.prototype._errorAllQueries=function(e){const t=t=>{process.nextTick(()=>{t.handleError(e,this.connection)})};this.activeQuery&&(t(this.activeQuery),this.activeQuery=null),this.queryQueue.forEach(t),this.queryQueue.length=0},d.prototype._connect=function(e){var t=this,n=this.connection;if(this._connecting||this._connected){const t=new Error("Client has already been connected. You cannot reuse a client.");return void process.nextTick(()=>{e(t)})}function i(e){return function(n){null!==t.password?e(n):r(t.connectionParameters,function(i){void 0!==i&&(t.connectionParameters.password=t.password=i),e(n)})}}this._connecting=!0,this.host&&0===this.host.indexOf("/")?n.connect(this.host+"/.s.PGSQL."+this.port):n.connect(this.port,this.host),n.on("connect",function(){t.ssl?n.requestSsl():n.startup(t.getStartupConf())}),n.on("sslconnect",function(){n.startup(t.getStartupConf())}),n.on("authenticationCleartextPassword",i(function(){n.password(t.password)})),n.on("authenticationMD5Password",i(function(e){n.password(o.postgresMd5PasswordHash(t.user,t.password,e.salt))})),n.once("backendKeyData",function(e){t.processID=e.processID,t.secretKey=e.secretKey});const a=t=>{if(!this._connectionError){if(this._connectionError=!0,e)return e(t);this.emit("error",t)}},s=e=>{this._queryable=!1,this._errorAllQueries(e),this.emit("error",e)},c=e=>{const t=this.activeQuery;t?(this.activeQuery=null,t.handleError(e,n)):s(e)};n.on("error",a),n.on("errorMessage",a),n.once("readyForQuery",function(){t._connecting=!1,t._connected=!0,t._attachListeners(n),n.removeListener("error",a),n.removeListener("errorMessage",a),n.on("error",s),n.on("errorMessage",c),e&&(e(null,t),e=null),t.emit("connect")}),n.on("readyForQuery",function(){var e=t.activeQuery;t.activeQuery=null,t.readyForQuery=!0,e&&e.handleReadyForQuery(n),t._pulseQueryQueue()}),n.once("end",()=>{const t=this._ending?new Error("Connection terminated"):new Error("Connection terminated unexpectedly");this._errorAllQueries(t),this._ending||(this._connecting&&!this._connectionError?e?e(t):s(t):this._connectionError||s(t)),process.nextTick(()=>{this.emit("end")})}),n.on("notice",function(e){t.emit("notice",e)})},d.prototype.connect=function(e){if(!e)return new this._Promise((e,t)=>{this._connect(n=>{n?t(n):e()})});this._connect(e)},d.prototype._attachListeners=function(e){const t=this;e.on("rowDescription",function(e){t.activeQuery.handleRowDescription(e)}),e.on("dataRow",function(e){t.activeQuery.handleDataRow(e)}),e.on("portalSuspended",function(n){t.activeQuery.handlePortalSuspended(e)}),e.on("emptyQuery",function(n){t.activeQuery.handleEmptyQuery(e)}),e.on("commandComplete",function(n){t.activeQuery.handleCommandComplete(n,e)}),e.on("parseComplete",function(n){t.activeQuery.name&&(e.parsedStatements[t.activeQuery.name]=!0)}),e.on("copyInResponse",function(e){t.activeQuery.handleCopyInResponse(t.connection)}),e.on("copyData",function(e){t.activeQuery.handleCopyData(e,t.connection)}),e.on("notification",function(e){t.emit("notification",e)})},d.prototype.getStartupConf=function(){var e=this.connectionParameters,t={user:e.user,database:e.database},n=e.application_name||e.fallback_application_name;return n&&(t.application_name=n),e.replication&&(t.replication=""+e.replication),e.statement_timeout&&(t.statement_timeout=String(parseInt(e.statement_timeout,10))),t},d.prototype.cancel=function(e,t){if(e.activeQuery===t){var n=this.connection;this.host&&0===this.host.indexOf("/")?n.connect(this.host+"/.s.PGSQL."+this.port):n.connect(this.port,this.host),n.on("connect",function(){n.cancel(e.processID,e.secretKey)})}else-1!==e.queryQueue.indexOf(t)&&e.queryQueue.splice(e.queryQueue.indexOf(t),1)},d.prototype.setTypeParser=function(e,t,n){return this._types.setTypeParser(e,t,n)},d.prototype.getTypeParser=function(e,t){return this._types.getTypeParser(e,t)},d.prototype.escapeIdentifier=function(e){return'"'+e.replace(/"/g,'""')+'"'},d.prototype.escapeLiteral=function(e){for(var t=!1,n="'",i=0;i<e.length;i++){var a=e[i];"'"===a?n+=a+a:"\\"===a?(n+=a+a,t=!0):n+=a}return n+="'",!0===t&&(n=" E"+n),n},d.prototype._pulseQueryQueue=function(){if(!0===this.readyForQuery)if(this.activeQuery=this.queryQueue.shift(),this.activeQuery){this.readyForQuery=!1,this.hasExecuted=!0;const e=this.activeQuery.submit(this.connection);e&&process.nextTick(()=>{this.activeQuery.handleError(e,this.connection),this.readyForQuery=!0,this._pulseQueryQueue()})}else this.hasExecuted&&(this.activeQuery=null,this.emit("drain"))},d.prototype.query=function(e,t,n){var i,a,o,r,s;if(null==e)throw new TypeError("Client was passed a null or undefined query");return"function"==typeof e.submit?(o=e.query_timeout||this.connectionParameters.query_timeout,a=i=e,"function"==typeof t&&(i.callback=i.callback||t)):(o=this.connectionParameters.query_timeout,(i=new p(e,t,n)).callback||(a=new this._Promise((e,t)=>{i.callback=((n,i)=>n?t(n):e(i))}))),o&&(s=i.callback,r=setTimeout(()=>{var e=new Error("Query read timeout");process.nextTick(()=>{i.handleError(e,this.connection)}),s(e),i.callback=(()=>{});var t=this.queryQueue.indexOf(i);t>-1&&this.queryQueue.splice(t,1),this._pulseQueryQueue()},o),i.callback=((e,t)=>{clearTimeout(r),s(e,t)})),this.binary&&!i.binary&&(i.binary=!0),i._result&&(i._result._getTypeParser=this._types.getTypeParser.bind(this._types)),this._queryable?this._ending?(process.nextTick(()=>{i.handleError(new Error("Client was closed and is not queryable"),this.connection)}),a):(this.queryQueue.push(i),this._pulseQueryQueue(),a):(process.nextTick(()=>{i.handleError(new Error("Client has encountered a connection error and is not queryable"),this.connection)}),a)},d.prototype.end=function(e){if(this._ending=!0,this.activeQuery?this.connection.stream.destroy():this.connection.end(),!e)return new this._Promise(e=>{this.connection.once("end",e)});this.connection.once("end",e)},d.Query=p,e.exports=d},function(e,t,n){var i=n(61),a=n(62),o=n(63),r=n(64),s=n(65);function c(e){return function(t){return null===t?t:e(t)}}function p(e){return null===e?e:"TRUE"===e||"t"===e||"true"===e||"y"===e||"yes"===e||"on"===e||"1"===e}function l(e){return e?i.parse(e,p):null}function u(e){return parseInt(e,10)}function d(e){return e?i.parse(e,c(u)):null}function m(e){return e?i.parse(e,c(function(e){return w(e).trim()})):null}var f=function(e){return e?a.create(e,function(e){return null!==e&&(e=_(e)),e}).parse():null},h=function(e){return e?a.create(e,function(e){return null!==e&&(e=parseFloat(e)),e}).parse():null},v=function(e){return e?a.create(e).parse():null},x=function(e){return e?a.create(e,function(e){return null!==e&&(e=o(e)),e}).parse():null},g=function(e){return e?a.create(e,function(e){return null!==e&&(e=r(e)),e}).parse():null},b=function(e){return e?i.parse(e,c(s)):null},y=function(e){return parseInt(e,10)},w=function(e){var t=String(e);return/^\d+$/.test(t)?t:e},k=function(e){return e?i.parse(e,c(JSON.parse)):null},_=function(e){return"("!==e[0]?null:(e=e.substring(1,e.length-1).split(","),{x:parseFloat(e[0]),y:parseFloat(e[1])})},j=function(e){if("<"!==e[0]&&"("!==e[1])return null;for(var t="(",n="",i=!1,a=2;a<e.length-1;a++)i||(t+=e[a]),")"!==e[a]?i&&","!==e[a]&&(n+=e[a]):i=!0;var o=_(t);return o.radius=parseFloat(n),o};e.exports={init:function(e){e(20,w),e(21,y),e(23,y),e(26,y),e(700,parseFloat),e(701,parseFloat),e(16,p),e(1082,o),e(1114,o),e(1184,o),e(600,_),e(651,v),e(718,j),e(1e3,l),e(1001,b),e(1005,d),e(1007,d),e(1028,d),e(1016,m),e(1017,f),e(1021,h),e(1022,h),e(1231,h),e(1014,v),e(1015,v),e(1008,v),e(1009,v),e(1040,v),e(1041,v),e(1115,x),e(1182,x),e(1185,x),e(1186,r),e(1187,g),e(17,s),e(114,JSON.parse.bind(JSON)),e(3802,JSON.parse.bind(JSON)),e(199,k),e(3807,k),e(3907,v),e(2951,v),e(791,v),e(1183,v),e(1270,v)}}},function(e,t){e.exports=function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var a in i)n.call(i,a)&&(e[a]=i[a])}return e};var n=Object.prototype.hasOwnProperty},function(e,t,n){var i=n(66),a=function(e,t,n,i,a){i=i||!1,a=a||function(e,t,n){return e*Math.pow(2,n)+t};var o=(n=n||0)>>3,r=function(e){return i?255&~e:e},s=255,c=8-n%8;t<c&&(s=255<<8-t&255,c=t),n&&(s>>=n%8);var p=0;n%8+t>=8&&(p=a(0,r(e[o])&s,c));for(var l=t+n>>3,u=o+1;u<l;u++)p=a(p,r(e[u]),8);var d=(t+n)%8;return d>0&&(p=a(p,r(e[l])>>8-d,d)),p},o=function(e,t,n){var i=Math.pow(2,n-1)-1,o=a(e,1),r=a(e,n,1);if(0===r)return 0;var s=1,c=a(e,t,n+1,!1,function(e,t,n){0===e&&(e=1);for(var i=1;i<=n;i++)s/=2,(t&1<<n-i)>0&&(e+=s);return e});return r==Math.pow(2,n+1)-1?0===c?0===o?1/0:-1/0:NaN:(0===o?1:-1)*Math.pow(2,r-i)*c},r=function(e){return 1==a(e,1)?-1*(a(e,15,1,!0)+1):a(e,15,1)},s=function(e){return 1==a(e,1)?-1*(a(e,31,1,!0)+1):a(e,31,1)},c=function(e){return o(e,23,8)},p=function(e){return o(e,52,11)},l=function(e){var t=a(e,16,32);if(49152==t)return NaN;for(var n=Math.pow(1e4,a(e,16,16)),i=0,o=a(e,16),r=0;r<o;r++)i+=a(e,16,64+16*r)*n,n/=1e4;var s=Math.pow(10,a(e,16,48));return(0===t?1:-1)*Math.round(i*s)/s},u=function(e,t){var n=a(t,1),i=a(t,63,1),o=new Date((0===n?1:-1)*i/1e3+9466848e5);return e||o.setTime(o.getTime()+6e4*o.getTimezoneOffset()),o.usec=i%1e3,o.getMicroSeconds=function(){return this.usec},o.setMicroSeconds=function(e){this.usec=e},o.getUTCMicroSeconds=function(){return this.usec},o},d=function(e){for(var t=a(e,32),n=(a(e,32,32),a(e,32,64)),i=96,o=[],r=0;r<t;r++)o[r]=a(e,32,i),i+=32,i+=32;var s=function(t){var n,o=a(e,32,i);return i+=32,4294967295==o?null:23==t||20==t?(n=a(e,8*o,i),i+=8*o,n):25==t?n=e.toString(this.encoding,i>>3,(i+=o<<3)>>3):void console.log("ERROR: ElementType not implemented: "+t)},c=function(e,t){var n,i=[];if(e.length>1){var a=e.shift();for(n=0;n<a;n++)i[n]=c(e,t);e.unshift(a)}else for(n=0;n<e[0];n++)i[n]=s(t);return i};return c(o,n)},m=function(e){return e.toString("utf8")},f=function(e){return null===e?null:a(e,8)>0};e.exports={init:function(e){e(20,i),e(21,r),e(23,s),e(26,s),e(1700,l),e(700,c),e(701,p),e(16,f),e(1114,u.bind(null,!1)),e(1184,u.bind(null,!0)),e(1e3,d),e(1007,d),e(1016,d),e(1008,d),e(1009,d),e(25,m)}}},function(e,t,n){"use strict";n(0);var i=n(6),a=n(149);e.exports=function(e,t){var n=a.getFileName();i.stat(n,function(o,r){if(o||!a.usePgPass(r,n))return t(void 0);var s=i.createReadStream(n);a.getPassword(e,s,t)})},e.exports.warnTo=a.warnTo},function(e,t,n){"use strict";var i=n(0),a=n(5).Stream,o=n(150),r=n(2),s="win32"===process.platform,c=process.stderr,p=61440,l=32768;var u=["host","port","database","user","password"],d=u.length,m=u[d-1];function f(){if(c instanceof a&&!0===c.writable){var e=Array.prototype.slice.call(arguments).concat("\n");c.write(r.format.apply(r,e))}}Object.defineProperty(e.exports,"isWin",{get:function(){return s},set:function(e){s=e}}),e.exports.warnTo=function(e){var t=c;return c=e,t},e.exports.getFileName=function(e){return(e=e||process.env).PGPASSFILE||(s?i.join(e.APPDATA,"postgresql","pgpass.conf"):i.join(e.HOME,".pgpass"))},e.exports.usePgPass=function(e,t){return!Object.prototype.hasOwnProperty.call(process.env,"PGPASSWORD")&&(!!s||(t=t||"<unkn>",(e.mode&p)!=l?(f('WARNING: password file "%s" is not a plain file',t),!1):!(63&e.mode)||(f('WARNING: password file "%s" has group or world access; permissions should be u=rw (0600) or less',t),!1)))};var h=e.exports.match=function(e,t){return u.slice(0,-1).reduce(function(n,i,a){return 1==a&&Number(e[i]||5432)===Number(t[i])?n&&!0:n&&("*"===t[i]||t[i]===e[i])},!0)};e.exports.getPassword=function(e,t,n){var i,a=t.pipe(new o);var r=function(e){t.destroy(),f("WARNING: error on reading file: %s",e),n(void 0)};t.on("error",r),a.on("data",function(t){var n=v(t);n&&x(n)&&h(e,n)&&(i=n[m],a.end())}).on("end",function(){t.destroy(),n(i)}).on("error",r)};var v=e.exports.parseLine=function(e){if(e.length<11||e.match(/^\s+#/))return null;for(var t="",n="",i=0,a=0,o={},r=function(t,n,i){var a=e.substring(n,i);Object.hasOwnProperty.call(process.env,"PGPASS_NO_DEESCAPE")||(a=a.replace(/\\([:\\])/g,"$1")),o[u[t]]=a},s=0;s<e.length-1;s+=1){if(t=e.charAt(s+1),n=e.charAt(s),i==d-1){r(i,a);break}s>=0&&":"==t&&"\\"!==n&&(r(i,a,s+1),a=s+2,i+=1)}return o=Object.keys(o).length===d?o:null},x=e.exports.isValidEntry=function(e){for(var t={0:function(e){return e.length>0},1:function(e){return"*"===e||(e=Number(e),isFinite(e)&&e>0&&e<9007199254740992&&Math.floor(e)===e)},2:function(e){return e.length>0},3:function(e){return e.length>0},4:function(e){return e.length>0}},n=0;n<u.length;n+=1){if(!(0,t[n])(e[u[n]]||""))return!1}return!0}},function(e,t,n){var i=n(151),a=n(40).StringDecoder;e.exports=function(e,t,n){var o=new a,r="",s=n&&n.maxLength,c=!n||!1!==n.trailing;"function"==typeof e&&(t=e,e=null);e||(e=/\r?\n/);function p(e,n){if(t){try{n=t(n)}catch(t){return e.emit("error",t)}void 0!==n&&e.queue(n)}else e.queue(n)}function l(t,n){var i=((null!=r?r:"")+n).split(e);if(r=i.pop(),s&&r.length>s)return t.emit("error",new Error("maximum buffer reached"));for(var a=0;a<i.length;a++){var o=i[a];p(t,o)}}return i(function(e){l(this,o.write(e))},function(){o.end&&l(this,o.end()),c&&null!=r&&p(this,r),this.queue(null)})}},function(e,t,n){var i=n(5);function a(e,t,n){e=e||function(e){this.queue(e)},t=t||function(){this.queue(null)};var a=!1,o=!1,r=[],s=!1,c=new i;function p(){for(;r.length&&!c.paused;){var e=r.shift();if(null===e)return c.emit("end");c.emit("data",e)}}return c.readable=c.writable=!0,c.paused=!1,c.autoDestroy=!(n&&!1===n.autoDestroy),c.write=function(t){return e.call(this,t),!c.paused},c.queue=c.push=function(e){return s?c:(null===e&&(s=!0),r.push(e),p(),c)},c.on("end",function(){c.readable=!1,!c.writable&&c.autoDestroy&&process.nextTick(function(){c.destroy()})}),c.end=function(e){if(!a)return a=!0,arguments.length&&c.write(e),c.writable=!1,t.call(c),!c.readable&&c.autoDestroy&&c.destroy(),c},c.destroy=function(){if(!o)return o=!0,a=!0,r.length=0,c.writable=c.readable=!1,c.emit("close"),c},c.pause=function(){if(!c.paused)return c.paused=!0,c},c.resume=function(){return c.paused&&(c.paused=!1,c.emit("resume")),p(),c.paused||c.emit("drain"),c},c}e.exports=a,a.through=a},function(e,t){e.exports=require("dns")},function(e,t,n){"use strict";var i=n(29);e.exports={parse:function(e){var t;if("/"===e.charAt(0))return{host:(t=e.split(" "))[0],database:t[1]};/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(e)&&(e=encodeURI(e).replace(/\%25(\d\d)/g,"%$1"));var n=i.parse(e,!0);if(t={},n.query.application_name&&(t.application_name=n.query.application_name),n.query.fallback_application_name&&(t.fallback_application_name=n.query.fallback_application_name),t.port=n.port,"socket:"==n.protocol)return t.host=decodeURI(n.pathname),t.database=n.query.db,t.client_encoding=n.query.encoding,t;t.host=n.hostname;var a=n.pathname;a&&"/"===a.charAt(0)&&(a=n.pathname.slice(1)||null),t.database=a&&decodeURI(a);var o=(n.auth||":").split(":");t.user=o[0],t.password=o.splice(1).join(":");var r=n.query.ssl;return"true"!==r&&"1"!==r||(t.ssl=!0),t}}},function(e,t,n){"use strict";var i=n(4).EventEmitter,a=n(2),o=n(155),r=n(35),s=function(e,t,n){if(!(this instanceof s))return new s(e,t,n);e=r.normalizeQueryConfig(e,t,n),this.text=e.text,this.values=e.values,this.rows=e.rows,this.types=e.types,this.name=e.name,this.binary=e.binary,this.portal=e.portal||"",this.callback=e.callback,this._rowMode=e.rowMode,process.domain&&e.callback&&(this.callback=process.domain.bind(e.callback)),this._result=new o(this._rowMode,this.types),this._results=this._result,this.isPreparedStatement=!1,this._canceledDueToError=!1,this._promise=null,i.call(this)};a.inherits(s,i),s.prototype.requiresPreparation=function(){return!!this.name||(!!this.rows||!!this.text&&(!!this.values&&this.values.length>0))},s.prototype._checkForMultirow=function(){this._result.command&&(Array.isArray(this._results)||(this._results=[this._result]),this._result=new o(this._rowMode,this.types),this._results.push(this._result))},s.prototype.handleRowDescription=function(e){this._checkForMultirow(),this._result.addFields(e.fields),this._accumulateRows=this.callback||!this.listeners("row").length},s.prototype.handleDataRow=function(e){var t;if(!this._canceledDueToError){try{t=this._result.parseRow(e.fields)}catch(e){return void(this._canceledDueToError=e)}this.emit("row",t,this._result),this._accumulateRows&&this._result.addRow(t)}},s.prototype.handleCommandComplete=function(e,t){this._checkForMultirow(),this._result.addCommandComplete(e),this.isPreparedStatement&&t.sync()},s.prototype.handleEmptyQuery=function(e){this.isPreparedStatement&&e.sync()},s.prototype.handleReadyForQuery=function(e){if(this._canceledDueToError)return this.handleError(this._canceledDueToError,e);this.callback&&this.callback(null,this._results),this.emit("end",this._results)},s.prototype.handleError=function(e,t){if(this.isPreparedStatement&&t.sync(),this._canceledDueToError&&(e=this._canceledDueToError,this._canceledDueToError=!1),this.callback)return this.callback(e);this.emit("error",e)},s.prototype.submit=function(e){return"string"!=typeof this.text&&"string"!=typeof this.name?new Error("A query must have either text or a name. Supplying neither is unsupported."):this.values&&!Array.isArray(this.values)?new Error("Query values must be an array"):(this.requiresPreparation()?this.prepare(e):e.query(this.text),null)},s.prototype.hasBeenParsed=function(e){return this.name&&e.parsedStatements[this.name]},s.prototype.handlePortalSuspended=function(e){this._getRows(e,this.rows)},s.prototype._getRows=function(e,t){e.execute({portal:this.portal,rows:t},!0),e.flush()},s.prototype.prepare=function(e){this.isPreparedStatement=!0,this.hasBeenParsed(e)||e.parse({text:this.text,name:this.name,types:this.types},!0),this.values&&(this.values=this.values.map(r.prepareValue)),e.bind({portal:this.portal,statement:this.name,values:this.values,binary:this.binary},!0),e.describe({type:"P",name:this.portal||""},!0),this._getRows(e,this.rows)},s.prototype.handleCopyInResponse=function(e){e.sendCopyFail("No source stream defined")},s.prototype.handleCopyData=function(e,t){},e.exports=s},function(e,t,n){"use strict";var i=n(24),a=function(e){this.command=null,this.rowCount=null,this.oid=null,this.rows=[],this.fields=[],this._parsers=[],this.RowCtor=null,this.rowAsArray="array"===e,this.rowAsArray&&(this.parseRow=this._parseRowAsArray)},o=/^([A-Za-z]+)(?: (\d+))?(?: (\d+))?/;a.prototype.addCommandComplete=function(e){var t;(t=e.text?o.exec(e.text):o.exec(e.command))&&(this.command=t[1],t[3]?(this.oid=parseInt(t[2],10),this.rowCount=parseInt(t[3],10)):t[2]&&(this.rowCount=parseInt(t[2],10)))},a.prototype._parseRowAsArray=function(e){for(var t=[],n=0,i=e.length;n<i;n++){var a=e[n];null!==a?t.push(this._parsers[n](a)):t.push(null)}return t},a.prototype.parseRow=function(e){for(var t={},n=0,i=e.length;n<i;n++){var a=e[n],o=this.fields[n].name;t[o]=null!==a?this._parsers[n](a):null}return t},a.prototype.addRow=function(e){this.rows.push(e)},a.prototype.addFields=function(e){this.fields.length&&(this.fields=[],this._parsers=[]);for(var t=0;t<e.length;t++){var n=e[t];this.fields.push(n);var i=this._getTypeParser(n.dataTypeID,n.format||"text");this._parsers.push(i)}},a.prototype._getTypeParser=i.getTypeParser,e.exports=a},function(e,t){var n=e.exports=function(e){this.size=e||1024,this.buffer=Buffer.alloc(this.size+5),this.offset=5,this.headerPosition=0};n.prototype._ensure=function(e){if(this.buffer.length-this.offset<e){var t=this.buffer,n=t.length+(t.length>>1)+e;this.buffer=Buffer.alloc(n),t.copy(this.buffer)}},n.prototype.addInt32=function(e){return this._ensure(4),this.buffer[this.offset++]=e>>>24&255,this.buffer[this.offset++]=e>>>16&255,this.buffer[this.offset++]=e>>>8&255,this.buffer[this.offset++]=e>>>0&255,this},n.prototype.addInt16=function(e){return this._ensure(2),this.buffer[this.offset++]=e>>>8&255,this.buffer[this.offset++]=e>>>0&255,this};var i=function(e,t,n,i){e.write(t,n,i)};3===Buffer.prototype.write.length&&(i=function(e,t,n,i){e.write(t,n)}),n.prototype.addCString=function(e){if(e){var t=Buffer.byteLength(e);this._ensure(t+1),i(this.buffer,e,this.offset,t),this.offset+=t}else this._ensure(1);return this.buffer[this.offset++]=0,this},n.prototype.addChar=function(e){return this._ensure(1),i(this.buffer,e,this.offset,1),this.offset++,this},n.prototype.addString=function(e){e=e||"";var t=Buffer.byteLength(e);return this._ensure(t),this.buffer.write(e,this.offset),this.offset+=t,this},n.prototype.getByteLength=function(){return this.offset-5},n.prototype.add=function(e){return this._ensure(e.length),e.copy(this.buffer,this.offset),this.offset+=e.length,this},n.prototype.clear=function(){this.offset=5,this.headerPosition=0,this.lastEnd=0},n.prototype.addHeader=function(e,t){var n=this.offset;this.offset=this.headerPosition,this.buffer[this.offset++]=e,this.addInt32(n-(this.headerPosition+1)),this.headerPosition=n,this.offset=n,t||(this._ensure(5),this.offset+=5)},n.prototype.join=function(e){return e&&this.addHeader(e,!0),this.buffer.slice(e?0:5,this.offset)},n.prototype.flush=function(e){var t=this.join(e);return this.clear(),t}},function(e,t,n){var i=n(25),a=e.exports=function(e){"number"==typeof e&&(e={headerSize:e}),e=e||{},this.offset=0,this.lastChunk=!1,this.chunk=null,this.chunkLength=0,this.headerSize=e.headerSize||0,this.lengthPadding=e.lengthPadding||0,this.header=null,i(this.headerSize<2,"pre-length header of more than 1 byte length not currently supported")};a.prototype.addChunk=function(e){if(!this.chunk||this.offset===this.chunkLength)return this.chunk=e,this.chunkLength=e.length,void(this.offset=0);var t=e.length,n=this.chunkLength+t;if(n>this.chunk.length){for(var i=2*this.chunk.length;n>=i;)i*=2;var a=Buffer.alloc(i);this.chunk.copy(a),this.chunk=a}e.copy(this.chunk,this.chunkLength),this.chunkLength=n},a.prototype.read=function(){if(this.chunkLength<this.headerSize+4+this.offset)return!1;this.headerSize&&(this.header=this.chunk[this.offset]);var e=this.chunk.readUInt32BE(this.offset+this.headerSize)+this.lengthPadding;if(e>this.chunkLength-(this.offset+4+this.headerSize))return!1;this.offset+=this.headerSize+4;var t=this.chunk.slice(this.offset,this.offset+e);return this.offset+=e,t}},function(e,t){e.exports=require("tls")},function(e,t,n){"use strict";const i=n(4).EventEmitter,a=function(){},o=(e,t)=>{const n=e.findIndex(t);return-1===n?void 0:e.splice(n,1)[0]};class r{constructor(e,t){this.client=e,this.timeoutId=t}}class s{constructor(e){this.callback=e}}function c(){throw new Error("Release called on client which has already been released to the pool.")}function p(e,t){if(e.release=c,t||this.ending)return this._remove(e),void this._pulseQueue();let n;this.options.idleTimeoutMillis&&(n=setTimeout(()=>{this.log("remove idle client"),this._remove(e)},this.options.idleTimeoutMillis)),this._idle.push(new r(e,n)),this._pulseQueue()}function l(e,t){if(t)return{callback:t,result:void 0};let n,i;return{callback:function(e,t){e?n(e):i(t)},result:new e(function(e,t){i=e,n=t})}}e.exports=class extends i{constructor(e,t){super(),this.options=Object.assign({},e),this.options.max=this.options.max||this.options.poolSize||10,this.log=this.options.log||function(){},this.Client=this.options.Client||t||n(60).Client,this.Promise=this.options.Promise||global.Promise,void 0===this.options.idleTimeoutMillis&&(this.options.idleTimeoutMillis=1e4),this._clients=[],this._idle=[],this._pendingQueue=[],this._endCallback=void 0,this.ending=!1,this.ended=!1}_isFull(){return this._clients.length>=this.options.max}_pulseQueue(){if(this.log("pulse queue"),this.ended)return void this.log("pulse queue ended");if(this.ending)return this.log("pulse queue on ending"),this._idle.length&&this._idle.slice().map(e=>{this._remove(e.client)}),void(this._clients.length||(this.ended=!0,this._endCallback()));if(!this._pendingQueue.length)return void this.log("no queued requests");if(!this._idle.length&&this._isFull())return;const e=this._pendingQueue.shift();if(this._idle.length){const t=this._idle.pop();clearTimeout(t.timeoutId);const n=t.client;return n.release=p.bind(this,n),this.emit("acquire",n),e.callback(void 0,n,n.release)}if(!this._isFull())return this.newClient(e);throw new Error("unexpected condition")}_remove(e){const t=o(this._idle,t=>t.client===e);void 0!==t&&clearTimeout(t.timeoutId),this._clients=this._clients.filter(t=>t!==e),e.end(),this.emit("remove",e)}connect(e){if(this.ending){const t=new Error("Cannot use a pool after calling end on the pool");return e?e(t):this.Promise.reject(t)}const t=l(this.Promise,e),n=t.result;if(this._clients.length>=this.options.max||this._idle.length){if(this._idle.length&&process.nextTick(()=>this._pulseQueue()),!this.options.connectionTimeoutMillis)return this._pendingQueue.push(new s(t.callback)),n;const e=(e,n,i)=>{clearTimeout(a),t.callback(e,n,i)},i=new s(e),a=setTimeout(()=>{o(this._pendingQueue,t=>t.callback===e),i.timedOut=!0,t.callback(new Error("timeout exceeded when trying to connect"))},this.options.connectionTimeoutMillis);return this._pendingQueue.push(i),n}return this.newClient(new s(t.callback)),n}newClient(e){const t=new this.Client(this.options);this._clients.push(t);const n=function(e,t){return function n(i){i.client=t,t.removeListener("error",n),t.on("error",()=>{e.log("additional client error after disconnection due to error",i)}),e._remove(t),e.emit("error",i,t)}}(this,t);let i;this.log("checking client timeout");let o=!1;this.options.connectionTimeoutMillis&&(i=setTimeout(()=>{this.log("ending client due to timeout"),o=!0,t.connection?t.connection.stream.destroy():t.end()},this.options.connectionTimeoutMillis)),this.log("connecting new client"),t.connect(r=>{i&&clearTimeout(i),t.on("error",n),r?(this.log("client failed to connect",r),this._clients=this._clients.filter(e=>e!==t),o&&(r.message="Connection terminated due to connection timeout"),this._pulseQueue(),e.timedOut||e.callback(r,void 0,a)):(this.log("new client connected"),t.release=p.bind(this,t),this.emit("connect",t),this.emit("acquire",t),e.timedOut?this.options.verify?this.options.verify(t,t.release):t.release():this.options.verify?this.options.verify(t,e.callback):e.callback(void 0,t,t.release))})}query(e,t,n){if("function"==typeof e){const t=l(this.Promise,e);return setImmediate(function(){return t.callback(new Error("Passing a function as the first parameter to pool.query is not supported"))}),t.result}"function"==typeof t&&(n=t,t=void 0);const i=l(this.Promise,n);return n=i.callback,this.connect((i,a)=>{if(i)return n(i);this.log("dispatching query"),a.query(e,t,(e,t)=>(this.log("query dispatched"),a.release(e),e?n(e):n(void 0,t)))}),i.result}end(e){if(this.log("ending"),this.ending){const t=new Error("Called end on pool more than once");return e?e(t):this.Promise.reject(t)}this.ending=!0;const t=l(this.Promise,e);return this._endCallback=t.callback,this._pulseQueue(),t.result}get waitingCount(){return this._pendingQueue.length}get idleCount(){return this._idle.length}get totalCount(){return this._clients.length}}},function(e,t,n){"use strict";var i=n(161),a=n(67),o=n(170),r=n(171),s=n(25),c=n(4).EventEmitter,p=n(2),l=n(68),u="Version >= "+r.minNativeVersion+" of pg-native required.";s(o.gte(i.version,r.minNativeVersion),u);var d=n(172),m=e.exports=function(e){c.call(this),e=e||{},this._Promise=e.Promise||global.Promise,this._types=new a(e.types),this.native=new i({types:this._types}),this._queryQueue=[],this._ending=!1,this._connecting=!1,this._connected=!1,this._queryable=!0;var t=this.connectionParameters=new l(e);this.user=t.user,this.password=t.password,this.database=t.database,this.host=t.host,this.port=t.port,this.namedQueries={}};m.Query=d,p.inherits(m,c),m.prototype._errorAllQueries=function(e){const t=t=>{process.nextTick(()=>{t.native=this.native,t.handleError(e)})};this._hasActiveQuery()&&(t(this._activeQuery),this._activeQuery=null),this._queryQueue.forEach(t),this._queryQueue.length=0},m.prototype._connect=function(e){var t=this;this._connecting?process.nextTick(()=>e(new Error("Client has already been connected. You cannot reuse a client."))):(this._connecting=!0,this.connectionParameters.getLibpqConnectionString(function(n,i){if(n)return e(n);t.native.connect(i,function(n){if(n)return e(n);t._connected=!0,t.native.on("error",function(e){t._queryable=!1,t._errorAllQueries(e),t.emit("error",e)}),t.native.on("notification",function(e){t.emit("notification",{channel:e.relname,payload:e.extra})}),t.emit("connect"),t._pulseQueryQueue(!0),e()})}))},m.prototype.connect=function(e){if(!e)return new this._Promise((e,t)=>{this._connect(n=>{n?t(n):e()})});this._connect(e)},m.prototype.query=function(e,t,n){var i,a,o,r,s;if(null==e)throw new TypeError("Client was passed a null or undefined query");if("function"==typeof e.submit)o=e.query_timeout||this.connectionParameters.query_timeout,a=i=e,"function"==typeof t&&(e.callback=t);else if(o=this.connectionParameters.query_timeout,!(i=new d(e,t,n)).callback){let e,t;a=new this._Promise((n,i)=>{e=n,t=i}),i.callback=((n,i)=>n?t(n):e(i))}return o&&(s=i.callback,r=setTimeout(()=>{var e=new Error("Query read timeout");process.nextTick(()=>{i.handleError(e,this.connection)}),s(e),i.callback=(()=>{});var t=this._queryQueue.indexOf(i);t>-1&&this._queryQueue.splice(t,1),this._pulseQueryQueue()},o),i.callback=((e,t)=>{clearTimeout(r),s(e,t)})),this._queryable?this._ending?(i.native=this.native,process.nextTick(()=>{i.handleError(new Error("Client was closed and is not queryable"))}),a):(this._queryQueue.push(i),this._pulseQueryQueue(),a):(i.native=this.native,process.nextTick(()=>{i.handleError(new Error("Client has encountered a connection error and is not queryable"))}),a)},m.prototype.end=function(e){var t,n=this;return this._ending=!0,this._connected||this.once("connect",this.end.bind(this,e)),e||(t=new this._Promise(function(t,n){e=(e=>e?n(e):t())})),this.native.end(function(){n._errorAllQueries(new Error("Connection terminated")),process.nextTick(()=>{n.emit("end"),e&&e()})}),t},m.prototype._hasActiveQuery=function(){return this._activeQuery&&"error"!==this._activeQuery.state&&"end"!==this._activeQuery.state},m.prototype._pulseQueryQueue=function(e){if(this._connected&&!this._hasActiveQuery()){var t=this._queryQueue.shift();if(t){this._activeQuery=t,t.submit(this);var n=this;t.once("_done",function(){n._pulseQueryQueue()})}else e||this.emit("drain")}},m.prototype.cancel=function(e){this._activeQuery===e?this.native.cancel(function(){}):-1!==this._queryQueue.indexOf(e)&&this._queryQueue.splice(this._queryQueue.indexOf(e),1)},m.prototype.setTypeParser=function(e,t,n){return this._types.setTypeParser(e,t,n)},m.prototype.getTypeParser=function(e,t){return this._types.getTypeParser(e,t)}},function(e,t,n){var i=n(162),a=n(4).EventEmitter,o=n(2),r=n(25),s=n(164),c=n(167),p=n(168),l=e.exports=function(e){if(!(this instanceof l))return new l(e);e=e||{},a.call(this),this.pq=new i,this._reading=!1,this._read=this._read.bind(this),this._types=e.types||s,this.arrayMode=e.arrayMode||!1,this._resultCount=0,this._rows=void 0,this._results=void 0,this.on("newListener",e=>{"notification"===e&&this._startReading()}),this.on("result",this._onResult.bind(this)),this.on("readyForQuery",this._onReadyForQuery.bind(this))};o.inherits(l,a),l.prototype.connect=function(e,t){this.pq.connect(e,t)},l.prototype.connectSync=function(e){this.pq.connectSync(e)},l.prototype.query=function(e,t,n){var i;"function"==typeof t?(n=t,i=function(){return a.pq.sendQuery(e)}):i=function(){return a.pq.sendQueryParams(e,t)};var a=this;a._dispatchQuery(a.pq,i,function(e){if(e)return n(e);a._awaitResult(n)})},l.prototype.prepare=function(e,t,n,i){var a=this;a._dispatchQuery(a.pq,function(){return a.pq.sendPrepare(e,t,n)},function(e){if(e)return i(e);a._awaitResult(i)})},l.prototype.execute=function(e,t,n){var i=this;i._dispatchQuery(i.pq,function(){return i.pq.sendQueryPrepared(e,t)},function(e,t){if(e)return n(e);i._awaitResult(n)})},l.prototype.getCopyStream=function(){return this.pq.setNonBlocking(!0),this._stopReading(),new p(this.pq)},l.prototype.cancel=function(e){r(e,"Callback is required");var t=this.pq.cancel();return setImmediate(function(){e(!0===t?void 0:new Error(t))})},l.prototype.querySync=function(e,t){return t?this.pq.execParams(e,t):this.pq.exec(e),u(this.pq),c(this.pq,this._types,this.arrayMode).rows},l.prototype.prepareSync=function(e,t,n){this.pq.prepare(e,t,n),u(this.pq)},l.prototype.executeSync=function(e,t){return this.pq.execPrepared(e,t),u(this.pq),c(this.pq,this._types,this.arrayMode).rows},l.prototype.escapeLiteral=function(e){return this.pq.escapeLiteral(e)},l.prototype.escapeIdentifier=function(e){return this.pq.escapeIdentifier(e)},e.exports.version=n(169).version,l.prototype.end=function(e){this._stopReading(),this.pq.finish(),e&&setImmediate(e)},l.prototype._readError=function(e){var t=new Error(e||this.pq.errorMessage());this.emit("error",t)},l.prototype._stopReading=function(){this._reading&&(this._reading=!1,this.pq.stopReader(),this.pq.removeListener("readable",this._read))},l.prototype._consumeQueryResults=function(e){return c(e,this._types,this.arrayMode)},l.prototype._emitResult=function(e){var t=e.resultStatus();switch(t){case"PGRES_FATAL_ERROR":this._queryError=new Error(this.pq.resultErrorMessage());break;case"PGRES_TUPLES_OK":case"PGRES_COMMAND_OK":case"PGRES_EMPTY_QUERY":const e=this._consumeQueryResults(this.pq);this.emit("result",e);break;case"PGRES_COPY_OUT":case"PGRES_COPY_BOTH":break;default:this._readError("unrecognized command status: "+t)}return t},l.prototype._read=function(){var e=this.pq;if(!e.consumeInput())return this._readError();if(!e.isBusy()){for(;e.getResult();){const t=this._emitResult(this.pq);if("PGRES_COPY_BOTH"===t||"PGRES_COPY_OUT"===t)break;if(e.isBusy())return}this.emit("readyForQuery");for(var t=this.pq.notifies();t;)this.emit("notification",t),t=this.pq.notifies()}},l.prototype._startReading=function(){this._reading||(this._reading=!0,this.pq.on("readable",this._read),this.pq.startReader())};var u=function(e){var t=e.resultErrorMessage()||e.errorMessage();if(t)throw new Error(t)};l.prototype._awaitResult=function(e){return this._queryCallback=e,this._startReading()},l.prototype._waitForDrain=function(e,t){var n=e.flush();if(0===n)return t();if(-1===n)return t(e.errorMessage());var i=this;return e.writable(function(){i._waitForDrain(e,t)})},l.prototype._dispatchQuery=function(e,t,n){return this._stopReading(),e.setNonBlocking(!0)?t()?void this._waitForDrain(e,n):n(new Error(e.errorMessage()||"Something went wrong dispatching the query")):n(new Error("Unable to set non-blocking to true"))},l.prototype._onResult=function(e){0===this._resultCount?(this._results=e,this._rows=e.rows):1===this._resultCount?(this._results=[this._results,e],this._rows=[this._rows,e.rows]):(this._results.push(e),this._rows.push(e.rows)),this._resultCount++},l.prototype._onReadyForQuery=function(){const e=this._queryCallback;this._queryCallback=void 0;const t=this._queryError;this._queryError=void 0;const n=this._rows;this._rows=void 0;const i=this._results;this._results=void 0,this._resultCount=0,e&&e(t,n||[],i)}},function(e,t,n){(function(e,t){var i=e.exports=n(163)("addon.node").PQ;if(!e.parent){var a=n(0);console.log(a.normalize(t+"/src"))}var o=n(4).EventEmitter,r=n(25);for(var s in o.prototype)i.prototype[s]=o.prototype[s];i.prototype.connectSync=function(e){if(this.connected=!0,e||(e=""),!this.$connectSync(e)){var t=new Error(this.errorMessage());throw this.finish(),t}},i.prototype.connect=function(e,t){this.connected=!0,"function"==typeof e&&(t=e,e=""),e||(e=""),r(t,"Must provide a connection callback"),process.domain&&(t=process.domain.bind(t)),this.$connect(e,t)},i.prototype.errorMessage=function(){return this.$getLastErrorMessage()},i.prototype.socket=function(){return this.$socket()},i.prototype.serverVersion=function(){return this.$serverVersion()},i.prototype.finish=function(){this.connected=!1,this.$finish()},i.prototype.exec=function(e){e||(e=""),this.$exec(e)},i.prototype.execParams=function(e,t){e||(e=""),t||(t=[]),this.$execParams(e,t)},i.prototype.prepare=function(e,t,n){r.equal(arguments.length,3,"Must supply 3 arguments"),e||(e=""),t||(t=""),n=Number(n)||0,this.$prepare(e,t,n)},i.prototype.execPrepared=function(e,t){e||(e=""),t||(t=[]),this.$execPrepared(e,t)},i.prototype.sendQuery=function(e){return e||(e=""),this.$sendQuery(e)},i.prototype.sendQueryParams=function(e,t){return e||(e=""),t||(t=[]),this.$sendQueryParams(e,t)},i.prototype.sendPrepare=function(e,t,n){return r.equal(arguments.length,3,"Must supply 3 arguments"),e||(e=""),t||(t=""),n=Number(n)||0,this.$sendPrepare(e,t,n)},i.prototype.sendQueryPrepared=function(e,t){return e||(e=""),t||(t=[]),this.$sendQueryPrepared(e,t)},i.prototype.getResult=function(){return this.$getResult()},i.prototype.resultStatus=function(){return this.$resultStatus()},i.prototype.resultErrorMessage=function(){return this.$resultErrorMessage()},i.prototype.resultErrorFields=function(){return this.$resultErrorFields()},i.prototype.clear=function(){this.$clear()},i.prototype.ntuples=function(){return this.$ntuples()},i.prototype.nfields=function(){return this.$nfields()},i.prototype.fname=function(e){return this.$fname(e)},i.prototype.ftype=function(e){return this.$ftype(e)},i.prototype.getvalue=function(e,t){return this.$getvalue(e,t)},i.prototype.getisnull=function(e,t){return this.$getisnull(e,t)},i.prototype.cmdStatus=function(){return this.$cmdStatus()},i.prototype.cmdTuples=function(){return this.$cmdTuples()},i.prototype.startReader=function(){r(this.connected,"Must be connected to start reader"),this.$startRead()},i.prototype.stopReader=function(){this.$stopRead()},i.prototype.writable=function(e){return r(this.connected,"Must be connected to start writer"),this.$startWrite(),this.once("writable",e)},i.prototype.consumeInput=function(){return this.$consumeInput()},i.prototype.isBusy=function(){return this.$isBusy()},i.prototype.setNonBlocking=function(e){return this.$setNonBlocking(e?1:0)},i.prototype.isNonBlocking=function(){return this.$isNonBlocking()},i.prototype.flush=function(){return this.$flush()},i.prototype.escapeLiteral=function(e){return e?this.$escapeLiteral(e):e},i.prototype.escapeIdentifier=function(e){return e?this.$escapeIdentifier(e):e},i.prototype.notifies=function(){return this.$notifies()},i.prototype.putCopyData=function(e){return r(e instanceof Buffer),this.$putCopyData(e)},i.prototype.putCopyEnd=function(e){return e?this.$putCopyEnd(e):this.$putCopyEnd()},i.prototype.getCopyData=function(e){return this.$getCopyData(!!e)},i.prototype.cancel=function(){return this.$cancel()}}).call(this,n(57)(e),"/")},function(e,t,n){(function(i){var a=n(6),o=n(0),r=o.join,s=o.dirname,c=a.existsSync||o.existsSync,p={arrow:process.env.NODE_BINDINGS_ARROW||" → ",compiled:process.env.NODE_BINDINGS_COMPILED_DIR||"compiled",platform:process.platform,arch:process.arch,version:process.versions.node,bindings:"bindings.node",try:[["module_root","build","bindings"],["module_root","build","Debug","bindings"],["module_root","build","Release","bindings"],["module_root","out","Debug","bindings"],["module_root","Debug","bindings"],["module_root","out","Release","bindings"],["module_root","Release","bindings"],["module_root","build","default","bindings"],["module_root","compiled","version","platform","arch","bindings"]]};e.exports=t=function(e){"string"==typeof e?e={bindings:e}:e||(e={}),e.__proto__=p,e.module_root||(e.module_root=t.getRoot(t.getFileName())),".node"!=o.extname(e.bindings)&&(e.bindings+=".node");for(var i,a,s,c=[],l=0,u=e.try.length;l<u;l++){i=r.apply(null,e.try[l].map(function(t){return e[t]||t})),c.push(i);try{return a=e.path?n(71).resolve(i):n(71)(i),e.path||(a.path=i),a}catch(e){if(!/not find/i.test(e.message))throw e}}throw(s=new Error("Could not locate the bindings file. Tried:\n"+c.map(function(t){return e.arrow+t}).join("\n"))).tries=c,s},t.getFileName=function(e){var t,n=Error.prepareStackTrace,a=Error.stackTraceLimit,o={};return Error.stackTraceLimit=10,Error.prepareStackTrace=function(n,a){for(var o=0,r=a.length;o<r;o++)if((t=a[o].getFileName())!==i){if(!e)return;if(t!==e)return}},Error.captureStackTrace(o),Error.prepareStackTrace=n,Error.stackTraceLimit=a,t},t.getRoot=function(e){for(var t,n=s(e);;){if("."===n&&(n=process.cwd()),c(r(n,"package.json"))||c(r(n,"node_modules")))return n;if(t===n)throw new Error('Could not find module root given file: "'+e+'". Do you have a `package.json` file? ');t=n,n=r(n,"..")}}}).call(this,"/index.js")},function(e,t,n){var i=n(165),a=n(166),o=n(73);t.getTypeParser=function(e,t){if(!r[t=t||"text"])return s;return r[t][e]||s},t.setTypeParser=function(e,t,n){"function"==typeof t&&(n=t,t="text");r[t][e]=n},t.arrayParser=o;var r={text:{},binary:{}};function s(e){return String(e)}i.init(function(e,t){r.text[e]=t}),a.init(function(e,t){r.binary[e]=t})},function(e,t,n){var i=n(72),a=n(73),o=n(63),r=n(64),s=n(65);function c(e){return function(t){return null===t?t:e(t)}}function p(e){return null===e?e:"TRUE"===e||"t"===e||"true"===e||"y"===e||"yes"===e||"on"===e||"1"===e}function l(e){return e?i.parse(e,p):null}function u(e){return parseInt(e,10)}function d(e){return e?i.parse(e,c(u)):null}function m(e){return e?i.parse(e,c(function(e){return y(e).trim()})):null}var f=function(e){return e?a.create(e,function(e){return null!==e&&(e=k(e)),e}).parse():null},h=function(e){return e?a.create(e,function(e){return null!==e&&(e=parseFloat(e)),e}).parse():null},v=function(e){return e?a.create(e).parse():null},x=function(e){return e?a.create(e,function(e){return null!==e&&(e=o(e)),e}).parse():null},g=function(e){return e?i.parse(e,c(s)):null},b=function(e){return parseInt(e,10)},y=function(e){var t=String(e);return/^\d+$/.test(t)?t:e},w=function(e){var t=v(e);return t?t.map(function(e){return JSON.parse(e)}):t},k=function(e){return"("!==e[0]?null:(e=e.substring(1,e.length-1).split(","),{x:parseFloat(e[0]),y:parseFloat(e[1])})},_=function(e){if("<"!==e[0]&&"("!==e[1])return null;for(var t="(",n="",i=!1,a=2;a<e.length-1;a++)i||(t+=e[a]),")"!==e[a]?i&&","!==e[a]&&(n+=e[a]):i=!0;var o=k(t);return o.radius=parseFloat(n),o};e.exports={init:function(e){e(20,y),e(21,b),e(23,b),e(26,b),e(700,parseFloat),e(701,parseFloat),e(16,p),e(1082,o),e(1114,o),e(1184,o),e(600,k),e(651,v),e(718,_),e(1e3,l),e(1001,g),e(1005,d),e(1007,d),e(1028,d),e(1016,m),e(1017,f),e(1021,h),e(1022,h),e(1231,h),e(1014,v),e(1015,v),e(1008,v),e(1009,v),e(1040,v),e(1041,v),e(1115,x),e(1182,x),e(1185,x),e(1186,r),e(17,s),e(114,JSON.parse.bind(JSON)),e(3802,JSON.parse.bind(JSON)),e(199,w),e(3807,w),e(3907,v),e(2951,v),e(791,v),e(1183,v),e(1270,v)}}},function(e,t,n){var i=n(66),a=function(e,t,n,i,a){i=i||!1,a=a||function(e,t,n){return e*Math.pow(2,n)+t};var o=(n=n||0)>>3,r=function(e){return i?255&~e:e},s=255,c=8-n%8;t<c&&(s=255<<8-t&255,c=t),n&&(s>>=n%8);var p=0;n%8+t>=8&&(p=a(0,r(e[o])&s,c));for(var l=t+n>>3,u=o+1;u<l;u++)p=a(p,r(e[u]),8);var d=(t+n)%8;return d>0&&(p=a(p,r(e[l])>>8-d,d)),p},o=function(e,t,n){var i=Math.pow(2,n-1)-1,o=a(e,1),r=a(e,n,1);if(0===r)return 0;var s=1,c=a(e,t,n+1,!1,function(e,t,n){0===e&&(e=1);for(var i=1;i<=n;i++)s/=2,(t&1<<n-i)>0&&(e+=s);return e});return r==Math.pow(2,n+1)-1?0===c?0===o?1/0:-1/0:NaN:(0===o?1:-1)*Math.pow(2,r-i)*c},r=function(e){return 1==a(e,1)?-1*(a(e,15,1,!0)+1):a(e,15,1)},s=function(e){return 1==a(e,1)?-1*(a(e,31,1,!0)+1):a(e,31,1)},c=function(e){return o(e,23,8)},p=function(e){return o(e,52,11)},l=function(e){var t=a(e,16,32);if(49152==t)return NaN;for(var n=Math.pow(1e4,a(e,16,16)),i=0,o=a(e,16),r=0;r<o;r++)i+=a(e,16,64+16*r)*n,n/=1e4;var s=Math.pow(10,a(e,16,48));return(0===t?1:-1)*Math.round(i*s)/s},u=function(e,t){var n=a(t,1),i=a(t,63,1),o=new Date((0===n?1:-1)*i/1e3+9466848e5);return e||o.setTime(o.getTime()+6e4*o.getTimezoneOffset()),o.usec=i%1e3,o.getMicroSeconds=function(){return this.usec},o.setMicroSeconds=function(e){this.usec=e},o.getUTCMicroSeconds=function(){return this.usec},o},d=function(e){for(var t=a(e,32),n=(a(e,32,32),a(e,32,64)),i=96,o=[],r=0;r<t;r++)o[r]=a(e,32,i),i+=32,i+=32;var s=function(t){var n,o=a(e,32,i);return i+=32,4294967295==o?null:23==t||20==t?(n=a(e,8*o,i),i+=8*o,n):25==t?n=e.toString(this.encoding,i>>3,(i+=o<<3)>>3):void console.log("ERROR: ElementType not implemented: "+t)},c=function(e,t){var n,i=[];if(e.length>1){var a=e.shift();for(n=0;n<a;n++)i[n]=c(e,t);e.unshift(a)}else for(n=0;n<e[0];n++)i[n]=s(t);return i};return c(o,n)},m=function(e){return e.toString("utf8")},f=function(e){return null===e?null:a(e,8)>0};e.exports={init:function(e){e(20,i),e(21,r),e(23,s),e(26,s),e(1700,l),e(700,c),e(701,p),e(16,f),e(1114,u.bind(null,!1)),e(1184,u.bind(null,!0)),e(1e3,d),e(1007,d),e(1016,d),e(1008,d),e(1009,d),e(25,m)}}},function(e,t,n){"use strict";class i{constructor(e,t){this._types=e,this._arrayMode=t,this.command=void 0,this.rowCount=void 0,this.fields=[],this.rows=[]}consumeCommand(e){this.command=e.cmdStatus().split(" ")[0],this.rowCount=parseInt(e.cmdTuples(),10)}consumeFields(e){const t=e.nfields();for(var n=0;n<t;n++)this.fields.push({name:e.fname(n),dataTypeID:e.ftype(n)})}consumeRows(e){const t=e.ntuples();for(var n=0;n<t;n++){const t=this._arrayMode?this.consumeRowAsArray(e,n):this.consumeRowAsObject(e,n);this.rows.push(t)}}consumeRowAsObject(e,t){const n={};for(var i=0;i<this.fields.length;i++){const a=this.readValue(e,t,i);n[this.fields[i].name]=a}return n}consumeRowAsArray(e,t){const n=[];for(var i=0;i<this.fields.length;i++){const a=this.readValue(e,t,i);n.push(a)}return n}readValue(e,t,n){var i=e.getvalue(t,n);if(""===i&&e.getisnull(t,n))return null;const a=this.fields[n].dataTypeID;return this._types.getTypeParser(a)(i)}}e.exports=function(e,t,n){const a=new i(t,n);return a.consumeCommand(e),a.consumeFields(e),a.consumeRows(e),a}},function(e,t,n){var i=n(5).Duplex,a=n(5).Writable,o=n(2),r=e.exports=function(e,t){i.call(this,t),this.pq=e,this._reading=!1};o.inherits(r,i),r.prototype._write=function(e,t,n){var i=this.pq.putCopyData(e);if(1===i)return n();if(-1===i)return n(new Error(this.pq.errorMessage()));var a=this;this.pq.writable(function(){a._write(e,t,n)})},r.prototype.end=function(){var e=Array.prototype.slice.call(arguments,0),t=this,n=e.pop();e.length&&this.write(e[0]);var i=this.pq.putCopyEnd();if(1===i)return s(this.pq,function(e,i){a.prototype.end.call(t),n&&n(e)});if(-1===i){var o=new Error(this.pq.errorMessage());return this.emit("error",o)}return this.pq.writable(function(){return t.end.apply(t,n)})},r.prototype._consumeBuffer=function(e){var t=this.pq.getCopyData(!0);if(t instanceof Buffer)return setImmediate(function(){e(null,t)});if(-1===t)return e(null,null);if(0===t){var n=this;return this.pq.once("readable",function(){n.pq.stopReader(),n.pq.consumeInput(),n._consumeBuffer(e)}),this.pq.startReader()}e(new Error("Unrecognized read status: "+t))},r.prototype._read=function(e){if(!this._reading){this._reading=!0;var t=this;this._consumeBuffer(function(e,n){if(t._reading=!1,e)return t.emit("error",e);!1!==n&&t.push(n)})}};var s=function(e,t){var n=function(){e.removeListener("readable",a),e.stopReader()},i=function(i){return n(),t(new Error(i||e.errorMessage()))},a=function(){return e.consumeInput()?e.isBusy()?void 0:(e.getResult(),e.getResult()&&"PGRES_COPY_OUT"!==e.resultStatus()?i("Only one result at a time is accepted"):"PGRES_FATAL_ERROR"===e.resultStatus()?i():(n(),t(null))):i()};e.on("readable",a),e.startReader()}},function(e){e.exports={name:"pg-native",version:"3.0.0",description:"A slightly nicer interface to Postgres over node-libpq",main:"index.js",scripts:{test:"mocha && eslint ."},repository:{type:"git",url:"git://github.com/brianc/node-pg-native.git"},keywords:["postgres","pg","libpq"],author:"Brian M. Carlson",license:"MIT",bugs:{url:"https://github.com/brianc/node-pg-native/issues"},homepage:"https://github.com/brianc/node-pg-native",dependencies:{libpq:"^1.7.0","pg-types":"^1.12.1","readable-stream":"1.0.31"},devDependencies:{async:"^0.9.0","concat-stream":"^1.4.6",eslint:"4.2.0","eslint-config-standard":"10.2.1","eslint-plugin-import":"2.7.0","eslint-plugin-node":"5.1.0","eslint-plugin-promise":"3.5.0","eslint-plugin-standard":"3.0.1","generic-pool":"^2.1.1",lodash:"^2.4.1",mocha:"3.4.2",okay:"^0.3.0",pg:"*",semver:"^4.1.0"}}},function(e,t,n){var i,a,o;e.exports===t&&(t=e.exports=J),o="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift("SEMVER"),console.log.apply(console,e)}:function(){},t.SEMVER_SPEC_VERSION="2.0.0";var r=256,s=Number.MAX_SAFE_INTEGER||9007199254740991,c=t.re=[],p=t.src=[],l=0,u=l++;p[u]="0|[1-9]\\d*";var d=l++;p[d]="[0-9]+";var m=l++;p[m]="\\d*[a-zA-Z-][a-zA-Z0-9-]*";var f=l++;p[f]="("+p[u]+")\\.("+p[u]+")\\.("+p[u]+")";var h=l++;p[h]="("+p[d]+")\\.("+p[d]+")\\.("+p[d]+")";var v=l++;p[v]="(?:"+p[u]+"|"+p[m]+")";var x=l++;p[x]="(?:"+p[d]+"|"+p[m]+")";var g=l++;p[g]="(?:-("+p[v]+"(?:\\."+p[v]+")*))";var b=l++;p[b]="(?:-?("+p[x]+"(?:\\."+p[x]+")*))";var y=l++;p[y]="[0-9A-Za-z-]+";var w=l++;p[w]="(?:\\+("+p[y]+"(?:\\."+p[y]+")*))";var k=l++,_="v?"+p[f]+p[g]+"?"+p[w]+"?";p[k]="^"+_+"$";var j="[v=\\s]*"+p[h]+p[b]+"?"+p[w]+"?",E=l++;p[E]="^"+j+"$";var S=l++;p[S]="((?:<|>)?=?)";var C=l++;p[C]=p[d]+"|x|X|\\*";var T=l++;p[T]=p[u]+"|x|X|\\*";var q=l++;p[q]="[v=\\s]*("+p[T]+")(?:\\.("+p[T]+")(?:\\.("+p[T]+")(?:"+p[g]+")?"+p[w]+"?)?)?";var A=l++;p[A]="[v=\\s]*("+p[C]+")(?:\\.("+p[C]+")(?:\\.("+p[C]+")(?:"+p[b]+")?"+p[w]+"?)?)?";var O=l++;p[O]="^"+p[S]+"\\s*"+p[q]+"$";var P=l++;p[P]="^"+p[S]+"\\s*"+p[A]+"$";var I=l++;p[I]="(?:~>?)";var z=l++;p[z]="(\\s*)"+p[I]+"\\s+",c[z]=new RegExp(p[z],"g");var R=l++;p[R]="^"+p[I]+p[q]+"$";var N=l++;p[N]="^"+p[I]+p[A]+"$";var L=l++;p[L]="(?:\\^)";var B=l++;p[B]="(\\s*)"+p[L]+"\\s+",c[B]=new RegExp(p[B],"g");var M=l++;p[M]="^"+p[L]+p[q]+"$";var D=l++;p[D]="^"+p[L]+p[A]+"$";var F=l++;p[F]="^"+p[S]+"\\s*("+j+")$|^$";var U=l++;p[U]="^"+p[S]+"\\s*("+_+")$|^$";var $=l++;p[$]="(\\s*)"+p[S]+"\\s*("+j+"|"+p[q]+")",c[$]=new RegExp(p[$],"g");var Q=l++;p[Q]="^\\s*("+p[q]+")\\s+-\\s+("+p[q]+")\\s*$";var H=l++;p[H]="^\\s*("+p[A]+")\\s+-\\s+("+p[A]+")\\s*$";var V=l++;p[V]="(<|>)?=?\\s*\\*";for(var G=0;G<34;G++)o(G,p[G]),c[G]||(c[G]=new RegExp(p[G]));function Z(e,t){if(e.length>r)return null;if(!(t?c[E]:c[k]).test(e))return null;try{return new J(e,t)}catch(e){return null}}function J(e,t){if(e instanceof J){if(e.loose===t)return e;e=e.version}else if("string"!=typeof e)throw new TypeError("Invalid Version: "+e);if(e.length>r)throw new TypeError("version is longer than "+r+" characters");if(!(this instanceof J))return new J(e,t);o("SemVer",e,t),this.loose=t;var n=e.trim().match(t?c[E]:c[k]);if(!n)throw new TypeError("Invalid Version: "+e);if(this.raw=e,this.major=+n[1],this.minor=+n[2],this.patch=+n[3],this.major>s||this.major<0)throw new TypeError("Invalid major version");if(this.minor>s||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>s||this.patch<0)throw new TypeError("Invalid patch version");n[4]?this.prerelease=n[4].split(".").map(function(e){return/^[0-9]+$/.test(e)?+e:e}):this.prerelease=[],this.build=n[5]?n[5].split("."):[],this.format()}t.parse=Z,t.valid=function(e,t){var n=Z(e,t);return n?n.version:null},t.clean=function(e,t){var n=Z(e.trim().replace(/^[=v]+/,""),t);return n?n.version:null},t.SemVer=J,J.prototype.format=function(){return this.version=this.major+"."+this.minor+"."+this.patch,this.prerelease.length&&(this.version+="-"+this.prerelease.join(".")),this.version},J.prototype.inspect=function(){return'<SemVer "'+this+'">'},J.prototype.toString=function(){return this.version},J.prototype.compare=function(e){return o("SemVer.compare",this.version,this.loose,e),e instanceof J||(e=new J(e,this.loose)),this.compareMain(e)||this.comparePre(e)},J.prototype.compareMain=function(e){return e instanceof J||(e=new J(e,this.loose)),Y(this.major,e.major)||Y(this.minor,e.minor)||Y(this.patch,e.patch)},J.prototype.comparePre=function(e){if(e instanceof J||(e=new J(e,this.loose)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var t=0;do{var n=this.prerelease[t],i=e.prerelease[t];if(o("prerelease compare",t,n,i),void 0===n&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===n)return-1;if(n!==i)return Y(n,i)}while(++t)},J.prototype.inc=function(e,t){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t),this.inc("pre",t);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t),this.inc("pre",t);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{for(var n=this.prerelease.length;--n>=0;)"number"==typeof this.prerelease[n]&&(this.prerelease[n]++,n=-2);-1===n&&this.prerelease.push(0)}t&&(this.prerelease[0]===t?isNaN(this.prerelease[1])&&(this.prerelease=[t,0]):this.prerelease=[t,0]);break;default:throw new Error("invalid increment argument: "+e)}return this.format(),this},t.inc=function(e,t,n,i){"string"==typeof n&&(i=n,n=void 0);try{return new J(e,n).inc(t,i).version}catch(e){return null}},t.diff=function(e,t){if(ne(e,t))return null;var n=Z(e),i=Z(t);if(n.prerelease.length||i.prerelease.length){for(var a in n)if(("major"===a||"minor"===a||"patch"===a)&&n[a]!==i[a])return"pre"+a;return"prerelease"}for(var a in n)if(("major"===a||"minor"===a||"patch"===a)&&n[a]!==i[a])return a},t.compareIdentifiers=Y;var W=/^[0-9]+$/;function Y(e,t){var n=W.test(e),i=W.test(t);return n&&i&&(e=+e,t=+t),n&&!i?-1:i&&!n?1:e<t?-1:e>t?1:0}function K(e,t,n){return new J(e,n).compare(t)}function X(e,t,n){return K(t,e,n)}function ee(e,t,n){return K(e,t,n)>0}function te(e,t,n){return K(e,t,n)<0}function ne(e,t,n){return 0===K(e,t,n)}function ie(e,t,n){return 0!==K(e,t,n)}function ae(e,t,n){return K(e,t,n)>=0}function oe(e,t,n){return K(e,t,n)<=0}function re(e,t,n,i){var a;switch(t){case"===":"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),a=e===n;break;case"!==":"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),a=e!==n;break;case"":case"=":case"==":a=ne(e,n,i);break;case"!=":a=ie(e,n,i);break;case">":a=ee(e,n,i);break;case">=":a=ae(e,n,i);break;case"<":a=te(e,n,i);break;case"<=":a=oe(e,n,i);break;default:throw new TypeError("Invalid operator: "+t)}return a}function se(e,t){if(e instanceof se){if(e.loose===t)return e;e=e.value}if(!(this instanceof se))return new se(e,t);o("comparator",e,t),this.loose=t,this.parse(e),this.semver===ce?this.value="":this.value=this.operator+this.semver.version,o("comp",this)}t.rcompareIdentifiers=function(e,t){return Y(t,e)},t.major=function(e,t){return new J(e,t).major},t.minor=function(e,t){return new J(e,t).minor},t.patch=function(e,t){return new J(e,t).patch},t.compare=K,t.compareLoose=function(e,t){return K(e,t,!0)},t.rcompare=X,t.sort=function(e,n){return e.sort(function(e,i){return t.compare(e,i,n)})},t.rsort=function(e,n){return e.sort(function(e,i){return t.rcompare(e,i,n)})},t.gt=ee,t.lt=te,t.eq=ne,t.neq=ie,t.gte=ae,t.lte=oe,t.cmp=re,t.Comparator=se;var ce={};function pe(e,t){if(e instanceof pe&&e.loose===t)return e;if(!(this instanceof pe))return new pe(e,t);if(this.loose=t,this.raw=e,this.set=e.split(/\s*\|\|\s*/).map(function(e){return this.parseRange(e.trim())},this).filter(function(e){return e.length}),!this.set.length)throw new TypeError("Invalid SemVer Range: "+e);this.format()}function le(e){return!e||"x"===e.toLowerCase()||"*"===e}function ue(e,t,n,i,a,o,r,s,c,p,l,u,d){return((t=le(n)?"":le(i)?">="+n+".0.0":le(a)?">="+n+"."+i+".0":">="+t)+" "+(s=le(c)?"":le(p)?"<"+(+c+1)+".0.0":le(l)?"<"+c+"."+(+p+1)+".0":u?"<="+c+"."+p+"."+l+"-"+u:"<="+s)).trim()}function de(e,t){for(var n=0;n<e.length;n++)if(!e[n].test(t))return!1;if(t.prerelease.length){for(n=0;n<e.length;n++){if(o(e[n].semver),e[n].semver===ce)return!0;if(e[n].semver.prerelease.length>0){var i=e[n].semver;if(i.major===t.major&&i.minor===t.minor&&i.patch===t.patch)return!0}}return!1}return!0}function me(e,t,n){try{t=new pe(t,n)}catch(e){return!1}return t.test(e)}function fe(e,t,n,i){var a,o,r,s,c;switch(e=new J(e,i),t=new pe(t,i),n){case">":a=ee,o=oe,r=te,s=">",c=">=";break;case"<":a=te,o=ae,r=ee,s="<",c="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(me(e,t,i))return!1;for(var p=0;p<t.set.length;++p){var l=t.set[p],u=null,d=null;if(l.forEach(function(e){u=u||e,d=d||e,a(e.semver,u.semver,i)?u=e:r(e.semver,d.semver,i)&&(d=e)}),u.operator===s||u.operator===c)return!1;if((!d.operator||d.operator===s)&&o(e,d.semver))return!1;if(d.operator===c&&r(e,d.semver))return!1}return!0}se.prototype.parse=function(e){var t=this.loose?c[F]:c[U],n=e.match(t);if(!n)throw new TypeError("Invalid comparator: "+e);this.operator=n[1],"="===this.operator&&(this.operator=""),n[2]?this.semver=new J(n[2],this.loose):this.semver=ce},se.prototype.inspect=function(){return'<SemVer Comparator "'+this+'">'},se.prototype.toString=function(){return this.value},se.prototype.test=function(e){return o("Comparator.test",e,this.loose),this.semver===ce||("string"==typeof e&&(e=new J(e,this.loose)),re(e,this.operator,this.semver,this.loose))},t.Range=pe,pe.prototype.inspect=function(){return'<SemVer Range "'+this.range+'">'},pe.prototype.format=function(){return this.range=this.set.map(function(e){return e.join(" ").trim()}).join("||").trim(),this.range},pe.prototype.toString=function(){return this.range},pe.prototype.parseRange=function(e){var t=this.loose;e=e.trim(),o("range",e,t);var n=t?c[H]:c[Q];e=e.replace(n,ue),o("hyphen replace",e),e=e.replace(c[$],"$1$2$3"),o("comparator trim",e,c[$]),e=(e=(e=e.replace(c[z],"$1~")).replace(c[B],"$1^")).split(/\s+/).join(" ");var i=t?c[F]:c[U],a=e.split(" ").map(function(e){return function(e,t){return o("comp",e),e=function(e,t){return e.trim().split(/\s+/).map(function(e){return function(e,t){o("caret",e,t);var n=t?c[D]:c[M];return e.replace(n,function(t,n,i,a,r){var s;return o("caret",e,t,n,i,a,r),le(n)?s="":le(i)?s=">="+n+".0.0 <"+(+n+1)+".0.0":le(a)?s="0"===n?">="+n+"."+i+".0 <"+n+"."+(+i+1)+".0":">="+n+"."+i+".0 <"+(+n+1)+".0.0":r?(o("replaceCaret pr",r),"-"!==r.charAt(0)&&(r="-"+r),s="0"===n?"0"===i?">="+n+"."+i+"."+a+r+" <"+n+"."+i+"."+(+a+1):">="+n+"."+i+"."+a+r+" <"+n+"."+(+i+1)+".0":">="+n+"."+i+"."+a+r+" <"+(+n+1)+".0.0"):(o("no pr"),s="0"===n?"0"===i?">="+n+"."+i+"."+a+" <"+n+"."+i+"."+(+a+1):">="+n+"."+i+"."+a+" <"+n+"."+(+i+1)+".0":">="+n+"."+i+"."+a+" <"+(+n+1)+".0.0"),o("caret return",s),s})}(e,t)}).join(" ")}(e,t),o("caret",e),e=function(e,t){return e.trim().split(/\s+/).map(function(e){return function(e,t){var n=t?c[N]:c[R];return e.replace(n,function(t,n,i,a,r){var s;return o("tilde",e,t,n,i,a,r),le(n)?s="":le(i)?s=">="+n+".0.0 <"+(+n+1)+".0.0":le(a)?s=">="+n+"."+i+".0 <"+n+"."+(+i+1)+".0":r?(o("replaceTilde pr",r),"-"!==r.charAt(0)&&(r="-"+r),s=">="+n+"."+i+"."+a+r+" <"+n+"."+(+i+1)+".0"):s=">="+n+"."+i+"."+a+" <"+n+"."+(+i+1)+".0",o("tilde return",s),s})}(e,t)}).join(" ")}(e,t),o("tildes",e),e=function(e,t){return o("replaceXRanges",e,t),e.split(/\s+/).map(function(e){return function(e,t){e=e.trim();var n=t?c[P]:c[O];return e.replace(n,function(t,n,i,a,r,s){o("xRange",e,t,n,i,a,r,s);var c=le(i),p=c||le(a),l=p||le(r),u=l;return"="===n&&u&&(n=""),c?t=">"===n||"<"===n?"<0.0.0":"*":n&&u?(p&&(a=0),l&&(r=0),">"===n?(n=">=",p?(i=+i+1,a=0,r=0):l&&(a=+a+1,r=0)):"<="===n&&(n="<",p?i=+i+1:a=+a+1),t=n+i+"."+a+"."+r):p?t=">="+i+".0.0 <"+(+i+1)+".0.0":l&&(t=">="+i+"."+a+".0 <"+i+"."+(+a+1)+".0"),o("xRange return",t),t})}(e,t)}).join(" ")}(e,t),o("xrange",e),e=function(e,t){return o("replaceStars",e,t),e.trim().replace(c[V],"")}(e,t),o("stars",e),e}(e,t)}).join(" ").split(/\s+/);return this.loose&&(a=a.filter(function(e){return!!e.match(i)})),a=a.map(function(e){return new se(e,t)})},t.toComparators=function(e,t){return new pe(e,t).set.map(function(e){return e.map(function(e){return e.value}).join(" ").trim().split(" ")})},pe.prototype.test=function(e){if(!e)return!1;"string"==typeof e&&(e=new J(e,this.loose));for(var t=0;t<this.set.length;t++)if(de(this.set[t],e))return!0;return!1},t.satisfies=me,t.maxSatisfying=function(e,t,n){return e.filter(function(e){return me(e,t,n)}).sort(function(e,t){return X(e,t,n)})[0]||null},t.validRange=function(e,t){try{return new pe(e,t).range||"*"}catch(e){return null}},t.ltr=function(e,t,n){return fe(e,t,"<",n)},t.gtr=function(e,t,n){return fe(e,t,">",n)},t.outside=fe,void 0===(a="function"==typeof(i=t)?i.call(t,n,t,e):i)||(e.exports=a)},function(e){e.exports={name:"pg",version:"7.8.1",description:"PostgreSQL client - pure javascript & libpq with the same API",keywords:["database","libpq","pg","postgre","postgres","postgresql","rdbms"],homepage:"http://github.com/brianc/node-postgres",repository:{type:"git",url:"git://github.com/brianc/node-postgres.git"},author:"Brian Carlson <brian.m.carlson@gmail.com>",main:"./lib",dependencies:{"buffer-writer":"2.0.0","packet-reader":"1.0.0","pg-connection-string":"0.1.3","pg-pool":"^2.0.4","pg-types":"~2.0.0",pgpass:"1.x",semver:"4.3.2"},devDependencies:{async:"0.9.0",bluebird:"3.5.2",co:"4.6.0",eslint:"^4.19.1","eslint-config-standard":"^11.0.0","eslint-plugin-import":"^2.14.0","eslint-plugin-node":"^6.0.1","eslint-plugin-promise":"^4.0.1","eslint-plugin-standard":"^3.1.0","pg-copy-streams":"0.3.0"},minNativeVersion:"2.0.0",scripts:{test:"make test-all"},license:"MIT",engines:{node:">= 4.5.0"}}},function(e,t,n){"use strict";var i=n(4).EventEmitter,a=n(2),o=n(35),r=e.exports=function(e,t,n){i.call(this),e=o.normalizeQueryConfig(e,t,n),this.text=e.text,this.values=e.values,this.name=e.name,this.callback=e.callback,this.state="new",this._arrayMode="array"===e.rowMode,this._emitRowEvents=!1,this.on("newListener",function(e){"row"===e&&(this._emitRowEvents=!0)}.bind(this))};a.inherits(r,i);var s={sqlState:"code",statementPosition:"position",messagePrimary:"message",context:"where",schemaName:"schema",tableName:"table",columnName:"column",dataTypeName:"dataType",constraintName:"constraint",sourceFile:"file",sourceLine:"line",sourceFunction:"routine"};r.prototype.handleError=function(e){var t=this.native.pq.resultErrorFields();if(t)for(var n in t){e[s[n]||n]=t[n]}this.callback?this.callback(e):this.emit("error",e),this.state="error"},r.prototype.then=function(e,t){return this._getPromise().then(e,t)},r.prototype.catch=function(e){return this._getPromise().catch(e)},r.prototype._getPromise=function(){return this._promise?this._promise:(this._promise=new Promise(function(e,t){this._once("end",e),this._once("error",t)}.bind(this)),this._promise)},r.prototype.submit=function(e){this.state="running";var t=this;this.native=e.native,e.native.arrayMode=this._arrayMode;var n=function(n,i,a){if(e.native.arrayMode=!1,setImmediate(function(){t.emit("_done")}),n)return t.handleError(n);t._emitRowEvents&&(a.length>1?i.forEach((e,n)=>{e.forEach(e=>{t.emit("row",e,a[n])})}):i.forEach(function(e){t.emit("row",e,a)})),t.state="end",t.emit("end",a),t.callback&&t.callback(null,a)};if(process.domain&&(n=process.domain.bind(n)),this.name){this.name.length>63&&(console.error("Warning! Postgres only supports 63 characters for query names."),console.error("You supplied",this.name,"(",this.name.length,")"),console.error("This can cause conflicts and silent errors executing queries"));var i=(this.values||[]).map(o.prepareValue);return e.namedQueries[this.name]?e.native.execute(this.name,i,n):e.native.prepare(this.name,this.text,i.length,function(a){return a?n(a):(e.namedQueries[t.name]=!0,t.native.execute(t.name,i,n))})}if(this.values){if(!Array.isArray(this.values)){const e=new Error("Query values must be an array");return n(e)}var a=this.values.map(o.prepareValue);e.native.query(this.text,a,n)}else e.native.query(this.text,n)}},function(e,t,n){"use strict";var i=n(82),a=n(174),o=n(175);const r=new i.Route;r.get("history",(e,t)=>{Object(a.b)(async n=>{try{const i=e.body.user,a=await n.query(o.a.getPurchases,[i]);console.log("Found ",a.rows.length," purchases"),t.json(a.rows.map(e=>({date:e.date,purchaseName:e.name,purchaseAmount:e.amount})))}catch(e){t.json([])}})}),r.post("history",(e,t)=>{Object(a.b)(async n=>{let{user:i,date:a,purchaseName:r,purchaseAmount:s}=e.body,c=[i,a,r,s];try{console.log("Inserting purchase for ",e.body),await n.query(o.a.insertPurchase,c),console.log("Inserted successfully"),t.json({status:"ok"})}catch(e){return console.log("Failed to insert:",e),void t.json({status:"failed",err:e&&e.code?e.code:""})}})}),r.get("history/clear",(e,t)=>{Object(a.b)(async n=>{try{let i=e.body.user;console.log("Clearing the database"),await n.query(QUERIES.clear,[i])}finally{t.json({})}})}),r.post("history/edit",(e,t)=>{Object(a.b)(async t=>{try{console.log("Editing a purchase");e.body}catch(e){}})}),r.post("history/delete",(e,t)=>{Object(a.b)(async t=>{try{console.log("Removing a purchase");e.body}catch(e){}})}),t.a=r},function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"b",function(){return s});var i=n(60),a=n(175);async function o(){if(!process.env.DATABASE_URL){const e=new i.Client(process.env.DATABASE_URL);try{return await e.connect(),e}catch(e){console.log("Failed to connect to database: ",e),process.exit(-1)}}}async function r(e){console.log("Setting up the database: ",e);const t=await o();console.log("Connected to the database, ensuring the tables are created.");try{await t.query(a.a.createTables),console.log("Database is set up")}catch(e){console.error("Failed to set up database: ",e),process.exit(-2)}}async function s(e){const t=await o();return await e(t)}},function(e,t,n){"use strict";t.a={createTables:"CREATE TABLE IF NOT EXISTS purchase_history (date text, name text, amount real);",getPurchases:"SELECT date, name, amount FROM purchase_history WHERE user = $1;",insertPurchase:"INSERT INTO purchase_history(user, date, name, amount) VALUES($1, $2, $3, $4);",clear:"TRUNCATE purchase_history;",editPurchase:"",deletePurchase:""}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicGF0aFwiIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZWJ1Zy9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwidXRpbFwiIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZXBkL2luZGV4LmpzIiwid2VicGFjazovLy9leHRlcm5hbCBcImV2ZW50c1wiIiwid2VicGFjazovLy9leHRlcm5hbCBcInN0cmVhbVwiIiwid2VicGFjazovLy9leHRlcm5hbCBcImZzXCIiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2V4cHJlc3MvbGliL3V0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9odHRwLWVycm9ycy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2FmZXItYnVmZmVyL3NhZmVyLmpzIiwid2VicGFjazovLy9leHRlcm5hbCBcImJ1ZmZlclwiIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ieXRlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb24tZmluaXNoZWQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3R5cGUtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BhcnNldXJsL2luZGV4LmpzIiwid2VicGFjazovLy9leHRlcm5hbCBcImh0dHBcIiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2V0cHJvdG90eXBlb2YvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvbnRlbnQtdHlwZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYm9keS1wYXJzZXIvbGliL3JlYWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VuY29kZXVybC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXNjYXBlLWh0bWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FycmF5LWZsYXR0ZW4vYXJyYXktZmxhdHRlbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXRpbHMtbWVyZ2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BnL2xpYi9kZWZhdWx0cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGcvbm9kZV9tb2R1bGVzL3BnLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy9leHRlcm5hbCBcImFzc2VydFwiIiwid2VicGFjazovLy9leHRlcm5hbCBcIm5ldFwiIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xcy9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwidXJsXCIiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0YXR1c2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tZXRob2RzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zYWZlLWJ1ZmZlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2VuZC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjcnlwdG9cIiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGcvbGliL3V0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZXBkL2xpYi9jb21wYXQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlYnVnL3NyYy9kZWJ1Zy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvbGliL2luZGV4LmpzIiwid2VicGFjazovLy9leHRlcm5hbCBcInN0cmluZ19kZWNvZGVyXCIiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3VucGlwZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWltZS10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXMvbGliL3V0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xcy9saWIvZm9ybWF0cy5qcyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJxdWVyeXN0cmluZ1wiIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9leHByZXNzL2xpYi9yb3V0ZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2V4cHJlc3MvbGliL3JvdXRlci9yb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXhwcmVzcy9saWIvcm91dGVyL2xheWVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9leHByZXNzL2xpYi9taWRkbGV3YXJlL3F1ZXJ5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb250ZW50LWRpc3Bvc2l0aW9uL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ldGFnL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mcmVzaC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmFuZ2UtcGFyc2VyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm94eS1hZGRyL2luZGV4LmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nvb2tpZS1zaWduYXR1cmUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nvb2tpZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGcvbGliL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wZy9ub2RlX21vZHVsZXMvcG9zdGdyZXMtYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BnL25vZGVfbW9kdWxlcy9wZy10eXBlcy9saWIvYXJyYXlQYXJzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Bvc3RncmVzLWRhdGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Bvc3RncmVzLWludGVydmFsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wb3N0Z3Jlcy1ieXRlYS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGctaW50OC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGcvbGliL3R5cGUtb3ZlcnJpZGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wZy9saWIvY29ubmVjdGlvbi1wYXJhbWV0ZXJzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wZy9saWIvY29ubmVjdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGcvbGliL25hdGl2ZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmluZGluZ3Mgc3luYyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcG9zdGdyZXMtYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BnLXR5cGVzL2xpYi9hcnJheVBhcnNlci5qcyIsIndlYnBhY2s6Ly8vLi9iaW4vd3d3Iiwid2VicGFjazovLy8uL2FwcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVwZC9saWIvY29tcGF0L2NhbGxzaXRlLXRvc3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kZXBkL2xpYi9jb21wYXQvZXZlbnQtbGlzdGVuZXItY291bnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2h0dHAtZXJyb3JzL25vZGVfbW9kdWxlcy9zdGF0dXNlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW5oZXJpdHMvaW5oZXJpdHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2V4cHJlc3MvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2V4cHJlc3MvbGliL2V4cHJlc3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JvZHktcGFyc2VyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ib2R5LXBhcnNlci9saWIvdHlwZXMvanNvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVidWcvc3JjL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlYnVnL3NyYy9ub2RlLmpzIiwid2VicGFjazovLy9leHRlcm5hbCBcInR0eVwiIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yYXctYm9keS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaWNvbnYtbGl0ZS9saWIvYm9tLWhhbmRsaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pY29udi1saXRlL2VuY29kaW5ncy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaWNvbnYtbGl0ZS9lbmNvZGluZ3MvaW50ZXJuYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvZW5jb2RpbmdzL3V0ZjE2LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pY29udi1saXRlL2VuY29kaW5ncy91dGY3LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pY29udi1saXRlL2VuY29kaW5ncy9zYmNzLWNvZGVjLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pY29udi1saXRlL2VuY29kaW5ncy9zYmNzLWRhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvZW5jb2RpbmdzL3NiY3MtZGF0YS1nZW5lcmF0ZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvZW5jb2RpbmdzL2RiY3MtY29kZWMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ljb252LWxpdGUvZW5jb2RpbmdzL2RiY3MtZGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaWNvbnYtbGl0ZS9saWIvc3RyZWFtcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaWNvbnYtbGl0ZS9saWIvZXh0ZW5kLW5vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VlLWZpcnN0L2luZGV4LmpzIiwid2VicGFjazovLy9leHRlcm5hbCBcInpsaWJcIiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWVkaWEtdHlwZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21pbWUtZGIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JvZHktcGFyc2VyL2xpYi90eXBlcy9yYXcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JvZHktcGFyc2VyL2xpYi90eXBlcy90ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ib2R5LXBhcnNlci9saWIvdHlwZXMvdXJsZW5jb2RlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXMvbGliL3N0cmluZ2lmeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXMvbGliL3BhcnNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tZXJnZS1kZXNjcmlwdG9ycy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXhwcmVzcy9saWIvYXBwbGljYXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZpbmFsaGFuZGxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2V4cHJlc3MvbGliL21pZGRsZXdhcmUvaW5pdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXhwcmVzcy9saWIvdmlldy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXhwcmVzcy9saWIgc3luYyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVzdHJveS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWltZS9taW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mb3J3YXJkZWQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lwYWRkci5qcy9saWIvaXBhZGRyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9leHByZXNzL2xpYi9yZXF1ZXN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hY2NlcHRzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9uZWdvdGlhdG9yL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9uZWdvdGlhdG9yL2xpYi9jaGFyc2V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9uZWdvdGlhdG9yL2xpYi9lbmNvZGluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbmVnb3RpYXRvci9saWIvbGFuZ3VhZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL25lZ290aWF0b3IvbGliL21lZGlhVHlwZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXhwcmVzcy9saWIvcmVzcG9uc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZhcnkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NlcnZlLXN0YXRpYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29va2llLXBhcnNlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9yZ2FuL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYXNpYy1hdXRoL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vbi1oZWFkZXJzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wZy9saWIvY2xpZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wZy9ub2RlX21vZHVsZXMvcGctdHlwZXMvbGliL3RleHRQYXJzZXJzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy94dGVuZC9tdXRhYmxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wZy9ub2RlX21vZHVsZXMvcGctdHlwZXMvbGliL2JpbmFyeVBhcnNlcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BncGFzcy9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BncGFzcy9saWIvaGVscGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zcGxpdC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGhyb3VnaC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJkbnNcIiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGctY29ubmVjdGlvbi1zdHJpbmcvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BnL2xpYi9xdWVyeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGcvbGliL3Jlc3VsdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYnVmZmVyLXdyaXRlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGFja2V0LXJlYWRlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJ0bHNcIiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGctcG9vbC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGcvbGliL25hdGl2ZS9jbGllbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BnLW5hdGl2ZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGlicHEvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JpbmRpbmdzL2JpbmRpbmdzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wZy10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGctdHlwZXMvbGliL3RleHRQYXJzZXJzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wZy10eXBlcy9saWIvYmluYXJ5UGFyc2Vycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGctbmF0aXZlL2xpYi9idWlsZC1yZXN1bHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BnLW5hdGl2ZS9saWIvY29weS1zdHJlYW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BnL25vZGVfbW9kdWxlcy9zZW12ZXIvc2VtdmVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wZy9saWIvbmF0aXZlL3F1ZXJ5LmpzIiwid2VicGFjazovLy8uL3JvdXRlcy9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4vZGIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vZGIvcXVlcmllcy5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInJlcXVpcmUiLCJwcm9jZXNzIiwidHlwZSIsImNhbGxTaXRlVG9TdHJpbmciLCJldmVudExpc3RlbmVyQ291bnQiLCJyZWxhdGl2ZSIsImRlcGQiLCJiYXNlUGF0aCIsImN3ZCIsImNvbnRhaW5zTmFtZXNwYWNlIiwic3RyIiwibmFtZXNwYWNlIiwidmFscyIsInNwbGl0IiwiU3RyaW5nIiwidG9Mb3dlckNhc2UiLCJsZW5ndGgiLCJ2YWwiLCJjb252ZXJ0RGF0YURlc2NyaXB0b3JUb0FjY2Vzc29yIiwib2JqIiwicHJvcCIsIm1lc3NhZ2UiLCJkZXNjcmlwdG9yIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwid3JpdGFibGUiLCJzZXQiLCJjcmVhdGVBcmd1bWVudHNTdHJpbmciLCJhcml0eSIsInN1YnN0ciIsImNyZWF0ZVN0YWNrU3RyaW5nIiwic3RhY2siLCJ0aGlzIiwiVHlwZUVycm9yIiwiZmlsZSIsImNhbGxTaXRlTG9jYXRpb24iLCJnZXRTdGFjayIsImRlcHJlY2F0ZSIsImxvZyIsIl9maWxlIiwiX2lnbm9yZWQiLCJpc2lnbm9yZWQiLCJfbmFtZXNwYWNlIiwiX3RyYWNlZCIsImlzdHJhY2VkIiwiX3dhcm5lZCIsImZ1bmN0aW9uIiwid3JhcGZ1bmN0aW9uIiwid3JhcHByb3BlcnR5Iiwibm9EZXByZWNhdGlvbiIsImVudiIsIk5PX0RFUFJFQ0FUSU9OIiwidHJhY2VEZXByZWNhdGlvbiIsIlRSQUNFX0RFUFJFQ0FUSU9OIiwic2l0ZSIsImhhc2xpc3RlbmVycyIsImNhbGxlciIsImNhbGxGaWxlIiwiY2FsbFNpdGUiLCJkZXBTaXRlIiwic2VlbiIsImpvaW4iLCJ1bmRlZmluZWQiLCJtc2ciLCJkZWZhdWx0TWVzc2FnZSIsImVyciIsIkRlcHJlY2F0aW9uRXJyb3IiLCJzbGljZSIsImVtaXQiLCJvdXRwdXQiLCJzdGRlcnIiLCJpc1RUWSIsImZvcm1hdENvbG9yIiwiZm9ybWF0UGxhaW4iLCJ3cml0ZSIsImdldEZpbGVOYW1lIiwibGluZSIsImdldExpbmVOdW1iZXIiLCJjb2xtIiwiZ2V0Q29sdW1uTnVtYmVyIiwiaXNFdmFsIiwiZ2V0RXZhbE9yaWdpbiIsImdldEZ1bmN0aW9uTmFtZSIsImZ1bmNOYW1lIiwiZm9ybWF0TG9jYXRpb24iLCJjb250ZXh0IiwiZ2V0VGhpcyIsInR5cGVOYW1lIiwiZ2V0VHlwZU5hbWUiLCJnZXRNZXRob2ROYW1lIiwiZm9ybWF0dGVkIiwiRGF0ZSIsInRvVVRDU3RyaW5nIiwibGltaXQiLCJFcnJvciIsInN0YWNrVHJhY2VMaW1pdCIsInByZXAiLCJwcmVwYXJlU3RhY2tUcmFjZSIsInByZXBhcmVPYmplY3RTdGFja1RyYWNlIiwiTWF0aCIsIm1heCIsImNhcHR1cmVTdGFja1RyYWNlIiwiZm4iLCJhcmdzIiwiZGVwcmVjYXRlZGZuIiwiZXZhbCIsImNvbmZpZ3VyYWJsZSIsImFwcGx5IiwiYXJndW1lbnRzIiwic3RhY2tTdHJpbmciLCJlcnJvciIsIkJ1ZmZlciIsImNvbnRlbnREaXNwb3NpdGlvbiIsImNvbnRlbnRUeXBlIiwiZmxhdHRlbiIsIm1pbWUiLCJldGFnIiwicHJveHlhZGRyIiwicXMiLCJxdWVyeXN0cmluZyIsImNyZWF0ZUVUYWdHZW5lcmF0b3IiLCJvcHRpb25zIiwiYm9keSIsImVuY29kaW5nIiwiYnVmIiwiaXNCdWZmZXIiLCJmcm9tIiwicGFyc2VFeHRlbmRlZFF1ZXJ5U3RyaW5nIiwicGFyc2UiLCJhbGxvd1Byb3RvdHlwZXMiLCJuZXdPYmplY3QiLCJ3ZWFrIiwid2V0YWciLCJpc0Fic29sdXRlIiwicGF0aCIsInN1YnN0cmluZyIsIm5vcm1hbGl6ZVR5cGUiLCJpbmRleE9mIiwiaW5kZXgiLCJwYXJ0cyIsInJldCIsInF1YWxpdHkiLCJwYXJhbXMiLCJvcmlnaW5hbEluZGV4IiwicG1zIiwicGFyc2VGbG9hdCIsImFjY2VwdFBhcmFtcyIsImxvb2t1cCIsIm5vcm1hbGl6ZVR5cGVzIiwidHlwZXMiLCJwdXNoIiwiY29tcGlsZUVUYWciLCJjb21waWxlUXVlcnlQYXJzZXIiLCJjb21waWxlVHJ1c3QiLCJhIiwiY29tcGlsZSIsInNldENoYXJzZXQiLCJjaGFyc2V0IiwicGFyc2VkIiwicGFyYW1ldGVycyIsImZvcm1hdCIsInNldFByb3RvdHlwZU9mIiwic3RhdHVzZXMiLCJpbmhlcml0cyIsImNvZGVDbGFzcyIsInN0YXR1cyIsIk51bWJlciIsImNoYXJBdCIsImNyZWF0ZUVycm9yIiwicHJvcHMiLCJhcmciLCJzdGF0dXNDb2RlIiwiSHR0cEVycm9yIiwiZXhwb3NlIiwiY3JlYXRlSHR0cEVycm9yQ29uc3RydWN0b3IiLCJjb2RlcyIsImZvckVhY2giLCJjb2RlIiwiQ29kZUVycm9yIiwibWFwIiwidG9rZW4iLCJ0b1VwcGVyQ2FzZSIsInJlcGxhY2UiLCJjbGFzc05hbWUiLCJtYXRjaCIsIkNsaWVudEVycm9yIiwiY3JlYXRlQ2xpZW50RXJyb3JDb25zdHJ1Y3RvciIsIlNlcnZlckVycm9yIiwiY3JlYXRlU2VydmVyRXJyb3JDb25zdHJ1Y3RvciIsIkltQVRlYXBvdCIsInBvcHVsYXRlQ29uc3RydWN0b3JFeHBvcnRzIiwiYnVmZmVyIiwic2FmZXIiLCJTYWZlciIsIlVpbnQ4QXJyYXkiLCJlbmNvZGluZ09yT2Zmc2V0IiwiYWxsb2MiLCJzaXplIiwiZmlsbCIsIlJhbmdlRXJyb3IiLCJrU3RyaW5nTWF4TGVuZ3RoIiwiYmluZGluZyIsImUiLCJjb25zdGFudHMiLCJNQVhfTEVOR1RIIiwia01heExlbmd0aCIsIk1BWF9TVFJJTkdfTEVOR1RIIiwiZm9ybWF0VGhvdXNhbmRzUmVnRXhwIiwiZm9ybWF0RGVjaW1hbHNSZWdFeHAiLCJiIiwia2IiLCJtYiIsImdiIiwidGIiLCJwYXJzZVJlZ0V4cCIsImlzRmluaXRlIiwibWFnIiwiYWJzIiwidGhvdXNhbmRzU2VwYXJhdG9yIiwidW5pdFNlcGFyYXRvciIsImRlY2ltYWxQbGFjZXMiLCJmaXhlZERlY2ltYWxzIiwiQm9vbGVhbiIsInVuaXQiLCJ0b0ZpeGVkIiwiaXNOYU4iLCJmbG9hdFZhbHVlIiwicmVzdWx0cyIsImV4ZWMiLCJwYXJzZUludCIsImZsb29yIiwibGlzdGVuZXIiLCJpc0ZpbmlzaGVkIiwiZGVmZXIiLCJhdHRhY2hlZCIsIl9fb25GaW5pc2hlZCIsInF1ZXVlIiwiY3JlYXRlTGlzdGVuZXIiLCJjYWxsYmFjayIsImVlTXNnIiwiZWVTb2NrZXQiLCJmaW5pc2hlZCIsIm9uRmluaXNoIiwiY2FuY2VsIiwib25Tb2NrZXQiLCJzb2NrZXQiLCJyZW1vdmVMaXN0ZW5lciIsImZpcnN0Iiwib24iLCJyZXMiLCJhc3NpZ25Tb2NrZXQiLCJwYXRjaEFzc2lnblNvY2tldCIsImF0dGFjaEZpbmlzaGVkTGlzdGVuZXIiLCJhdHRhY2hMaXN0ZW5lciIsInNldEltbWVkaWF0ZSIsIm5leHRUaWNrIiwiY29tcGxldGUiLCJ1cGdyYWRlIiwicmVhZGFibGUiLCJ0eXBlciIsInR5cGVpcyIsInR5cGVzXyIsInRyeU5vcm1hbGl6ZVR5cGUiLCJBcnJheSIsImlzQXJyYXkiLCJtaW1lTWF0Y2giLCJub3JtYWxpemUiLCJoYXNib2R5IiwicmVxIiwiaGVhZGVycyIsImV4cGVjdGVkIiwiYWN0dWFsIiwiYWN0dWFsUGFydHMiLCJleHBlY3RlZFBhcnRzIiwiaXMiLCJoYXNCb2R5IiwidXJsIiwiVXJsIiwicGFyc2V1cmwiLCJfcGFyc2VkVXJsIiwiZnJlc2giLCJmYXN0cGFyc2UiLCJfcmF3IiwiY2hhckNvZGVBdCIsInBhdGhuYW1lIiwicXVlcnkiLCJzZWFyY2giLCJocmVmIiwicGFyc2VkVXJsIiwib3JpZ2luYWwiLCJvcmlnaW5hbFVybCIsIl9wYXJzZWRPcmlnaW5hbFVybCIsIl9fcHJvdG9fXyIsInByb3RvIiwiUEFSQU1fUkVHRVhQIiwiVEVYVF9SRUdFWFAiLCJUT0tFTl9SRUdFWFAiLCJRRVNDX1JFR0VYUCIsIlFVT1RFX1JFR0VYUCIsIlRZUEVfUkVHRVhQIiwicXN0cmluZyIsInRlc3QiLCJDb250ZW50VHlwZSIsInN0cmluZyIsInBhcmFtIiwia2V5cyIsInNvcnQiLCJoZWFkZXIiLCJnZXRIZWFkZXIiLCJnZXRjb250ZW50dHlwZSIsInRyaW0iLCJsYXN0SW5kZXgiLCJnZXRCb2R5IiwiaWNvbnYiLCJvbkZpbmlzaGVkIiwiemxpYiIsIm5leHQiLCJkZWJ1ZyIsInN0cmVhbSIsIm9wdHMiLCJfYm9keSIsInZlcmlmeSIsImluZmxhdGUiLCJjcmVhdGVJbmZsYXRlIiwicGlwZSIsImNyZWF0ZUd1bnppcCIsImNvbnRlbnRzdHJlYW0iLCJlbmNvZGluZ0V4aXN0cyIsIl9lcnJvciIsInJlc3VtZSIsImRlY29kZSIsIlVOTUFUQ0hFRF9TVVJST0dBVEVfUEFJUl9SRUdFWFAiLCJVTk1BVENIRURfU1VSUk9HQVRFX1BBSVJfUkVQTEFDRSIsIkVOQ09ERV9DSEFSU19SRUdFWFAiLCJlbmNvZGVVUkkiLCJtYXRjaEh0bWxSZWdFeHAiLCJlc2NhcGUiLCJodG1sIiwiYXJyYXkiLCJkZXB0aCIsImZsYXR0ZW5Gb3JldmVyIiwicmVzdWx0IiwiZmxhdHRlbldpdGhEZXB0aCIsImhvc3QiLCJ1c2VyIiwicGxhdGZvcm0iLCJVU0VSTkFNRSIsIlVTRVIiLCJkYXRhYmFzZSIsInBhc3N3b3JkIiwiY29ubmVjdGlvblN0cmluZyIsInBvcnQiLCJyb3dzIiwiYmluYXJ5IiwiaWRsZVRpbWVvdXRNaWxsaXMiLCJjbGllbnRfZW5jb2RpbmciLCJzc2wiLCJhcHBsaWNhdGlvbl9uYW1lIiwiZmFsbGJhY2tfYXBwbGljYXRpb25fbmFtZSIsInBhcnNlSW5wdXREYXRlc0FzVVRDIiwic3RhdGVtZW50X3RpbWVvdXQiLCJxdWVyeV90aW1lb3V0IiwicGdUeXBlcyIsInBhcnNlQmlnSW50ZWdlciIsImdldFR5cGVQYXJzZXIiLCJwYXJzZUJpZ0ludGVnZXJBcnJheSIsIl9fZGVmaW5lU2V0dGVyX18iLCJzZXRUeXBlUGFyc2VyIiwidGV4dFBhcnNlcnMiLCJiaW5hcnlQYXJzZXJzIiwiYXJyYXlQYXJzZXIiLCJvaWQiLCJ0eXBlUGFyc2VycyIsIm5vUGFyc2UiLCJwYXJzZUZuIiwidGV4dCIsImluaXQiLCJjb252ZXJ0ZXIiLCJzdHJpbmdpZnkiLCJmb3JtYXRzIiwiU1RBVFVTX0NPREVTIiwiYXJyIiwicG9wdWxhdGVTdGF0dXNlc01hcCIsInJlZGlyZWN0IiwiMzAwIiwiMzAxIiwiMzAyIiwiMzAzIiwiMzA1IiwiMzA3IiwiMzA4IiwiZW1wdHkiLCIyMDQiLCIyMDUiLCIzMDQiLCJyZXRyeSIsIjUwMiIsIjUwMyIsIjUwNCIsImh0dHAiLCJNRVRIT0RTIiwibWV0aG9kIiwiY29weVByb3BzIiwic3JjIiwiZHN0IiwiU2FmZUJ1ZmZlciIsImFsbG9jVW5zYWZlIiwiYWxsb2NVbnNhZmVTbG93IiwiU2xvd0J1ZmZlciIsImRlc3Ryb3kiLCJlbmNvZGVVcmwiLCJlc2NhcGVIdG1sIiwiZnMiLCJtcyIsInBhcnNlUmFuZ2UiLCJTdHJlYW0iLCJ1dGlsIiwiZXh0bmFtZSIsInJlc29sdmUiLCJzZXAiLCJCWVRFU19SQU5HRV9SRUdFWFAiLCJNQVhfTUFYQUdFIiwiVVBfUEFUSF9SRUdFWFAiLCJTZW5kU3RyZWFtIiwiX2FjY2VwdFJhbmdlcyIsImFjY2VwdFJhbmdlcyIsIl9jYWNoZUNvbnRyb2wiLCJjYWNoZUNvbnRyb2wiLCJfZXRhZyIsIl9kb3RmaWxlcyIsImRvdGZpbGVzIiwiX2hpZGRlbiIsImhpZGRlbiIsIl9leHRlbnNpb25zIiwiZXh0ZW5zaW9ucyIsIm5vcm1hbGl6ZUxpc3QiLCJfaW1tdXRhYmxlIiwiaW1tdXRhYmxlIiwiX2luZGV4IiwiX2xhc3RNb2RpZmllZCIsImxhc3RNb2RpZmllZCIsIl9tYXhhZ2UiLCJtYXhBZ2UiLCJtYXhhZ2UiLCJtaW4iLCJfcm9vdCIsInJvb3QiLCJjb250ZW50UmFuZ2UiLCJyYW5nZSIsInN0YXJ0IiwiZW5kIiwiY3JlYXRlSHRtbERvY3VtZW50IiwidGl0bGUiLCJnZXRIZWFkZXJOYW1lcyIsIl9oZWFkZXJzIiwiaGFzTGlzdGVuZXJzIiwiZW1pdHRlciIsImxpc3RlbmVyQ291bnQiLCJsaXN0ZW5lcnMiLCJsaXN0IiwiY29uY2F0IiwicGFyc2VIdHRwRGF0ZSIsImRhdGUiLCJ0aW1lc3RhbXAiLCJOYU4iLCJwYXRocyIsImRvYyIsInJlbW92ZUhlYWRlciIsImNsZWFySGVhZGVycyIsInNldEhlYWRlciIsInNldEhlYWRlcnMiLCJieXRlTGVuZ3RoIiwiaGFzVHJhaWxpbmdTbGFzaCIsImlzQ29uZGl0aW9uYWxHRVQiLCJpc1ByZWNvbmRpdGlvbkZhaWx1cmUiLCJsZW4iLCJwYXJzZVRva2VuTGlzdCIsImV2ZXJ5IiwidW5tb2RpZmllZFNpbmNlIiwicmVtb3ZlQ29udGVudEhlYWRlckZpZWxkcyIsIm5vdE1vZGlmaWVkIiwiaGVhZGVyc0FscmVhZHlTZW50IiwiaXNDYWNoYWJsZSIsIm9uU3RhdEVycm9yIiwiaXNGcmVzaCIsImxhc3QtbW9kaWZpZWQiLCJpc1JhbmdlRnJlc2giLCJpZlJhbmdlIiwibG9jIiwiY29sbGFwc2VMZWFkaW5nU2xhc2hlcyIsImRlY29kZVVSSUNvbXBvbmVudCIsInBhcnQiLCJjb250YWluc0RvdEZpbGUiLCJhY2Nlc3MiLCJzZW5kSW5kZXgiLCJzZW5kRmlsZSIsInNlbmQiLCJzdGF0IiwicmFuZ2VzIiwib2Zmc2V0IiwiaGVhZGVyc1NlbnQiLCJfaGVhZGVyIiwiYnl0ZXMiLCJjb21iaW5lIiwiQ29udGVudC1SYW5nZSIsInNlbGYiLCJpc0RpcmVjdG9yeSIsImNyZWF0ZVJlYWRTdHJlYW0iLCJjaGFyc2V0cyIsIm1vZGlmaWVkIiwibXRpbWUiLCJjcnlwdG8iLCJkZWZhdWx0cyIsInByZXBhcmVWYWx1ZSIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwiYnl0ZU9mZnNldCIsInBhZCIsImdldFVUQ0Z1bGxZZWFyIiwiZ2V0VVRDTW9udGgiLCJnZXRVVENEYXRlIiwiZ2V0VVRDSG91cnMiLCJnZXRVVENNaW51dGVzIiwiZ2V0VVRDU2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsImdldFRpbWV6b25lT2Zmc2V0IiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwiZ2V0TWlsbGlzZWNvbmRzIiwiZGF0ZVRvU3RyaW5nIiwiYXJyYXlTdHJpbmciLCJ0b1N0cmluZyIsInRvUG9zdGdyZXMiLCJKU09OIiwicHJlcGFyZU9iamVjdCIsIm51bWJlciIsImRpZ2l0cyIsIm1kNSIsImNyZWF0ZUhhc2giLCJ1cGRhdGUiLCJkaWdlc3QiLCJub3JtYWxpemVRdWVyeUNvbmZpZyIsImNvbmZpZyIsInZhbHVlcyIsInBvc3RncmVzTWQ1UGFzc3dvcmRIYXNoIiwic2FsdCIsImlubmVyIiwiRXZlbnRFbWl0dGVyIiwibGF6eVByb3BlcnR5IiwicHJldlRpbWUiLCJjcmVhdGVEZWJ1ZyIsImVuYWJsZWQiLCJjdXJyIiwiZGlmZiIsInByZXYiLCJjb2VyY2UiLCJ1bnNoaWZ0IiwiZm9ybWF0dGVyIiwiZm9ybWF0dGVycyIsInNwbGljZSIsImZvcm1hdEFyZ3MiLCJjb25zb2xlIiwidXNlQ29sb3JzIiwiY29sb3IiLCJoYXNoIiwiY29sb3JzIiwic2VsZWN0Q29sb3IiLCJkaXNhYmxlIiwiZW5hYmxlIiwibmFtZXNwYWNlcyIsInNhdmUiLCJuYW1lcyIsInNraXBzIiwiUmVnRXhwIiwiaHVtYW5pemUiLCJoIiwieSIsInBsdXJhbCIsImNlaWwiLCJsb25nIiwicm91bmQiLCJmbXRTaG9ydCIsImJvbUhhbmRsaW5nIiwiZW5jb2RpbmdzIiwiZGVmYXVsdENoYXJVbmljb2RlIiwiZGVmYXVsdENoYXJTaW5nbGVCeXRlIiwiZW5jb2RlIiwiZW5jb2RlciIsImdldEVuY29kZXIiLCJ0cmFpbCIsInNraXBEZWNvZGVXYXJuaW5nIiwiZGVjb2RlciIsImdldERlY29kZXIiLCJlbmMiLCJnZXRDb2RlYyIsInRvRW5jb2RpbmciLCJmcm9tRW5jb2RpbmciLCJfY29kZWNEYXRhQ2FjaGUiLCJfY2Fub25pY2FsaXplRW5jb2RpbmciLCJjb2RlY09wdGlvbnMiLCJjb2RlYyIsImNvZGVjRGVmIiwiZW5jb2RpbmdOYW1lIiwiYm9tQXdhcmUiLCJhZGRCT00iLCJQcmVwZW5kQk9NIiwic3RyaXBCT00iLCJTdHJpcEJPTSIsIm5vZGVWZXIiLCJ2ZXJzaW9ucyIsIm5vZGUiLCJub2RlVmVyQXJyIiwidW5waXBlIiwiaGFzUGlwZURhdGFMaXN0ZW5lcnMiLCJwcmVmZXJlbmNlIiwiZGIiLCJFWFRSQUNUX1RZUEVfUkVHRVhQIiwiVEVYVF9UWVBFX1JFR0VYUCIsImV4dGVuc2lvbiIsImV4dHMiLCJzb3VyY2UiLCJ0byIsImhhcyIsImhleFRhYmxlIiwiYXJyYXlUb09iamVjdCIsInBsYWluT2JqZWN0cyIsImFzc2lnbiIsInRhcmdldCIsInJlZHVjZSIsImFjYyIsImNvbXBhY3QiLCJyZWZzIiwiaXRlbSIsImoiLCJwb3AiLCJjb21wYWN0ZWQiLCJjb21wYWN0UXVldWUiLCJvdXQiLCJjb25zdHJ1Y3RvciIsImlzUmVnRXhwIiwibWVyZ2UiLCJtZXJnZVRhcmdldCIsInBlcmNlbnRUd2VudGllcyIsImRlZmF1bHQiLCJSRkMxNzM4IiwiUkZDMzk4NiIsIlJvdXRlIiwiTGF5ZXIiLCJtZXRob2RzIiwibWl4aW4iLCJwYXJzZVVybCIsIm9iamVjdFJlZ0V4cCIsInJvdXRlciIsImhhbmRsZSIsIl9wYXJhbXMiLCJjYXNlU2Vuc2l0aXZlIiwibWVyZ2VQYXJhbXMiLCJzdHJpY3QiLCJhcHBlbmRNZXRob2RzIiwiYWRkaXRpb24iLCJnZXR0eXBlIiwibWF0Y2hMYXllciIsImxheWVyIiwib2xkIiwiaWR4IiwicHJvdG9ob3N0Iiwic2VhcmNoSW5kZXgiLCJwYXRoTGVuZ3RoIiwiZnFkbkluZGV4IiwiZ2V0UHJvdG9ob3N0IiwicmVtb3ZlZCIsInNsYXNoQWRkZWQiLCJwYXJhbWNhbGxlZCIsInBhcmVudFBhcmFtcyIsInBhcmVudFVybCIsImJhc2VVcmwiLCJkb25lIiwicmVzdG9yZSIsImxheWVyRXJyb3IiLCJyb3V0ZSIsImdldFBhdGhuYW1lIiwiaGFzX21ldGhvZCIsIl9oYW5kbGVzX21ldGhvZCIsIl9vcHRpb25zIiwicGFyZW50IiwibGF5ZXJQYXRoIiwicHJvY2Vzc19wYXJhbXMiLCJoYW5kbGVfcmVxdWVzdCIsImhhbmRsZV9lcnJvciIsInRyaW1fcHJlZml4Iiwic2VuZE9wdGlvbnNSZXNwb25zZSIsImNhbGxlZCIsInBhcmFtVmFsIiwicGFyYW1DYWxsYmFja3MiLCJwYXJhbUNhbGxlZCIsInBhcmFtSW5kZXgiLCJwYXJhbUNhbGxiYWNrIiwidXNlIiwiY2FsbGJhY2tzIiwic2Vuc2l0aXZlIiwiZGlzcGF0Y2giLCJfYWxsIiwiaGVhZCIsImFsbCIsImhhbmRsZXMiLCJwYXRoUmVnZXhwIiwicmVnZXhwIiwiZmFzdF9zdGFyIiwiZmFzdF9zbGFzaCIsImRlY29kZV9wYXJhbSIsIlVSSUVycm9yIiwiMCIsInF1ZXJ5cGFyc2UiLCJmaWxlbmFtZSIsImZhbGxiYWNrIiwiTk9OX0xBVElOMV9SRUdFWFAiLCJiYXNlbmFtZSIsImlzUXVvdGVkU3RyaW5nIiwiZmFsbGJhY2tOYW1lIiwiZ2V0bGF0aW4xIiwiaGFzRmFsbGJhY2siLCJIRVhfRVNDQVBFX1JFR0VYUCIsImNyZWF0ZXBhcmFtcyIsInVzdHJpbmciLCJDb250ZW50RGlzcG9zaXRpb24iLCJESVNQT1NJVElPTl9UWVBFX1JFR0VYUCIsImRlY29kZWZpZWxkIiwiRU5DT0RFX1VSTF9BVFRSX0NIQVJfUkVHRVhQIiwiSEVYX0VTQ0FQRV9SRVBMQUNFX1JFR0VYUCIsIkVYVF9WQUxVRV9SRUdFWFAiLCJwZGVjb2RlIiwiaGV4IiwiZnJvbUNoYXJDb2RlIiwicGVuY29kZSIsImNoYXIiLCJlbmNvZGVVUklDb21wb25lbnQiLCJlbnRpdHkiLCJpc1N0YXRzIiwiU3RhdHMiLCJjdGltZSIsImlubyIsImlzc3RhdHMiLCJ0YWciLCJnZXRUaW1lIiwiZW50aXR5dGFnIiwiQ0FDSEVfQ09OVFJPTF9OT19DQUNIRV9SRUdFWFAiLCJyZXFIZWFkZXJzIiwicmVzSGVhZGVycyIsIm1vZGlmaWVkU2luY2UiLCJub25lTWF0Y2giLCJldGFnU3RhbGUiLCJtYXRjaGVzIiwibW9kaWZpZWRTdGFsZSIsIm1hcFdpdGhJbmRleCIsIm1hcFdpdGhvdXRJbmRleCIsInNvcnRCeVJhbmdlSW5kZXgiLCJzb3J0QnlSYW5nZVN0YXJ0Iiwib3JkZXJlZCIsImN1cnJlbnQiLCJjb21iaW5lZCIsImNvbWJpbmVSYW5nZXMiLCJ0cnVzdCIsImFkZHJzIiwiYWxsYWRkcnMiLCJmb3J3YXJkZWQiLCJpcGFkZHIiLCJESUdJVF9SRUdFWFAiLCJpc2lwIiwiaXNWYWxpZCIsInBhcnNlaXAiLCJJUF9SQU5HRVMiLCJsaW5rbG9jYWwiLCJsb29wYmFjayIsInVuaXF1ZWxvY2FsIiwicmFuZ2VTdWJuZXRzIiwic3VibmV0cyIsInN1Ym5ldCIsInN1Ym5ldGlwIiwic3VibmV0a2luZCIsInN1Ym5ldGlzaXB2NCIsInN1Ym5ldHJhbmdlIiwicGFyc2VpcE5vdGF0aW9uIiwiY29tcGlsZVJhbmdlU3VibmV0cyIsInRydXN0Tm9uZSIsImtpbmQiLCJhZGRyIiwiaXAiLCJpc0lQdjRNYXBwZWRBZGRyZXNzIiwidG9JUHY0QWRkcmVzcyIsInRvSVB2NE1hcHBlZEFkZHJlc3MiLCJpcGNvbnYiLCJ0cnVzdGVkIiwibm90ZSIsInBvcyIsImxhc3RJbmRleE9mIiwibmV0bWFzayIsInByZWZpeExlbmd0aEZyb21TdWJuZXRNYXNrIiwicGFyc2VOZXRtYXNrIiwid2VicGFja1BvbHlmaWxsIiwiY2hpbGRyZW4iLCJzaGExIiwic2lnbiIsInNlY3JldCIsImNyZWF0ZUhtYWMiLCJ1bnNpZ24iLCJvcHQiLCJwYWlycyIsInBhaXJTcGxpdFJlZ0V4cCIsImRlYyIsInBhaXIiLCJlcV9pZHgiLCJ0cnlEZWNvZGUiLCJzZXJpYWxpemUiLCJmaWVsZENvbnRlbnRSZWdFeHAiLCJkb21haW4iLCJleHBpcmVzIiwiaHR0cE9ubHkiLCJzZWN1cmUiLCJzYW1lU2l0ZSIsIkNsaWVudCIsIkNvbm5lY3Rpb24iLCJQb29sIiwiUEciLCJjbGllbnRDb25zdHJ1Y3RvciIsIkJvdW5kUG9vbCIsIlF1ZXJ5IiwiX3Bvb2xzIiwiTk9ERV9QR19GT1JDRV9OQVRJVkUiLCJfX2RlZmluZUdldHRlcl9fIiwibmF0aXZlIiwidHJhbnNmb3JtIiwiQXJyYXlQYXJzZXIiLCJbb2JqZWN0IE9iamVjdF0iLCJpZGVudGl0eSIsInBvc2l0aW9uIiwiZW50cmllcyIsInJlY29yZGVkIiwiZGltZW5zaW9uIiwiY2hhcmFjdGVyIiwiZXNjYXBlZCIsImluY2x1ZGVFbXB0eSIsImVudHJ5IiwiaXNFb2YiLCJuZXh0Q2hhcmFjdGVyIiwibmVzdGVkIiwicGFyc2VyIiwicXVvdGUiLCJjb25zdW1lRGltZW5zaW9ucyIsInJlY29yZCIsIm5ld0VudHJ5IiwiREFURV9USU1FIiwiREFURSIsIlRJTUVfWk9ORSIsIkJDIiwiSU5GSU5JVFkiLCJpc29EYXRlIiwieWVhciIsIm1vbnRoIiwiZGF5Iiwic2V0RnVsbFllYXIiLCJpc0JDIiwiaXNGaXJzdENlbnR1cnkiLCJob3VyIiwibWludXRlIiwic2Vjb25kIiwiem9uZSIsInRpbWVab25lT2Zmc2V0IiwidXRjIiwiVVRDIiwic2V0VVRDRnVsbFllYXIiLCJleHRlbmQiLCJQb3N0Z3Jlc0ludGVydmFsIiwicmF3IiwiaW50ZXJ2YWwiLCJJTlRFUlZBTCIsImlzTmVnYXRpdmUiLCJwb3NpdGlvbnMiLCJmcmFjdGlvbiIsIm1pY3Jvc2Vjb25kcyIsIm5lZ2F0aXZlcyIsInByb3BlcnRpZXMiLCJmaWx0ZXJlZCIsImZpbHRlciIsIm1pbGxpc2Vjb25kcyIsInByb3BlcnRpZXNJU09FcXVpdmFsZW50IiwieWVhcnMiLCJtb250aHMiLCJkYXlzIiwiaG91cnMiLCJtaW51dGVzIiwic2Vjb25kcyIsImRhdGVQcm9wZXJ0aWVzIiwidGltZVByb3BlcnRpZXMiLCJ0b0lTT1N0cmluZyIsInRvSVNPIiwiYnVpbGRQcm9wZXJ0eSIsIk5VTUJFUiIsInJlZ2V4U3RyaW5nIiwiaW5wdXQiLCJiYWNrc2xhc2hlcyIsImsiLCJCQVNFIiwiaGlnaCIsInJlYWRJbnQzMkJFIiwibG93IiwicmVhZFVJbnQzMkJFIiwiY2FycnkiLCJUeXBlT3ZlcnJpZGVzIiwidXNlclR5cGVzIiwiX3R5cGVzIiwiZ2V0T3ZlcnJpZGVzIiwiZG5zIiwiZW52VmFyIiwiQ29ubmVjdGlvblBhcmFtZXRlcnMiLCJQR1NTTE1PREUiLCJ1c2VTc2wiLCJyZXBsaWNhdGlvbiIsImlzRG9tYWluU29ja2V0IiwicXVvdGVQYXJhbVZhbHVlIiwiYWRkIiwicGFyYW1OYW1lIiwiZ2V0TGlicHFDb25uZWN0aW9uU3RyaW5nIiwiY2IiLCJzc2xtb2RlIiwiYWRkcmVzcyIsIm5ldCIsIldyaXRlciIsIlJlYWRlciIsIlNvY2tldCIsIl9rZWVwQWxpdmUiLCJrZWVwQWxpdmUiLCJsYXN0QnVmZmVyIiwibGFzdE9mZnNldCIsInBhcnNlZFN0YXRlbWVudHMiLCJ3cml0ZXIiLCJfZW5kaW5nIiwiX21vZGUiLCJfZW1pdE1lc3NhZ2UiLCJfcmVhZGVyIiwiaGVhZGVyU2l6ZSIsImxlbmd0aFBhZGRpbmciLCJldmVudE5hbWUiLCJjb25uZWN0IiwicmVhZHlTdGF0ZSIsInNldEtlZXBBbGl2ZSIsInJlcG9ydFN0cmVhbUVycm9yIiwiYXR0YWNoTGlzdGVuZXJzIiwib25jZSIsInRscyIsInNlcnZlcm5hbWUiLCJjaGVja1NlcnZlcklkZW50aXR5IiwicmVqZWN0VW5hdXRob3JpemVkIiwiY2EiLCJwZngiLCJwYXNzcGhyYXNlIiwiY2VydCIsInNlY3VyZU9wdGlvbnMiLCJOUE5Qcm90b2NvbHMiLCJidWZmIiwiYWRkQ2h1bmsiLCJwYWNrZXQiLCJyZWFkIiwicGFyc2VNZXNzYWdlIiwicmVxdWVzdFNzbCIsImJvZHlCdWZmZXIiLCJhZGRJbnQxNiIsImZsdXNoIiwiYWRkSW50MzIiLCJzdGFydHVwIiwiYWRkQ1N0cmluZyIsInByb2Nlc3NJRCIsInNlY3JldEtleSIsIl9zZW5kIiwibW9yZSIsImFkZEhlYWRlciIsInBvcnRhbCIsInN0YXRlbWVudCIsInVzZUJpbmFyeSIsImFkZFN0cmluZyIsImV4ZWN1dGUiLCJlbXB0eUJ1ZmZlciIsInN5bmMiLCJFTkRfQlVGRkVSIiwiY2xvc2UiLCJkZXNjcmliZSIsInNlbmRDb3B5RnJvbUNodW5rIiwiY2h1bmsiLCJlbmRDb3B5RnJvbSIsInNlbmRDb3B5RmFpbCIsIk1lc3NhZ2UiLCJwYXJzZVIiLCJwYXJzZVMiLCJwYXJzZUsiLCJwYXJzZUMiLCJwYXJzZVoiLCJwYXJzZVQiLCJwYXJzZUQiLCJwYXJzZUUiLCJwYXJzZU4iLCJwYXJzZUEiLCJwYXJzZUciLCJwYXJzZUgiLCJwYXJzZUludDMyIiwiY29weSIsImluc3BlY3QiLCJwYXJhbWV0ZXJOYW1lIiwicGFyc2VDU3RyaW5nIiwicGFyYW1ldGVyVmFsdWUiLCJyZWFkU3RyaW5nIiwiZmllbGRDb3VudCIsInBhcnNlSW50MTYiLCJmaWVsZHMiLCJwYXJzZUZpZWxkIiwiRmllbGQiLCJ0YWJsZUlEIiwiY29sdW1uSUQiLCJkYXRhVHlwZUlEIiwiZGF0YVR5cGVTaXplIiwiZGF0YVR5cGVNb2RpZmllciIsImZpZWxkIiwiRGF0YVJvd01lc3NhZ2UiLCJfcmVhZFZhbHVlIiwicmVhZEJ5dGVzIiwiZmllbGRUeXBlIiwiTSIsInNldmVyaXR5IiwiUyIsIkMiLCJkZXRhaWwiLCJEIiwiaGludCIsIkgiLCJQIiwiaW50ZXJuYWxQb3NpdGlvbiIsImludGVybmFsUXVlcnkiLCJxIiwid2hlcmUiLCJXIiwic2NoZW1hIiwidGFibGUiLCJjb2x1bW4iLCJkYXRhVHlwZSIsImNvbnN0cmFpbnQiLCJGIiwiTCIsInJvdXRpbmUiLCJSIiwicHJvY2Vzc0lkIiwiY2hhbm5lbCIsInBheWxvYWQiLCJwYXJzZUdIIiwiaXNCaW5hcnkiLCJjb2x1bW5Db3VudCIsImNvbHVtblR5cGVzIiwicmVhZEludDE2QkUiLCJ3ZWJwYWNrRW1wdHlDb250ZXh0IiwiaWQiLCJhcHAiLCJub3JtYWxpemVQb3J0IiwiUE9SVCIsInNlcnZlciIsImNyZWF0ZVNlcnZlciIsImxpc3RlbiIsInN5c2NhbGwiLCJleGl0IiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsIl9fZGlybmFtZSIsImV4cHJlc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsImV4cHJlc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0IiwicGF0aF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiY29va2llX3BhcnNlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiY29va2llX3BhcnNlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fX2RlZmF1bHQiLCJtb3JnYW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsIm1vcmdhbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fX2RlZmF1bHQiLCJfcm91dGVzX2FwaV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwiX2RiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJleHRlbmRlZCIsInN0YXRpYyIsImxvY2FscyIsImFkZFN1ZmZpeCIsImZpbGVMb2NhdGlvbiIsImZpbGVOYW1lIiwiaXNOYXRpdmUiLCJnZXRTY3JpcHROYW1lT3JTb3VyY2VVUkwiLCJsaW5lTnVtYmVyIiwiY29sdW1uTnVtYmVyIiwiY2FsbFNpdGVGaWxlTG9jYXRpb24iLCJmdW5jdGlvbk5hbWUiLCJpc0NvbnN0cnVjdG9yIiwiaXNNZXRob2RDYWxsIiwiaXNUb3BsZXZlbCIsIm1ldGhvZE5hbWUiLCJyZWNlaXZlciIsImN0b3IiLCJzdXBlckN0b3IiLCJzdXBlcl8iLCJUZW1wQ3RvciIsImJvZHlQYXJzZXIiLCJSb3V0ZXIiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJhcHBsaWNhdGlvbiIsImpzb24iLCJ1cmxlbmNvZGVkIiwicGFyc2VycyIsImNyZWF0ZVBhcnNlckdldHRlciIsInBhcnNlck5hbWUiLCJsb2FkUGFyc2VyIiwiX3VybGVuY29kZWQiLCJfanNvbiIsInJldml2ZXIiLCJzaG91bGRQYXJzZSIsInR5cGVDaGVja2VyIiwiRklSU1RfQ0hBUl9SRUdFWFAiLCJwYXJ0aWFsIiwiU3ludGF4RXJyb3IiLCJub3JtYWxpemVKc29uU3ludGF4RXJyb3IiLCJjcmVhdGVTdHJpY3RTeW50YXhFcnJvciIsImdldENoYXJzZXQiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwibG9hZCIsInN0b3JhZ2UiLCJERUJVRyIsIkZ1bmN0aW9uIiwibGFzdEMiLCJyZW1vdmVJdGVtIiwid2luZG93IiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJzdHlsZSIsIldlYmtpdEFwcGVhcmFuY2UiLCJmaXJlYnVnIiwiZXhjZXB0aW9uIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiJDEiLCJjaHJvbWUiLCJsb2NhbCIsImxvY2FsU3RvcmFnZSIsImxvY2Fsc3RvcmFnZSIsInYiLCJ0dHkiLCJpbnNwZWN0T3B0cyIsInByZWZpeCIsImlzYXR0eSIsImZkIiwiXyIsIkRFQlVHX0ZEIiwic3Rkb3V0IiwiZ3Vlc3NIYW5kbGVUeXBlIiwiV3JpdGVTdHJlYW0iLCJfdHlwZSIsIl9oYW5kbGUiLCJ1bnJlZiIsIlN5bmNXcml0ZVN0cmVhbSIsImF1dG9DbG9zZSIsIl9pc1N0ZGlvIiwiY3JlYXRlV3JpdGFibGVTdGRpb1N0cmVhbSIsIk8iLCJnbG9iYWwiLCJQcm9taXNlIiwicmVhZFN0cmVhbSIsInJlamVjdCIsIklDT05WX0VOQ09ESU5HX01FU1NBR0VfUkVHRVhQIiwic3RhdGUiLCJfcmVhZGFibGVTdGF0ZSIsIl9kZWNvZGVyIiwicmVjZWl2ZWQiLCJpbnZva2VDYWxsYmFjayIsImNsZWFudXAiLCJwYXVzZSIsImhhbHQiLCJvbkFib3J0ZWQiLCJvbkRhdGEiLCJvbkVuZCIsIlByZXBlbmRCT01XcmFwcGVyIiwiU3RyaXBCT01XcmFwcGVyIiwicGFzcyIsIkludGVybmFsQ29kZWMiLCJJbnRlcm5hbEVuY29kZXJCYXNlNjQiLCJJbnRlcm5hbEVuY29kZXJDZXN1OCIsIkludGVybmFsRGVjb2RlckNlc3U4IiwidXRmOCIsImNlc3U4IiwidW5pY29kZTExdXRmOCIsInVjczIiLCJ1dGYxNmxlIiwiYmFzZTY0IiwiX2ludGVybmFsIiwiSW50ZXJuYWxFbmNvZGVyIiwiSW50ZXJuYWxEZWNvZGVyIiwiU3RyaW5nRGVjb2RlciIsInByZXZTdHIiLCJjb250Qnl0ZXMiLCJhY2NCeXRlcyIsImNvbXBsZXRlUXVhZHMiLCJidWZJZHgiLCJjaGFyQ29kZSIsImN1ckJ5dGUiLCJVdGYxNkJFQ29kZWMiLCJVdGYxNkJFRW5jb2RlciIsIlV0ZjE2QkVEZWNvZGVyIiwib3ZlcmZsb3dCeXRlIiwiVXRmMTZDb2RlYyIsIlV0ZjE2RW5jb2RlciIsIlV0ZjE2RGVjb2RlciIsImluaXRpYWxCeXRlcyIsImluaXRpYWxCeXRlc0xlbiIsImRldGVjdEVuY29kaW5nIiwiZGVmYXVsdEVuY29kaW5nIiwiYXNjaWlDaGFyc0xFIiwiYXNjaWlDaGFyc0JFIiwiX2xlbiIsInV0ZjE2YmUiLCJ0bXAiLCJidWYyIiwidXRmMTYiLCJVdGY3Q29kZWMiLCJ1dGY3IiwidW5pY29kZTExdXRmNyIsIlV0ZjdFbmNvZGVyIiwiVXRmN0RlY29kZXIiLCJub25EaXJlY3RDaGFycyIsImluQmFzZTY0IiwiYmFzZTY0QWNjdW0iLCJiYXNlNjRSZWdleCIsImJhc2U2NENoYXJzIiwicGx1c0NoYXIiLCJtaW51c0NoYXIiLCJhbmRDaGFyIiwiVXRmN0lNQVBDb2RlYyIsIlV0ZjdJTUFQRW5jb2RlciIsImJhc2U2NEFjY3VtSWR4IiwiVXRmN0lNQVBEZWNvZGVyIiwibGFzdEkiLCJiNjRzdHIiLCJjYW5CZURlY29kZWQiLCJ1dGY3aW1hcCIsInVDaGFyIiwiYmFzZTY0SU1BUENoYXJzIiwiU0JDU0NvZGVjIiwiY2hhcnMiLCJhc2NpaVN0cmluZyIsImRlY29kZUJ1ZiIsImVuY29kZUJ1ZiIsIlNCQ1NFbmNvZGVyIiwiU0JDU0RlY29kZXIiLCJfc2JjcyIsIm5ld0J1ZiIsImlkeDEiLCJpZHgyIiwiMTAwMjkiLCJtYWNjZW50ZXVybyIsIjgwOCIsImlibTgwOCIsImNwODA4IiwiYXNjaWk4Yml0IiwidXNhc2NpaSIsImFuc2l4MzQiLCJhbnNpeDM0MTk2OCIsImFuc2l4MzQxOTg2IiwiY3Nhc2NpaSIsImNwMzY3IiwiaWJtMzY3IiwiaXNvaXI2IiwiaXNvNjQ2dXMiLCJpc282NDZpcnYiLCJ1cyIsImxhdGluMSIsImxhdGluMiIsImxhdGluMyIsImxhdGluNCIsImxhdGluNSIsImxhdGluNiIsImxhdGluNyIsImxhdGluOCIsImxhdGluOSIsImxhdGluMTAiLCJjc2lzb2xhdGluMSIsImNzaXNvbGF0aW4yIiwiY3Npc29sYXRpbjMiLCJjc2lzb2xhdGluNCIsImNzaXNvbGF0aW5jeXJpbGxpYyIsImNzaXNvbGF0aW5hcmFiaWMiLCJjc2lzb2xhdGluZ3JlZWsiLCJjc2lzb2xhdGluaGVicmV3IiwiY3Npc29sYXRpbjUiLCJjc2lzb2xhdGluNiIsImwxIiwibDIiLCJsMyIsImw0IiwibDUiLCJsNiIsImw3IiwibDgiLCJsOSIsImwxMCIsImlzb2lyMTQiLCJpc29pcjU3IiwiaXNvaXIxMDAiLCJpc29pcjEwMSIsImlzb2lyMTA5IiwiaXNvaXIxMTAiLCJpc29pcjE0NCIsImlzb2lyMTI3IiwiaXNvaXIxMjYiLCJpc29pcjEzOCIsImlzb2lyMTQ4IiwiaXNvaXIxNTciLCJpc29pcjE2NiIsImlzb2lyMTc5IiwiaXNvaXIxOTkiLCJpc29pcjIwMyIsImlzb2lyMjI2IiwiY3A4MTkiLCJpYm04MTkiLCJjeXJpbGxpYyIsImFyYWJpYyIsImFyYWJpYzgiLCJlY21hMTE0IiwiYXNtbzcwOCIsImdyZWVrIiwiZ3JlZWs4IiwiZWNtYTExOCIsImVsb3Q5MjgiLCJoZWJyZXciLCJoZWJyZXc4IiwidHVya2lzaCIsInR1cmtpc2g4IiwidGhhaSIsInRoYWk4IiwiY2VsdGljIiwiY2VsdGljOCIsImlzb2NlbHRpYyIsInRpczYyMDAiLCJ0aXM2MjAyNTI5MSIsInRpczYyMDI1MzMwIiwiMTAwMDAiLCIxMDAwNiIsIjEwMDA3IiwiMTAwNzkiLCIxMDA4MSIsImNzcGM4Y29kZXBhZ2U0MzciLCJjc3BjNzc1YmFsdGljIiwiY3NwYzg1MG11bHRpbGluZ3VhbCIsImNzcGNwODUyIiwiY3NwYzg2MmxhdGluaGVicmV3IiwiY3BnciIsIm1zZWUiLCJtc2N5cmwiLCJtc2Fuc2kiLCJtc2dyZWVrIiwibXN0dXJrIiwibXNoZWJyIiwibXNhcmFiIiwid2luYmFsdHJpbSIsImNwMjA4NjYiLCIyMDg2NiIsImlibTg3OCIsImNza29pOHIiLCJjcDIxODY2IiwiMjE4NjYiLCJpYm0xMTY4Iiwic3RyazEwNDgyMDAyIiwidGN2bjU3MTIiLCJ0Y3ZuNTcxMjEiLCJnYjE5ODg4MCIsImNuIiwiY3Npc28xNGppc2M2MjIwcm8iLCJqaXNjNjIyMDE5NjlybyIsImpwIiwiY3NocHJvbWFuOCIsInI4Iiwicm9tYW44IiwieHJvbWFuOCIsImlibTEwNTEiLCJtYWMiLCJjc21hY2ludG9zaCIsIjQzNyIsIjczNyIsIjc3NSIsIjg1MCIsIjg1MiIsIjg1NSIsIjg1NiIsIjg1NyIsIjg1OCIsIjg2MCIsIjg2MSIsIjg2MiIsIjg2MyIsIjg2NCIsIjg2NSIsIjg2NiIsIjg2OSIsIjg3NCIsIjkyMiIsIjEwNDYiLCIxMTI0IiwiMTEyNSIsIjExMjkiLCIxMTMzIiwiMTE2MSIsIjExNjIiLCIxMTYzIiwiMTI1MCIsIjEyNTEiLCIxMjUyIiwiMTI1MyIsIjEyNTQiLCIxMjU1IiwiMTI1NiIsIjEyNTciLCIxMjU4IiwiMjg1OTEiLCIyODU5MiIsIjI4NTkzIiwiMjg1OTQiLCIyODU5NSIsIjI4NTk2IiwiMjg1OTciLCIyODU5OCIsIjI4NTk5IiwiMjg2MDAiLCIyODYwMSIsIjI4NjAzIiwiMjg2MDQiLCIyODYwNSIsIjI4NjA2Iiwid2luZG93czg3NCIsIndpbjg3NCIsImNwODc0Iiwid2luZG93czEyNTAiLCJ3aW4xMjUwIiwiY3AxMjUwIiwid2luZG93czEyNTEiLCJ3aW4xMjUxIiwiY3AxMjUxIiwid2luZG93czEyNTIiLCJ3aW4xMjUyIiwiY3AxMjUyIiwid2luZG93czEyNTMiLCJ3aW4xMjUzIiwiY3AxMjUzIiwid2luZG93czEyNTQiLCJ3aW4xMjU0IiwiY3AxMjU0Iiwid2luZG93czEyNTUiLCJ3aW4xMjU1IiwiY3AxMjU1Iiwid2luZG93czEyNTYiLCJ3aW4xMjU2IiwiY3AxMjU2Iiwid2luZG93czEyNTciLCJ3aW4xMjU3IiwiY3AxMjU3Iiwid2luZG93czEyNTgiLCJ3aW4xMjU4IiwiY3AxMjU4IiwiaXNvODg1OTEiLCJjcDI4NTkxIiwiaXNvODg1OTIiLCJjcDI4NTkyIiwiaXNvODg1OTMiLCJjcDI4NTkzIiwiaXNvODg1OTQiLCJjcDI4NTk0IiwiaXNvODg1OTUiLCJjcDI4NTk1IiwiaXNvODg1OTYiLCJjcDI4NTk2IiwiaXNvODg1OTciLCJjcDI4NTk3IiwiaXNvODg1OTgiLCJjcDI4NTk4IiwiaXNvODg1OTkiLCJjcDI4NTk5IiwiaXNvODg1OTEwIiwiY3AyODYwMCIsImlzbzg4NTkxMSIsImNwMjg2MDEiLCJpc284ODU5MTMiLCJjcDI4NjAzIiwiaXNvODg1OTE0IiwiY3AyODYwNCIsImlzbzg4NTkxNSIsImNwMjg2MDUiLCJpc284ODU5MTYiLCJjcDI4NjA2IiwiY3A0MzciLCJpYm00MzciLCJjc2libTQzNyIsImNwNzM3IiwiaWJtNzM3IiwiY3NpYm03MzciLCJjcDc3NSIsImlibTc3NSIsImNzaWJtNzc1IiwiY3A4NTAiLCJpYm04NTAiLCJjc2libTg1MCIsImNwODUyIiwiaWJtODUyIiwiY3NpYm04NTIiLCJjcDg1NSIsImlibTg1NSIsImNzaWJtODU1IiwiY3A4NTYiLCJpYm04NTYiLCJjc2libTg1NiIsImNwODU3IiwiaWJtODU3IiwiY3NpYm04NTciLCJjcDg1OCIsImlibTg1OCIsImNzaWJtODU4IiwiY3A4NjAiLCJpYm04NjAiLCJjc2libTg2MCIsImNwODYxIiwiaWJtODYxIiwiY3NpYm04NjEiLCJjcDg2MiIsImlibTg2MiIsImNzaWJtODYyIiwiY3A4NjMiLCJpYm04NjMiLCJjc2libTg2MyIsImNwODY0IiwiaWJtODY0IiwiY3NpYm04NjQiLCJjcDg2NSIsImlibTg2NSIsImNzaWJtODY1IiwiY3A4NjYiLCJpYm04NjYiLCJjc2libTg2NiIsImNwODY5IiwiaWJtODY5IiwiY3NpYm04NjkiLCJjcDkyMiIsImlibTkyMiIsImNzaWJtOTIyIiwiY3AxMDQ2IiwiaWJtMTA0NiIsImNzaWJtMTA0NiIsImNwMTEyNCIsImlibTExMjQiLCJjc2libTExMjQiLCJjcDExMjUiLCJpYm0xMTI1IiwiY3NpYm0xMTI1IiwiY3AxMTI5IiwiaWJtMTEyOSIsImNzaWJtMTEyOSIsImNwMTEzMyIsImlibTExMzMiLCJjc2libTExMzMiLCJjcDExNjEiLCJpYm0xMTYxIiwiY3NpYm0xMTYxIiwiY3AxMTYyIiwiaWJtMTE2MiIsImNzaWJtMTE2MiIsImNwMTE2MyIsImlibTExNjMiLCJjc2libTExNjMiLCJtYWNjcm9hdGlhbiIsIm1hY2N5cmlsbGljIiwibWFjZ3JlZWsiLCJtYWNpY2VsYW5kIiwibWFjcm9tYW4iLCJtYWNyb21hbmlhIiwibWFjdGhhaSIsIm1hY3R1cmtpc2giLCJtYWN1a3JhaW5lIiwia29pOHIiLCJrb2k4dSIsImtvaThydSIsImtvaTh0IiwiYXJtc2NpaTgiLCJyazEwNDgiLCJ0Y3ZuIiwiZ2VvcmdpYW5hY2FkZW15IiwiZ2VvcmdpYW5wcyIsInB0MTU0IiwidmlzY2lpIiwiaXNvNjQ2Y24iLCJpc282NDZqcCIsImhwcm9tYW44IiwibWFjaW50b3NoIiwiYXNjaWkiLCJ0aXM2MjAiLCJfZGJjcyIsIkRCQ1NDb2RlYyIsIlVOQVNTSUdORUQiLCJHQjE4MDMwX0NPREUiLCJOT0RFX1NUQVJUIiwiVU5BU1NJR05FRF9OT0RFIiwibWFwcGluZ1RhYmxlIiwiZGVjb2RlVGFibGVzIiwiZGVjb2RlVGFibGVTZXEiLCJfYWRkRGVjb2RlQ2h1bmsiLCJlbmNvZGVUYWJsZSIsImVuY29kZVRhYmxlU2VxIiwic2tpcEVuY29kZUNoYXJzIiwiZW5jb2RlU2tpcFZhbHMiLCJfZmlsbEVuY29kZVRhYmxlIiwiZW5jb2RlQWRkIiwiX3NldEVuY29kZUNoYXIiLCJkZWZDaGFyU0IiLCJnYjE4MDMwIiwidGhpcmRCeXRlTm9kZUlkeCIsInRoaXJkQnl0ZU5vZGUiLCJmb3VydGhCeXRlTm9kZUlkeCIsImZvdXJ0aEJ5dGVOb2RlIiwic2Vjb25kQnl0ZU5vZGVJZHgiLCJzZWNvbmRCeXRlTm9kZSIsIkRCQ1NFbmNvZGVyIiwibGVhZFN1cnJvZ2F0ZSIsInNlcU9iaiIsIkRCQ1NEZWNvZGVyIiwibm9kZUlkeCIsInByZXZCdWYiLCJmaW5kSWR4IiwibWlkIiwiX2dldERlY29kZVRyaWVOb2RlIiwiY3VyQWRkciIsIndyaXRlVGFibGUiLCJjb2RlVHJhaWwiLCJzZXEiLCJfZ2V0RW5jb2RlQnVja2V0IiwidUNvZGUiLCJkYmNzQ29kZSIsImJ1Y2tldCIsIl9zZXRFbmNvZGVTZXF1ZW5jZSIsIm9sZFZhbCIsIm1iQ29kZSIsIm5leHRDaGFyIiwicmVzQ29kZSIsInN1YnRhYmxlIiwidUNoYXJzIiwiZ2JDaGFycyIsInByZXZCdWZPZmZzZXQiLCJzZXFTdGFydCIsImN1clNlcSIsInB0ciIsInVDb2RlTGVhZCIsInNoaWZ0amlzIiwiwqUiLCLigL4iLCJjc3NoaWZ0amlzIiwibXNrYW5qaSIsInNqaXMiLCJ3aW5kb3dzMzFqIiwibXMzMWoiLCJ4c2ppcyIsIndpbmRvd3M5MzIiLCJtczkzMiIsIjkzMiIsImNwOTMyIiwiZXVjanAiLCJnYjIzMTIiLCJnYjIzMTI4MCIsImdiMjMxMjE5ODAiLCJjc2diMjMxMiIsImNzaXNvNThnYjIzMTI4MCIsImV1Y2NuIiwid2luZG93czkzNiIsIm1zOTM2IiwiOTM2IiwiY3A5MzYiLCJnYmsiLCJ4Z2JrIiwiaXNvaXI1OCIsIuKCrCIsImNoaW5lc2UiLCJ3aW5kb3dzOTQ5IiwibXM5NDkiLCI5NDkiLCJjcDk0OSIsImNzZXVja3IiLCJjc2tzYzU2MDExOTg3IiwiZXVja3IiLCJpc29pcjE0OSIsImtvcmVhbiIsImtzYzU2MDExOTg3Iiwia3NjNTYwMTE5ODkiLCJrc2M1NjAxIiwid2luZG93czk1MCIsIm1zOTUwIiwiOTUwIiwiY3A5NTAiLCJiaWc1IiwiYmlnNWhrc2NzIiwiY25iaWc1IiwiY3NiaWc1IiwieHhiaWc1IiwiVHJhbnNmb3JtIiwiSWNvbnZMaXRlRW5jb2RlclN0cmVhbSIsImNvbnYiLCJkZWNvZGVTdHJpbmdzIiwiSWNvbnZMaXRlRGVjb2RlclN0cmVhbSIsImVuY29kZVN0cmVhbSIsImRlY29kZVN0cmVhbSIsInN1cHBvcnRzU3RyZWFtcyIsIl9jb2xsZWN0IiwiY29sbGVjdCIsIl90cmFuc2Zvcm0iLCJfZmx1c2giLCJjaHVua3MiLCJzdXBwb3J0c05vZGVFbmNvZGluZ3NFeHRlbnNpb24iLCJleHRlbmROb2RlRW5jb2RpbmdzIiwibm9kZU5hdGl2ZUVuY29kaW5ncyIsInV0Zi04IiwidWNzLTIiLCJ1dGYtMTZsZSIsImlzTmF0aXZlRW5jb2RpbmciLCJTbG93QnVmZmVyVG9TdHJpbmciLCJTbG93QnVmZmVyV3JpdGUiLCJzd2FwIiwicmVtYWluaW5nIiwiQnVmZmVySXNFbmNvZGluZyIsImlzRW5jb2RpbmciLCJCdWZmZXJCeXRlTGVuZ3RoIiwiQnVmZmVyVG9TdHJpbmciLCJCdWZmZXJXcml0ZSIsIl9vZmZzZXQiLCJfbGVuZ3RoIiwiX2VuY29kaW5nIiwiUmVhZGFibGUiLCJSZWFkYWJsZVNldEVuY29kaW5nIiwic2V0RW5jb2RpbmciLCJ1bmRvRXh0ZW5kTm9kZUVuY29kaW5ncyIsImV2ZW50IiwiYXJnMSIsInN0dWZmIiwiY2xlYW51cHMiLCJlZSIsIngiLCJ0aHVuayIsInBhcmFtUmVnRXhwIiwidGV4dFJlZ0V4cCIsInRva2VuUmVnRXhwIiwicWVzY1JlZ0V4cCIsInF1b3RlUmVnRXhwIiwic3VidHlwZU5hbWVSZWdFeHAiLCJ0eXBlTmFtZVJlZ0V4cCIsInR5cGVSZWdFeHAiLCJzdWJ0eXBlIiwic3VmZml4Iiwic3BsaXRUeXBlIiwiZGVmYXVsdENoYXJzZXQiLCJwYXJhbWV0ZXJMaW1pdCIsInBhcmFtQ291bnQiLCJwYXJhbWV0ZXJDb3VudCIsImFycmF5TGltaXQiLCJJbmZpbml0eSIsImV4dGVuZGVkcGFyc2VyIiwibWF4S2V5cyIsInNpbXBsZXBhcnNlciIsImNvdW50IiwibW9kIiwidXRpbHMiLCJhcnJheVByZWZpeEdlbmVyYXRvcnMiLCJicmFja2V0cyIsImluZGljZXMiLCJyZXBlYXQiLCJkZWxpbWl0ZXIiLCJlbmNvZGVWYWx1ZXNPbmx5Iiwic2VyaWFsaXplRGF0ZSIsInNraXBOdWxscyIsInN0cmljdE51bGxIYW5kbGluZyIsImdlbmVyYXRlQXJyYXlQcmVmaXgiLCJhbGxvd0RvdHMiLCJvYmpLZXlzIiwiYXJyYXlGb3JtYXQiLCJqb2luZWQiLCJhZGRRdWVyeVByZWZpeCIsInBhcnNlS2V5cyIsImdpdmVuS2V5IiwiY2hpbGQiLCJzZWdtZW50IiwiY2hhaW4iLCJsZWFmIiwiY2xlYW5Sb290IiwicGFyc2VBcnJheXMiLCJwYXJzZU9iamVjdCIsImlnbm9yZVF1ZXJ5UHJlZml4IiwidGVtcE9iaiIsImNsZWFuU3RyIiwiYnJhY2tldEVxdWFsc1BvcyIsInBhcnNlVmFsdWVzIiwibmV3T2JqIiwiZGVzdCIsInJlZGVmaW5lIiwiZmluYWxoYW5kbGVyIiwibWlkZGxld2FyZSIsIlZpZXciLCJsb2dlcnJvciIsImNhY2hlIiwiZW5naW5lcyIsInNldHRpbmdzIiwiZGVmYXVsdENvbmZpZ3VyYXRpb24iLCJtb3VudHBhdGgiLCJsYXp5cm91dGVyIiwiX3JvdXRlciIsIm9uZXJyb3IiLCJmbnMiLCJvcmlnIiwiZW5naW5lIiwiZXh0Iiwic2V0dGluZyIsImRpc2FibGVkIiwiZGVsIiwiZGVsZXRlIiwicmVuZGVyIiwidmlldyIsInJlbmRlck9wdGlvbnMiLCJfbG9jYWxzIiwiZGVmYXVsdEVuZ2luZSIsImRpcnMiLCJ0cnlSZW5kZXIiLCJET1VCTEVfU1BBQ0VfUkVHRVhQIiwiTkVXTElORV9SRUdFWFAiLCJnZXRFcnJvclN0YXR1c0NvZGUiLCJnZXRSZXNwb25zZVN0YXR1c0NvZGUiLCJnZXRFcnJvckhlYWRlcnMiLCJnZXRFcnJvck1lc3NhZ2UiLCJnZXRSZXNvdXJjZU5hbWUiLCJzdGF0dXNNZXNzYWdlIiwicGF0aHRvUmVnZXhwIiwiZmxhZ3MiLCJleHRyYU9mZnNldCIsImtleXNPZmZzZXQiLCJNQVRDSElOR19HUk9VUF9SRUdFWFAiLCJvcHRpb25hbCIsInNsYXNoIiwiY2FwdHVyZSIsInN0YXIiLCJlc2NhcGVDb3VudCIsImRpcm5hbWUiLCJfX2V4cHJlc3MiLCJ0cnlTdGF0Iiwic3RhdFN5bmMiLCJyb290cyIsImRpciIsImlzRmlsZSIsIlJlYWRTdHJlYW0iLCJvbk9wZW5DbG9zZSIsImRlc3Ryb3lSZWFkU3RyZWFtIiwiTWltZSIsImRlZmluZSIsIkRFQlVHX01JTUUiLCJ3YXJuIiwiX2xvYWRpbmciLCJyZWFkRmlsZVN5bmMiLCJzaGlmdCIsImRlZmF1bHRfdHlwZSIsIm1pbWVUeXBlIiwicHJveHlBZGRycyIsImNvbm5lY3Rpb24iLCJyZW1vdGVBZGRyZXNzIiwiZXhwYW5kSVB2NiIsImlwdjRQYXJ0IiwiaXB2NFJlZ2V4ZXMiLCJpcHY2UGFydCIsImlwdjZSZWdleGVzIiwibWF0Y2hDSURSIiwicGFydFNpemUiLCJjaWRyQml0cyIsInN1Ym5ldE1hdGNoIiwicmFuZ2VMaXN0IiwiZGVmYXVsdE5hbWUiLCJyYW5nZU5hbWUiLCJJUHY0Iiwib2N0ZXRzIiwib2N0ZXQiLCJ0b05vcm1hbGl6ZWRTdHJpbmciLCJ0b0J5dGVBcnJheSIsIm90aGVyIiwiY2lkclJhbmdlIiwicmVmIiwiU3BlY2lhbFJhbmdlcyIsInVuc3BlY2lmaWVkIiwiYnJvYWRjYXN0IiwibXVsdGljYXN0IiwibGlua0xvY2FsIiwiY2FycmllckdyYWRlTmF0IiwicHJpdmF0ZSIsInJlc2VydmVkIiwiSVB2NiIsImNpZHIiLCJzdG9wIiwiemVyb3MiLCJ6ZXJvdGFibGUiLCIxMjgiLCIxOTIiLCIyMjQiLCIyNDAiLCIyNDgiLCIyNTIiLCIyNTQiLCIyNTUiLCJmb3VyT2N0ZXQiLCJsb25nVmFsdWUiLCJwYXJzZUludEF1dG8iLCJyZXZlcnNlIiwiem9uZUlkIiwidW5pcXVlTG9jYWwiLCJpcHY0TWFwcGVkIiwicmZjNjE0NSIsInJmYzYwNTIiLCI2dG80IiwidGVyZWRvIiwiMzI3NjgiLCI0OTE1MiIsIjU3MzQ0IiwiNjE0NDAiLCI2MzQ4OCIsIjY0NTEyIiwiNjUwMjQiLCI2NTI4MCIsIjY1NDA4IiwiNjU0NzIiLCI2NTUwNCIsIjY1NTIwIiwiNjU1MjgiLCI2NTUzMiIsIjY1NTM0IiwiNjU1MzUiLCJ6b25lSW5kZXgiLCJ0cmFuc2l0aW9uYWwiLCJjb2xvbkNvdW50IiwibGFzdENvbG9uIiwicmVwbGFjZW1lbnQiLCJyZXBsYWNlbWVudENvdW50IiwiaXNJUHY0IiwiaXNJUHY2IiwiZXJyb3IxIiwiaXNWYWxpZEZvdXJQYXJ0RGVjaW1hbCIsInBhcnNlQ0lEUiIsIm1hc2tMZW5ndGgiLCJzdWJuZXRNYXNrRnJvbVByZWZpeExlbmd0aCIsImZpbGxlZE9jdGV0Q291bnQiLCJwb3ciLCJicm9hZGNhc3RBZGRyZXNzRnJvbUNJRFIiLCJpcEludGVyZmFjZU9jdGV0cyIsInN1Ym5ldE1hc2tPY3RldHMiLCJuZXR3b3JrQWRkcmVzc0Zyb21DSURSIiwiZnJvbUJ5dGVBcnJheSIsImFjY2VwdHMiLCJpc0lQIiwiSW5jb21pbmdNZXNzYWdlIiwiZGVmaW5lR2V0dGVyIiwibGMiLCJyZWZlcnJlciIsInJlZmVyZXIiLCJhY2NlcHQiLCJhY2NlcHRzRW5jb2RpbmdzIiwiYWNjZXB0c0VuY29kaW5nIiwiYWNjZXB0c0NoYXJzZXRzIiwiYWNjZXB0c0NoYXJzZXQiLCJhY2NlcHRzTGFuZ3VhZ2VzIiwibGFuZ3VhZ2VzIiwiYWNjZXB0c0xhbmd1YWdlIiwiZGVmYXVsdFZhbHVlIiwiZW5jcnlwdGVkIiwicHJvdG9jb2wiLCJob3N0bmFtZSIsInN1YmRvbWFpbnMiLCJOZWdvdGlhdG9yIiwiQWNjZXB0cyIsIm5lZ290aWF0b3IiLCJleHRUb01pbWUiLCJ2YWxpZE1pbWUiLCJtZWRpYVR5cGVzIiwibWltZXMiLCJlbmNvZGluZ3NfIiwiY2hhcnNldHNfIiwibGFuZyIsImxhbmdzIiwibGFuZ3VhZ2UiLCJsYW5ndWFnZXNfIiwibG9hZE1vZHVsZSIsIm1vZHVsZU5hbWUiLCJhdmFpbGFibGUiLCJwcmVmZXJyZWRDaGFyc2V0cyIsInByZWZlcnJlZEVuY29kaW5ncyIsInByZWZlcnJlZExhbmd1YWdlcyIsIm1lZGlhVHlwZSIsInByZWZlcnJlZE1lZGlhVHlwZXMiLCJwcmVmZXJyZWRDaGFyc2V0IiwicHJlZmVycmVkRW5jb2RpbmciLCJwcmVmZXJyZWRMYW5ndWFnZSIsInByZWZlcnJlZE1lZGlhVHlwZSIsInNpbXBsZUNoYXJzZXRSZWdFeHAiLCJwYXJzZUNoYXJzZXQiLCJzcGVjaWZ5Iiwic3BlYyIsInByb3ZpZGVkIiwicGFyc2VBY2NlcHRDaGFyc2V0IiwiaXNRdWFsaXR5IiwiY29tcGFyZVNwZWNzIiwiZ2V0RnVsbENoYXJzZXQiLCJwcmlvcml0aWVzIiwiYWNjZXB0ZWQiLCJwcmlvcml0eSIsImdldENoYXJzZXRQcmlvcml0eSIsInNpbXBsZUVuY29kaW5nUmVnRXhwIiwicGFyc2VFbmNvZGluZyIsImhhc0lkZW50aXR5IiwibWluUXVhbGl0eSIsInBhcnNlQWNjZXB0RW5jb2RpbmciLCJnZXRGdWxsRW5jb2RpbmciLCJnZXRFbmNvZGluZ1ByaW9yaXR5Iiwic2ltcGxlTGFuZ3VhZ2VSZWdFeHAiLCJwYXJzZUxhbmd1YWdlIiwiZnVsbCIsImxhbmdhdWdlIiwicGFyc2VBY2NlcHRMYW5ndWFnZSIsImdldEZ1bGxMYW5ndWFnZSIsImdldExhbmd1YWdlUHJpb3JpdHkiLCJzaW1wbGVNZWRpYVR5cGVSZWdFeHAiLCJwYXJzZUFjY2VwdCIsInF1b3RlQ291bnQiLCJzcGxpdE1lZGlhVHlwZXMiLCJwYXJzZU1lZGlhVHlwZSIsImt2cHMiLCJzcGxpdFBhcmFtZXRlcnMiLCJzcGxpdEtleVZhbHVlUGFpciIsImdldEZ1bGxUeXBlIiwiZ2V0TWVkaWFUeXBlUHJpb3JpdHkiLCJjb29raWUiLCJ2YXJ5IiwiU2VydmVyUmVzcG9uc2UiLCJjaGFyc2V0UmVnRXhwIiwic2VuZGZpbGUiLCJzdHJlYW1pbmciLCJvbmFib3J0ZWQiLCJyZXBsYWNlciIsInNwYWNlcyIsImxpbmtzIiwibGluayIsInJlbCIsImV0YWdGbiIsImdlbmVyYXRlRVRhZyIsImpzb25wIiwic2VuZFN0YXR1cyIsImRvd25sb2FkIiwiQ29udGVudC1EaXNwb3NpdGlvbiIsImZ1bGxQYXRoIiwiY3QiLCJhdHRhY2htZW50IiwiYXBwZW5kIiwiY2xlYXJDb29raWUiLCJzaWduZWQiLCJub3ciLCJsb2NhdGlvbiIsInUiLCJGSUVMRF9OQU1FX1JFR0VYUCIsImZsZCIsImZhbGx0aHJvdWdoIiwib25EaXJlY3RvcnkiLCJmb3J3YXJkRXJyb3IiLCJzaWduYXR1cmUiLCJKU09OQ29va2llIiwiSlNPTkNvb2tpZXMiLCJjb29raWVzIiwic2lnbmVkQ29va2llIiwic2VjcmV0cyIsInNpZ25lZENvb2tpZXMiLCJtb3JnYW4iLCJmbXQiLCJhdXRoIiwib25IZWFkZXJzIiwiQ0xGX01PTlRIIiwiREVGQVVMVF9CVUZGRVJfRFVSQVRJT04iLCJpbW1lZGlhdGUiLCJza2lwIiwiZm9ybWF0TGluZSIsImdldEZvcm1hdEZ1bmN0aW9uIiwidGltZXIiLCJzZXRUaW1lb3V0IiwiY3JlYXRlQnVmZmVyU3RyZWFtIiwibG9nUmVxdWVzdCIsIl9zdGFydEF0IiwiX3N0YXJ0VGltZSIsIl9yZW1vdGVBZGRyZXNzIiwiZ2V0aXAiLCJyZWNvcmRTdGFydFRpbWUiLCJqcyIsInRva2VuQXJndW1lbnRzIiwidG9rZW5GdW5jdGlvbiIsInBhZDIiLCJudW0iLCJocnRpbWUiLCJkZXZlbG9wbWVudEZvcm1hdExpbmUiLCJ0b2tlbnMiLCJkYXRlVGltZSIsIm1pbnMiLCJzZWNzIiwiY2xmZGF0ZSIsImNyZWRlbnRpYWxzIiwiaHR0cFZlcnNpb25NYWpvciIsImh0dHBWZXJzaW9uTWlub3IiLCJhdXRob3JpemF0aW9uIiwiZ2V0QXV0aG9yaXphdGlvbiIsIkNSRURFTlRJQUxTX1JFR0VYUCIsIlVTRVJfUEFTU19SRUdFWFAiLCJ1c2VyUGFzcyIsIkNyZWRlbnRpYWxzIiwid3JpdGVIZWFkIiwicHJldldyaXRlSGVhZCIsImZpcmVkIiwiaGVhZGVySW5kZXgiLCJzZXRIZWFkZXJzRnJvbUFycmF5Iiwic2V0SGVhZGVyc0Zyb21PYmplY3QiLCJjcmVhdGVXcml0ZUhlYWQiLCJwZ1Bhc3MiLCJjb25uZWN0aW9uUGFyYW1ldGVycyIsIl9Qcm9taXNlIiwiX2Nvbm5lY3RpbmciLCJfY29ubmVjdGVkIiwiX2Nvbm5lY3Rpb25FcnJvciIsIl9xdWVyeWFibGUiLCJxdWVyeVF1ZXVlIiwiX2Vycm9yQWxsUXVlcmllcyIsImVucXVldWVFcnJvciIsImhhbmRsZUVycm9yIiwiYWN0aXZlUXVlcnkiLCJfY29ubmVjdCIsImNvbiIsImNoZWNrUGdQYXNzIiwiZ2V0U3RhcnR1cENvbmYiLCJjb25uZWN0aW5nRXJyb3JIYW5kbGVyIiwiY29ubmVjdGVkRXJyb3JIYW5kbGVyIiwiY29ubmVjdGVkRXJyb3JNZXNzYWdlSGFuZGxlciIsIl9hdHRhY2hMaXN0ZW5lcnMiLCJyZWFkeUZvclF1ZXJ5IiwiaGFuZGxlUmVhZHlGb3JRdWVyeSIsIl9wdWxzZVF1ZXJ5UXVldWUiLCJoYW5kbGVSb3dEZXNjcmlwdGlvbiIsImhhbmRsZURhdGFSb3ciLCJoYW5kbGVQb3J0YWxTdXNwZW5kZWQiLCJoYW5kbGVFbXB0eVF1ZXJ5IiwiaGFuZGxlQ29tbWFuZENvbXBsZXRlIiwiaGFuZGxlQ29weUluUmVzcG9uc2UiLCJoYW5kbGVDb3B5RGF0YSIsImRhdGEiLCJhcHBOYW1lIiwiY2xpZW50IiwiZXNjYXBlSWRlbnRpZmllciIsImVzY2FwZUxpdGVyYWwiLCJoYXNCYWNrc2xhc2giLCJoYXNFeGVjdXRlZCIsInF1ZXJ5RXJyb3IiLCJzdWJtaXQiLCJyZWFkVGltZW91dCIsInJlYWRUaW1lb3V0VGltZXIiLCJxdWVyeUNhbGxiYWNrIiwiY2xlYXJUaW1lb3V0IiwiX3Jlc3VsdCIsIl9nZXRUeXBlUGFyc2VyIiwicGFyc2VEYXRlIiwicGFyc2VJbnRlcnZhbCIsInBhcnNlQnl0ZUEiLCJhbGxvd051bGwiLCJwYXJzZUJvb2wiLCJwYXJzZUJvb2xBcnJheSIsInBhcnNlQmFzZVRlbkludCIsInBhcnNlSW50ZWdlckFycmF5IiwicGFyc2VQb2ludEFycmF5IiwicGFyc2VQb2ludCIsInBhcnNlRmxvYXRBcnJheSIsInBhcnNlU3RyaW5nQXJyYXkiLCJwYXJzZURhdGVBcnJheSIsInBhcnNlSW50ZXJ2YWxBcnJheSIsInBhcnNlQnl0ZUFBcnJheSIsInBhcnNlSW50ZWdlciIsInZhbFN0ciIsInBhcnNlSnNvbkFycmF5IiwicGFyc2VDaXJjbGUiLCJwb2ludCIsInJhZGl1cyIsInBvaW50UGFyc2VkIiwicmVnaXN0ZXIiLCJwYXJzZUludDY0IiwicGFyc2VCaXRzIiwiYml0cyIsImludmVydCIsImxhc3RWYWx1ZSIsIm5ld1ZhbHVlIiwib2Zmc2V0Qnl0ZXMiLCJpbnYiLCJtYXNrIiwiZmlyc3RCaXRzIiwibGFzdEJpdHMiLCJwYXJzZUZsb2F0RnJvbUJpdHMiLCJwcmVjaXNpb25CaXRzIiwiZXhwb25lbnRCaXRzIiwiYmlhcyIsImV4cG9uZW50IiwicHJlY2lzaW9uQml0c0NvdW50ZXIiLCJtYW50aXNzYSIsInBhcnNlRmxvYXQzMiIsInBhcnNlRmxvYXQ2NCIsInBhcnNlTnVtZXJpYyIsIndlaWdodCIsIm5kaWdpdHMiLCJzY2FsZSIsImlzVVRDIiwicmF3VmFsdWUiLCJzZXRUaW1lIiwidXNlYyIsImdldE1pY3JvU2Vjb25kcyIsInNldE1pY3JvU2Vjb25kcyIsImdldFVUQ01pY3JvU2Vjb25kcyIsInBhcnNlQXJyYXkiLCJkaW0iLCJlbGVtZW50VHlwZSIsImRpbXMiLCJwYXJzZUVsZW1lbnQiLCJwYXJzZVRleHQiLCJoZWxwZXIiLCJjb25uSW5mbyIsInVzZVBnUGFzcyIsInN0IiwiZ2V0UGFzc3dvcmQiLCJ3YXJuVG8iLCJTcGxpdCIsImlzV2luIiwid2FyblN0cmVhbSIsIlNfSUZNVCIsIlNfSUZSRUciLCJmaWVsZE5hbWVzIiwibnJPZkZpZWxkcyIsInBhc3NLZXkiLCJQR1BBU1NGSUxFIiwiQVBQREFUQSIsIkhPTUUiLCJzdGF0cyIsImZuYW1lIiwibWF0Y2hlciIsImxpbmVTdHJlYW0iLCJvbkVyciIsInBhcnNlTGluZSIsImlzVmFsaWRFbnRyeSIsImN1ckNoYXIiLCJwcmV2Q2hhciIsImZpZWxkSWR4Iiwic3RhcnRJZHgiLCJhZGRUb09iaiIsImkwIiwiaTEiLCJydWxlcyIsIjEiLCIyIiwiMyIsIjQiLCJydWxlIiwidGhyb3VnaCIsIkRlY29kZXIiLCJtYXBwZXIiLCJzb0ZhciIsIm1heExlbmd0aCIsInRyYWlsaW5nIiwicGllY2UiLCJwaWVjZXMiLCJlbmRlZCIsImRlc3Ryb3llZCIsIl9lbmRlZCIsImRyYWluIiwicGF1c2VkIiwiYXV0b0Rlc3Ryb3kiLCJkZWNvZGVVUkkiLCJSZXN1bHQiLCJfcm93TW9kZSIsInJvd01vZGUiLCJfcmVzdWx0cyIsImlzUHJlcGFyZWRTdGF0ZW1lbnQiLCJfY2FuY2VsZWREdWVUb0Vycm9yIiwiX3Byb21pc2UiLCJyZXF1aXJlc1ByZXBhcmF0aW9uIiwiX2NoZWNrRm9yTXVsdGlyb3ciLCJjb21tYW5kIiwiYWRkRmllbGRzIiwiX2FjY3VtdWxhdGVSb3dzIiwicm93IiwicGFyc2VSb3ciLCJhZGRSb3ciLCJhZGRDb21tYW5kQ29tcGxldGUiLCJwcmVwYXJlIiwiaGFzQmVlblBhcnNlZCIsIl9nZXRSb3dzIiwicm93Q291bnQiLCJfcGFyc2VycyIsIlJvd0N0b3IiLCJyb3dBc0FycmF5IiwiX3BhcnNlUm93QXNBcnJheSIsIm1hdGNoUmVnZXhwIiwicm93RGF0YSIsImZpZWxkRGVzY3JpcHRpb25zIiwiZGVzYyIsImhlYWRlclBvc2l0aW9uIiwiX2Vuc3VyZSIsIm9sZEJ1ZmZlciIsIm5ld1NpemUiLCJ3cml0ZVN0cmluZyIsImFkZENoYXIiLCJnZXRCeXRlTGVuZ3RoIiwib3RoZXJCdWZmZXIiLCJjbGVhciIsImxhc3RFbmQiLCJsYXN0Iiwib3JpZ09mZnNldCIsImFzc2VydCIsImxhc3RDaHVuayIsImNodW5rTGVuZ3RoIiwibmV3Q2h1bmtMZW5ndGgiLCJuZXdMZW5ndGgiLCJuZXdCdWZmZXJMZW5ndGgiLCJuZXdCdWZmZXIiLCJOT09QIiwicmVtb3ZlV2hlcmUiLCJwcmVkaWNhdGUiLCJmaW5kSW5kZXgiLCJJZGxlSXRlbSIsInRpbWVvdXRJZCIsIlBlbmRpbmdJdGVtIiwidGhyb3dPblJlbGVhc2UiLCJyZWxlYXNlIiwiZW5kaW5nIiwiX3JlbW92ZSIsIl9wdWxzZVF1ZXVlIiwidGlkIiwiX2lkbGUiLCJwcm9taXNpZnkiLCJyZWoiLCJzdXBlciIsInBvb2xTaXplIiwiX2NsaWVudHMiLCJfcGVuZGluZ1F1ZXVlIiwiX2VuZENhbGxiYWNrIiwiX2lzRnVsbCIsIndhaXRlciIsImlkbGVJdGVtIiwibmV3Q2xpZW50IiwiY29ubmVjdGlvblRpbWVvdXRNaWxsaXMiLCJxdWV1ZUNhbGxiYWNrIiwicGVuZGluZ0l0ZW0iLCJ0aW1lZE91dCIsImlkbGVMaXN0ZW5lciIsInBvb2wiLCJtYWtlSWRsZUxpc3RlbmVyIiwidGltZW91dEhpdCIsInByb21pc2VkIiwid2FpdGluZ0NvdW50IiwiaWRsZUNvdW50IiwidG90YWxDb3VudCIsIk5hdGl2ZSIsInNlbXZlciIsInBrZyIsIm1pbk5hdGl2ZVZlcnNpb24iLCJndGUiLCJ2ZXJzaW9uIiwiTmF0aXZlUXVlcnkiLCJfcXVlcnlRdWV1ZSIsImNwIiwibmFtZWRRdWVyaWVzIiwiX2hhc0FjdGl2ZVF1ZXJ5IiwiX2FjdGl2ZVF1ZXJ5IiwiY29uU3RyaW5nIiwicmVsbmFtZSIsImV4dHJhIiwicmVzb2x2ZU91dCIsInJlamVjdE91dCIsImluaXRpYWxDb25uZWN0aW9uIiwiTGlicHEiLCJidWlsZFJlc3VsdCIsIkNvcHlTdHJlYW0iLCJwcSIsIl9yZWFkaW5nIiwiX3JlYWQiLCJhcnJheU1vZGUiLCJfcmVzdWx0Q291bnQiLCJfcm93cyIsIl9zdGFydFJlYWRpbmciLCJfb25SZXN1bHQiLCJfb25SZWFkeUZvclF1ZXJ5IiwiY29ubmVjdFN5bmMiLCJxdWVyeUZuIiwic2VuZFF1ZXJ5Iiwic2VuZFF1ZXJ5UGFyYW1zIiwiX2Rpc3BhdGNoUXVlcnkiLCJfYXdhaXRSZXN1bHQiLCJzdGF0ZW1lbnROYW1lIiwiblBhcmFtcyIsInNlbmRQcmVwYXJlIiwic2VuZFF1ZXJ5UHJlcGFyZWQiLCJnZXRDb3B5U3RyZWFtIiwic2V0Tm9uQmxvY2tpbmciLCJfc3RvcFJlYWRpbmciLCJxdWVyeVN5bmMiLCJleGVjUGFyYW1zIiwidGhyb3dJZkVycm9yIiwicHJlcGFyZVN5bmMiLCJleGVjdXRlU3luYyIsImV4ZWNQcmVwYXJlZCIsImZpbmlzaCIsIl9yZWFkRXJyb3IiLCJlcnJvck1lc3NhZ2UiLCJzdG9wUmVhZGVyIiwiX2NvbnN1bWVRdWVyeVJlc3VsdHMiLCJfZW1pdFJlc3VsdCIsInJlc3VsdFN0YXR1cyIsIl9xdWVyeUVycm9yIiwicmVzdWx0RXJyb3JNZXNzYWdlIiwiY29uc3VtZUlucHV0IiwiaXNCdXN5IiwiZ2V0UmVzdWx0Iiwibm90aWNlIiwibm90aWZpZXMiLCJzdGFydFJlYWRlciIsIl9xdWVyeUNhbGxiYWNrIiwiX3dhaXRGb3JEcmFpbiIsIlBRIiwicGFyYW1TdHJpbmciLCJjb25uZWN0ZWQiLCIkY29ubmVjdFN5bmMiLCIkY29ubmVjdCIsIiRnZXRMYXN0RXJyb3JNZXNzYWdlIiwiJHNvY2tldCIsInNlcnZlclZlcnNpb24iLCIkc2VydmVyVmVyc2lvbiIsIiRmaW5pc2giLCJjb21tYW5kVGV4dCIsIiRleGVjIiwiJGV4ZWNQYXJhbXMiLCJlcXVhbCIsIiRwcmVwYXJlIiwiJGV4ZWNQcmVwYXJlZCIsIiRzZW5kUXVlcnkiLCIkc2VuZFF1ZXJ5UGFyYW1zIiwiJHNlbmRQcmVwYXJlIiwiJHNlbmRRdWVyeVByZXBhcmVkIiwiJGdldFJlc3VsdCIsIiRyZXN1bHRTdGF0dXMiLCIkcmVzdWx0RXJyb3JNZXNzYWdlIiwicmVzdWx0RXJyb3JGaWVsZHMiLCIkcmVzdWx0RXJyb3JGaWVsZHMiLCIkY2xlYXIiLCJudHVwbGVzIiwiJG50dXBsZXMiLCJuZmllbGRzIiwiJG5maWVsZHMiLCIkZm5hbWUiLCJmdHlwZSIsIiRmdHlwZSIsImdldHZhbHVlIiwiY29sIiwiJGdldHZhbHVlIiwiZ2V0aXNudWxsIiwiJGdldGlzbnVsbCIsImNtZFN0YXR1cyIsIiRjbWRTdGF0dXMiLCJjbWRUdXBsZXMiLCIkY21kVHVwbGVzIiwiJHN0YXJ0UmVhZCIsIiRzdG9wUmVhZCIsIiRzdGFydFdyaXRlIiwiJGNvbnN1bWVJbnB1dCIsIiRpc0J1c3kiLCJ0cnV0aHkiLCIkc2V0Tm9uQmxvY2tpbmciLCJpc05vbkJsb2NraW5nIiwiJGlzTm9uQmxvY2tpbmciLCIkZmx1c2giLCIkZXNjYXBlTGl0ZXJhbCIsIiRlc2NhcGVJZGVudGlmaWVyIiwiJG5vdGlmaWVzIiwicHV0Q29weURhdGEiLCIkcHV0Q29weURhdGEiLCJwdXRDb3B5RW5kIiwiJHB1dENvcHlFbmQiLCJnZXRDb3B5RGF0YSIsImFzeW5jIiwiJGdldENvcHlEYXRhIiwiJGNhbmNlbCIsImV4aXN0cyIsImV4aXN0c1N5bmMiLCJhcnJvdyIsIk5PREVfQklORElOR1NfQVJST1ciLCJjb21waWxlZCIsIk5PREVfQklORElOR1NfQ09NUElMRURfRElSIiwiYXJjaCIsImJpbmRpbmdzIiwidHJ5IiwibW9kdWxlX3Jvb3QiLCJnZXRSb290IiwidHJpZXMiLCJjYWxsaW5nX2ZpbGUiLCJvcmlnUFNUIiwib3JpZ1NUTCIsImR1bW15IiwiX19maWxlbmFtZSIsImVsIiwiX2FycmF5TW9kZSIsInR1cGxlQ291bnQiLCJjb25zdW1lUm93QXNBcnJheSIsImNvbnN1bWVSb3dBc09iamVjdCIsInJvd0luZGV4IiwicmVhZFZhbHVlIiwiY29sSW5kZXgiLCJkYXRhVHlwZUlkIiwiY29uc3VtZUNvbW1hbmQiLCJjb25zdW1lRmllbGRzIiwiY29uc3VtZVJvd3MiLCJEdXBsZXgiLCJXcml0YWJsZSIsIl93cml0ZSIsImNvbnN1bWVSZXN1bHRzIiwiX2NvbnN1bWVCdWZmZXIiLCJvblJlYWRhYmxlIiwicmVhZEVycm9yIiwiX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fIiwiX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18iLCJTZW1WZXIiLCJOT0RFX0RFQlVHIiwiU0VNVkVSX1NQRUNfVkVSU0lPTiIsIk1BWF9TQUZFX0lOVEVHRVIiLCJyZSIsIk5VTUVSSUNJREVOVElGSUVSIiwiTlVNRVJJQ0lERU5USUZJRVJMT09TRSIsIk5PTk5VTUVSSUNJREVOVElGSUVSIiwiTUFJTlZFUlNJT04iLCJNQUlOVkVSU0lPTkxPT1NFIiwiUFJFUkVMRUFTRUlERU5USUZJRVIiLCJQUkVSRUxFQVNFSURFTlRJRklFUkxPT1NFIiwiUFJFUkVMRUFTRSIsIlBSRVJFTEVBU0VMT09TRSIsIkJVSUxESURFTlRJRklFUiIsIkJVSUxEIiwiRlVMTCIsIkZVTExQTEFJTiIsIkxPT1NFUExBSU4iLCJMT09TRSIsIkdUTFQiLCJYUkFOR0VJREVOVElGSUVSTE9PU0UiLCJYUkFOR0VJREVOVElGSUVSIiwiWFJBTkdFUExBSU4iLCJYUkFOR0VQTEFJTkxPT1NFIiwiWFJBTkdFIiwiWFJBTkdFTE9PU0UiLCJMT05FVElMREUiLCJUSUxERVRSSU0iLCJUSUxERSIsIlRJTERFTE9PU0UiLCJMT05FQ0FSRVQiLCJDQVJFVFRSSU0iLCJDQVJFVCIsIkNBUkVUTE9PU0UiLCJDT01QQVJBVE9STE9PU0UiLCJDT01QQVJBVE9SIiwiQ09NUEFSQVRPUlRSSU0iLCJIWVBIRU5SQU5HRSIsIkhZUEhFTlJBTkdFTE9PU0UiLCJTVEFSIiwibG9vc2UiLCJlciIsIm1ham9yIiwibWlub3IiLCJwYXRjaCIsInByZXJlbGVhc2UiLCJidWlsZCIsInZhbGlkIiwiY2xlYW4iLCJjb21wYXJlIiwiY29tcGFyZU1haW4iLCJjb21wYXJlUHJlIiwiY29tcGFyZUlkZW50aWZpZXJzIiwiaW5jIiwiaWRlbnRpZmllciIsInZlcnNpb24xIiwidmVyc2lvbjIiLCJlcSIsInYxIiwidjIiLCJudW1lcmljIiwiYW51bSIsImJudW0iLCJyY29tcGFyZSIsImd0IiwibHQiLCJuZXEiLCJsdGUiLCJjbXAiLCJvcCIsIkNvbXBhcmF0b3IiLCJjb21wIiwiQU5ZIiwib3BlcmF0b3IiLCJyY29tcGFyZUlkZW50aWZpZXJzIiwiY29tcGFyZUxvb3NlIiwicnNvcnQiLCJSYW5nZSIsImlzWCIsImh5cGhlblJlcGxhY2UiLCIkMCIsImZNIiwiZm0iLCJmcCIsImZwciIsImZiIiwidE0iLCJ0bSIsInRwIiwidHByIiwidGVzdFNldCIsImFsbG93ZWQiLCJzYXRpc2ZpZXMiLCJvdXRzaWRlIiwiaGlsbyIsImd0Zm4iLCJsdGVmbiIsImx0Zm4iLCJlY29tcCIsImNvbXBhcmF0b3JzIiwiY29tcGFyYXRvciIsImNvbXBzIiwiaHIiLCJjb21wUmUiLCJwciIsInJlcGxhY2VDYXJldCIsInJlcGxhY2VDYXJldHMiLCJyZXBsYWNlVGlsZGUiLCJyZXBsYWNlVGlsZGVzIiwiZ3RsdCIsInhNIiwieG0iLCJ4cCIsImFueVgiLCJyZXBsYWNlWFJhbmdlIiwicmVwbGFjZVhSYW5nZXMiLCJyZXBsYWNlU3RhcnMiLCJwYXJzZUNvbXBhcmF0b3IiLCJ0b0NvbXBhcmF0b3JzIiwibWF4U2F0aXNmeWluZyIsInZhbGlkUmFuZ2UiLCJsdHIiLCJndHIiLCJfZW1pdFJvd0V2ZW50cyIsImVycm9yRmllbGRNYXAiLCJzcWxTdGF0ZSIsInN0YXRlbWVudFBvc2l0aW9uIiwibWVzc2FnZVByaW1hcnkiLCJzY2hlbWFOYW1lIiwidGFibGVOYW1lIiwiY29sdW1uTmFtZSIsImRhdGFUeXBlTmFtZSIsImNvbnN0cmFpbnROYW1lIiwic291cmNlRmlsZSIsInNvdXJjZUxpbmUiLCJzb3VyY2VGdW5jdGlvbiIsInRoZW4iLCJvblN1Y2Nlc3MiLCJvbkZhaWx1cmUiLCJfZ2V0UHJvbWlzZSIsImNhdGNoIiwiX29uY2UiLCJhZnRlciIsInJvd09mUm93cyIsIl9kYl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiX2RiX3F1ZXJpZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsInF1ZXJ5UmVzdWx0IiwiZ2V0UHVyY2hhc2VzIiwicHVyY2hhc2VOYW1lIiwicHVyY2hhc2VBbW91bnQiLCJhbW91bnQiLCJwb3N0IiwiaW5zZXJ0UHVyY2hhc2UiLCJRVUVSSUVTIiwiaW5pdGlhbGl6ZURCIiwid2l0aERhdGFiYXNlIiwicGdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9xdWVyaWVzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJnZXREQiIsIkRBVEFCQVNFX1VSTCIsImNyZWF0ZVRhYmxlcyIsImFjdGlvbiIsImVkaXRQdXJjaGFzZSIsImRlbGV0ZVB1cmNoYXNlIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsR0FBQSxDQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFFBQUEsSUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsRUFBQSxDQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1osRUFBQWtCLEVBQUEsU0FBQWhCLEdBQ0Esb0JBQUFpQixlQUFBQyxhQUNBTixPQUFBQyxlQUFBYixFQUFBaUIsT0FBQUMsWUFBQSxDQUF3REMsTUFBQSxXQUV4RFAsT0FBQUMsZUFBQWIsRUFBQSxjQUFpRG1CLE9BQUEsS0FRakRyQixFQUFBc0IsRUFBQSxTQUFBRCxFQUFBRSxHQUVBLEdBREEsRUFBQUEsSUFBQUYsRUFBQXJCLEVBQUFxQixJQUNBLEVBQUFFLEVBQUEsT0FBQUYsRUFDQSxLQUFBRSxHQUFBLGlCQUFBRixRQUFBRyxXQUFBLE9BQUFILEVBQ0EsSUFBQUksRUFBQVgsT0FBQVksT0FBQSxNQUdBLEdBRkExQixFQUFBa0IsRUFBQU8sR0FDQVgsT0FBQUMsZUFBQVUsRUFB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R0FBQSxRQUVBQyxPQUFBLFdBQ0FDLE9BQUEsV0FDQUMsT0FBQSxXQUNBQyxPQUFBLFdBQ0FDLE9BQUEsV0FDQUMsT0FBQSxZQUNBQyxPQUFBLFlBQ0FDLE9BQUEsWUFDQUMsT0FBQSxZQUNBQyxRQUFBLFlBRUFDLFlBQUEsV0FDQUMsWUFBQSxXQUNBQyxZQUFBLFdBQ0FDLFlBQUEsV0FDQUMsbUJBQUEsV0FDQUMsaUJBQUEsV0FDQUMsZ0JBQUEsV0FDQUMsaUJBQUEsV0FDQUMsWUFBQSxXQUNBQyxZQUFBLFlBRUFDLEdBQUEsV0FDQUMsR0FBQSxXQUNBQyxHQUFBLFdBQ0FDLEdBQUEsV0FDQUMsR0FBQSxXQUNBQyxHQUFBLFlBQ0FDLEdBQUEsWUFDQUMsR0FBQSxZQUNBQyxHQUFBLFlBQ0FDLElBQUEsWUFFQUMsUUFBQSxXQUNBQyxRQUFBLFdBQ0FDLFNBQUEsV0FDQUMsU0FBQSxXQUNBQyxTQUFBLFdBQ0FDLFNBQUEsV0FDQUMsU0FBQSxXQUNBQyxTQUFBLFdBQ0FDLFNBQUEsV0FDQUMsU0FBQSxXQUNBQyxTQUFBLFdBQ0FDLFNBQUEsWUFDQUMsU0FBQSxTQUNBQyxTQUFBLFlBQ0FDLFNBQUEsWUFDQUMsU0FBQSxZQUNBQyxTQUFBLFlBRUFDLE1BQUEsV0FDQUMsT0FBQSxXQUVBQyxTQUFBLFdBRUFDLE9BQUEsV0FDQUMsUUFBQSxXQUNBQyxRQUFBLFdBQ0FDLFFBQUEsV0FFQUMsTUFBQSxXQUNBQyxPQUFBLFdBQ0FDLFFBQUEsV0FDQUMsUUFBQSxXQUVBQyxPQUFBLFdBQ0FDLFFBQUEsV0FFQUMsUUFBQSxXQUNBQyxTQUFBLFdBRUFDLEtBQUEsWUFDQUMsTUFBQSxZQUVBQyxPQUFBLFlBQ0FDLFFBQUEsWUFDQUMsVUFBQSxZQUVBQyxRQUFBLFNBQ0FDLFlBQUEsU0FDQUMsWUFBQSxTQUVBQyxNQUFBLFdBQ0FDLE1BQUEsV0FDQUMsTUFBQSxjQUNBQyxNQUFBLGFBQ0FDLE1BQUEsYUFFQUMsaUJBQUEsUUFDQUMsY0FBQSxRQUNBQyxvQkFBQSxRQUNBQyxTQUFBLFFBQ0FDLG1CQUFBLFFBQ0FDLEtBQUEsUUFFQUMsS0FBQSxTQUNBQyxPQUFBLFNBQ0FDLE9BQUEsU0FDQUMsUUFBQSxTQUNBQyxPQUFBLFNBQ0FDLE9BQUEsU0FDQUMsT0FBQSxTQUNBQyxXQUFBLFNBRUFDLFFBQUEsUUFDQUMsTUFBQSxRQUNBQyxPQUFBLFFBQ0FDLFFBQUEsUUFFQUMsUUFBQSxRQUNBQyxNQUFBLFFBQ0FDLFFBQUEsUUFFQUMsYUFBQSxTQUVBQyxTQUFBLE9BQ0FDLFVBQUEsT0FFQUMsU0FBQSxXQUNBQyxHQUFBLFdBRUFDLGtCQUFBLFdBQ0FDLGVBQUEsV0FDQUMsR0FBQSxXQUVBQyxXQUFBLFdBQ0FDLEdBQUEsV0FDQUMsT0FBQSxXQUNBQyxRQUFBLFdBQ0FDLFFBQUEsV0FFQUMsSUFBQSxZQUNBQyxZQUFBLDJDQ25LQXQ0QyxFQUFBRCxRQUFBLENBQ0F3NEMsSUFBQSxRQUNBQyxJQUFBLFFBQ0FDLElBQUEsUUFDQUMsSUFBQSxRQUNBQyxJQUFBLFFBQ0FDLElBQUEsUUFDQUMsSUFBQSxRQUNBQyxJQUFBLFFBQ0FDLElBQUEsUUFDQUMsSUFBQSxRQUNBQyxJQUFBLFFBQ0FDLElBQUEsUUFDQUMsSUFBQSxRQUNBQyxJQUFBLFFBQ0FDLElBQUEsUUFDQUMsSUFBQSxRQUNBQyxJQUFBLFFBQ0FDLElBQUEsYUFDQUMsSUFBQSxRQUNBQyxLQUFBLFNBQ0FDLEtBQUEsU0FDQUMsS0FBQSxTQUNBQyxLQUFBLFNBQ0FDLEtBQUEsU0FDQUMsS0FBQSxTQUNBQyxLQUFBLFNBQ0FDLEtBQUEsU0FDQUMsS0FBQSxjQUNBQyxLQUFBLGNBQ0FDLEtBQUEsY0FDQUMsS0FBQSxjQUNBQyxLQUFBLGNBQ0FDLEtBQUEsY0FDQUMsS0FBQSxjQUNBQyxLQUFBLGNBQ0FDLEtBQUEsY0FDQUMsTUFBQSxXQUNBQyxNQUFBLFdBQ0FDLE1BQUEsV0FDQUMsTUFBQSxXQUNBQyxNQUFBLFdBQ0FDLE1BQUEsV0FDQUMsTUFBQSxXQUNBQyxNQUFBLFdBQ0FDLE1BQUEsV0FDQUMsTUFBQSxZQUNBQyxNQUFBLFlBQ0FDLE1BQUEsWUFDQUMsTUFBQSxZQUNB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OVEsT0FBQTBvRixFQUFBLEVBQUExb0YsQ0FBWWc5RSxNQUFBL1UsSUFDaEIsSUFDQXZqRCxRQUFBL2dCLElBQUEsdUJBT0FzTyxFQUFBbEosS0FDUyxNQUFBekQsU0FNTTQrQixFQUFBLGtDQzVGZmhsQyxFQUFBVSxFQUFBc2tDLEVBQUEsc0JBQUFrbEQsSUFBQWxxRixFQUFBVSxFQUFBc2tDLEVBQUEsc0JBQUFtbEQsSUFBQSxJQUFBQyxFQUFBcHFGLEVBQUEsSUFBQXFxRixFQUFBcnFGLEVBQUEsS0FHTzg5RSxlQUFBd00sSUFDUCxJQUFBam9GLFFBQUFnRCxJQUFBa2xGLGFBQUEsQ0FDQSxNQUFBeGhCLEVBQUEsSUFBMkJxaEIsRUFBQSxPQUFNL25GLFFBQUFnRCxJQUFBa2xGLGNBQ2pDLElBRUEsYUFEQXhoQixFQUFBMXJDLFVBQ0EwckMsRUFDUyxNQUFBM2lFLEdBQ1RvZixRQUFBL2dCLElBQUEsa0NBQUEyQixHQUNBL0QsUUFBQTBpQyxNQUFBLEtBS08rNEMsZUFBQW9NLEVBQUFwaEUsR0FDUHRELFFBQUEvZ0IsSUFBQSw0QkFBQXFrQixHQUNBLE1BQUFpZ0QsUUFBQXVoQixJQUNBOWtFLFFBQUEvZ0IsSUFBQSwrREFDQSxVQUNBc2tFLEVBQUEvMEQsTUFBMkJxMkUsRUFBQSxFQUFPRyxjQUNsQ2hsRSxRQUFBL2dCLElBQUEsc0JBQ0ssTUFBQTJCLEdBQ0xvZixRQUFBdmMsTUFBQSw4QkFBQTdDLEdBQ0EvRCxRQUFBMGlDLE1BQUEsSUFLTys0QyxlQUFBcU0sRUFBQU0sR0FDUCxNQUFBMWhCLFFBQUF1aEIsSUFFQSxhQURBRyxFQUFBMWhCLGtDQ2hDZS9qQyxFQUFBLEdBQ2Z3bEQsYUFBQSxtRkFDQWIsYUFBQSxtRUFDQUssZUFBQSxpRkFDQWhYLE1BQUEsNkJBQ0EwWCxhQUFBLEdBQ0FDLGVBQUEiLCJmaWxlIjoiYWxsb3dhbmNlLW1hbmFnZXIubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDc0KTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInBhdGhcIik7IiwiLyoqXG4gKiBEZXRlY3QgRWxlY3Ryb24gcmVuZGVyZXIgcHJvY2Vzcywgd2hpY2ggaXMgbm9kZSwgYnV0IHdlIHNob3VsZFxuICogdHJlYXQgYXMgYSBicm93c2VyLlxuICovXG5cbmlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgcHJvY2Vzcy50eXBlID09PSAncmVuZGVyZXInKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9icm93c2VyLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbm9kZS5qcycpO1xufVxuIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwidXRpbFwiKTsiLCIvKiFcbiAqIGRlcGRcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTcgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xuXG52YXIgY2FsbFNpdGVUb1N0cmluZyA9IHJlcXVpcmUoJy4vbGliL2NvbXBhdCcpLmNhbGxTaXRlVG9TdHJpbmdcbnZhciBldmVudExpc3RlbmVyQ291bnQgPSByZXF1aXJlKCcuL2xpYi9jb21wYXQnKS5ldmVudExpc3RlbmVyQ291bnRcbnZhciByZWxhdGl2ZSA9IHJlcXVpcmUoJ3BhdGgnKS5yZWxhdGl2ZVxuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZGVwZFxuXG4vKipcbiAqIEdldCB0aGUgcGF0aCB0byBiYXNlIGZpbGVzIG9uLlxuICovXG5cbnZhciBiYXNlUGF0aCA9IHByb2Nlc3MuY3dkKClcblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgbmFtZXNwYWNlIGlzIGNvbnRhaW5lZCBpbiB0aGUgc3RyaW5nLlxuICovXG5cbmZ1bmN0aW9uIGNvbnRhaW5zTmFtZXNwYWNlIChzdHIsIG5hbWVzcGFjZSkge1xuICB2YXIgdmFscyA9IHN0ci5zcGxpdCgvWyAsXSsvKVxuICB2YXIgbnMgPSBTdHJpbmcobmFtZXNwYWNlKS50b0xvd2VyQ2FzZSgpXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHZhbCA9IHZhbHNbaV1cblxuICAgIC8vIG5hbWVzcGFjZSBjb250YWluZWRcbiAgICBpZiAodmFsICYmICh2YWwgPT09ICcqJyB8fCB2YWwudG9Mb3dlckNhc2UoKSA9PT0gbnMpKSB7XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZVxufVxuXG4vKipcbiAqIENvbnZlcnQgYSBkYXRhIGRlc2NyaXB0b3IgdG8gYWNjZXNzb3IgZGVzY3JpcHRvci5cbiAqL1xuXG5mdW5jdGlvbiBjb252ZXJ0RGF0YURlc2NyaXB0b3JUb0FjY2Vzc29yIChvYmosIHByb3AsIG1lc3NhZ2UpIHtcbiAgdmFyIGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwgcHJvcClcbiAgdmFyIHZhbHVlID0gZGVzY3JpcHRvci52YWx1ZVxuXG4gIGRlc2NyaXB0b3IuZ2V0ID0gZnVuY3Rpb24gZ2V0dGVyICgpIHsgcmV0dXJuIHZhbHVlIH1cblxuICBpZiAoZGVzY3JpcHRvci53cml0YWJsZSkge1xuICAgIGRlc2NyaXB0b3Iuc2V0ID0gZnVuY3Rpb24gc2V0dGVyICh2YWwpIHsgcmV0dXJuICh2YWx1ZSA9IHZhbCkgfVxuICB9XG5cbiAgZGVsZXRlIGRlc2NyaXB0b3IudmFsdWVcbiAgZGVsZXRlIGRlc2NyaXB0b3Iud3JpdGFibGVcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBwcm9wLCBkZXNjcmlwdG9yKVxuXG4gIHJldHVybiBkZXNjcmlwdG9yXG59XG5cbi8qKlxuICogQ3JlYXRlIGFyZ3VtZW50cyBzdHJpbmcgdG8ga2VlcCBhcml0eS5cbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVBcmd1bWVudHNTdHJpbmcgKGFyaXR5KSB7XG4gIHZhciBzdHIgPSAnJ1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJpdHk7IGkrKykge1xuICAgIHN0ciArPSAnLCBhcmcnICsgaVxuICB9XG5cbiAgcmV0dXJuIHN0ci5zdWJzdHIoMilcbn1cblxuLyoqXG4gKiBDcmVhdGUgc3RhY2sgc3RyaW5nIGZyb20gc3RhY2suXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlU3RhY2tTdHJpbmcgKHN0YWNrKSB7XG4gIHZhciBzdHIgPSB0aGlzLm5hbWUgKyAnOiAnICsgdGhpcy5uYW1lc3BhY2VcblxuICBpZiAodGhpcy5tZXNzYWdlKSB7XG4gICAgc3RyICs9ICcgZGVwcmVjYXRlZCAnICsgdGhpcy5tZXNzYWdlXG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0YWNrLmxlbmd0aDsgaSsrKSB7XG4gICAgc3RyICs9ICdcXG4gICAgYXQgJyArIGNhbGxTaXRlVG9TdHJpbmcoc3RhY2tbaV0pXG4gIH1cblxuICByZXR1cm4gc3RyXG59XG5cbi8qKlxuICogQ3JlYXRlIGRlcHJlY2F0ZSBmb3IgbmFtZXNwYWNlIGluIGNhbGxlci5cbiAqL1xuXG5mdW5jdGlvbiBkZXBkIChuYW1lc3BhY2UpIHtcbiAgaWYgKCFuYW1lc3BhY2UpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBuYW1lc3BhY2UgaXMgcmVxdWlyZWQnKVxuICB9XG5cbiAgdmFyIHN0YWNrID0gZ2V0U3RhY2soKVxuICB2YXIgc2l0ZSA9IGNhbGxTaXRlTG9jYXRpb24oc3RhY2tbMV0pXG4gIHZhciBmaWxlID0gc2l0ZVswXVxuXG4gIGZ1bmN0aW9uIGRlcHJlY2F0ZSAobWVzc2FnZSkge1xuICAgIC8vIGNhbGwgdG8gc2VsZiBhcyBsb2dcbiAgICBsb2cuY2FsbChkZXByZWNhdGUsIG1lc3NhZ2UpXG4gIH1cblxuICBkZXByZWNhdGUuX2ZpbGUgPSBmaWxlXG4gIGRlcHJlY2F0ZS5faWdub3JlZCA9IGlzaWdub3JlZChuYW1lc3BhY2UpXG4gIGRlcHJlY2F0ZS5fbmFtZXNwYWNlID0gbmFtZXNwYWNlXG4gIGRlcHJlY2F0ZS5fdHJhY2VkID0gaXN0cmFjZWQobmFtZXNwYWNlKVxuICBkZXByZWNhdGUuX3dhcm5lZCA9IE9iamVjdC5jcmVhdGUobnVsbClcblxuICBkZXByZWNhdGUuZnVuY3Rpb24gPSB3cmFwZnVuY3Rpb25cbiAgZGVwcmVjYXRlLnByb3BlcnR5ID0gd3JhcHByb3BlcnR5XG5cbiAgcmV0dXJuIGRlcHJlY2F0ZVxufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBuYW1lc3BhY2UgaXMgaWdub3JlZC5cbiAqL1xuXG5mdW5jdGlvbiBpc2lnbm9yZWQgKG5hbWVzcGFjZSkge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dDogdGVzdGVkIGluIGEgY2hpbGQgcHJvY2Vzc3MgKi9cbiAgaWYgKHByb2Nlc3Mubm9EZXByZWNhdGlvbikge1xuICAgIC8vIC0tbm8tZGVwcmVjYXRpb24gc3VwcG9ydFxuICAgIHJldHVybiB0cnVlXG4gIH1cblxuICB2YXIgc3RyID0gcHJvY2Vzcy5lbnYuTk9fREVQUkVDQVRJT04gfHwgJydcblxuICAvLyBuYW1lc3BhY2UgaWdub3JlZFxuICByZXR1cm4gY29udGFpbnNOYW1lc3BhY2Uoc3RyLCBuYW1lc3BhY2UpXG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIG5hbWVzcGFjZSBpcyB0cmFjZWQuXG4gKi9cblxuZnVuY3Rpb24gaXN0cmFjZWQgKG5hbWVzcGFjZSkge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dDogdGVzdGVkIGluIGEgY2hpbGQgcHJvY2Vzc3MgKi9cbiAgaWYgKHByb2Nlc3MudHJhY2VEZXByZWNhdGlvbikge1xuICAgIC8vIC0tdHJhY2UtZGVwcmVjYXRpb24gc3VwcG9ydFxuICAgIHJldHVybiB0cnVlXG4gIH1cblxuICB2YXIgc3RyID0gcHJvY2Vzcy5lbnYuVFJBQ0VfREVQUkVDQVRJT04gfHwgJydcblxuICAvLyBuYW1lc3BhY2UgdHJhY2VkXG4gIHJldHVybiBjb250YWluc05hbWVzcGFjZShzdHIsIG5hbWVzcGFjZSlcbn1cblxuLyoqXG4gKiBEaXNwbGF5IGRlcHJlY2F0aW9uIG1lc3NhZ2UuXG4gKi9cblxuZnVuY3Rpb24gbG9nIChtZXNzYWdlLCBzaXRlKSB7XG4gIHZhciBoYXNsaXN0ZW5lcnMgPSBldmVudExpc3RlbmVyQ291bnQocHJvY2VzcywgJ2RlcHJlY2F0aW9uJykgIT09IDBcblxuICAvLyBhYm9ydCBlYXJseSBpZiBubyBkZXN0aW5hdGlvblxuICBpZiAoIWhhc2xpc3RlbmVycyAmJiB0aGlzLl9pZ25vcmVkKSB7XG4gICAgcmV0dXJuXG4gIH1cblxuICB2YXIgY2FsbGVyXG4gIHZhciBjYWxsRmlsZVxuICB2YXIgY2FsbFNpdGVcbiAgdmFyIGRlcFNpdGVcbiAgdmFyIGkgPSAwXG4gIHZhciBzZWVuID0gZmFsc2VcbiAgdmFyIHN0YWNrID0gZ2V0U3RhY2soKVxuICB2YXIgZmlsZSA9IHRoaXMuX2ZpbGVcblxuICBpZiAoc2l0ZSkge1xuICAgIC8vIHByb3ZpZGVkIHNpdGVcbiAgICBkZXBTaXRlID0gc2l0ZVxuICAgIGNhbGxTaXRlID0gY2FsbFNpdGVMb2NhdGlvbihzdGFja1sxXSlcbiAgICBjYWxsU2l0ZS5uYW1lID0gZGVwU2l0ZS5uYW1lXG4gICAgZmlsZSA9IGNhbGxTaXRlWzBdXG4gIH0gZWxzZSB7XG4gICAgLy8gZ2V0IGNhbGwgc2l0ZVxuICAgIGkgPSAyXG4gICAgZGVwU2l0ZSA9IGNhbGxTaXRlTG9jYXRpb24oc3RhY2tbaV0pXG4gICAgY2FsbFNpdGUgPSBkZXBTaXRlXG4gIH1cblxuICAvLyBnZXQgY2FsbGVyIG9mIGRlcHJlY2F0ZWQgdGhpbmcgaW4gcmVsYXRpb24gdG8gZmlsZVxuICBmb3IgKDsgaSA8IHN0YWNrLmxlbmd0aDsgaSsrKSB7XG4gICAgY2FsbGVyID0gY2FsbFNpdGVMb2NhdGlvbihzdGFja1tpXSlcbiAgICBjYWxsRmlsZSA9IGNhbGxlclswXVxuXG4gICAgaWYgKGNhbGxGaWxlID09PSBmaWxlKSB7XG4gICAgICBzZWVuID0gdHJ1ZVxuICAgIH0gZWxzZSBpZiAoY2FsbEZpbGUgPT09IHRoaXMuX2ZpbGUpIHtcbiAgICAgIGZpbGUgPSB0aGlzLl9maWxlXG4gICAgfSBlbHNlIGlmIChzZWVuKSB7XG4gICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIHZhciBrZXkgPSBjYWxsZXJcbiAgICA/IGRlcFNpdGUuam9pbignOicpICsgJ19fJyArIGNhbGxlci5qb2luKCc6JylcbiAgICA6IHVuZGVmaW5lZFxuXG4gIGlmIChrZXkgIT09IHVuZGVmaW5lZCAmJiBrZXkgaW4gdGhpcy5fd2FybmVkKSB7XG4gICAgLy8gYWxyZWFkeSB3YXJuZWRcbiAgICByZXR1cm5cbiAgfVxuXG4gIHRoaXMuX3dhcm5lZFtrZXldID0gdHJ1ZVxuXG4gIC8vIGdlbmVyYXRlIGF1dG9tYXRpYyBtZXNzYWdlIGZyb20gY2FsbCBzaXRlXG4gIHZhciBtc2cgPSBtZXNzYWdlXG4gIGlmICghbXNnKSB7XG4gICAgbXNnID0gY2FsbFNpdGUgPT09IGRlcFNpdGUgfHwgIWNhbGxTaXRlLm5hbWVcbiAgICAgID8gZGVmYXVsdE1lc3NhZ2UoZGVwU2l0ZSlcbiAgICAgIDogZGVmYXVsdE1lc3NhZ2UoY2FsbFNpdGUpXG4gIH1cblxuICAvLyBlbWl0IGRlcHJlY2F0aW9uIGlmIGxpc3RlbmVycyBleGlzdFxuICBpZiAoaGFzbGlzdGVuZXJzKSB7XG4gICAgdmFyIGVyciA9IERlcHJlY2F0aW9uRXJyb3IodGhpcy5fbmFtZXNwYWNlLCBtc2csIHN0YWNrLnNsaWNlKGkpKVxuICAgIHByb2Nlc3MuZW1pdCgnZGVwcmVjYXRpb24nLCBlcnIpXG4gICAgcmV0dXJuXG4gIH1cblxuICAvLyBmb3JtYXQgYW5kIHdyaXRlIG1lc3NhZ2VcbiAgdmFyIGZvcm1hdCA9IHByb2Nlc3Muc3RkZXJyLmlzVFRZXG4gICAgPyBmb3JtYXRDb2xvclxuICAgIDogZm9ybWF0UGxhaW5cbiAgdmFyIG91dHB1dCA9IGZvcm1hdC5jYWxsKHRoaXMsIG1zZywgY2FsbGVyLCBzdGFjay5zbGljZShpKSlcbiAgcHJvY2Vzcy5zdGRlcnIud3JpdGUob3V0cHV0ICsgJ1xcbicsICd1dGY4Jylcbn1cblxuLyoqXG4gKiBHZXQgY2FsbCBzaXRlIGxvY2F0aW9uIGFzIGFycmF5LlxuICovXG5cbmZ1bmN0aW9uIGNhbGxTaXRlTG9jYXRpb24gKGNhbGxTaXRlKSB7XG4gIHZhciBmaWxlID0gY2FsbFNpdGUuZ2V0RmlsZU5hbWUoKSB8fCAnPGFub255bW91cz4nXG4gIHZhciBsaW5lID0gY2FsbFNpdGUuZ2V0TGluZU51bWJlcigpXG4gIHZhciBjb2xtID0gY2FsbFNpdGUuZ2V0Q29sdW1uTnVtYmVyKClcblxuICBpZiAoY2FsbFNpdGUuaXNFdmFsKCkpIHtcbiAgICBmaWxlID0gY2FsbFNpdGUuZ2V0RXZhbE9yaWdpbigpICsgJywgJyArIGZpbGVcbiAgfVxuXG4gIHZhciBzaXRlID0gW2ZpbGUsIGxpbmUsIGNvbG1dXG5cbiAgc2l0ZS5jYWxsU2l0ZSA9IGNhbGxTaXRlXG4gIHNpdGUubmFtZSA9IGNhbGxTaXRlLmdldEZ1bmN0aW9uTmFtZSgpXG5cbiAgcmV0dXJuIHNpdGVcbn1cblxuLyoqXG4gKiBHZW5lcmF0ZSBhIGRlZmF1bHQgbWVzc2FnZSBmcm9tIHRoZSBzaXRlLlxuICovXG5cbmZ1bmN0aW9uIGRlZmF1bHRNZXNzYWdlIChzaXRlKSB7XG4gIHZhciBjYWxsU2l0ZSA9IHNpdGUuY2FsbFNpdGVcbiAgdmFyIGZ1bmNOYW1lID0gc2l0ZS5uYW1lXG5cbiAgLy8gbWFrZSB1c2VmdWwgYW5vbnltb3VzIG5hbWVcbiAgaWYgKCFmdW5jTmFtZSkge1xuICAgIGZ1bmNOYW1lID0gJzxhbm9ueW1vdXNAJyArIGZvcm1hdExvY2F0aW9uKHNpdGUpICsgJz4nXG4gIH1cblxuICB2YXIgY29udGV4dCA9IGNhbGxTaXRlLmdldFRoaXMoKVxuICB2YXIgdHlwZU5hbWUgPSBjb250ZXh0ICYmIGNhbGxTaXRlLmdldFR5cGVOYW1lKClcblxuICAvLyBpZ25vcmUgdXNlbGVzcyB0eXBlIG5hbWVcbiAgaWYgKHR5cGVOYW1lID09PSAnT2JqZWN0Jykge1xuICAgIHR5cGVOYW1lID0gdW5kZWZpbmVkXG4gIH1cblxuICAvLyBtYWtlIHVzZWZ1bCB0eXBlIG5hbWVcbiAgaWYgKHR5cGVOYW1lID09PSAnRnVuY3Rpb24nKSB7XG4gICAgdHlwZU5hbWUgPSBjb250ZXh0Lm5hbWUgfHwgdHlwZU5hbWVcbiAgfVxuXG4gIHJldHVybiB0eXBlTmFtZSAmJiBjYWxsU2l0ZS5nZXRNZXRob2ROYW1lKClcbiAgICA/IHR5cGVOYW1lICsgJy4nICsgZnVuY05hbWVcbiAgICA6IGZ1bmNOYW1lXG59XG5cbi8qKlxuICogRm9ybWF0IGRlcHJlY2F0aW9uIG1lc3NhZ2Ugd2l0aG91dCBjb2xvci5cbiAqL1xuXG5mdW5jdGlvbiBmb3JtYXRQbGFpbiAobXNnLCBjYWxsZXIsIHN0YWNrKSB7XG4gIHZhciB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvVVRDU3RyaW5nKClcblxuICB2YXIgZm9ybWF0dGVkID0gdGltZXN0YW1wICtcbiAgICAnICcgKyB0aGlzLl9uYW1lc3BhY2UgK1xuICAgICcgZGVwcmVjYXRlZCAnICsgbXNnXG5cbiAgLy8gYWRkIHN0YWNrIHRyYWNlXG4gIGlmICh0aGlzLl90cmFjZWQpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0YWNrLmxlbmd0aDsgaSsrKSB7XG4gICAgICBmb3JtYXR0ZWQgKz0gJ1xcbiAgICBhdCAnICsgY2FsbFNpdGVUb1N0cmluZyhzdGFja1tpXSlcbiAgICB9XG5cbiAgICByZXR1cm4gZm9ybWF0dGVkXG4gIH1cblxuICBpZiAoY2FsbGVyKSB7XG4gICAgZm9ybWF0dGVkICs9ICcgYXQgJyArIGZvcm1hdExvY2F0aW9uKGNhbGxlcilcbiAgfVxuXG4gIHJldHVybiBmb3JtYXR0ZWRcbn1cblxuLyoqXG4gKiBGb3JtYXQgZGVwcmVjYXRpb24gbWVzc2FnZSB3aXRoIGNvbG9yLlxuICovXG5cbmZ1bmN0aW9uIGZvcm1hdENvbG9yIChtc2csIGNhbGxlciwgc3RhY2spIHtcbiAgdmFyIGZvcm1hdHRlZCA9ICdcXHgxYlszNjsxbScgKyB0aGlzLl9uYW1lc3BhY2UgKyAnXFx4MWJbMjI7MzltJyArIC8vIGJvbGQgY3lhblxuICAgICcgXFx4MWJbMzM7MW1kZXByZWNhdGVkXFx4MWJbMjI7MzltJyArIC8vIGJvbGQgeWVsbG93XG4gICAgJyBcXHgxYlswbScgKyBtc2cgKyAnXFx4MWJbMzltJyAvLyByZXNldFxuXG4gIC8vIGFkZCBzdGFjayB0cmFjZVxuICBpZiAodGhpcy5fdHJhY2VkKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGFjay5sZW5ndGg7IGkrKykge1xuICAgICAgZm9ybWF0dGVkICs9ICdcXG4gICAgXFx4MWJbMzZtYXQgJyArIGNhbGxTaXRlVG9TdHJpbmcoc3RhY2tbaV0pICsgJ1xceDFiWzM5bScgLy8gY3lhblxuICAgIH1cblxuICAgIHJldHVybiBmb3JtYXR0ZWRcbiAgfVxuXG4gIGlmIChjYWxsZXIpIHtcbiAgICBmb3JtYXR0ZWQgKz0gJyBcXHgxYlszNm0nICsgZm9ybWF0TG9jYXRpb24oY2FsbGVyKSArICdcXHgxYlszOW0nIC8vIGN5YW5cbiAgfVxuXG4gIHJldHVybiBmb3JtYXR0ZWRcbn1cblxuLyoqXG4gKiBGb3JtYXQgY2FsbCBzaXRlIGxvY2F0aW9uLlxuICovXG5cbmZ1bmN0aW9uIGZvcm1hdExvY2F0aW9uIChjYWxsU2l0ZSkge1xuICByZXR1cm4gcmVsYXRpdmUoYmFzZVBhdGgsIGNhbGxTaXRlWzBdKSArXG4gICAgJzonICsgY2FsbFNpdGVbMV0gK1xuICAgICc6JyArIGNhbGxTaXRlWzJdXG59XG5cbi8qKlxuICogR2V0IHRoZSBzdGFjayBhcyBhcnJheSBvZiBjYWxsIHNpdGVzLlxuICovXG5cbmZ1bmN0aW9uIGdldFN0YWNrICgpIHtcbiAgdmFyIGxpbWl0ID0gRXJyb3Iuc3RhY2tUcmFjZUxpbWl0XG4gIHZhciBvYmogPSB7fVxuICB2YXIgcHJlcCA9IEVycm9yLnByZXBhcmVTdGFja1RyYWNlXG5cbiAgRXJyb3IucHJlcGFyZVN0YWNrVHJhY2UgPSBwcmVwYXJlT2JqZWN0U3RhY2tUcmFjZVxuICBFcnJvci5zdGFja1RyYWNlTGltaXQgPSBNYXRoLm1heCgxMCwgbGltaXQpXG5cbiAgLy8gY2FwdHVyZSB0aGUgc3RhY2tcbiAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2Uob2JqKVxuXG4gIC8vIHNsaWNlIHRoaXMgZnVuY3Rpb24gb2ZmIHRoZSB0b3BcbiAgdmFyIHN0YWNrID0gb2JqLnN0YWNrLnNsaWNlKDEpXG5cbiAgRXJyb3IucHJlcGFyZVN0YWNrVHJhY2UgPSBwcmVwXG4gIEVycm9yLnN0YWNrVHJhY2VMaW1pdCA9IGxpbWl0XG5cbiAgcmV0dXJuIHN0YWNrXG59XG5cbi8qKlxuICogQ2FwdHVyZSBjYWxsIHNpdGUgc3RhY2sgZnJvbSB2OC5cbiAqL1xuXG5mdW5jdGlvbiBwcmVwYXJlT2JqZWN0U3RhY2tUcmFjZSAob2JqLCBzdGFjaykge1xuICByZXR1cm4gc3RhY2tcbn1cblxuLyoqXG4gKiBSZXR1cm4gYSB3cmFwcGVkIGZ1bmN0aW9uIGluIGEgZGVwcmVjYXRpb24gbWVzc2FnZS5cbiAqL1xuXG5mdW5jdGlvbiB3cmFwZnVuY3Rpb24gKGZuLCBtZXNzYWdlKSB7XG4gIGlmICh0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBmbiBtdXN0IGJlIGEgZnVuY3Rpb24nKVxuICB9XG5cbiAgdmFyIGFyZ3MgPSBjcmVhdGVBcmd1bWVudHNTdHJpbmcoZm4ubGVuZ3RoKVxuICB2YXIgZGVwcmVjYXRlID0gdGhpcyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gIHZhciBzdGFjayA9IGdldFN0YWNrKClcbiAgdmFyIHNpdGUgPSBjYWxsU2l0ZUxvY2F0aW9uKHN0YWNrWzFdKVxuXG4gIHNpdGUubmFtZSA9IGZuLm5hbWVcblxuICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWV2YWxcbiAgdmFyIGRlcHJlY2F0ZWRmbiA9IGV2YWwoJyhmdW5jdGlvbiAoJyArIGFyZ3MgKyAnKSB7XFxuJyArXG4gICAgJ1widXNlIHN0cmljdFwiXFxuJyArXG4gICAgJ2xvZy5jYWxsKGRlcHJlY2F0ZSwgbWVzc2FnZSwgc2l0ZSlcXG4nICtcbiAgICAncmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cylcXG4nICtcbiAgICAnfSknKVxuXG4gIHJldHVybiBkZXByZWNhdGVkZm5cbn1cblxuLyoqXG4gKiBXcmFwIHByb3BlcnR5IGluIGEgZGVwcmVjYXRpb24gbWVzc2FnZS5cbiAqL1xuXG5mdW5jdGlvbiB3cmFwcHJvcGVydHkgKG9iaiwgcHJvcCwgbWVzc2FnZSkge1xuICBpZiAoIW9iaiB8fCAodHlwZW9mIG9iaiAhPT0gJ29iamVjdCcgJiYgdHlwZW9mIG9iaiAhPT0gJ2Z1bmN0aW9uJykpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBvYmogbXVzdCBiZSBvYmplY3QnKVxuICB9XG5cbiAgdmFyIGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwgcHJvcClcblxuICBpZiAoIWRlc2NyaXB0b3IpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdtdXN0IGNhbGwgcHJvcGVydHkgb24gb3duZXIgb2JqZWN0JylcbiAgfVxuXG4gIGlmICghZGVzY3JpcHRvci5jb25maWd1cmFibGUpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdwcm9wZXJ0eSBtdXN0IGJlIGNvbmZpZ3VyYWJsZScpXG4gIH1cblxuICB2YXIgZGVwcmVjYXRlID0gdGhpc1xuICB2YXIgc3RhY2sgPSBnZXRTdGFjaygpXG4gIHZhciBzaXRlID0gY2FsbFNpdGVMb2NhdGlvbihzdGFja1sxXSlcblxuICAvLyBzZXQgc2l0ZSBuYW1lXG4gIHNpdGUubmFtZSA9IHByb3BcblxuICAvLyBjb252ZXJ0IGRhdGEgZGVzY3JpcHRvclxuICBpZiAoJ3ZhbHVlJyBpbiBkZXNjcmlwdG9yKSB7XG4gICAgZGVzY3JpcHRvciA9IGNvbnZlcnREYXRhRGVzY3JpcHRvclRvQWNjZXNzb3Iob2JqLCBwcm9wLCBtZXNzYWdlKVxuICB9XG5cbiAgdmFyIGdldCA9IGRlc2NyaXB0b3IuZ2V0XG4gIHZhciBzZXQgPSBkZXNjcmlwdG9yLnNldFxuXG4gIC8vIHdyYXAgZ2V0dGVyXG4gIGlmICh0eXBlb2YgZ2V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZGVzY3JpcHRvci5nZXQgPSBmdW5jdGlvbiBnZXR0ZXIgKCkge1xuICAgICAgbG9nLmNhbGwoZGVwcmVjYXRlLCBtZXNzYWdlLCBzaXRlKVxuICAgICAgcmV0dXJuIGdldC5hcHBseSh0aGlzLCBhcmd1bWVudHMpXG4gICAgfVxuICB9XG5cbiAgLy8gd3JhcCBzZXR0ZXJcbiAgaWYgKHR5cGVvZiBzZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBkZXNjcmlwdG9yLnNldCA9IGZ1bmN0aW9uIHNldHRlciAoKSB7XG4gICAgICBsb2cuY2FsbChkZXByZWNhdGUsIG1lc3NhZ2UsIHNpdGUpXG4gICAgICByZXR1cm4gc2V0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cylcbiAgICB9XG4gIH1cblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBwcm9wLCBkZXNjcmlwdG9yKVxufVxuXG4vKipcbiAqIENyZWF0ZSBEZXByZWNhdGlvbkVycm9yIGZvciBkZXByZWNhdGlvblxuICovXG5cbmZ1bmN0aW9uIERlcHJlY2F0aW9uRXJyb3IgKG5hbWVzcGFjZSwgbWVzc2FnZSwgc3RhY2spIHtcbiAgdmFyIGVycm9yID0gbmV3IEVycm9yKClcbiAgdmFyIHN0YWNrU3RyaW5nXG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVycm9yLCAnY29uc3RydWN0b3InLCB7XG4gICAgdmFsdWU6IERlcHJlY2F0aW9uRXJyb3JcbiAgfSlcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXJyb3IsICdtZXNzYWdlJywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICB2YWx1ZTogbWVzc2FnZSxcbiAgICB3cml0YWJsZTogdHJ1ZVxuICB9KVxuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlcnJvciwgJ25hbWUnLCB7XG4gICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiAnRGVwcmVjYXRpb25FcnJvcicsXG4gICAgd3JpdGFibGU6IHRydWVcbiAgfSlcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXJyb3IsICduYW1lc3BhY2UnLCB7XG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgIHZhbHVlOiBuYW1lc3BhY2UsXG4gICAgd3JpdGFibGU6IHRydWVcbiAgfSlcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXJyb3IsICdzdGFjaycsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoc3RhY2tTdHJpbmcgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gc3RhY2tTdHJpbmdcbiAgICAgIH1cblxuICAgICAgLy8gcHJlcGFyZSBzdGFjayB0cmFjZVxuICAgICAgcmV0dXJuIChzdGFja1N0cmluZyA9IGNyZWF0ZVN0YWNrU3RyaW5nLmNhbGwodGhpcywgc3RhY2spKVxuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXR0ZXIgKHZhbCkge1xuICAgICAgc3RhY2tTdHJpbmcgPSB2YWxcbiAgICB9XG4gIH0pXG5cbiAgcmV0dXJuIGVycm9yXG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJldmVudHNcIik7IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwic3RyZWFtXCIpOyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImZzXCIpOyIsIi8qIVxuICogZXhwcmVzc1xuICogQ29weXJpZ2h0KGMpIDIwMDktMjAxMyBUSiBIb2xvd2F5Y2h1a1xuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcbnZhciBjb250ZW50RGlzcG9zaXRpb24gPSByZXF1aXJlKCdjb250ZW50LWRpc3Bvc2l0aW9uJyk7XG52YXIgY29udGVudFR5cGUgPSByZXF1aXJlKCdjb250ZW50LXR5cGUnKTtcbnZhciBkZXByZWNhdGUgPSByZXF1aXJlKCdkZXBkJykoJ2V4cHJlc3MnKTtcbnZhciBmbGF0dGVuID0gcmVxdWlyZSgnYXJyYXktZmxhdHRlbicpO1xudmFyIG1pbWUgPSByZXF1aXJlKCdzZW5kJykubWltZTtcbnZhciBldGFnID0gcmVxdWlyZSgnZXRhZycpO1xudmFyIHByb3h5YWRkciA9IHJlcXVpcmUoJ3Byb3h5LWFkZHInKTtcbnZhciBxcyA9IHJlcXVpcmUoJ3FzJyk7XG52YXIgcXVlcnlzdHJpbmcgPSByZXF1aXJlKCdxdWVyeXN0cmluZycpO1xuXG4vKipcbiAqIFJldHVybiBzdHJvbmcgRVRhZyBmb3IgYGJvZHlgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfEJ1ZmZlcn0gYm9keVxuICogQHBhcmFtIHtTdHJpbmd9IFtlbmNvZGluZ11cbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmV4cG9ydHMuZXRhZyA9IGNyZWF0ZUVUYWdHZW5lcmF0b3IoeyB3ZWFrOiBmYWxzZSB9KVxuXG4vKipcbiAqIFJldHVybiB3ZWFrIEVUYWcgZm9yIGBib2R5YC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xCdWZmZXJ9IGJvZHlcbiAqIEBwYXJhbSB7U3RyaW5nfSBbZW5jb2RpbmddXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLndldGFnID0gY3JlYXRlRVRhZ0dlbmVyYXRvcih7IHdlYWs6IHRydWUgfSlcblxuLyoqXG4gKiBDaGVjayBpZiBgcGF0aGAgbG9va3MgYWJzb2x1dGUuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhdGhcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLmlzQWJzb2x1dGUgPSBmdW5jdGlvbihwYXRoKXtcbiAgaWYgKCcvJyA9PT0gcGF0aFswXSkgcmV0dXJuIHRydWU7XG4gIGlmICgnOicgPT09IHBhdGhbMV0gJiYgKCdcXFxcJyA9PT0gcGF0aFsyXSB8fCAnLycgPT09IHBhdGhbMl0pKSByZXR1cm4gdHJ1ZTsgLy8gV2luZG93cyBkZXZpY2UgcGF0aFxuICBpZiAoJ1xcXFxcXFxcJyA9PT0gcGF0aC5zdWJzdHJpbmcoMCwgMikpIHJldHVybiB0cnVlOyAvLyBNaWNyb3NvZnQgQXp1cmUgYWJzb2x1dGUgcGF0aFxufTtcblxuLyoqXG4gKiBGbGF0dGVuIHRoZSBnaXZlbiBgYXJyYC5cbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJcbiAqIEByZXR1cm4ge0FycmF5fVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZXhwb3J0cy5mbGF0dGVuID0gZGVwcmVjYXRlLmZ1bmN0aW9uKGZsYXR0ZW4sXG4gICd1dGlscy5mbGF0dGVuOiB1c2UgYXJyYXktZmxhdHRlbiBucG0gbW9kdWxlIGluc3RlYWQnKTtcblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIGB0eXBlYCwgZm9yIGV4YW1wbGUgXCJodG1sXCIgYmVjb21lcyBcInRleHQvaHRtbFwiLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLm5vcm1hbGl6ZVR5cGUgPSBmdW5jdGlvbih0eXBlKXtcbiAgcmV0dXJuIH50eXBlLmluZGV4T2YoJy8nKVxuICAgID8gYWNjZXB0UGFyYW1zKHR5cGUpXG4gICAgOiB7IHZhbHVlOiBtaW1lLmxvb2t1cCh0eXBlKSwgcGFyYW1zOiB7fSB9O1xufTtcblxuLyoqXG4gKiBOb3JtYWxpemUgYHR5cGVzYCwgZm9yIGV4YW1wbGUgXCJodG1sXCIgYmVjb21lcyBcInRleHQvaHRtbFwiLlxuICpcbiAqIEBwYXJhbSB7QXJyYXl9IHR5cGVzXG4gKiBAcmV0dXJuIHtBcnJheX1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmV4cG9ydHMubm9ybWFsaXplVHlwZXMgPSBmdW5jdGlvbih0eXBlcyl7XG4gIHZhciByZXQgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHR5cGVzLmxlbmd0aDsgKytpKSB7XG4gICAgcmV0LnB1c2goZXhwb3J0cy5ub3JtYWxpemVUeXBlKHR5cGVzW2ldKSk7XG4gIH1cblxuICByZXR1cm4gcmV0O1xufTtcblxuLyoqXG4gKiBHZW5lcmF0ZSBDb250ZW50LURpc3Bvc2l0aW9uIGhlYWRlciBhcHByb3ByaWF0ZSBmb3IgdGhlIGZpbGVuYW1lLlxuICogbm9uLWFzY2lpIGZpbGVuYW1lcyBhcmUgdXJsZW5jb2RlZCBhbmQgYSBmaWxlbmFtZSogcGFyYW1ldGVyIGlzIGFkZGVkXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGZpbGVuYW1lXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLmNvbnRlbnREaXNwb3NpdGlvbiA9IGRlcHJlY2F0ZS5mdW5jdGlvbihjb250ZW50RGlzcG9zaXRpb24sXG4gICd1dGlscy5jb250ZW50RGlzcG9zaXRpb246IHVzZSBjb250ZW50LWRpc3Bvc2l0aW9uIG5wbSBtb2R1bGUgaW5zdGVhZCcpO1xuXG4vKipcbiAqIFBhcnNlIGFjY2VwdCBwYXJhbXMgYHN0cmAgcmV0dXJuaW5nIGFuXG4gKiBvYmplY3Qgd2l0aCBgLnZhbHVlYCwgYC5xdWFsaXR5YCBhbmQgYC5wYXJhbXNgLlxuICogYWxzbyBpbmNsdWRlcyBgLm9yaWdpbmFsSW5kZXhgIGZvciBzdGFibGUgc29ydGluZ1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGFjY2VwdFBhcmFtcyhzdHIsIGluZGV4KSB7XG4gIHZhciBwYXJ0cyA9IHN0ci5zcGxpdCgvICo7ICovKTtcbiAgdmFyIHJldCA9IHsgdmFsdWU6IHBhcnRzWzBdLCBxdWFsaXR5OiAxLCBwYXJhbXM6IHt9LCBvcmlnaW5hbEluZGV4OiBpbmRleCB9O1xuXG4gIGZvciAodmFyIGkgPSAxOyBpIDwgcGFydHMubGVuZ3RoOyArK2kpIHtcbiAgICB2YXIgcG1zID0gcGFydHNbaV0uc3BsaXQoLyAqPSAqLyk7XG4gICAgaWYgKCdxJyA9PT0gcG1zWzBdKSB7XG4gICAgICByZXQucXVhbGl0eSA9IHBhcnNlRmxvYXQocG1zWzFdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0LnBhcmFtc1twbXNbMF1dID0gcG1zWzFdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXQ7XG59XG5cbi8qKlxuICogQ29tcGlsZSBcImV0YWdcIiB2YWx1ZSB0byBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gIHtCb29sZWFufFN0cmluZ3xGdW5jdGlvbn0gdmFsXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmV4cG9ydHMuY29tcGlsZUVUYWcgPSBmdW5jdGlvbih2YWwpIHtcbiAgdmFyIGZuO1xuXG4gIGlmICh0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHZhbDtcbiAgfVxuXG4gIHN3aXRjaCAodmFsKSB7XG4gICAgY2FzZSB0cnVlOlxuICAgICAgZm4gPSBleHBvcnRzLndldGFnO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBmYWxzZTpcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3N0cm9uZyc6XG4gICAgICBmbiA9IGV4cG9ydHMuZXRhZztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3dlYWsnOlxuICAgICAgZm4gPSBleHBvcnRzLndldGFnO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3Vua25vd24gdmFsdWUgZm9yIGV0YWcgZnVuY3Rpb246ICcgKyB2YWwpO1xuICB9XG5cbiAgcmV0dXJuIGZuO1xufVxuXG4vKipcbiAqIENvbXBpbGUgXCJxdWVyeSBwYXJzZXJcIiB2YWx1ZSB0byBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gIHtTdHJpbmd8RnVuY3Rpb259IHZhbFxuICogQHJldHVybiB7RnVuY3Rpb259XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLmNvbXBpbGVRdWVyeVBhcnNlciA9IGZ1bmN0aW9uIGNvbXBpbGVRdWVyeVBhcnNlcih2YWwpIHtcbiAgdmFyIGZuO1xuXG4gIGlmICh0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHZhbDtcbiAgfVxuXG4gIHN3aXRjaCAodmFsKSB7XG4gICAgY2FzZSB0cnVlOlxuICAgICAgZm4gPSBxdWVyeXN0cmluZy5wYXJzZTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgZmFsc2U6XG4gICAgICBmbiA9IG5ld09iamVjdDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2V4dGVuZGVkJzpcbiAgICAgIGZuID0gcGFyc2VFeHRlbmRlZFF1ZXJ5U3RyaW5nO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnc2ltcGxlJzpcbiAgICAgIGZuID0gcXVlcnlzdHJpbmcucGFyc2U7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigndW5rbm93biB2YWx1ZSBmb3IgcXVlcnkgcGFyc2VyIGZ1bmN0aW9uOiAnICsgdmFsKTtcbiAgfVxuXG4gIHJldHVybiBmbjtcbn1cblxuLyoqXG4gKiBDb21waWxlIFwicHJveHkgdHJ1c3RcIiB2YWx1ZSB0byBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gIHtCb29sZWFufFN0cmluZ3xOdW1iZXJ8QXJyYXl8RnVuY3Rpb259IHZhbFxuICogQHJldHVybiB7RnVuY3Rpb259XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLmNvbXBpbGVUcnVzdCA9IGZ1bmN0aW9uKHZhbCkge1xuICBpZiAodHlwZW9mIHZhbCA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIHZhbDtcblxuICBpZiAodmFsID09PSB0cnVlKSB7XG4gICAgLy8gU3VwcG9ydCBwbGFpbiB0cnVlL2ZhbHNlXG4gICAgcmV0dXJuIGZ1bmN0aW9uKCl7IHJldHVybiB0cnVlIH07XG4gIH1cblxuICBpZiAodHlwZW9mIHZhbCA9PT0gJ251bWJlcicpIHtcbiAgICAvLyBTdXBwb3J0IHRydXN0aW5nIGhvcCBjb3VudFxuICAgIHJldHVybiBmdW5jdGlvbihhLCBpKXsgcmV0dXJuIGkgPCB2YWwgfTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdmFsID09PSAnc3RyaW5nJykge1xuICAgIC8vIFN1cHBvcnQgY29tbWEtc2VwYXJhdGVkIHZhbHVlc1xuICAgIHZhbCA9IHZhbC5zcGxpdCgvICosICovKTtcbiAgfVxuXG4gIHJldHVybiBwcm94eWFkZHIuY29tcGlsZSh2YWwgfHwgW10pO1xufVxuXG4vKipcbiAqIFNldCB0aGUgY2hhcnNldCBpbiBhIGdpdmVuIENvbnRlbnQtVHlwZSBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAqIEBwYXJhbSB7U3RyaW5nfSBjaGFyc2V0XG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLnNldENoYXJzZXQgPSBmdW5jdGlvbiBzZXRDaGFyc2V0KHR5cGUsIGNoYXJzZXQpIHtcbiAgaWYgKCF0eXBlIHx8ICFjaGFyc2V0KSB7XG4gICAgcmV0dXJuIHR5cGU7XG4gIH1cblxuICAvLyBwYXJzZSB0eXBlXG4gIHZhciBwYXJzZWQgPSBjb250ZW50VHlwZS5wYXJzZSh0eXBlKTtcblxuICAvLyBzZXQgY2hhcnNldFxuICBwYXJzZWQucGFyYW1ldGVycy5jaGFyc2V0ID0gY2hhcnNldDtcblxuICAvLyBmb3JtYXQgdHlwZVxuICByZXR1cm4gY29udGVudFR5cGUuZm9ybWF0KHBhcnNlZCk7XG59O1xuXG4vKipcbiAqIENyZWF0ZSBhbiBFVGFnIGdlbmVyYXRvciBmdW5jdGlvbiwgZ2VuZXJhdGluZyBFVGFncyB3aXRoXG4gKiB0aGUgZ2l2ZW4gb3B0aW9ucy5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7ZnVuY3Rpb259XG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZUVUYWdHZW5lcmF0b3IgKG9wdGlvbnMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdlbmVyYXRlRVRhZyAoYm9keSwgZW5jb2RpbmcpIHtcbiAgICB2YXIgYnVmID0gIUJ1ZmZlci5pc0J1ZmZlcihib2R5KVxuICAgICAgPyBCdWZmZXIuZnJvbShib2R5LCBlbmNvZGluZylcbiAgICAgIDogYm9keVxuXG4gICAgcmV0dXJuIGV0YWcoYnVmLCBvcHRpb25zKVxuICB9XG59XG5cbi8qKlxuICogUGFyc2UgYW4gZXh0ZW5kZWQgcXVlcnkgc3RyaW5nIHdpdGggcXMuXG4gKlxuICogQHJldHVybiB7T2JqZWN0fVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZUV4dGVuZGVkUXVlcnlTdHJpbmcoc3RyKSB7XG4gIHJldHVybiBxcy5wYXJzZShzdHIsIHtcbiAgICBhbGxvd1Byb3RvdHlwZXM6IHRydWVcbiAgfSk7XG59XG5cbi8qKlxuICogUmV0dXJuIG5ldyBlbXB0eSBvYmplY3QuXG4gKlxuICogQHJldHVybiB7T2JqZWN0fVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbmV3T2JqZWN0KCkge1xuICByZXR1cm4ge307XG59XG4iLCIvKiFcbiAqIGh0dHAtZXJyb3JzXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcbiAqIENvcHlyaWdodChjKSAyMDE2IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgZGVwcmVjYXRlID0gcmVxdWlyZSgnZGVwZCcpKCdodHRwLWVycm9ycycpXG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCdzZXRwcm90b3R5cGVvZicpXG52YXIgc3RhdHVzZXMgPSByZXF1aXJlKCdzdGF0dXNlcycpXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVFcnJvclxubW9kdWxlLmV4cG9ydHMuSHR0cEVycm9yID0gY3JlYXRlSHR0cEVycm9yQ29uc3RydWN0b3IoKVxuXG4vLyBQb3B1bGF0ZSBleHBvcnRzIGZvciBhbGwgY29uc3RydWN0b3JzXG5wb3B1bGF0ZUNvbnN0cnVjdG9yRXhwb3J0cyhtb2R1bGUuZXhwb3J0cywgc3RhdHVzZXMuY29kZXMsIG1vZHVsZS5leHBvcnRzLkh0dHBFcnJvcilcblxuLyoqXG4gKiBHZXQgdGhlIGNvZGUgY2xhc3Mgb2YgYSBzdGF0dXMgY29kZS5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY29kZUNsYXNzIChzdGF0dXMpIHtcbiAgcmV0dXJuIE51bWJlcihTdHJpbmcoc3RhdHVzKS5jaGFyQXQoMCkgKyAnMDAnKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBIVFRQIEVycm9yLlxuICpcbiAqIEByZXR1cm5zIHtFcnJvcn1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVFcnJvciAoKSB7XG4gIC8vIHNvIG11Y2ggYXJpdHkgZ29pbmcgb24gfl9+XG4gIHZhciBlcnJcbiAgdmFyIG1zZ1xuICB2YXIgc3RhdHVzID0gNTAwXG4gIHZhciBwcm9wcyA9IHt9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGFyZyA9IGFyZ3VtZW50c1tpXVxuICAgIGlmIChhcmcgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgZXJyID0gYXJnXG4gICAgICBzdGF0dXMgPSBlcnIuc3RhdHVzIHx8IGVyci5zdGF0dXNDb2RlIHx8IHN0YXR1c1xuICAgICAgY29udGludWVcbiAgICB9XG4gICAgc3dpdGNoICh0eXBlb2YgYXJnKSB7XG4gICAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgICBtc2cgPSBhcmdcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgJ251bWJlcic6XG4gICAgICAgIHN0YXR1cyA9IGFyZ1xuICAgICAgICBpZiAoaSAhPT0gMCkge1xuICAgICAgICAgIGRlcHJlY2F0ZSgnbm9uLWZpcnN0LWFyZ3VtZW50IHN0YXR1cyBjb2RlOyByZXBsYWNlIHdpdGggY3JlYXRlRXJyb3IoJyArIGFyZyArICcsIC4uLiknKVxuICAgICAgICB9XG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlICdvYmplY3QnOlxuICAgICAgICBwcm9wcyA9IGFyZ1xuICAgICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlb2Ygc3RhdHVzID09PSAnbnVtYmVyJyAmJiAoc3RhdHVzIDwgNDAwIHx8IHN0YXR1cyA+PSA2MDApKSB7XG4gICAgZGVwcmVjYXRlKCdub24tZXJyb3Igc3RhdHVzIGNvZGU7IHVzZSBvbmx5IDR4eCBvciA1eHggc3RhdHVzIGNvZGVzJylcbiAgfVxuXG4gIGlmICh0eXBlb2Ygc3RhdHVzICE9PSAnbnVtYmVyJyB8fFxuICAgICghc3RhdHVzZXNbc3RhdHVzXSAmJiAoc3RhdHVzIDwgNDAwIHx8IHN0YXR1cyA+PSA2MDApKSkge1xuICAgIHN0YXR1cyA9IDUwMFxuICB9XG5cbiAgLy8gY29uc3RydWN0b3JcbiAgdmFyIEh0dHBFcnJvciA9IGNyZWF0ZUVycm9yW3N0YXR1c10gfHwgY3JlYXRlRXJyb3JbY29kZUNsYXNzKHN0YXR1cyldXG5cbiAgaWYgKCFlcnIpIHtcbiAgICAvLyBjcmVhdGUgZXJyb3JcbiAgICBlcnIgPSBIdHRwRXJyb3JcbiAgICAgID8gbmV3IEh0dHBFcnJvcihtc2cpXG4gICAgICA6IG5ldyBFcnJvcihtc2cgfHwgc3RhdHVzZXNbc3RhdHVzXSlcbiAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZShlcnIsIGNyZWF0ZUVycm9yKVxuICB9XG5cbiAgaWYgKCFIdHRwRXJyb3IgfHwgIShlcnIgaW5zdGFuY2VvZiBIdHRwRXJyb3IpIHx8IGVyci5zdGF0dXMgIT09IHN0YXR1cykge1xuICAgIC8vIGFkZCBwcm9wZXJ0aWVzIHRvIGdlbmVyaWMgZXJyb3JcbiAgICBlcnIuZXhwb3NlID0gc3RhdHVzIDwgNTAwXG4gICAgZXJyLnN0YXR1cyA9IGVyci5zdGF0dXNDb2RlID0gc3RhdHVzXG4gIH1cblxuICBmb3IgKHZhciBrZXkgaW4gcHJvcHMpIHtcbiAgICBpZiAoa2V5ICE9PSAnc3RhdHVzJyAmJiBrZXkgIT09ICdzdGF0dXNDb2RlJykge1xuICAgICAgZXJyW2tleV0gPSBwcm9wc1trZXldXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGVyclxufVxuXG4vKipcbiAqIENyZWF0ZSBIVFRQIGVycm9yIGFic3RyYWN0IGJhc2UgY2xhc3MuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZUh0dHBFcnJvckNvbnN0cnVjdG9yICgpIHtcbiAgZnVuY3Rpb24gSHR0cEVycm9yICgpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdjYW5ub3QgY29uc3RydWN0IGFic3RyYWN0IGNsYXNzJylcbiAgfVxuXG4gIGluaGVyaXRzKEh0dHBFcnJvciwgRXJyb3IpXG5cbiAgcmV0dXJuIEh0dHBFcnJvclxufVxuXG4vKipcbiAqIENyZWF0ZSBhIGNvbnN0cnVjdG9yIGZvciBhIGNsaWVudCBlcnJvci5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlQ2xpZW50RXJyb3JDb25zdHJ1Y3RvciAoSHR0cEVycm9yLCBuYW1lLCBjb2RlKSB7XG4gIHZhciBjbGFzc05hbWUgPSBuYW1lLm1hdGNoKC9FcnJvciQvKSA/IG5hbWUgOiBuYW1lICsgJ0Vycm9yJ1xuXG4gIGZ1bmN0aW9uIENsaWVudEVycm9yIChtZXNzYWdlKSB7XG4gICAgLy8gY3JlYXRlIHRoZSBlcnJvciBvYmplY3RcbiAgICB2YXIgbXNnID0gbWVzc2FnZSAhPSBudWxsID8gbWVzc2FnZSA6IHN0YXR1c2VzW2NvZGVdXG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihtc2cpXG5cbiAgICAvLyBjYXB0dXJlIGEgc3RhY2sgdHJhY2UgdG8gdGhlIGNvbnN0cnVjdGlvbiBwb2ludFxuICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKGVyciwgQ2xpZW50RXJyb3IpXG5cbiAgICAvLyBhZGp1c3QgdGhlIFtbUHJvdG90eXBlXV1cbiAgICBzZXRQcm90b3R5cGVPZihlcnIsIENsaWVudEVycm9yLnByb3RvdHlwZSlcblxuICAgIC8vIHJlZGVmaW5lIHRoZSBlcnJvciBtZXNzYWdlXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVyciwgJ21lc3NhZ2UnLCB7XG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IG1zZyxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSlcblxuICAgIC8vIHJlZGVmaW5lIHRoZSBlcnJvciBuYW1lXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVyciwgJ25hbWUnLCB7XG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiBjbGFzc05hbWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pXG5cbiAgICByZXR1cm4gZXJyXG4gIH1cblxuICBpbmhlcml0cyhDbGllbnRFcnJvciwgSHR0cEVycm9yKVxuXG4gIENsaWVudEVycm9yLnByb3RvdHlwZS5zdGF0dXMgPSBjb2RlXG4gIENsaWVudEVycm9yLnByb3RvdHlwZS5zdGF0dXNDb2RlID0gY29kZVxuICBDbGllbnRFcnJvci5wcm90b3R5cGUuZXhwb3NlID0gdHJ1ZVxuXG4gIHJldHVybiBDbGllbnRFcnJvclxufVxuXG4vKipcbiAqIENyZWF0ZSBhIGNvbnN0cnVjdG9yIGZvciBhIHNlcnZlciBlcnJvci5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlU2VydmVyRXJyb3JDb25zdHJ1Y3RvciAoSHR0cEVycm9yLCBuYW1lLCBjb2RlKSB7XG4gIHZhciBjbGFzc05hbWUgPSBuYW1lLm1hdGNoKC9FcnJvciQvKSA/IG5hbWUgOiBuYW1lICsgJ0Vycm9yJ1xuXG4gIGZ1bmN0aW9uIFNlcnZlckVycm9yIChtZXNzYWdlKSB7XG4gICAgLy8gY3JlYXRlIHRoZSBlcnJvciBvYmplY3RcbiAgICB2YXIgbXNnID0gbWVzc2FnZSAhPSBudWxsID8gbWVzc2FnZSA6IHN0YXR1c2VzW2NvZGVdXG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihtc2cpXG5cbiAgICAvLyBjYXB0dXJlIGEgc3RhY2sgdHJhY2UgdG8gdGhlIGNvbnN0cnVjdGlvbiBwb2ludFxuICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKGVyciwgU2VydmVyRXJyb3IpXG5cbiAgICAvLyBhZGp1c3QgdGhlIFtbUHJvdG90eXBlXV1cbiAgICBzZXRQcm90b3R5cGVPZihlcnIsIFNlcnZlckVycm9yLnByb3RvdHlwZSlcblxuICAgIC8vIHJlZGVmaW5lIHRoZSBlcnJvciBtZXNzYWdlXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVyciwgJ21lc3NhZ2UnLCB7XG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IG1zZyxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSlcblxuICAgIC8vIHJlZGVmaW5lIHRoZSBlcnJvciBuYW1lXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVyciwgJ25hbWUnLCB7XG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiBjbGFzc05hbWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pXG5cbiAgICByZXR1cm4gZXJyXG4gIH1cblxuICBpbmhlcml0cyhTZXJ2ZXJFcnJvciwgSHR0cEVycm9yKVxuXG4gIFNlcnZlckVycm9yLnByb3RvdHlwZS5zdGF0dXMgPSBjb2RlXG4gIFNlcnZlckVycm9yLnByb3RvdHlwZS5zdGF0dXNDb2RlID0gY29kZVxuICBTZXJ2ZXJFcnJvci5wcm90b3R5cGUuZXhwb3NlID0gZmFsc2VcblxuICByZXR1cm4gU2VydmVyRXJyb3Jcbn1cblxuLyoqXG4gKiBQb3B1bGF0ZSB0aGUgZXhwb3J0cyBvYmplY3Qgd2l0aCBjb25zdHJ1Y3RvcnMgZm9yIGV2ZXJ5IGVycm9yIGNsYXNzLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwb3B1bGF0ZUNvbnN0cnVjdG9yRXhwb3J0cyAoZXhwb3J0cywgY29kZXMsIEh0dHBFcnJvcikge1xuICBjb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIGZvckVhY2hDb2RlIChjb2RlKSB7XG4gICAgdmFyIENvZGVFcnJvclxuICAgIHZhciBuYW1lID0gdG9JZGVudGlmaWVyKHN0YXR1c2VzW2NvZGVdKVxuXG4gICAgc3dpdGNoIChjb2RlQ2xhc3MoY29kZSkpIHtcbiAgICAgIGNhc2UgNDAwOlxuICAgICAgICBDb2RlRXJyb3IgPSBjcmVhdGVDbGllbnRFcnJvckNvbnN0cnVjdG9yKEh0dHBFcnJvciwgbmFtZSwgY29kZSlcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgNTAwOlxuICAgICAgICBDb2RlRXJyb3IgPSBjcmVhdGVTZXJ2ZXJFcnJvckNvbnN0cnVjdG9yKEh0dHBFcnJvciwgbmFtZSwgY29kZSlcbiAgICAgICAgYnJlYWtcbiAgICB9XG5cbiAgICBpZiAoQ29kZUVycm9yKSB7XG4gICAgICAvLyBleHBvcnQgdGhlIGNvbnN0cnVjdG9yXG4gICAgICBleHBvcnRzW2NvZGVdID0gQ29kZUVycm9yXG4gICAgICBleHBvcnRzW25hbWVdID0gQ29kZUVycm9yXG4gICAgfVxuICB9KVxuXG4gIC8vIGJhY2t3YXJkcy1jb21wYXRpYmlsaXR5XG4gIGV4cG9ydHNbXCJJJ21hdGVhcG90XCJdID0gZGVwcmVjYXRlLmZ1bmN0aW9uKGV4cG9ydHMuSW1BVGVhcG90LFxuICAgICdcIklcXCdtYXRlYXBvdFwiOyB1c2UgXCJJbUFUZWFwb3RcIiBpbnN0ZWFkJylcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGEgc3RyaW5nIG9mIHdvcmRzIHRvIGEgSmF2YVNjcmlwdCBpZGVudGlmaWVyLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiB0b0lkZW50aWZpZXIgKHN0cikge1xuICByZXR1cm4gc3RyLnNwbGl0KCcgJykubWFwKGZ1bmN0aW9uICh0b2tlbikge1xuICAgIHJldHVybiB0b2tlbi5zbGljZSgwLCAxKS50b1VwcGVyQ2FzZSgpICsgdG9rZW4uc2xpY2UoMSlcbiAgfSkuam9pbignJykucmVwbGFjZSgvW14gXzAtOWEtel0vZ2ksICcnKVxufVxuIiwiLyogZXNsaW50LWRpc2FibGUgbm9kZS9uby1kZXByZWNhdGVkLWFwaSAqL1xuXG4ndXNlIHN0cmljdCdcblxudmFyIGJ1ZmZlciA9IHJlcXVpcmUoJ2J1ZmZlcicpXG52YXIgQnVmZmVyID0gYnVmZmVyLkJ1ZmZlclxuXG52YXIgc2FmZXIgPSB7fVxuXG52YXIga2V5XG5cbmZvciAoa2V5IGluIGJ1ZmZlcikge1xuICBpZiAoIWJ1ZmZlci5oYXNPd25Qcm9wZXJ0eShrZXkpKSBjb250aW51ZVxuICBpZiAoa2V5ID09PSAnU2xvd0J1ZmZlcicgfHwga2V5ID09PSAnQnVmZmVyJykgY29udGludWVcbiAgc2FmZXJba2V5XSA9IGJ1ZmZlcltrZXldXG59XG5cbnZhciBTYWZlciA9IHNhZmVyLkJ1ZmZlciA9IHt9XG5mb3IgKGtleSBpbiBCdWZmZXIpIHtcbiAgaWYgKCFCdWZmZXIuaGFzT3duUHJvcGVydHkoa2V5KSkgY29udGludWVcbiAgaWYgKGtleSA9PT0gJ2FsbG9jVW5zYWZlJyB8fCBrZXkgPT09ICdhbGxvY1Vuc2FmZVNsb3cnKSBjb250aW51ZVxuICBTYWZlcltrZXldID0gQnVmZmVyW2tleV1cbn1cblxuc2FmZXIuQnVmZmVyLnByb3RvdHlwZSA9IEJ1ZmZlci5wcm90b3R5cGVcblxuaWYgKCFTYWZlci5mcm9tIHx8IFNhZmVyLmZyb20gPT09IFVpbnQ4QXJyYXkuZnJvbSkge1xuICBTYWZlci5mcm9tID0gZnVuY3Rpb24gKHZhbHVlLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwidmFsdWVcIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBvZiB0eXBlIG51bWJlci4gUmVjZWl2ZWQgdHlwZSAnICsgdHlwZW9mIHZhbHVlKVxuICAgIH1cbiAgICBpZiAodmFsdWUgJiYgdHlwZW9mIHZhbHVlLmxlbmd0aCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBmaXJzdCBhcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB0eXBlIHN0cmluZywgQnVmZmVyLCBBcnJheUJ1ZmZlciwgQXJyYXksIG9yIEFycmF5LWxpa2UgT2JqZWN0LiBSZWNlaXZlZCB0eXBlICcgKyB0eXBlb2YgdmFsdWUpXG4gICAgfVxuICAgIHJldHVybiBCdWZmZXIodmFsdWUsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbiAgfVxufVxuXG5pZiAoIVNhZmVyLmFsbG9jKSB7XG4gIFNhZmVyLmFsbG9jID0gZnVuY3Rpb24gKHNpemUsIGZpbGwsIGVuY29kaW5nKSB7XG4gICAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwic2l6ZVwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBudW1iZXIuIFJlY2VpdmVkIHR5cGUgJyArIHR5cGVvZiBzaXplKVxuICAgIH1cbiAgICBpZiAoc2l6ZSA8IDAgfHwgc2l6ZSA+PSAyICogKDEgPDwgMzApKSB7XG4gICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignVGhlIHZhbHVlIFwiJyArIHNpemUgKyAnXCIgaXMgaW52YWxpZCBmb3Igb3B0aW9uIFwic2l6ZVwiJylcbiAgICB9XG4gICAgdmFyIGJ1ZiA9IEJ1ZmZlcihzaXplKVxuICAgIGlmICghZmlsbCB8fCBmaWxsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgYnVmLmZpbGwoMClcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGJ1Zi5maWxsKGZpbGwsIGVuY29kaW5nKVxuICAgIH0gZWxzZSB7XG4gICAgICBidWYuZmlsbChmaWxsKVxuICAgIH1cbiAgICByZXR1cm4gYnVmXG4gIH1cbn1cblxuaWYgKCFzYWZlci5rU3RyaW5nTWF4TGVuZ3RoKSB7XG4gIHRyeSB7XG4gICAgc2FmZXIua1N0cmluZ01heExlbmd0aCA9IHByb2Nlc3MuYmluZGluZygnYnVmZmVyJykua1N0cmluZ01heExlbmd0aFxuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gd2UgY2FuJ3QgZGV0ZXJtaW5lIGtTdHJpbmdNYXhMZW5ndGggaW4gZW52aXJvbm1lbnRzIHdoZXJlIHByb2Nlc3MuYmluZGluZ1xuICAgIC8vIGlzIHVuc3VwcG9ydGVkLCBzbyBsZXQncyBub3Qgc2V0IGl0XG4gIH1cbn1cblxuaWYgKCFzYWZlci5jb25zdGFudHMpIHtcbiAgc2FmZXIuY29uc3RhbnRzID0ge1xuICAgIE1BWF9MRU5HVEg6IHNhZmVyLmtNYXhMZW5ndGhcbiAgfVxuICBpZiAoc2FmZXIua1N0cmluZ01heExlbmd0aCkge1xuICAgIHNhZmVyLmNvbnN0YW50cy5NQVhfU1RSSU5HX0xFTkdUSCA9IHNhZmVyLmtTdHJpbmdNYXhMZW5ndGhcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNhZmVyXG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJidWZmZXJcIik7IiwiLyohXG4gKiBieXRlc1xuICogQ29weXJpZ2h0KGMpIDIwMTItMjAxNCBUSiBIb2xvd2F5Y2h1a1xuICogQ29weXJpZ2h0KGMpIDIwMTUgSmVkIFdhdHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gYnl0ZXM7XG5tb2R1bGUuZXhwb3J0cy5mb3JtYXQgPSBmb3JtYXQ7XG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuXG4vKipcbiAqIE1vZHVsZSB2YXJpYWJsZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBmb3JtYXRUaG91c2FuZHNSZWdFeHAgPSAvXFxCKD89KFxcZHszfSkrKD8hXFxkKSkvZztcblxudmFyIGZvcm1hdERlY2ltYWxzUmVnRXhwID0gLyg/OlxcLjAqfChcXC5bXjBdKykwKykkLztcblxudmFyIG1hcCA9IHtcbiAgYjogIDEsXG4gIGtiOiAxIDw8IDEwLFxuICBtYjogMSA8PCAyMCxcbiAgZ2I6IDEgPDwgMzAsXG4gIHRiOiAoKDEgPDwgMzApICogMTAyNClcbn07XG5cbnZhciBwYXJzZVJlZ0V4cCA9IC9eKCgtfFxcKyk/KFxcZCsoPzpcXC5cXGQrKT8pKSAqKGtifG1ifGdifHRiKSQvaTtcblxuLyoqXG4gKiBDb252ZXJ0IHRoZSBnaXZlbiB2YWx1ZSBpbiBieXRlcyBpbnRvIGEgc3RyaW5nIG9yIHBhcnNlIHRvIHN0cmluZyB0byBhbiBpbnRlZ2VyIGluIGJ5dGVzLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gdmFsdWVcbiAqIEBwYXJhbSB7e1xuICogIGNhc2U6IFtzdHJpbmddLFxuICogIGRlY2ltYWxQbGFjZXM6IFtudW1iZXJdXG4gKiAgZml4ZWREZWNpbWFsczogW2Jvb2xlYW5dXG4gKiAgdGhvdXNhbmRzU2VwYXJhdG9yOiBbc3RyaW5nXVxuICogIHVuaXRTZXBhcmF0b3I6IFtzdHJpbmddXG4gKiAgfX0gW29wdGlvbnNdIGJ5dGVzIG9wdGlvbnMuXG4gKlxuICogQHJldHVybnMge3N0cmluZ3xudW1iZXJ8bnVsbH1cbiAqL1xuXG5mdW5jdGlvbiBieXRlcyh2YWx1ZSwgb3B0aW9ucykge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBwYXJzZSh2YWx1ZSk7XG4gIH1cblxuICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBmb3JtYXQodmFsdWUsIG9wdGlvbnMpO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG5cbi8qKlxuICogRm9ybWF0IHRoZSBnaXZlbiB2YWx1ZSBpbiBieXRlcyBpbnRvIGEgc3RyaW5nLlxuICpcbiAqIElmIHRoZSB2YWx1ZSBpcyBuZWdhdGl2ZSwgaXQgaXMga2VwdCBhcyBzdWNoLiBJZiBpdCBpcyBhIGZsb2F0LFxuICogaXQgaXMgcm91bmRlZC5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5kZWNpbWFsUGxhY2VzPTJdXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuZml4ZWREZWNpbWFscz1mYWxzZV1cbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy50aG91c2FuZHNTZXBhcmF0b3I9XVxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLnVuaXQ9XVxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLnVuaXRTZXBhcmF0b3I9XVxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd8bnVsbH1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBmb3JtYXQodmFsdWUsIG9wdGlvbnMpIHtcbiAgaWYgKCFOdW1iZXIuaXNGaW5pdGUodmFsdWUpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB2YXIgbWFnID0gTWF0aC5hYnModmFsdWUpO1xuICB2YXIgdGhvdXNhbmRzU2VwYXJhdG9yID0gKG9wdGlvbnMgJiYgb3B0aW9ucy50aG91c2FuZHNTZXBhcmF0b3IpIHx8ICcnO1xuICB2YXIgdW5pdFNlcGFyYXRvciA9IChvcHRpb25zICYmIG9wdGlvbnMudW5pdFNlcGFyYXRvcikgfHwgJyc7XG4gIHZhciBkZWNpbWFsUGxhY2VzID0gKG9wdGlvbnMgJiYgb3B0aW9ucy5kZWNpbWFsUGxhY2VzICE9PSB1bmRlZmluZWQpID8gb3B0aW9ucy5kZWNpbWFsUGxhY2VzIDogMjtcbiAgdmFyIGZpeGVkRGVjaW1hbHMgPSBCb29sZWFuKG9wdGlvbnMgJiYgb3B0aW9ucy5maXhlZERlY2ltYWxzKTtcbiAgdmFyIHVuaXQgPSAob3B0aW9ucyAmJiBvcHRpb25zLnVuaXQpIHx8ICcnO1xuXG4gIGlmICghdW5pdCB8fCAhbWFwW3VuaXQudG9Mb3dlckNhc2UoKV0pIHtcbiAgICBpZiAobWFnID49IG1hcC50Yikge1xuICAgICAgdW5pdCA9ICdUQic7XG4gICAgfSBlbHNlIGlmIChtYWcgPj0gbWFwLmdiKSB7XG4gICAgICB1bml0ID0gJ0dCJztcbiAgICB9IGVsc2UgaWYgKG1hZyA+PSBtYXAubWIpIHtcbiAgICAgIHVuaXQgPSAnTUInO1xuICAgIH0gZWxzZSBpZiAobWFnID49IG1hcC5rYikge1xuICAgICAgdW5pdCA9ICdLQic7XG4gICAgfSBlbHNlIHtcbiAgICAgIHVuaXQgPSAnQic7XG4gICAgfVxuICB9XG5cbiAgdmFyIHZhbCA9IHZhbHVlIC8gbWFwW3VuaXQudG9Mb3dlckNhc2UoKV07XG4gIHZhciBzdHIgPSB2YWwudG9GaXhlZChkZWNpbWFsUGxhY2VzKTtcblxuICBpZiAoIWZpeGVkRGVjaW1hbHMpIHtcbiAgICBzdHIgPSBzdHIucmVwbGFjZShmb3JtYXREZWNpbWFsc1JlZ0V4cCwgJyQxJyk7XG4gIH1cblxuICBpZiAodGhvdXNhbmRzU2VwYXJhdG9yKSB7XG4gICAgc3RyID0gc3RyLnJlcGxhY2UoZm9ybWF0VGhvdXNhbmRzUmVnRXhwLCB0aG91c2FuZHNTZXBhcmF0b3IpO1xuICB9XG5cbiAgcmV0dXJuIHN0ciArIHVuaXRTZXBhcmF0b3IgKyB1bml0O1xufVxuXG4vKipcbiAqIFBhcnNlIHRoZSBzdHJpbmcgdmFsdWUgaW50byBhbiBpbnRlZ2VyIGluIGJ5dGVzLlxuICpcbiAqIElmIG5vIHVuaXQgaXMgZ2l2ZW4sIGl0IGlzIGFzc3VtZWQgdGhlIHZhbHVlIGlzIGluIGJ5dGVzLlxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfHN0cmluZ30gdmFsXG4gKlxuICogQHJldHVybnMge251bWJlcnxudWxsfVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHZhbCkge1xuICBpZiAodHlwZW9mIHZhbCA9PT0gJ251bWJlcicgJiYgIWlzTmFOKHZhbCkpIHtcbiAgICByZXR1cm4gdmFsO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWwgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvLyBUZXN0IGlmIHRoZSBzdHJpbmcgcGFzc2VkIGlzIHZhbGlkXG4gIHZhciByZXN1bHRzID0gcGFyc2VSZWdFeHAuZXhlYyh2YWwpO1xuICB2YXIgZmxvYXRWYWx1ZTtcbiAgdmFyIHVuaXQgPSAnYic7XG5cbiAgaWYgKCFyZXN1bHRzKSB7XG4gICAgLy8gTm90aGluZyBjb3VsZCBiZSBleHRyYWN0ZWQgZnJvbSB0aGUgZ2l2ZW4gc3RyaW5nXG4gICAgZmxvYXRWYWx1ZSA9IHBhcnNlSW50KHZhbCwgMTApO1xuICAgIHVuaXQgPSAnYidcbiAgfSBlbHNlIHtcbiAgICAvLyBSZXRyaWV2ZSB0aGUgdmFsdWUgYW5kIHRoZSB1bml0XG4gICAgZmxvYXRWYWx1ZSA9IHBhcnNlRmxvYXQocmVzdWx0c1sxXSk7XG4gICAgdW5pdCA9IHJlc3VsdHNbNF0udG9Mb3dlckNhc2UoKTtcbiAgfVxuXG4gIHJldHVybiBNYXRoLmZsb29yKG1hcFt1bml0XSAqIGZsb2F0VmFsdWUpO1xufVxuIiwiLyohXG4gKiBvbi1maW5pc2hlZFxuICogQ29weXJpZ2h0KGMpIDIwMTMgSm9uYXRoYW4gT25nXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBvbkZpbmlzaGVkXG5tb2R1bGUuZXhwb3J0cy5pc0ZpbmlzaGVkID0gaXNGaW5pc2hlZFxuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBmaXJzdCA9IHJlcXVpcmUoJ2VlLWZpcnN0JylcblxuLyoqXG4gKiBWYXJpYWJsZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG52YXIgZGVmZXIgPSB0eXBlb2Ygc2V0SW1tZWRpYXRlID09PSAnZnVuY3Rpb24nXG4gID8gc2V0SW1tZWRpYXRlXG4gIDogZnVuY3Rpb24oZm4peyBwcm9jZXNzLm5leHRUaWNrKGZuLmJpbmQuYXBwbHkoZm4sIGFyZ3VtZW50cykpIH1cblxuLyoqXG4gKiBJbnZva2UgY2FsbGJhY2sgd2hlbiB0aGUgcmVzcG9uc2UgaGFzIGZpbmlzaGVkLCB1c2VmdWwgZm9yXG4gKiBjbGVhbmluZyB1cCByZXNvdXJjZXMgYWZ0ZXJ3YXJkcy5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gbXNnXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBsaXN0ZW5lclxuICogQHJldHVybiB7b2JqZWN0fVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIG9uRmluaXNoZWQobXNnLCBsaXN0ZW5lcikge1xuICBpZiAoaXNGaW5pc2hlZChtc2cpICE9PSBmYWxzZSkge1xuICAgIGRlZmVyKGxpc3RlbmVyLCBudWxsLCBtc2cpXG4gICAgcmV0dXJuIG1zZ1xuICB9XG5cbiAgLy8gYXR0YWNoIHRoZSBsaXN0ZW5lciB0byB0aGUgbWVzc2FnZVxuICBhdHRhY2hMaXN0ZW5lcihtc2csIGxpc3RlbmVyKVxuXG4gIHJldHVybiBtc2dcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgbWVzc2FnZSBpcyBhbHJlYWR5IGZpbmlzaGVkLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBtc2dcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gaXNGaW5pc2hlZChtc2cpIHtcbiAgdmFyIHNvY2tldCA9IG1zZy5zb2NrZXRcblxuICBpZiAodHlwZW9mIG1zZy5maW5pc2hlZCA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgLy8gT3V0Z29pbmdNZXNzYWdlXG4gICAgcmV0dXJuIEJvb2xlYW4obXNnLmZpbmlzaGVkIHx8IChzb2NrZXQgJiYgIXNvY2tldC53cml0YWJsZSkpXG4gIH1cblxuICBpZiAodHlwZW9mIG1zZy5jb21wbGV0ZSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgLy8gSW5jb21pbmdNZXNzYWdlXG4gICAgcmV0dXJuIEJvb2xlYW4obXNnLnVwZ3JhZGUgfHwgIXNvY2tldCB8fCAhc29ja2V0LnJlYWRhYmxlIHx8IChtc2cuY29tcGxldGUgJiYgIW1zZy5yZWFkYWJsZSkpXG4gIH1cblxuICAvLyBkb24ndCBrbm93XG4gIHJldHVybiB1bmRlZmluZWRcbn1cblxuLyoqXG4gKiBBdHRhY2ggYSBmaW5pc2hlZCBsaXN0ZW5lciB0byB0aGUgbWVzc2FnZS5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gbXNnXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBhdHRhY2hGaW5pc2hlZExpc3RlbmVyKG1zZywgY2FsbGJhY2spIHtcbiAgdmFyIGVlTXNnXG4gIHZhciBlZVNvY2tldFxuICB2YXIgZmluaXNoZWQgPSBmYWxzZVxuXG4gIGZ1bmN0aW9uIG9uRmluaXNoKGVycm9yKSB7XG4gICAgZWVNc2cuY2FuY2VsKClcbiAgICBlZVNvY2tldC5jYW5jZWwoKVxuXG4gICAgZmluaXNoZWQgPSB0cnVlXG4gICAgY2FsbGJhY2soZXJyb3IpXG4gIH1cblxuICAvLyBmaW5pc2hlZCBvbiBmaXJzdCBtZXNzYWdlIGV2ZW50XG4gIGVlTXNnID0gZWVTb2NrZXQgPSBmaXJzdChbW21zZywgJ2VuZCcsICdmaW5pc2gnXV0sIG9uRmluaXNoKVxuXG4gIGZ1bmN0aW9uIG9uU29ja2V0KHNvY2tldCkge1xuICAgIC8vIHJlbW92ZSBsaXN0ZW5lclxuICAgIG1zZy5yZW1vdmVMaXN0ZW5lcignc29ja2V0Jywgb25Tb2NrZXQpXG5cbiAgICBpZiAoZmluaXNoZWQpIHJldHVyblxuICAgIGlmIChlZU1zZyAhPT0gZWVTb2NrZXQpIHJldHVyblxuXG4gICAgLy8gZmluaXNoZWQgb24gZmlyc3Qgc29ja2V0IGV2ZW50XG4gICAgZWVTb2NrZXQgPSBmaXJzdChbW3NvY2tldCwgJ2Vycm9yJywgJ2Nsb3NlJ11dLCBvbkZpbmlzaClcbiAgfVxuXG4gIGlmIChtc2cuc29ja2V0KSB7XG4gICAgLy8gc29ja2V0IGFscmVhZHkgYXNzaWduZWRcbiAgICBvblNvY2tldChtc2cuc29ja2V0KVxuICAgIHJldHVyblxuICB9XG5cbiAgLy8gd2FpdCBmb3Igc29ja2V0IHRvIGJlIGFzc2lnbmVkXG4gIG1zZy5vbignc29ja2V0Jywgb25Tb2NrZXQpXG5cbiAgaWYgKG1zZy5zb2NrZXQgPT09IHVuZGVmaW5lZCkge1xuICAgIC8vIG5vZGUuanMgMC44IHBhdGNoXG4gICAgcGF0Y2hBc3NpZ25Tb2NrZXQobXNnLCBvblNvY2tldClcbiAgfVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUgbGlzdGVuZXIgdG8gdGhlIG1lc3NhZ2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IG1zZ1xuICogQHJldHVybiB7ZnVuY3Rpb259XG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGF0dGFjaExpc3RlbmVyKG1zZywgbGlzdGVuZXIpIHtcbiAgdmFyIGF0dGFjaGVkID0gbXNnLl9fb25GaW5pc2hlZFxuXG4gIC8vIGNyZWF0ZSBhIHByaXZhdGUgc2luZ2xlIGxpc3RlbmVyIHdpdGggcXVldWVcbiAgaWYgKCFhdHRhY2hlZCB8fCAhYXR0YWNoZWQucXVldWUpIHtcbiAgICBhdHRhY2hlZCA9IG1zZy5fX29uRmluaXNoZWQgPSBjcmVhdGVMaXN0ZW5lcihtc2cpXG4gICAgYXR0YWNoRmluaXNoZWRMaXN0ZW5lcihtc2csIGF0dGFjaGVkKVxuICB9XG5cbiAgYXR0YWNoZWQucXVldWUucHVzaChsaXN0ZW5lcilcbn1cblxuLyoqXG4gKiBDcmVhdGUgbGlzdGVuZXIgb24gbWVzc2FnZS5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gbXNnXG4gKiBAcmV0dXJuIHtmdW5jdGlvbn1cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlTGlzdGVuZXIobXNnKSB7XG4gIGZ1bmN0aW9uIGxpc3RlbmVyKGVycikge1xuICAgIGlmIChtc2cuX19vbkZpbmlzaGVkID09PSBsaXN0ZW5lcikgbXNnLl9fb25GaW5pc2hlZCA9IG51bGxcbiAgICBpZiAoIWxpc3RlbmVyLnF1ZXVlKSByZXR1cm5cblxuICAgIHZhciBxdWV1ZSA9IGxpc3RlbmVyLnF1ZXVlXG4gICAgbGlzdGVuZXIucXVldWUgPSBudWxsXG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHF1ZXVlLmxlbmd0aDsgaSsrKSB7XG4gICAgICBxdWV1ZVtpXShlcnIsIG1zZylcbiAgICB9XG4gIH1cblxuICBsaXN0ZW5lci5xdWV1ZSA9IFtdXG5cbiAgcmV0dXJuIGxpc3RlbmVyXG59XG5cbi8qKlxuICogUGF0Y2ggU2VydmVyUmVzcG9uc2UucHJvdG90eXBlLmFzc2lnblNvY2tldCBmb3Igbm9kZS5qcyAwLjguXG4gKlxuICogQHBhcmFtIHtTZXJ2ZXJSZXNwb25zZX0gcmVzXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXRjaEFzc2lnblNvY2tldChyZXMsIGNhbGxiYWNrKSB7XG4gIHZhciBhc3NpZ25Tb2NrZXQgPSByZXMuYXNzaWduU29ja2V0XG5cbiAgaWYgKHR5cGVvZiBhc3NpZ25Tb2NrZXQgIT09ICdmdW5jdGlvbicpIHJldHVyblxuXG4gIC8vIHJlcy5vbignc29ja2V0JywgY2FsbGJhY2spIGlzIGJyb2tlbiBpbiAwLjhcbiAgcmVzLmFzc2lnblNvY2tldCA9IGZ1bmN0aW9uIF9hc3NpZ25Tb2NrZXQoc29ja2V0KSB7XG4gICAgYXNzaWduU29ja2V0LmNhbGwodGhpcywgc29ja2V0KVxuICAgIGNhbGxiYWNrKHNvY2tldClcbiAgfVxufVxuIiwiLyohXG4gKiB0eXBlLWlzXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciB0eXBlciA9IHJlcXVpcmUoJ21lZGlhLXR5cGVyJylcbnZhciBtaW1lID0gcmVxdWlyZSgnbWltZS10eXBlcycpXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSB0eXBlb2ZyZXF1ZXN0XG5tb2R1bGUuZXhwb3J0cy5pcyA9IHR5cGVpc1xubW9kdWxlLmV4cG9ydHMuaGFzQm9keSA9IGhhc2JvZHlcbm1vZHVsZS5leHBvcnRzLm5vcm1hbGl6ZSA9IG5vcm1hbGl6ZVxubW9kdWxlLmV4cG9ydHMubWF0Y2ggPSBtaW1lTWF0Y2hcblxuLyoqXG4gKiBDb21wYXJlIGEgYHZhbHVlYCBjb250ZW50LXR5cGUgd2l0aCBgdHlwZXNgLlxuICogRWFjaCBgdHlwZWAgY2FuIGJlIGFuIGV4dGVuc2lvbiBsaWtlIGBodG1sYCxcbiAqIGEgc3BlY2lhbCBzaG9ydGN1dCBsaWtlIGBtdWx0aXBhcnRgIG9yIGB1cmxlbmNvZGVkYCxcbiAqIG9yIGEgbWltZSB0eXBlLlxuICpcbiAqIElmIG5vIHR5cGVzIG1hdGNoLCBgZmFsc2VgIGlzIHJldHVybmVkLlxuICogT3RoZXJ3aXNlLCB0aGUgZmlyc3QgYHR5cGVgIHRoYXQgbWF0Y2hlcyBpcyByZXR1cm5lZC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSB7QXJyYXl9IHR5cGVzXG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gdHlwZWlzICh2YWx1ZSwgdHlwZXNfKSB7XG4gIHZhciBpXG4gIHZhciB0eXBlcyA9IHR5cGVzX1xuXG4gIC8vIHJlbW92ZSBwYXJhbWV0ZXJzIGFuZCBub3JtYWxpemVcbiAgdmFyIHZhbCA9IHRyeU5vcm1hbGl6ZVR5cGUodmFsdWUpXG5cbiAgLy8gbm8gdHlwZSBvciBpbnZhbGlkXG4gIGlmICghdmFsKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvLyBzdXBwb3J0IGZsYXR0ZW5lZCBhcmd1bWVudHNcbiAgaWYgKHR5cGVzICYmICFBcnJheS5pc0FycmF5KHR5cGVzKSkge1xuICAgIHR5cGVzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKVxuICAgIGZvciAoaSA9IDA7IGkgPCB0eXBlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdHlwZXNbaV0gPSBhcmd1bWVudHNbaSArIDFdXG4gICAgfVxuICB9XG5cbiAgLy8gbm8gdHlwZXMsIHJldHVybiB0aGUgY29udGVudCB0eXBlXG4gIGlmICghdHlwZXMgfHwgIXR5cGVzLmxlbmd0aCkge1xuICAgIHJldHVybiB2YWxcbiAgfVxuXG4gIHZhciB0eXBlXG4gIGZvciAoaSA9IDA7IGkgPCB0eXBlcy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChtaW1lTWF0Y2gobm9ybWFsaXplKHR5cGUgPSB0eXBlc1tpXSksIHZhbCkpIHtcbiAgICAgIHJldHVybiB0eXBlWzBdID09PSAnKycgfHwgdHlwZS5pbmRleE9mKCcqJykgIT09IC0xXG4gICAgICAgID8gdmFsXG4gICAgICAgIDogdHlwZVxuICAgIH1cbiAgfVxuXG4gIC8vIG5vIG1hdGNoZXNcbiAgcmV0dXJuIGZhbHNlXG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYSByZXF1ZXN0IGhhcyBhIHJlcXVlc3QgYm9keS5cbiAqIEEgcmVxdWVzdCB3aXRoIGEgYm9keSBfX211c3RfXyBlaXRoZXIgaGF2ZSBgdHJhbnNmZXItZW5jb2RpbmdgXG4gKiBvciBgY29udGVudC1sZW5ndGhgIGhlYWRlcnMgc2V0LlxuICogaHR0cDovL3d3dy53My5vcmcvUHJvdG9jb2xzL3JmYzI2MTYvcmZjMjYxNi1zZWM0Lmh0bWwjc2VjNC4zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHJlcXVlc3RcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gaGFzYm9keSAocmVxKSB7XG4gIHJldHVybiByZXEuaGVhZGVyc1sndHJhbnNmZXItZW5jb2RpbmcnXSAhPT0gdW5kZWZpbmVkIHx8XG4gICAgIWlzTmFOKHJlcS5oZWFkZXJzWydjb250ZW50LWxlbmd0aCddKVxufVxuXG4vKipcbiAqIENoZWNrIGlmIHRoZSBpbmNvbWluZyByZXF1ZXN0IGNvbnRhaW5zIHRoZSBcIkNvbnRlbnQtVHlwZVwiXG4gKiBoZWFkZXIgZmllbGQsIGFuZCBpdCBjb250YWlucyBhbnkgb2YgdGhlIGdpdmUgbWltZSBgdHlwZWBzLlxuICogSWYgdGhlcmUgaXMgbm8gcmVxdWVzdCBib2R5LCBgbnVsbGAgaXMgcmV0dXJuZWQuXG4gKiBJZiB0aGVyZSBpcyBubyBjb250ZW50IHR5cGUsIGBmYWxzZWAgaXMgcmV0dXJuZWQuXG4gKiBPdGhlcndpc2UsIGl0IHJldHVybnMgdGhlIGZpcnN0IGB0eXBlYCB0aGF0IG1hdGNoZXMuXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgIC8vIFdpdGggQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLThcbiAqICAgICB0aGlzLmlzKCdodG1sJyk7IC8vID0+ICdodG1sJ1xuICogICAgIHRoaXMuaXMoJ3RleHQvaHRtbCcpOyAvLyA9PiAndGV4dC9odG1sJ1xuICogICAgIHRoaXMuaXMoJ3RleHQvKicsICdhcHBsaWNhdGlvbi9qc29uJyk7IC8vID0+ICd0ZXh0L2h0bWwnXG4gKlxuICogICAgIC8vIFdoZW4gQ29udGVudC1UeXBlIGlzIGFwcGxpY2F0aW9uL2pzb25cbiAqICAgICB0aGlzLmlzKCdqc29uJywgJ3VybGVuY29kZWQnKTsgLy8gPT4gJ2pzb24nXG4gKiAgICAgdGhpcy5pcygnYXBwbGljYXRpb24vanNvbicpOyAvLyA9PiAnYXBwbGljYXRpb24vanNvbidcbiAqICAgICB0aGlzLmlzKCdodG1sJywgJ2FwcGxpY2F0aW9uLyonKTsgLy8gPT4gJ2FwcGxpY2F0aW9uL2pzb24nXG4gKlxuICogICAgIHRoaXMuaXMoJ2h0bWwnKTsgLy8gPT4gZmFsc2VcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xBcnJheX0gdHlwZXMuLi5cbiAqIEByZXR1cm4ge1N0cmluZ3xmYWxzZXxudWxsfVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHR5cGVvZnJlcXVlc3QgKHJlcSwgdHlwZXNfKSB7XG4gIHZhciB0eXBlcyA9IHR5cGVzX1xuXG4gIC8vIG5vIGJvZHlcbiAgaWYgKCFoYXNib2R5KHJlcSkpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG5cbiAgLy8gc3VwcG9ydCBmbGF0dGVuZWQgYXJndW1lbnRzXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMikge1xuICAgIHR5cGVzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdHlwZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHR5cGVzW2ldID0gYXJndW1lbnRzW2kgKyAxXVxuICAgIH1cbiAgfVxuXG4gIC8vIHJlcXVlc3QgY29udGVudCB0eXBlXG4gIHZhciB2YWx1ZSA9IHJlcS5oZWFkZXJzWydjb250ZW50LXR5cGUnXVxuXG4gIHJldHVybiB0eXBlaXModmFsdWUsIHR5cGVzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSBhIG1pbWUgdHlwZS5cbiAqIElmIGl0J3MgYSBzaG9ydGhhbmQsIGV4cGFuZCBpdCB0byBhIHZhbGlkIG1pbWUgdHlwZS5cbiAqXG4gKiBJbiBnZW5lcmFsLCB5b3UgcHJvYmFibHkgd2FudDpcbiAqXG4gKiAgIHZhciB0eXBlID0gaXMocmVxLCBbJ3VybGVuY29kZWQnLCAnanNvbicsICdtdWx0aXBhcnQnXSk7XG4gKlxuICogVGhlbiB1c2UgdGhlIGFwcHJvcHJpYXRlIGJvZHkgcGFyc2Vycy5cbiAqIFRoZXNlIHRocmVlIGFyZSB0aGUgbW9zdCBjb21tb24gcmVxdWVzdCBib2R5IHR5cGVzXG4gKiBhbmQgYXJlIHRodXMgZW5zdXJlZCB0byB3b3JrLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZSAodHlwZSkge1xuICBpZiAodHlwZW9mIHR5cGUgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gaW52YWxpZCB0eXBlXG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICd1cmxlbmNvZGVkJzpcbiAgICAgIHJldHVybiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ1xuICAgIGNhc2UgJ211bHRpcGFydCc6XG4gICAgICByZXR1cm4gJ211bHRpcGFydC8qJ1xuICB9XG5cbiAgaWYgKHR5cGVbMF0gPT09ICcrJykge1xuICAgIC8vIFwiK2pzb25cIiAtPiBcIiovKitqc29uXCIgZXhwYW5kb1xuICAgIHJldHVybiAnKi8qJyArIHR5cGVcbiAgfVxuXG4gIHJldHVybiB0eXBlLmluZGV4T2YoJy8nKSA9PT0gLTFcbiAgICA/IG1pbWUubG9va3VwKHR5cGUpXG4gICAgOiB0eXBlXG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYGV4cGVjdGVkYCBtaW1lIHR5cGVcbiAqIG1hdGNoZXMgYGFjdHVhbGAgbWltZSB0eXBlIHdpdGhcbiAqIHdpbGRjYXJkIGFuZCArc3VmZml4IHN1cHBvcnQuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGV4cGVjdGVkXG4gKiBAcGFyYW0ge1N0cmluZ30gYWN0dWFsXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBtaW1lTWF0Y2ggKGV4cGVjdGVkLCBhY3R1YWwpIHtcbiAgLy8gaW52YWxpZCB0eXBlXG4gIGlmIChleHBlY3RlZCA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIC8vIHNwbGl0IHR5cGVzXG4gIHZhciBhY3R1YWxQYXJ0cyA9IGFjdHVhbC5zcGxpdCgnLycpXG4gIHZhciBleHBlY3RlZFBhcnRzID0gZXhwZWN0ZWQuc3BsaXQoJy8nKVxuXG4gIC8vIGludmFsaWQgZm9ybWF0XG4gIGlmIChhY3R1YWxQYXJ0cy5sZW5ndGggIT09IDIgfHwgZXhwZWN0ZWRQYXJ0cy5sZW5ndGggIT09IDIpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIC8vIHZhbGlkYXRlIHR5cGVcbiAgaWYgKGV4cGVjdGVkUGFydHNbMF0gIT09ICcqJyAmJiBleHBlY3RlZFBhcnRzWzBdICE9PSBhY3R1YWxQYXJ0c1swXSkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgLy8gdmFsaWRhdGUgc3VmZml4IHdpbGRjYXJkXG4gIGlmIChleHBlY3RlZFBhcnRzWzFdLnN1YnN0cigwLCAyKSA9PT0gJyorJykge1xuICAgIHJldHVybiBleHBlY3RlZFBhcnRzWzFdLmxlbmd0aCA8PSBhY3R1YWxQYXJ0c1sxXS5sZW5ndGggKyAxICYmXG4gICAgICBleHBlY3RlZFBhcnRzWzFdLnN1YnN0cigxKSA9PT0gYWN0dWFsUGFydHNbMV0uc3Vic3RyKDEgLSBleHBlY3RlZFBhcnRzWzFdLmxlbmd0aClcbiAgfVxuXG4gIC8vIHZhbGlkYXRlIHN1YnR5cGVcbiAgaWYgKGV4cGVjdGVkUGFydHNbMV0gIT09ICcqJyAmJiBleHBlY3RlZFBhcnRzWzFdICE9PSBhY3R1YWxQYXJ0c1sxXSkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgcmV0dXJuIHRydWVcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgYSB0eXBlIGFuZCByZW1vdmUgcGFyYW1ldGVycy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbm9ybWFsaXplVHlwZSAodmFsdWUpIHtcbiAgLy8gcGFyc2UgdGhlIHR5cGVcbiAgdmFyIHR5cGUgPSB0eXBlci5wYXJzZSh2YWx1ZSlcblxuICAvLyByZW1vdmUgdGhlIHBhcmFtZXRlcnNcbiAgdHlwZS5wYXJhbWV0ZXJzID0gdW5kZWZpbmVkXG5cbiAgLy8gcmVmb3JtYXQgaXRcbiAgcmV0dXJuIHR5cGVyLmZvcm1hdCh0eXBlKVxufVxuXG4vKipcbiAqIFRyeSB0byBub3JtYWxpemUgYSB0eXBlIGFuZCByZW1vdmUgcGFyYW1ldGVycy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gdHJ5Tm9ybWFsaXplVHlwZSAodmFsdWUpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gbm9ybWFsaXplVHlwZSh2YWx1ZSlcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxufVxuIiwiLyohXG4gKiBwYXJzZXVybFxuICogQ29weXJpZ2h0KGMpIDIwMTQgSm9uYXRoYW4gT25nXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE3IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgdXJsID0gcmVxdWlyZSgndXJsJylcbnZhciBwYXJzZSA9IHVybC5wYXJzZVxudmFyIFVybCA9IHVybC5VcmxcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBhcnNldXJsXG5tb2R1bGUuZXhwb3J0cy5vcmlnaW5hbCA9IG9yaWdpbmFsdXJsXG5cbi8qKlxuICogUGFyc2UgdGhlIGByZXFgIHVybCB3aXRoIG1lbW9pemF0aW9uLlxuICpcbiAqIEBwYXJhbSB7U2VydmVyUmVxdWVzdH0gcmVxXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gcGFyc2V1cmwgKHJlcSkge1xuICB2YXIgdXJsID0gcmVxLnVybFxuXG4gIGlmICh1cmwgPT09IHVuZGVmaW5lZCkge1xuICAgIC8vIFVSTCBpcyB1bmRlZmluZWRcbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cblxuICB2YXIgcGFyc2VkID0gcmVxLl9wYXJzZWRVcmxcblxuICBpZiAoZnJlc2godXJsLCBwYXJzZWQpKSB7XG4gICAgLy8gUmV0dXJuIGNhY2hlZCBVUkwgcGFyc2VcbiAgICByZXR1cm4gcGFyc2VkXG4gIH1cblxuICAvLyBQYXJzZSB0aGUgVVJMXG4gIHBhcnNlZCA9IGZhc3RwYXJzZSh1cmwpXG4gIHBhcnNlZC5fcmF3ID0gdXJsXG5cbiAgcmV0dXJuIChyZXEuX3BhcnNlZFVybCA9IHBhcnNlZClcbn07XG5cbi8qKlxuICogUGFyc2UgdGhlIGByZXFgIG9yaWdpbmFsIHVybCB3aXRoIGZhbGxiYWNrIGFuZCBtZW1vaXphdGlvbi5cbiAqXG4gKiBAcGFyYW0ge1NlcnZlclJlcXVlc3R9IHJlcVxuICogQHJldHVybiB7T2JqZWN0fVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIG9yaWdpbmFsdXJsIChyZXEpIHtcbiAgdmFyIHVybCA9IHJlcS5vcmlnaW5hbFVybFxuXG4gIGlmICh0eXBlb2YgdXJsICE9PSAnc3RyaW5nJykge1xuICAgIC8vIEZhbGxiYWNrXG4gICAgcmV0dXJuIHBhcnNldXJsKHJlcSlcbiAgfVxuXG4gIHZhciBwYXJzZWQgPSByZXEuX3BhcnNlZE9yaWdpbmFsVXJsXG5cbiAgaWYgKGZyZXNoKHVybCwgcGFyc2VkKSkge1xuICAgIC8vIFJldHVybiBjYWNoZWQgVVJMIHBhcnNlXG4gICAgcmV0dXJuIHBhcnNlZFxuICB9XG5cbiAgLy8gUGFyc2UgdGhlIFVSTFxuICBwYXJzZWQgPSBmYXN0cGFyc2UodXJsKVxuICBwYXJzZWQuX3JhdyA9IHVybFxuXG4gIHJldHVybiAocmVxLl9wYXJzZWRPcmlnaW5hbFVybCA9IHBhcnNlZClcbn07XG5cbi8qKlxuICogUGFyc2UgdGhlIGBzdHJgIHVybCB3aXRoIGZhc3QtcGF0aCBzaG9ydC1jdXQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7T2JqZWN0fVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBmYXN0cGFyc2UgKHN0cikge1xuICBpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycgfHwgc3RyLmNoYXJDb2RlQXQoMCkgIT09IDB4MmYgLyogLyAqLykge1xuICAgIHJldHVybiBwYXJzZShzdHIpXG4gIH1cblxuICB2YXIgcGF0aG5hbWUgPSBzdHJcbiAgdmFyIHF1ZXJ5ID0gbnVsbFxuICB2YXIgc2VhcmNoID0gbnVsbFxuXG4gIC8vIFRoaXMgdGFrZXMgdGhlIHJlZ2V4cCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9qb3llbnQvbm9kZS9wdWxsLzc4NzhcbiAgLy8gV2hpY2ggaXMgL14oXFwvW14/I1xcc10qKShcXD9bXiNcXHNdKik/JC9cbiAgLy8gQW5kIHVucm9sbHMgaXQgaW50byBhIGZvciBsb29wXG4gIGZvciAodmFyIGkgPSAxOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgc3dpdGNoIChzdHIuY2hhckNvZGVBdChpKSkge1xuICAgICAgY2FzZSAweDNmOiAvKiA/ICAqL1xuICAgICAgICBpZiAoc2VhcmNoID09PSBudWxsKSB7XG4gICAgICAgICAgcGF0aG5hbWUgPSBzdHIuc3Vic3RyaW5nKDAsIGkpXG4gICAgICAgICAgcXVlcnkgPSBzdHIuc3Vic3RyaW5nKGkgKyAxKVxuICAgICAgICAgIHNlYXJjaCA9IHN0ci5zdWJzdHJpbmcoaSlcbiAgICAgICAgfVxuICAgICAgICBicmVha1xuICAgICAgY2FzZSAweDA5OiAvKiBcXHQgKi9cbiAgICAgIGNhc2UgMHgwYTogLyogXFxuICovXG4gICAgICBjYXNlIDB4MGM6IC8qIFxcZiAqL1xuICAgICAgY2FzZSAweDBkOiAvKiBcXHIgKi9cbiAgICAgIGNhc2UgMHgyMDogLyogICAgKi9cbiAgICAgIGNhc2UgMHgyMzogLyogIyAgKi9cbiAgICAgIGNhc2UgMHhhMDpcbiAgICAgIGNhc2UgMHhmZWZmOlxuICAgICAgICByZXR1cm4gcGFyc2Uoc3RyKVxuICAgIH1cbiAgfVxuXG4gIHZhciB1cmwgPSBVcmwgIT09IHVuZGVmaW5lZFxuICAgID8gbmV3IFVybCgpXG4gICAgOiB7fVxuICB1cmwucGF0aCA9IHN0clxuICB1cmwuaHJlZiA9IHN0clxuICB1cmwucGF0aG5hbWUgPSBwYXRobmFtZVxuICB1cmwucXVlcnkgPSBxdWVyeVxuICB1cmwuc2VhcmNoID0gc2VhcmNoXG5cbiAgcmV0dXJuIHVybFxufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBwYXJzZWQgaXMgc3RpbGwgZnJlc2ggZm9yIHVybC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsXG4gKiBAcGFyYW0ge29iamVjdH0gcGFyc2VkVXJsXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBmcmVzaCAodXJsLCBwYXJzZWRVcmwpIHtcbiAgcmV0dXJuIHR5cGVvZiBwYXJzZWRVcmwgPT09ICdvYmplY3QnICYmXG4gICAgcGFyc2VkVXJsICE9PSBudWxsICYmXG4gICAgKFVybCA9PT0gdW5kZWZpbmVkIHx8IHBhcnNlZFVybCBpbnN0YW5jZW9mIFVybCkgJiZcbiAgICBwYXJzZWRVcmwuX3JhdyA9PT0gdXJsXG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJodHRwXCIpOyIsIm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8ICh7X19wcm90b19fOltdfSBpbnN0YW5jZW9mIEFycmF5ID8gc2V0UHJvdG9PZiA6IG1peGluUHJvcGVydGllcyk7XG5cbmZ1bmN0aW9uIHNldFByb3RvT2Yob2JqLCBwcm90bykge1xuXHRvYmouX19wcm90b19fID0gcHJvdG87XG5cdHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIG1peGluUHJvcGVydGllcyhvYmosIHByb3RvKSB7XG5cdGZvciAodmFyIHByb3AgaW4gcHJvdG8pIHtcblx0XHRpZiAoIW9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKSkge1xuXHRcdFx0b2JqW3Byb3BdID0gcHJvdG9bcHJvcF07XG5cdFx0fVxuXHR9XG5cdHJldHVybiBvYmo7XG59XG4iLCIvKiFcbiAqIGNvbnRlbnQtdHlwZVxuICogQ29weXJpZ2h0KGMpIDIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIFJlZ0V4cCB0byBtYXRjaCAqKCBcIjtcIiBwYXJhbWV0ZXIgKSBpbiBSRkMgNzIzMSBzZWMgMy4xLjEuMVxuICpcbiAqIHBhcmFtZXRlciAgICAgPSB0b2tlbiBcIj1cIiAoIHRva2VuIC8gcXVvdGVkLXN0cmluZyApXG4gKiB0b2tlbiAgICAgICAgID0gMSp0Y2hhclxuICogdGNoYXIgICAgICAgICA9IFwiIVwiIC8gXCIjXCIgLyBcIiRcIiAvIFwiJVwiIC8gXCImXCIgLyBcIidcIiAvIFwiKlwiXG4gKiAgICAgICAgICAgICAgIC8gXCIrXCIgLyBcIi1cIiAvIFwiLlwiIC8gXCJeXCIgLyBcIl9cIiAvIFwiYFwiIC8gXCJ8XCIgLyBcIn5cIlxuICogICAgICAgICAgICAgICAvIERJR0lUIC8gQUxQSEFcbiAqICAgICAgICAgICAgICAgOyBhbnkgVkNIQVIsIGV4Y2VwdCBkZWxpbWl0ZXJzXG4gKiBxdW90ZWQtc3RyaW5nID0gRFFVT1RFICooIHFkdGV4dCAvIHF1b3RlZC1wYWlyICkgRFFVT1RFXG4gKiBxZHRleHQgICAgICAgID0gSFRBQiAvIFNQIC8gJXgyMSAvICV4MjMtNUIgLyAleDVELTdFIC8gb2JzLXRleHRcbiAqIG9icy10ZXh0ICAgICAgPSAleDgwLUZGXG4gKiBxdW90ZWQtcGFpciAgID0gXCJcXFwiICggSFRBQiAvIFNQIC8gVkNIQVIgLyBvYnMtdGV4dCApXG4gKi9cbnZhciBQQVJBTV9SRUdFWFAgPSAvOyAqKFshIyQlJicqKy5eX2B8fjAtOUEtWmEtei1dKykgKj0gKihcIig/OltcXHUwMDBiXFx1MDAyMFxcdTAwMjFcXHUwMDIzLVxcdTAwNWJcXHUwMDVkLVxcdTAwN2VcXHUwMDgwLVxcdTAwZmZdfFxcXFxbXFx1MDAwYlxcdTAwMjAtXFx1MDBmZl0pKlwifFshIyQlJicqKy5eX2B8fjAtOUEtWmEtei1dKykgKi9nXG52YXIgVEVYVF9SRUdFWFAgPSAvXltcXHUwMDBiXFx1MDAyMC1cXHUwMDdlXFx1MDA4MC1cXHUwMGZmXSskL1xudmFyIFRPS0VOX1JFR0VYUCA9IC9eWyEjJCUmJyorLl5fYHx+MC05QS1aYS16LV0rJC9cblxuLyoqXG4gKiBSZWdFeHAgdG8gbWF0Y2ggcXVvdGVkLXBhaXIgaW4gUkZDIDcyMzAgc2VjIDMuMi42XG4gKlxuICogcXVvdGVkLXBhaXIgPSBcIlxcXCIgKCBIVEFCIC8gU1AgLyBWQ0hBUiAvIG9icy10ZXh0IClcbiAqIG9icy10ZXh0ICAgID0gJXg4MC1GRlxuICovXG52YXIgUUVTQ19SRUdFWFAgPSAvXFxcXChbXFx1MDAwYlxcdTAwMjAtXFx1MDBmZl0pL2dcblxuLyoqXG4gKiBSZWdFeHAgdG8gbWF0Y2ggY2hhcnMgdGhhdCBtdXN0IGJlIHF1b3RlZC1wYWlyIGluIFJGQyA3MjMwIHNlYyAzLjIuNlxuICovXG52YXIgUVVPVEVfUkVHRVhQID0gLyhbXFxcXFwiXSkvZ1xuXG4vKipcbiAqIFJlZ0V4cCB0byBtYXRjaCB0eXBlIGluIFJGQyA3MjMxIHNlYyAzLjEuMS4xXG4gKlxuICogbWVkaWEtdHlwZSA9IHR5cGUgXCIvXCIgc3VidHlwZVxuICogdHlwZSAgICAgICA9IHRva2VuXG4gKiBzdWJ0eXBlICAgID0gdG9rZW5cbiAqL1xudmFyIFRZUEVfUkVHRVhQID0gL15bISMkJSYnKisuXl9gfH4wLTlBLVphLXotXStcXC9bISMkJSYnKisuXl9gfH4wLTlBLVphLXotXSskL1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbmV4cG9ydHMuZm9ybWF0ID0gZm9ybWF0XG5leHBvcnRzLnBhcnNlID0gcGFyc2VcblxuLyoqXG4gKiBGb3JtYXQgb2JqZWN0IHRvIG1lZGlhIHR5cGUuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IG9ialxuICogQHJldHVybiB7c3RyaW5nfVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGZvcm1hdCAob2JqKSB7XG4gIGlmICghb2JqIHx8IHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgb2JqIGlzIHJlcXVpcmVkJylcbiAgfVxuXG4gIHZhciBwYXJhbWV0ZXJzID0gb2JqLnBhcmFtZXRlcnNcbiAgdmFyIHR5cGUgPSBvYmoudHlwZVxuXG4gIGlmICghdHlwZSB8fCAhVFlQRV9SRUdFWFAudGVzdCh0eXBlKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgdHlwZScpXG4gIH1cblxuICB2YXIgc3RyaW5nID0gdHlwZVxuXG4gIC8vIGFwcGVuZCBwYXJhbWV0ZXJzXG4gIGlmIChwYXJhbWV0ZXJzICYmIHR5cGVvZiBwYXJhbWV0ZXJzID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBwYXJhbVxuICAgIHZhciBwYXJhbXMgPSBPYmplY3Qua2V5cyhwYXJhbWV0ZXJzKS5zb3J0KClcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGFyYW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBwYXJhbSA9IHBhcmFtc1tpXVxuXG4gICAgICBpZiAoIVRPS0VOX1JFR0VYUC50ZXN0KHBhcmFtKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIHBhcmFtZXRlciBuYW1lJylcbiAgICAgIH1cblxuICAgICAgc3RyaW5nICs9ICc7ICcgKyBwYXJhbSArICc9JyArIHFzdHJpbmcocGFyYW1ldGVyc1twYXJhbV0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1xufVxuXG4vKipcbiAqIFBhcnNlIG1lZGlhIHR5cGUgdG8gb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfG9iamVjdH0gc3RyaW5nXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gcGFyc2UgKHN0cmluZykge1xuICBpZiAoIXN0cmluZykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IHN0cmluZyBpcyByZXF1aXJlZCcpXG4gIH1cblxuICAvLyBzdXBwb3J0IHJlcS9yZXMtbGlrZSBvYmplY3RzIGFzIGFyZ3VtZW50XG4gIHZhciBoZWFkZXIgPSB0eXBlb2Ygc3RyaW5nID09PSAnb2JqZWN0J1xuICAgID8gZ2V0Y29udGVudHR5cGUoc3RyaW5nKVxuICAgIDogc3RyaW5nXG5cbiAgaWYgKHR5cGVvZiBoZWFkZXIgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgc3RyaW5nIGlzIHJlcXVpcmVkIHRvIGJlIGEgc3RyaW5nJylcbiAgfVxuXG4gIHZhciBpbmRleCA9IGhlYWRlci5pbmRleE9mKCc7JylcbiAgdmFyIHR5cGUgPSBpbmRleCAhPT0gLTFcbiAgICA/IGhlYWRlci5zdWJzdHIoMCwgaW5kZXgpLnRyaW0oKVxuICAgIDogaGVhZGVyLnRyaW0oKVxuXG4gIGlmICghVFlQRV9SRUdFWFAudGVzdCh0eXBlKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgbWVkaWEgdHlwZScpXG4gIH1cblxuICB2YXIgb2JqID0gbmV3IENvbnRlbnRUeXBlKHR5cGUudG9Mb3dlckNhc2UoKSlcblxuICAvLyBwYXJzZSBwYXJhbWV0ZXJzXG4gIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICB2YXIga2V5XG4gICAgdmFyIG1hdGNoXG4gICAgdmFyIHZhbHVlXG5cbiAgICBQQVJBTV9SRUdFWFAubGFzdEluZGV4ID0gaW5kZXhcblxuICAgIHdoaWxlICgobWF0Y2ggPSBQQVJBTV9SRUdFWFAuZXhlYyhoZWFkZXIpKSkge1xuICAgICAgaWYgKG1hdGNoLmluZGV4ICE9PSBpbmRleCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIHBhcmFtZXRlciBmb3JtYXQnKVxuICAgICAgfVxuXG4gICAgICBpbmRleCArPSBtYXRjaFswXS5sZW5ndGhcbiAgICAgIGtleSA9IG1hdGNoWzFdLnRvTG93ZXJDYXNlKClcbiAgICAgIHZhbHVlID0gbWF0Y2hbMl1cblxuICAgICAgaWYgKHZhbHVlWzBdID09PSAnXCInKSB7XG4gICAgICAgIC8vIHJlbW92ZSBxdW90ZXMgYW5kIGVzY2FwZXNcbiAgICAgICAgdmFsdWUgPSB2YWx1ZVxuICAgICAgICAgIC5zdWJzdHIoMSwgdmFsdWUubGVuZ3RoIC0gMilcbiAgICAgICAgICAucmVwbGFjZShRRVNDX1JFR0VYUCwgJyQxJylcbiAgICAgIH1cblxuICAgICAgb2JqLnBhcmFtZXRlcnNba2V5XSA9IHZhbHVlXG4gICAgfVxuXG4gICAgaWYgKGluZGV4ICE9PSBoZWFkZXIubGVuZ3RoKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIHBhcmFtZXRlciBmb3JtYXQnKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvYmpcbn1cblxuLyoqXG4gKiBHZXQgY29udGVudC10eXBlIGZyb20gcmVxL3JlcyBvYmplY3RzLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fVxuICogQHJldHVybiB7T2JqZWN0fVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBnZXRjb250ZW50dHlwZSAob2JqKSB7XG4gIHZhciBoZWFkZXJcblxuICBpZiAodHlwZW9mIG9iai5nZXRIZWFkZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyByZXMtbGlrZVxuICAgIGhlYWRlciA9IG9iai5nZXRIZWFkZXIoJ2NvbnRlbnQtdHlwZScpXG4gIH0gZWxzZSBpZiAodHlwZW9mIG9iai5oZWFkZXJzID09PSAnb2JqZWN0Jykge1xuICAgIC8vIHJlcS1saWtlXG4gICAgaGVhZGVyID0gb2JqLmhlYWRlcnMgJiYgb2JqLmhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddXG4gIH1cblxuICBpZiAodHlwZW9mIGhlYWRlciAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdjb250ZW50LXR5cGUgaGVhZGVyIGlzIG1pc3NpbmcgZnJvbSBvYmplY3QnKVxuICB9XG5cbiAgcmV0dXJuIGhlYWRlclxufVxuXG4vKipcbiAqIFF1b3RlIGEgc3RyaW5nIGlmIG5lY2Vzc2FyeS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHFzdHJpbmcgKHZhbCkge1xuICB2YXIgc3RyID0gU3RyaW5nKHZhbClcblxuICAvLyBubyBuZWVkIHRvIHF1b3RlIHRva2Vuc1xuICBpZiAoVE9LRU5fUkVHRVhQLnRlc3Qoc3RyKSkge1xuICAgIHJldHVybiBzdHJcbiAgfVxuXG4gIGlmIChzdHIubGVuZ3RoID4gMCAmJiAhVEVYVF9SRUdFWFAudGVzdChzdHIpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW52YWxpZCBwYXJhbWV0ZXIgdmFsdWUnKVxuICB9XG5cbiAgcmV0dXJuICdcIicgKyBzdHIucmVwbGFjZShRVU9URV9SRUdFWFAsICdcXFxcJDEnKSArICdcIidcbn1cblxuLyoqXG4gKiBDbGFzcyB0byByZXByZXNlbnQgYSBjb250ZW50IHR5cGUuXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBDb250ZW50VHlwZSAodHlwZSkge1xuICB0aGlzLnBhcmFtZXRlcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpXG4gIHRoaXMudHlwZSA9IHR5cGVcbn1cbiIsIi8qIVxuICogYm9keS1wYXJzZXJcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJ2h0dHAtZXJyb3JzJylcbnZhciBnZXRCb2R5ID0gcmVxdWlyZSgncmF3LWJvZHknKVxudmFyIGljb252ID0gcmVxdWlyZSgnaWNvbnYtbGl0ZScpXG52YXIgb25GaW5pc2hlZCA9IHJlcXVpcmUoJ29uLWZpbmlzaGVkJylcbnZhciB6bGliID0gcmVxdWlyZSgnemxpYicpXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSByZWFkXG5cbi8qKlxuICogUmVhZCBhIHJlcXVlc3QgaW50byBhIGJ1ZmZlciBhbmQgcGFyc2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHJlcVxuICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICogQHBhcmFtIHtmdW5jdGlvbn0gbmV4dFxuICogQHBhcmFtIHtmdW5jdGlvbn0gcGFyc2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGRlYnVnXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiByZWFkIChyZXEsIHJlcywgbmV4dCwgcGFyc2UsIGRlYnVnLCBvcHRpb25zKSB7XG4gIHZhciBsZW5ndGhcbiAgdmFyIG9wdHMgPSBvcHRpb25zXG4gIHZhciBzdHJlYW1cblxuICAvLyBmbGFnIGFzIHBhcnNlZFxuICByZXEuX2JvZHkgPSB0cnVlXG5cbiAgLy8gcmVhZCBvcHRpb25zXG4gIHZhciBlbmNvZGluZyA9IG9wdHMuZW5jb2RpbmcgIT09IG51bGxcbiAgICA/IG9wdHMuZW5jb2RpbmdcbiAgICA6IG51bGxcbiAgdmFyIHZlcmlmeSA9IG9wdHMudmVyaWZ5XG5cbiAgdHJ5IHtcbiAgICAvLyBnZXQgdGhlIGNvbnRlbnQgc3RyZWFtXG4gICAgc3RyZWFtID0gY29udGVudHN0cmVhbShyZXEsIGRlYnVnLCBvcHRzLmluZmxhdGUpXG4gICAgbGVuZ3RoID0gc3RyZWFtLmxlbmd0aFxuICAgIHN0cmVhbS5sZW5ndGggPSB1bmRlZmluZWRcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIG5leHQoZXJyKVxuICB9XG5cbiAgLy8gc2V0IHJhdy1ib2R5IG9wdGlvbnNcbiAgb3B0cy5sZW5ndGggPSBsZW5ndGhcbiAgb3B0cy5lbmNvZGluZyA9IHZlcmlmeVxuICAgID8gbnVsbFxuICAgIDogZW5jb2RpbmdcblxuICAvLyBhc3NlcnQgY2hhcnNldCBpcyBzdXBwb3J0ZWRcbiAgaWYgKG9wdHMuZW5jb2RpbmcgPT09IG51bGwgJiYgZW5jb2RpbmcgIT09IG51bGwgJiYgIWljb252LmVuY29kaW5nRXhpc3RzKGVuY29kaW5nKSkge1xuICAgIHJldHVybiBuZXh0KGNyZWF0ZUVycm9yKDQxNSwgJ3Vuc3VwcG9ydGVkIGNoYXJzZXQgXCInICsgZW5jb2RpbmcudG9VcHBlckNhc2UoKSArICdcIicsIHtcbiAgICAgIGNoYXJzZXQ6IGVuY29kaW5nLnRvTG93ZXJDYXNlKCksXG4gICAgICB0eXBlOiAnY2hhcnNldC51bnN1cHBvcnRlZCdcbiAgICB9KSlcbiAgfVxuXG4gIC8vIHJlYWQgYm9keVxuICBkZWJ1ZygncmVhZCBib2R5JylcbiAgZ2V0Qm9keShzdHJlYW0sIG9wdHMsIGZ1bmN0aW9uIChlcnJvciwgYm9keSkge1xuICAgIGlmIChlcnJvcikge1xuICAgICAgdmFyIF9lcnJvclxuXG4gICAgICBpZiAoZXJyb3IudHlwZSA9PT0gJ2VuY29kaW5nLnVuc3VwcG9ydGVkJykge1xuICAgICAgICAvLyBlY2hvIGJhY2sgY2hhcnNldFxuICAgICAgICBfZXJyb3IgPSBjcmVhdGVFcnJvcig0MTUsICd1bnN1cHBvcnRlZCBjaGFyc2V0IFwiJyArIGVuY29kaW5nLnRvVXBwZXJDYXNlKCkgKyAnXCInLCB7XG4gICAgICAgICAgY2hhcnNldDogZW5jb2RpbmcudG9Mb3dlckNhc2UoKSxcbiAgICAgICAgICB0eXBlOiAnY2hhcnNldC51bnN1cHBvcnRlZCdcbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIHNldCBzdGF0dXMgY29kZSBvbiBlcnJvclxuICAgICAgICBfZXJyb3IgPSBjcmVhdGVFcnJvcig0MDAsIGVycm9yKVxuICAgICAgfVxuXG4gICAgICAvLyByZWFkIG9mZiBlbnRpcmUgcmVxdWVzdFxuICAgICAgc3RyZWFtLnJlc3VtZSgpXG4gICAgICBvbkZpbmlzaGVkKHJlcSwgZnVuY3Rpb24gb25maW5pc2hlZCAoKSB7XG4gICAgICAgIG5leHQoY3JlYXRlRXJyb3IoNDAwLCBfZXJyb3IpKVxuICAgICAgfSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIHZlcmlmeVxuICAgIGlmICh2ZXJpZnkpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGRlYnVnKCd2ZXJpZnkgYm9keScpXG4gICAgICAgIHZlcmlmeShyZXEsIHJlcywgYm9keSwgZW5jb2RpbmcpXG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgbmV4dChjcmVhdGVFcnJvcig0MDMsIGVyciwge1xuICAgICAgICAgIGJvZHk6IGJvZHksXG4gICAgICAgICAgdHlwZTogZXJyLnR5cGUgfHwgJ2VudGl0eS52ZXJpZnkuZmFpbGVkJ1xuICAgICAgICB9KSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gcGFyc2VcbiAgICB2YXIgc3RyID0gYm9keVxuICAgIHRyeSB7XG4gICAgICBkZWJ1ZygncGFyc2UgYm9keScpXG4gICAgICBzdHIgPSB0eXBlb2YgYm9keSAhPT0gJ3N0cmluZycgJiYgZW5jb2RpbmcgIT09IG51bGxcbiAgICAgICAgPyBpY29udi5kZWNvZGUoYm9keSwgZW5jb2RpbmcpXG4gICAgICAgIDogYm9keVxuICAgICAgcmVxLmJvZHkgPSBwYXJzZShzdHIpXG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBuZXh0KGNyZWF0ZUVycm9yKDQwMCwgZXJyLCB7XG4gICAgICAgIGJvZHk6IHN0cixcbiAgICAgICAgdHlwZTogZXJyLnR5cGUgfHwgJ2VudGl0eS5wYXJzZS5mYWlsZWQnXG4gICAgICB9KSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIG5leHQoKVxuICB9KVxufVxuXG4vKipcbiAqIEdldCB0aGUgY29udGVudCBzdHJlYW0gb2YgdGhlIHJlcXVlc3QuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHJlcVxuICogQHBhcmFtIHtmdW5jdGlvbn0gZGVidWdcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2luZmxhdGU9dHJ1ZV1cbiAqIEByZXR1cm4ge29iamVjdH1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNvbnRlbnRzdHJlYW0gKHJlcSwgZGVidWcsIGluZmxhdGUpIHtcbiAgdmFyIGVuY29kaW5nID0gKHJlcS5oZWFkZXJzWydjb250ZW50LWVuY29kaW5nJ10gfHwgJ2lkZW50aXR5JykudG9Mb3dlckNhc2UoKVxuICB2YXIgbGVuZ3RoID0gcmVxLmhlYWRlcnNbJ2NvbnRlbnQtbGVuZ3RoJ11cbiAgdmFyIHN0cmVhbVxuXG4gIGRlYnVnKCdjb250ZW50LWVuY29kaW5nIFwiJXNcIicsIGVuY29kaW5nKVxuXG4gIGlmIChpbmZsYXRlID09PSBmYWxzZSAmJiBlbmNvZGluZyAhPT0gJ2lkZW50aXR5Jykge1xuICAgIHRocm93IGNyZWF0ZUVycm9yKDQxNSwgJ2NvbnRlbnQgZW5jb2RpbmcgdW5zdXBwb3J0ZWQnLCB7XG4gICAgICBlbmNvZGluZzogZW5jb2RpbmcsXG4gICAgICB0eXBlOiAnZW5jb2RpbmcudW5zdXBwb3J0ZWQnXG4gICAgfSlcbiAgfVxuXG4gIHN3aXRjaCAoZW5jb2RpbmcpIHtcbiAgICBjYXNlICdkZWZsYXRlJzpcbiAgICAgIHN0cmVhbSA9IHpsaWIuY3JlYXRlSW5mbGF0ZSgpXG4gICAgICBkZWJ1ZygnaW5mbGF0ZSBib2R5JylcbiAgICAgIHJlcS5waXBlKHN0cmVhbSlcbiAgICAgIGJyZWFrXG4gICAgY2FzZSAnZ3ppcCc6XG4gICAgICBzdHJlYW0gPSB6bGliLmNyZWF0ZUd1bnppcCgpXG4gICAgICBkZWJ1ZygnZ3VuemlwIGJvZHknKVxuICAgICAgcmVxLnBpcGUoc3RyZWFtKVxuICAgICAgYnJlYWtcbiAgICBjYXNlICdpZGVudGl0eSc6XG4gICAgICBzdHJlYW0gPSByZXFcbiAgICAgIHN0cmVhbS5sZW5ndGggPSBsZW5ndGhcbiAgICAgIGJyZWFrXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IGNyZWF0ZUVycm9yKDQxNSwgJ3Vuc3VwcG9ydGVkIGNvbnRlbnQgZW5jb2RpbmcgXCInICsgZW5jb2RpbmcgKyAnXCInLCB7XG4gICAgICAgIGVuY29kaW5nOiBlbmNvZGluZyxcbiAgICAgICAgdHlwZTogJ2VuY29kaW5nLnVuc3VwcG9ydGVkJ1xuICAgICAgfSlcbiAgfVxuXG4gIHJldHVybiBzdHJlYW1cbn1cbiIsIi8qIVxuICogZW5jb2RldXJsXG4gKiBDb3B5cmlnaHQoYykgMjAxNiBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBlbmNvZGVVcmxcblxuLyoqXG4gKiBSZWdFeHAgdG8gbWF0Y2ggbm9uLVVSTCBjb2RlIHBvaW50cywgKmFmdGVyKiBlbmNvZGluZyAoaS5lLiBub3QgaW5jbHVkaW5nIFwiJVwiKVxuICogYW5kIGluY2x1ZGluZyBpbnZhbGlkIGVzY2FwZSBzZXF1ZW5jZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBFTkNPREVfQ0hBUlNfUkVHRVhQID0gLyg/OlteXFx4MjFcXHgyNVxceDI2LVxceDNCXFx4M0RcXHgzRi1cXHg1QlxceDVEXFx4NUZcXHg2MS1cXHg3QVxceDdFXXwlKD86W14wLTlBLUZhLWZdfFswLTlBLUZhLWZdW14wLTlBLUZhLWZdfCQpKSsvZ1xuXG4vKipcbiAqIFJlZ0V4cCB0byBtYXRjaCB1bm1hdGNoZWQgc3Vycm9nYXRlIHBhaXIuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBVTk1BVENIRURfU1VSUk9HQVRFX1BBSVJfUkVHRVhQID0gLyhefFteXFx1RDgwMC1cXHVEQkZGXSlbXFx1REMwMC1cXHVERkZGXXxbXFx1RDgwMC1cXHVEQkZGXShbXlxcdURDMDAtXFx1REZGRl18JCkvZ1xuXG4vKipcbiAqIFN0cmluZyB0byByZXBsYWNlIHVubWF0Y2hlZCBzdXJyb2dhdGUgcGFpciB3aXRoLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgVU5NQVRDSEVEX1NVUlJPR0FURV9QQUlSX1JFUExBQ0UgPSAnJDFcXHVGRkZEJDInXG5cbi8qKlxuICogRW5jb2RlIGEgVVJMIHRvIGEgcGVyY2VudC1lbmNvZGVkIGZvcm0sIGV4Y2x1ZGluZyBhbHJlYWR5LWVuY29kZWQgc2VxdWVuY2VzLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gd2lsbCB0YWtlIGFuIGFscmVhZHktZW5jb2RlZCBVUkwgYW5kIGVuY29kZSBhbGwgdGhlIG5vbi1VUkxcbiAqIGNvZGUgcG9pbnRzLiBUaGlzIGZ1bmN0aW9uIHdpbGwgbm90IGVuY29kZSB0aGUgXCIlXCIgY2hhcmFjdGVyIHVubGVzcyBpdCBpc1xuICogbm90IHBhcnQgb2YgYSB2YWxpZCBzZXF1ZW5jZSAoYCUyMGAgd2lsbCBiZSBsZWZ0IGFzLWlzLCBidXQgYCVmb29gIHdpbGxcbiAqIGJlIGVuY29kZWQgYXMgYCUyNWZvb2ApLlxuICpcbiAqIFRoaXMgZW5jb2RlIGlzIG1lYW50IHRvIGJlIFwic2FmZVwiIGFuZCBkb2VzIG5vdCB0aHJvdyBlcnJvcnMuIEl0IHdpbGwgdHJ5IGFzXG4gKiBoYXJkIGFzIGl0IGNhbiB0byBwcm9wZXJseSBlbmNvZGUgdGhlIGdpdmVuIFVSTCwgaW5jbHVkaW5nIHJlcGxhY2luZyBhbnkgcmF3LFxuICogdW5wYWlyZWQgc3Vycm9nYXRlIHBhaXJzIHdpdGggdGhlIFVuaWNvZGUgcmVwbGFjZW1lbnQgY2hhcmFjdGVyIHByaW9yIHRvXG4gKiBlbmNvZGluZy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZW5jb2RlVXJsICh1cmwpIHtcbiAgcmV0dXJuIFN0cmluZyh1cmwpXG4gICAgLnJlcGxhY2UoVU5NQVRDSEVEX1NVUlJPR0FURV9QQUlSX1JFR0VYUCwgVU5NQVRDSEVEX1NVUlJPR0FURV9QQUlSX1JFUExBQ0UpXG4gICAgLnJlcGxhY2UoRU5DT0RFX0NIQVJTX1JFR0VYUCwgZW5jb2RlVVJJKVxufVxuIiwiLyohXG4gKiBlc2NhcGUtaHRtbFxuICogQ29weXJpZ2h0KGMpIDIwMTItMjAxMyBUSiBIb2xvd2F5Y2h1a1xuICogQ29weXJpZ2h0KGMpIDIwMTUgQW5kcmVhcyBMdWJiZVxuICogQ29weXJpZ2h0KGMpIDIwMTUgVGlhbmNoZW5nIFwiVGltb3RoeVwiIEd1XG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogTW9kdWxlIHZhcmlhYmxlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIG1hdGNoSHRtbFJlZ0V4cCA9IC9bXCInJjw+XS87XG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBlc2NhcGVIdG1sO1xuXG4vKipcbiAqIEVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgaW4gdGhlIGdpdmVuIHN0cmluZyBvZiBodG1sLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyaW5nIFRoZSBzdHJpbmcgdG8gZXNjYXBlIGZvciBpbnNlcnRpbmcgaW50byBIVE1MXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZXNjYXBlSHRtbChzdHJpbmcpIHtcbiAgdmFyIHN0ciA9ICcnICsgc3RyaW5nO1xuICB2YXIgbWF0Y2ggPSBtYXRjaEh0bWxSZWdFeHAuZXhlYyhzdHIpO1xuXG4gIGlmICghbWF0Y2gpIHtcbiAgICByZXR1cm4gc3RyO1xuICB9XG5cbiAgdmFyIGVzY2FwZTtcbiAgdmFyIGh0bWwgPSAnJztcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxhc3RJbmRleCA9IDA7XG5cbiAgZm9yIChpbmRleCA9IG1hdGNoLmluZGV4OyBpbmRleCA8IHN0ci5sZW5ndGg7IGluZGV4KyspIHtcbiAgICBzd2l0Y2ggKHN0ci5jaGFyQ29kZUF0KGluZGV4KSkge1xuICAgICAgY2FzZSAzNDogLy8gXCJcbiAgICAgICAgZXNjYXBlID0gJyZxdW90Oyc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAzODogLy8gJlxuICAgICAgICBlc2NhcGUgPSAnJmFtcDsnO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgMzk6IC8vICdcbiAgICAgICAgZXNjYXBlID0gJyYjMzk7JztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDYwOiAvLyA8XG4gICAgICAgIGVzY2FwZSA9ICcmbHQ7JztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDYyOiAvLyA+XG4gICAgICAgIGVzY2FwZSA9ICcmZ3Q7JztcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAobGFzdEluZGV4ICE9PSBpbmRleCkge1xuICAgICAgaHRtbCArPSBzdHIuc3Vic3RyaW5nKGxhc3RJbmRleCwgaW5kZXgpO1xuICAgIH1cblxuICAgIGxhc3RJbmRleCA9IGluZGV4ICsgMTtcbiAgICBodG1sICs9IGVzY2FwZTtcbiAgfVxuXG4gIHJldHVybiBsYXN0SW5kZXggIT09IGluZGV4XG4gICAgPyBodG1sICsgc3RyLnN1YnN0cmluZyhsYXN0SW5kZXgsIGluZGV4KVxuICAgIDogaHRtbDtcbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIEV4cG9zZSBgYXJyYXlGbGF0dGVuYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBhcnJheUZsYXR0ZW5cblxuLyoqXG4gKiBSZWN1cnNpdmUgZmxhdHRlbiBmdW5jdGlvbiB3aXRoIGRlcHRoLlxuICpcbiAqIEBwYXJhbSAge0FycmF5fSAgYXJyYXlcbiAqIEBwYXJhbSAge0FycmF5fSAgcmVzdWx0XG4gKiBAcGFyYW0gIHtOdW1iZXJ9IGRlcHRoXG4gKiBAcmV0dXJuIHtBcnJheX1cbiAqL1xuZnVuY3Rpb24gZmxhdHRlbldpdGhEZXB0aCAoYXJyYXksIHJlc3VsdCwgZGVwdGgpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xuICAgIHZhciB2YWx1ZSA9IGFycmF5W2ldXG5cbiAgICBpZiAoZGVwdGggPiAwICYmIEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICBmbGF0dGVuV2l0aERlcHRoKHZhbHVlLCByZXN1bHQsIGRlcHRoIC0gMSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0LnB1c2godmFsdWUpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuXG4vKipcbiAqIFJlY3Vyc2l2ZSBmbGF0dGVuIGZ1bmN0aW9uLiBPbWl0dGluZyBkZXB0aCBpcyBzbGlnaHRseSBmYXN0ZXIuXG4gKlxuICogQHBhcmFtICB7QXJyYXl9IGFycmF5XG4gKiBAcGFyYW0gIHtBcnJheX0gcmVzdWx0XG4gKiBAcmV0dXJuIHtBcnJheX1cbiAqL1xuZnVuY3Rpb24gZmxhdHRlbkZvcmV2ZXIgKGFycmF5LCByZXN1bHQpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xuICAgIHZhciB2YWx1ZSA9IGFycmF5W2ldXG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIGZsYXR0ZW5Gb3JldmVyKHZhbHVlLCByZXN1bHQpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdC5wdXNoKHZhbHVlKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cblxuLyoqXG4gKiBGbGF0dGVuIGFuIGFycmF5LCB3aXRoIHRoZSBhYmlsaXR5IHRvIGRlZmluZSBhIGRlcHRoLlxuICpcbiAqIEBwYXJhbSAge0FycmF5fSAgYXJyYXlcbiAqIEBwYXJhbSAge051bWJlcn0gZGVwdGhcbiAqIEByZXR1cm4ge0FycmF5fVxuICovXG5mdW5jdGlvbiBhcnJheUZsYXR0ZW4gKGFycmF5LCBkZXB0aCkge1xuICBpZiAoZGVwdGggPT0gbnVsbCkge1xuICAgIHJldHVybiBmbGF0dGVuRm9yZXZlcihhcnJheSwgW10pXG4gIH1cblxuICByZXR1cm4gZmxhdHRlbldpdGhEZXB0aChhcnJheSwgW10sIGRlcHRoKVxufVxuIiwiLyoqXG4gKiBNZXJnZSBvYmplY3QgYiB3aXRoIG9iamVjdCBhLlxuICpcbiAqICAgICB2YXIgYSA9IHsgZm9vOiAnYmFyJyB9XG4gKiAgICAgICAsIGIgPSB7IGJhcjogJ2JheicgfTtcbiAqXG4gKiAgICAgbWVyZ2UoYSwgYik7XG4gKiAgICAgLy8gPT4geyBmb286ICdiYXInLCBiYXI6ICdiYXonIH1cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gYVxuICogQHBhcmFtIHtPYmplY3R9IGJcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oYSwgYil7XG4gIGlmIChhICYmIGIpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gYikge1xuICAgICAgYVtrZXldID0gYltrZXldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYTtcbn07XG4iLCIndXNlIHN0cmljdCdcbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEwLTIwMTcgQnJpYW4gQ2FybHNvbiAoYnJpYW4ubS5jYXJsc29uQGdtYWlsLmNvbSlcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBSRUFETUUubWQgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy8gZGF0YWJhc2UgaG9zdC4gZGVmYXVsdHMgdG8gbG9jYWxob3N0XG4gIGhvc3Q6ICdsb2NhbGhvc3QnLFxuXG4gIC8vIGRhdGFiYXNlIHVzZXIncyBuYW1lXG4gIHVzZXI6IHByb2Nlc3MucGxhdGZvcm0gPT09ICd3aW4zMicgPyBwcm9jZXNzLmVudi5VU0VSTkFNRSA6IHByb2Nlc3MuZW52LlVTRVIsXG5cbiAgLy8gbmFtZSBvZiBkYXRhYmFzZSB0byBjb25uZWN0XG4gIGRhdGFiYXNlOiBwcm9jZXNzLnBsYXRmb3JtID09PSAnd2luMzInID8gcHJvY2Vzcy5lbnYuVVNFUk5BTUUgOiBwcm9jZXNzLmVudi5VU0VSLFxuXG4gIC8vIGRhdGFiYXNlIHVzZXIncyBwYXNzd29yZFxuICBwYXNzd29yZDogbnVsbCxcblxuICAvLyBhIFBvc3RncmVzIGNvbm5lY3Rpb24gc3RyaW5nIHRvIGJlIHVzZWQgaW5zdGVhZCBvZiBzZXR0aW5nIGluZGl2aWR1YWwgY29ubmVjdGlvbiBpdGVtc1xuICAvLyBOT1RFOiAgU2V0dGluZyB0aGlzIHZhbHVlIHdpbGwgY2F1c2UgaXQgdG8gb3ZlcnJpZGUgYW55IG90aGVyIHZhbHVlIChzdWNoIGFzIGRhdGFiYXNlIG9yIHVzZXIpIGRlZmluZWRcbiAgLy8gaW4gdGhlIGRlZmF1bHRzIG9iamVjdC5cbiAgY29ubmVjdGlvblN0cmluZzogdW5kZWZpbmVkLFxuXG4gIC8vIGRhdGFiYXNlIHBvcnRcbiAgcG9ydDogNTQzMixcblxuICAvLyBudW1iZXIgb2Ygcm93cyB0byByZXR1cm4gYXQgYSB0aW1lIGZyb20gYSBwcmVwYXJlZCBzdGF0ZW1lbnQnc1xuICAvLyBwb3J0YWwuIDAgd2lsbCByZXR1cm4gYWxsIHJvd3MgYXQgb25jZVxuICByb3dzOiAwLFxuXG4gIC8vIGJpbmFyeSByZXN1bHQgbW9kZVxuICBiaW5hcnk6IGZhbHNlLFxuXG4gIC8vIENvbm5lY3Rpb24gcG9vbCBvcHRpb25zIC0gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9icmlhbmMvbm9kZS1wZy1wb29sXG5cbiAgLy8gbnVtYmVyIG9mIGNvbm5lY3Rpb25zIHRvIHVzZSBpbiBjb25uZWN0aW9uIHBvb2xcbiAgLy8gMCB3aWxsIGRpc2FibGUgY29ubmVjdGlvbiBwb29saW5nXG4gIG1heDogMTAsXG5cbiAgLy8gbWF4IG1pbGxpc2Vjb25kcyBhIGNsaWVudCBjYW4gZ28gdW51c2VkIGJlZm9yZSBpdCBpcyByZW1vdmVkXG4gIC8vIGZyb20gdGhlIHBvb2wgYW5kIGRlc3Ryb3llZFxuICBpZGxlVGltZW91dE1pbGxpczogMzAwMDAsXG5cbiAgY2xpZW50X2VuY29kaW5nOiAnJyxcblxuICBzc2w6IGZhbHNlLFxuXG4gIGFwcGxpY2F0aW9uX25hbWU6IHVuZGVmaW5lZCxcbiAgZmFsbGJhY2tfYXBwbGljYXRpb25fbmFtZTogdW5kZWZpbmVkLFxuXG4gIHBhcnNlSW5wdXREYXRlc0FzVVRDOiBmYWxzZSxcblxuICAvLyBtYXggbWlsbGlzZWNvbmRzIGFueSBxdWVyeSB1c2luZyB0aGlzIGNvbm5lY3Rpb24gd2lsbCBleGVjdXRlIGZvciBiZWZvcmUgdGltaW5nIG91dCBpbiBlcnJvci4gZmFsc2U9dW5saW1pdGVkXG4gIHN0YXRlbWVudF90aW1lb3V0OiBmYWxzZSxcblxuICAvLyBtYXggbWlsaXNlY29uZHMgdG8gd2FpdCBmb3IgcXVlcnkgdG8gY29tcGxldGUgKGNsaWVudCBzaWRlKVxuICBxdWVyeV90aW1lb3V0OiBmYWxzZVxufVxuXG52YXIgcGdUeXBlcyA9IHJlcXVpcmUoJ3BnLXR5cGVzJylcbi8vIHNhdmUgZGVmYXVsdCBwYXJzZXJzXG52YXIgcGFyc2VCaWdJbnRlZ2VyID0gcGdUeXBlcy5nZXRUeXBlUGFyc2VyKDIwLCAndGV4dCcpXG52YXIgcGFyc2VCaWdJbnRlZ2VyQXJyYXkgPSBwZ1R5cGVzLmdldFR5cGVQYXJzZXIoMTAxNiwgJ3RleHQnKVxuXG4vLyBwYXJzZSBpbnQ4IHNvIHlvdSBjYW4gZ2V0IHlvdXIgY291bnQgdmFsdWVzIGFzIGFjdHVhbCBudW1iZXJzXG5tb2R1bGUuZXhwb3J0cy5fX2RlZmluZVNldHRlcl9fKCdwYXJzZUludDgnLCBmdW5jdGlvbiAodmFsKSB7XG4gIHBnVHlwZXMuc2V0VHlwZVBhcnNlcigyMCwgJ3RleHQnLCB2YWwgPyBwZ1R5cGVzLmdldFR5cGVQYXJzZXIoMjMsICd0ZXh0JykgOiBwYXJzZUJpZ0ludGVnZXIpXG4gIHBnVHlwZXMuc2V0VHlwZVBhcnNlcigxMDE2LCAndGV4dCcsIHZhbCA/IHBnVHlwZXMuZ2V0VHlwZVBhcnNlcigxMDA3LCAndGV4dCcpIDogcGFyc2VCaWdJbnRlZ2VyQXJyYXkpXG59KVxuIiwidmFyIHRleHRQYXJzZXJzID0gcmVxdWlyZSgnLi9saWIvdGV4dFBhcnNlcnMnKTtcbnZhciBiaW5hcnlQYXJzZXJzID0gcmVxdWlyZSgnLi9saWIvYmluYXJ5UGFyc2VycycpO1xudmFyIGFycmF5UGFyc2VyID0gcmVxdWlyZSgnLi9saWIvYXJyYXlQYXJzZXInKTtcblxuZXhwb3J0cy5nZXRUeXBlUGFyc2VyID0gZ2V0VHlwZVBhcnNlcjtcbmV4cG9ydHMuc2V0VHlwZVBhcnNlciA9IHNldFR5cGVQYXJzZXI7XG5leHBvcnRzLmFycmF5UGFyc2VyID0gYXJyYXlQYXJzZXI7XG5cbnZhciB0eXBlUGFyc2VycyA9IHtcbiAgdGV4dDoge30sXG4gIGJpbmFyeToge31cbn07XG5cbi8vdGhlIGVtcHR5IHBhcnNlIGZ1bmN0aW9uXG5mdW5jdGlvbiBub1BhcnNlICh2YWwpIHtcbiAgcmV0dXJuIFN0cmluZyh2YWwpO1xufTtcblxuLy9yZXR1cm5zIGEgZnVuY3Rpb24gdXNlZCB0byBjb252ZXJ0IGEgc3BlY2lmaWMgdHlwZSAoc3BlY2lmaWVkIGJ5XG4vL29pZCkgaW50byBhIHJlc3VsdCBqYXZhc2NyaXB0IHR5cGVcbi8vbm90ZTogdGhlIG9pZCBjYW4gYmUgb2J0YWluZWQgdmlhIHRoZSBmb2xsb3dpbmcgc3FsIHF1ZXJ5OlxuLy9TRUxFQ1Qgb2lkIEZST00gcGdfdHlwZSBXSEVSRSB0eXBuYW1lID0gJ1RZUEVfTkFNRV9IRVJFJztcbmZ1bmN0aW9uIGdldFR5cGVQYXJzZXIgKG9pZCwgZm9ybWF0KSB7XG4gIGZvcm1hdCA9IGZvcm1hdCB8fCAndGV4dCc7XG4gIGlmICghdHlwZVBhcnNlcnNbZm9ybWF0XSkge1xuICAgIHJldHVybiBub1BhcnNlO1xuICB9XG4gIHJldHVybiB0eXBlUGFyc2Vyc1tmb3JtYXRdW29pZF0gfHwgbm9QYXJzZTtcbn07XG5cbmZ1bmN0aW9uIHNldFR5cGVQYXJzZXIgKG9pZCwgZm9ybWF0LCBwYXJzZUZuKSB7XG4gIGlmKHR5cGVvZiBmb3JtYXQgPT0gJ2Z1bmN0aW9uJykge1xuICAgIHBhcnNlRm4gPSBmb3JtYXQ7XG4gICAgZm9ybWF0ID0gJ3RleHQnO1xuICB9XG4gIHR5cGVQYXJzZXJzW2Zvcm1hdF1bb2lkXSA9IHBhcnNlRm47XG59O1xuXG50ZXh0UGFyc2Vycy5pbml0KGZ1bmN0aW9uKG9pZCwgY29udmVydGVyKSB7XG4gIHR5cGVQYXJzZXJzLnRleHRbb2lkXSA9IGNvbnZlcnRlcjtcbn0pO1xuXG5iaW5hcnlQYXJzZXJzLmluaXQoZnVuY3Rpb24ob2lkLCBjb252ZXJ0ZXIpIHtcbiAgdHlwZVBhcnNlcnMuYmluYXJ5W29pZF0gPSBjb252ZXJ0ZXI7XG59KTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImFzc2VydFwiKTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJuZXRcIik7IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgc3RyaW5naWZ5ID0gcmVxdWlyZSgnLi9zdHJpbmdpZnknKTtcbnZhciBwYXJzZSA9IHJlcXVpcmUoJy4vcGFyc2UnKTtcbnZhciBmb3JtYXRzID0gcmVxdWlyZSgnLi9mb3JtYXRzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGZvcm1hdHM6IGZvcm1hdHMsXG4gICAgcGFyc2U6IHBhcnNlLFxuICAgIHN0cmluZ2lmeTogc3RyaW5naWZ5XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwidXJsXCIpOyIsIi8qIVxuICogc3RhdHVzZXNcbiAqIENvcHlyaWdodChjKSAyMDE0IEpvbmF0aGFuIE9uZ1xuICogQ29weXJpZ2h0KGMpIDIwMTYgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBjb2RlcyA9IHJlcXVpcmUoJy4vY29kZXMuanNvbicpXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBzdGF0dXNcblxuLy8gc3RhdHVzIGNvZGUgdG8gbWVzc2FnZSBtYXBcbnN0YXR1cy5TVEFUVVNfQ09ERVMgPSBjb2Rlc1xuXG4vLyBhcnJheSBvZiBzdGF0dXMgY29kZXNcbnN0YXR1cy5jb2RlcyA9IHBvcHVsYXRlU3RhdHVzZXNNYXAoc3RhdHVzLCBjb2RlcylcblxuLy8gc3RhdHVzIGNvZGVzIGZvciByZWRpcmVjdHNcbnN0YXR1cy5yZWRpcmVjdCA9IHtcbiAgMzAwOiB0cnVlLFxuICAzMDE6IHRydWUsXG4gIDMwMjogdHJ1ZSxcbiAgMzAzOiB0cnVlLFxuICAzMDU6IHRydWUsXG4gIDMwNzogdHJ1ZSxcbiAgMzA4OiB0cnVlXG59XG5cbi8vIHN0YXR1cyBjb2RlcyBmb3IgZW1wdHkgYm9kaWVzXG5zdGF0dXMuZW1wdHkgPSB7XG4gIDIwNDogdHJ1ZSxcbiAgMjA1OiB0cnVlLFxuICAzMDQ6IHRydWVcbn1cblxuLy8gc3RhdHVzIGNvZGVzIGZvciB3aGVuIHlvdSBzaG91bGQgcmV0cnkgdGhlIHJlcXVlc3RcbnN0YXR1cy5yZXRyeSA9IHtcbiAgNTAyOiB0cnVlLFxuICA1MDM6IHRydWUsXG4gIDUwNDogdHJ1ZVxufVxuXG4vKipcbiAqIFBvcHVsYXRlIHRoZSBzdGF0dXNlcyBtYXAgZm9yIGdpdmVuIGNvZGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwb3B1bGF0ZVN0YXR1c2VzTWFwIChzdGF0dXNlcywgY29kZXMpIHtcbiAgdmFyIGFyciA9IFtdXG5cbiAgT2JqZWN0LmtleXMoY29kZXMpLmZvckVhY2goZnVuY3Rpb24gZm9yRWFjaENvZGUgKGNvZGUpIHtcbiAgICB2YXIgbWVzc2FnZSA9IGNvZGVzW2NvZGVdXG4gICAgdmFyIHN0YXR1cyA9IE51bWJlcihjb2RlKVxuXG4gICAgLy8gUG9wdWxhdGUgcHJvcGVydGllc1xuICAgIHN0YXR1c2VzW3N0YXR1c10gPSBtZXNzYWdlXG4gICAgc3RhdHVzZXNbbWVzc2FnZV0gPSBzdGF0dXNcbiAgICBzdGF0dXNlc1ttZXNzYWdlLnRvTG93ZXJDYXNlKCldID0gc3RhdHVzXG5cbiAgICAvLyBBZGQgdG8gYXJyYXlcbiAgICBhcnIucHVzaChzdGF0dXMpXG4gIH0pXG5cbiAgcmV0dXJuIGFyclxufVxuXG4vKipcbiAqIEdldCB0aGUgc3RhdHVzIGNvZGUuXG4gKlxuICogR2l2ZW4gYSBudW1iZXIsIHRoaXMgd2lsbCB0aHJvdyBpZiBpdCBpcyBub3QgYSBrbm93biBzdGF0dXNcbiAqIGNvZGUsIG90aGVyd2lzZSB0aGUgY29kZSB3aWxsIGJlIHJldHVybmVkLiBHaXZlbiBhIHN0cmluZyxcbiAqIHRoZSBzdHJpbmcgd2lsbCBiZSBwYXJzZWQgZm9yIGEgbnVtYmVyIGFuZCByZXR1cm4gdGhlIGNvZGVcbiAqIGlmIHZhbGlkLCBvdGhlcndpc2Ugd2lsbCBsb29rdXAgdGhlIGNvZGUgYXNzdW1pbmcgdGhpcyBpc1xuICogdGhlIHN0YXR1cyBtZXNzYWdlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gY29kZVxuICogQHJldHVybnMge251bWJlcn1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBzdGF0dXMgKGNvZGUpIHtcbiAgaWYgKHR5cGVvZiBjb2RlID09PSAnbnVtYmVyJykge1xuICAgIGlmICghc3RhdHVzW2NvZGVdKSB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgc3RhdHVzIGNvZGU6ICcgKyBjb2RlKVxuICAgIHJldHVybiBjb2RlXG4gIH1cblxuICBpZiAodHlwZW9mIGNvZGUgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignY29kZSBtdXN0IGJlIGEgbnVtYmVyIG9yIHN0cmluZycpXG4gIH1cblxuICAvLyAnNDAzJ1xuICB2YXIgbiA9IHBhcnNlSW50KGNvZGUsIDEwKVxuICBpZiAoIWlzTmFOKG4pKSB7XG4gICAgaWYgKCFzdGF0dXNbbl0pIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBzdGF0dXMgY29kZTogJyArIG4pXG4gICAgcmV0dXJuIG5cbiAgfVxuXG4gIG4gPSBzdGF0dXNbY29kZS50b0xvd2VyQ2FzZSgpXVxuICBpZiAoIW4pIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBzdGF0dXMgbWVzc2FnZTogXCInICsgY29kZSArICdcIicpXG4gIHJldHVybiBuXG59XG4iLCIvKiFcbiAqIG1ldGhvZHNcbiAqIENvcHlyaWdodChjKSAyMDEzLTIwMTQgVEogSG9sb3dheWNodWtcbiAqIENvcHlyaWdodChjKSAyMDE1LTIwMTYgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKTtcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEN1cnJlbnROb2RlTWV0aG9kcygpIHx8IGdldEJhc2ljTm9kZU1ldGhvZHMoKTtcblxuLyoqXG4gKiBHZXQgdGhlIGN1cnJlbnQgTm9kZS5qcyBtZXRob2RzLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBnZXRDdXJyZW50Tm9kZU1ldGhvZHMoKSB7XG4gIHJldHVybiBodHRwLk1FVEhPRFMgJiYgaHR0cC5NRVRIT0RTLm1hcChmdW5jdGlvbiBsb3dlckNhc2VNZXRob2QobWV0aG9kKSB7XG4gICAgcmV0dXJuIG1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICB9KTtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIFwiYmFzaWNcIiBOb2RlLmpzIG1ldGhvZHMsIGEgc25hcHNob3QgZnJvbSBOb2RlLmpzIDAuMTAuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGdldEJhc2ljTm9kZU1ldGhvZHMoKSB7XG4gIHJldHVybiBbXG4gICAgJ2dldCcsXG4gICAgJ3Bvc3QnLFxuICAgICdwdXQnLFxuICAgICdoZWFkJyxcbiAgICAnZGVsZXRlJyxcbiAgICAnb3B0aW9ucycsXG4gICAgJ3RyYWNlJyxcbiAgICAnY29weScsXG4gICAgJ2xvY2snLFxuICAgICdta2NvbCcsXG4gICAgJ21vdmUnLFxuICAgICdwdXJnZScsXG4gICAgJ3Byb3BmaW5kJyxcbiAgICAncHJvcHBhdGNoJyxcbiAgICAndW5sb2NrJyxcbiAgICAncmVwb3J0JyxcbiAgICAnbWthY3Rpdml0eScsXG4gICAgJ2NoZWNrb3V0JyxcbiAgICAnbWVyZ2UnLFxuICAgICdtLXNlYXJjaCcsXG4gICAgJ25vdGlmeScsXG4gICAgJ3N1YnNjcmliZScsXG4gICAgJ3Vuc3Vic2NyaWJlJyxcbiAgICAncGF0Y2gnLFxuICAgICdzZWFyY2gnLFxuICAgICdjb25uZWN0J1xuICBdO1xufVxuIiwiLyogZXNsaW50LWRpc2FibGUgbm9kZS9uby1kZXByZWNhdGVkLWFwaSAqL1xudmFyIGJ1ZmZlciA9IHJlcXVpcmUoJ2J1ZmZlcicpXG52YXIgQnVmZmVyID0gYnVmZmVyLkJ1ZmZlclxuXG4vLyBhbHRlcm5hdGl2ZSB0byB1c2luZyBPYmplY3Qua2V5cyBmb3Igb2xkIGJyb3dzZXJzXG5mdW5jdGlvbiBjb3B5UHJvcHMgKHNyYywgZHN0KSB7XG4gIGZvciAodmFyIGtleSBpbiBzcmMpIHtcbiAgICBkc3Rba2V5XSA9IHNyY1trZXldXG4gIH1cbn1cbmlmIChCdWZmZXIuZnJvbSAmJiBCdWZmZXIuYWxsb2MgJiYgQnVmZmVyLmFsbG9jVW5zYWZlICYmIEJ1ZmZlci5hbGxvY1Vuc2FmZVNsb3cpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBidWZmZXJcbn0gZWxzZSB7XG4gIC8vIENvcHkgcHJvcGVydGllcyBmcm9tIHJlcXVpcmUoJ2J1ZmZlcicpXG4gIGNvcHlQcm9wcyhidWZmZXIsIGV4cG9ydHMpXG4gIGV4cG9ydHMuQnVmZmVyID0gU2FmZUJ1ZmZlclxufVxuXG5mdW5jdGlvbiBTYWZlQnVmZmVyIChhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gQnVmZmVyKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxufVxuXG4vLyBDb3B5IHN0YXRpYyBtZXRob2RzIGZyb20gQnVmZmVyXG5jb3B5UHJvcHMoQnVmZmVyLCBTYWZlQnVmZmVyKVxuXG5TYWZlQnVmZmVyLmZyb20gPSBmdW5jdGlvbiAoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgaWYgKHR5cGVvZiBhcmcgPT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBub3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHJldHVybiBCdWZmZXIoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG59XG5cblNhZmVCdWZmZXIuYWxsb2MgPSBmdW5jdGlvbiAoc2l6ZSwgZmlsbCwgZW5jb2RpbmcpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHZhciBidWYgPSBCdWZmZXIoc2l6ZSlcbiAgaWYgKGZpbGwgIT09IHVuZGVmaW5lZCkge1xuICAgIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnKSB7XG4gICAgICBidWYuZmlsbChmaWxsLCBlbmNvZGluZylcbiAgICB9IGVsc2Uge1xuICAgICAgYnVmLmZpbGwoZmlsbClcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgYnVmLmZpbGwoMClcbiAgfVxuICByZXR1cm4gYnVmXG59XG5cblNhZmVCdWZmZXIuYWxsb2NVbnNhZmUgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICBpZiAodHlwZW9mIHNpemUgIT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlcicpXG4gIH1cbiAgcmV0dXJuIEJ1ZmZlcihzaXplKVxufVxuXG5TYWZlQnVmZmVyLmFsbG9jVW5zYWZlU2xvdyA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcbiAgfVxuICByZXR1cm4gYnVmZmVyLlNsb3dCdWZmZXIoc2l6ZSlcbn1cbiIsIi8qIVxuICogc2VuZFxuICogQ29weXJpZ2h0KGMpIDIwMTIgVEogSG9sb3dheWNodWtcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTYgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJ2h0dHAtZXJyb3JzJylcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NlbmQnKVxudmFyIGRlcHJlY2F0ZSA9IHJlcXVpcmUoJ2RlcGQnKSgnc2VuZCcpXG52YXIgZGVzdHJveSA9IHJlcXVpcmUoJ2Rlc3Ryb3knKVxudmFyIGVuY29kZVVybCA9IHJlcXVpcmUoJ2VuY29kZXVybCcpXG52YXIgZXNjYXBlSHRtbCA9IHJlcXVpcmUoJ2VzY2FwZS1odG1sJylcbnZhciBldGFnID0gcmVxdWlyZSgnZXRhZycpXG52YXIgZnJlc2ggPSByZXF1aXJlKCdmcmVzaCcpXG52YXIgZnMgPSByZXF1aXJlKCdmcycpXG52YXIgbWltZSA9IHJlcXVpcmUoJ21pbWUnKVxudmFyIG1zID0gcmVxdWlyZSgnbXMnKVxudmFyIG9uRmluaXNoZWQgPSByZXF1aXJlKCdvbi1maW5pc2hlZCcpXG52YXIgcGFyc2VSYW5nZSA9IHJlcXVpcmUoJ3JhbmdlLXBhcnNlcicpXG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxudmFyIHN0YXR1c2VzID0gcmVxdWlyZSgnc3RhdHVzZXMnKVxudmFyIFN0cmVhbSA9IHJlcXVpcmUoJ3N0cmVhbScpXG52YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKVxuXG4vKipcbiAqIFBhdGggZnVuY3Rpb24gcmVmZXJlbmNlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIGV4dG5hbWUgPSBwYXRoLmV4dG5hbWVcbnZhciBqb2luID0gcGF0aC5qb2luXG52YXIgbm9ybWFsaXplID0gcGF0aC5ub3JtYWxpemVcbnZhciByZXNvbHZlID0gcGF0aC5yZXNvbHZlXG52YXIgc2VwID0gcGF0aC5zZXBcblxuLyoqXG4gKiBSZWd1bGFyIGV4cHJlc3Npb24gZm9yIGlkZW50aWZ5aW5nIGEgYnl0ZXMgUmFuZ2UgaGVhZGVyLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgQllURVNfUkFOR0VfUkVHRVhQID0gL14gKmJ5dGVzPS9cblxuLyoqXG4gKiBNYXhpbXVtIHZhbHVlIGFsbG93ZWQgZm9yIHRoZSBtYXggYWdlLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgTUFYX01BWEFHRSA9IDYwICogNjAgKiAyNCAqIDM2NSAqIDEwMDAgLy8gMSB5ZWFyXG5cbi8qKlxuICogUmVndWxhciBleHByZXNzaW9uIHRvIG1hdGNoIGEgcGF0aCB3aXRoIGEgZGlyZWN0b3J5IHVwIGNvbXBvbmVudC5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIFVQX1BBVEhfUkVHRVhQID0gLyg/Ol58W1xcXFwvXSlcXC5cXC4oPzpbXFxcXC9dfCQpL1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gc2VuZFxubW9kdWxlLmV4cG9ydHMubWltZSA9IG1pbWVcblxuLyoqXG4gKiBSZXR1cm4gYSBgU2VuZFN0cmVhbWAgZm9yIGByZXFgIGFuZCBgcGF0aGAuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHJlcVxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm4ge1NlbmRTdHJlYW19XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gc2VuZCAocmVxLCBwYXRoLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgU2VuZFN0cmVhbShyZXEsIHBhdGgsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBhIGBTZW5kU3RyZWFtYCB3aXRoIHRoZSBnaXZlbiBgcGF0aGAuXG4gKlxuICogQHBhcmFtIHtSZXF1ZXN0fSByZXFcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYXRoXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIFNlbmRTdHJlYW0gKHJlcSwgcGF0aCwgb3B0aW9ucykge1xuICBTdHJlYW0uY2FsbCh0aGlzKVxuXG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fVxuXG4gIHRoaXMub3B0aW9ucyA9IG9wdHNcbiAgdGhpcy5wYXRoID0gcGF0aFxuICB0aGlzLnJlcSA9IHJlcVxuXG4gIHRoaXMuX2FjY2VwdFJhbmdlcyA9IG9wdHMuYWNjZXB0UmFuZ2VzICE9PSB1bmRlZmluZWRcbiAgICA/IEJvb2xlYW4ob3B0cy5hY2NlcHRSYW5nZXMpXG4gICAgOiB0cnVlXG5cbiAgdGhpcy5fY2FjaGVDb250cm9sID0gb3B0cy5jYWNoZUNvbnRyb2wgIT09IHVuZGVmaW5lZFxuICAgID8gQm9vbGVhbihvcHRzLmNhY2hlQ29udHJvbClcbiAgICA6IHRydWVcblxuICB0aGlzLl9ldGFnID0gb3B0cy5ldGFnICE9PSB1bmRlZmluZWRcbiAgICA/IEJvb2xlYW4ob3B0cy5ldGFnKVxuICAgIDogdHJ1ZVxuXG4gIHRoaXMuX2RvdGZpbGVzID0gb3B0cy5kb3RmaWxlcyAhPT0gdW5kZWZpbmVkXG4gICAgPyBvcHRzLmRvdGZpbGVzXG4gICAgOiAnaWdub3JlJ1xuXG4gIGlmICh0aGlzLl9kb3RmaWxlcyAhPT0gJ2lnbm9yZScgJiYgdGhpcy5fZG90ZmlsZXMgIT09ICdhbGxvdycgJiYgdGhpcy5fZG90ZmlsZXMgIT09ICdkZW55Jykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2RvdGZpbGVzIG9wdGlvbiBtdXN0IGJlIFwiYWxsb3dcIiwgXCJkZW55XCIsIG9yIFwiaWdub3JlXCInKVxuICB9XG5cbiAgdGhpcy5faGlkZGVuID0gQm9vbGVhbihvcHRzLmhpZGRlbilcblxuICBpZiAob3B0cy5oaWRkZW4gIT09IHVuZGVmaW5lZCkge1xuICAgIGRlcHJlY2F0ZSgnaGlkZGVuOiB1c2UgZG90ZmlsZXM6IFxcJycgKyAodGhpcy5faGlkZGVuID8gJ2FsbG93JyA6ICdpZ25vcmUnKSArICdcXCcgaW5zdGVhZCcpXG4gIH1cblxuICAvLyBsZWdhY3kgc3VwcG9ydFxuICBpZiAob3B0cy5kb3RmaWxlcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhpcy5fZG90ZmlsZXMgPSB1bmRlZmluZWRcbiAgfVxuXG4gIHRoaXMuX2V4dGVuc2lvbnMgPSBvcHRzLmV4dGVuc2lvbnMgIT09IHVuZGVmaW5lZFxuICAgID8gbm9ybWFsaXplTGlzdChvcHRzLmV4dGVuc2lvbnMsICdleHRlbnNpb25zIG9wdGlvbicpXG4gICAgOiBbXVxuXG4gIHRoaXMuX2ltbXV0YWJsZSA9IG9wdHMuaW1tdXRhYmxlICE9PSB1bmRlZmluZWRcbiAgICA/IEJvb2xlYW4ob3B0cy5pbW11dGFibGUpXG4gICAgOiBmYWxzZVxuXG4gIHRoaXMuX2luZGV4ID0gb3B0cy5pbmRleCAhPT0gdW5kZWZpbmVkXG4gICAgPyBub3JtYWxpemVMaXN0KG9wdHMuaW5kZXgsICdpbmRleCBvcHRpb24nKVxuICAgIDogWydpbmRleC5odG1sJ11cblxuICB0aGlzLl9sYXN0TW9kaWZpZWQgPSBvcHRzLmxhc3RNb2RpZmllZCAhPT0gdW5kZWZpbmVkXG4gICAgPyBCb29sZWFuKG9wdHMubGFzdE1vZGlmaWVkKVxuICAgIDogdHJ1ZVxuXG4gIHRoaXMuX21heGFnZSA9IG9wdHMubWF4QWdlIHx8IG9wdHMubWF4YWdlXG4gIHRoaXMuX21heGFnZSA9IHR5cGVvZiB0aGlzLl9tYXhhZ2UgPT09ICdzdHJpbmcnXG4gICAgPyBtcyh0aGlzLl9tYXhhZ2UpXG4gICAgOiBOdW1iZXIodGhpcy5fbWF4YWdlKVxuICB0aGlzLl9tYXhhZ2UgPSAhaXNOYU4odGhpcy5fbWF4YWdlKVxuICAgID8gTWF0aC5taW4oTWF0aC5tYXgoMCwgdGhpcy5fbWF4YWdlKSwgTUFYX01BWEFHRSlcbiAgICA6IDBcblxuICB0aGlzLl9yb290ID0gb3B0cy5yb290XG4gICAgPyByZXNvbHZlKG9wdHMucm9vdClcbiAgICA6IG51bGxcblxuICBpZiAoIXRoaXMuX3Jvb3QgJiYgb3B0cy5mcm9tKSB7XG4gICAgdGhpcy5mcm9tKG9wdHMuZnJvbSlcbiAgfVxufVxuXG4vKipcbiAqIEluaGVyaXRzIGZyb20gYFN0cmVhbWAuXG4gKi9cblxudXRpbC5pbmhlcml0cyhTZW5kU3RyZWFtLCBTdHJlYW0pXG5cbi8qKlxuICogRW5hYmxlIG9yIGRpc2FibGUgZXRhZyBnZW5lcmF0aW9uLlxuICpcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gdmFsXG4gKiBAcmV0dXJuIHtTZW5kU3RyZWFtfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5ldGFnID0gZGVwcmVjYXRlLmZ1bmN0aW9uKGZ1bmN0aW9uIGV0YWcgKHZhbCkge1xuICB0aGlzLl9ldGFnID0gQm9vbGVhbih2YWwpXG4gIGRlYnVnKCdldGFnICVzJywgdGhpcy5fZXRhZylcbiAgcmV0dXJuIHRoaXNcbn0sICdzZW5kLmV0YWc6IHBhc3MgZXRhZyBhcyBvcHRpb24nKVxuXG4vKipcbiAqIEVuYWJsZSBvciBkaXNhYmxlIFwiaGlkZGVuXCIgKGRvdCkgZmlsZXMuXG4gKlxuICogQHBhcmFtIHtCb29sZWFufSBwYXRoXG4gKiBAcmV0dXJuIHtTZW5kU3RyZWFtfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5oaWRkZW4gPSBkZXByZWNhdGUuZnVuY3Rpb24oZnVuY3Rpb24gaGlkZGVuICh2YWwpIHtcbiAgdGhpcy5faGlkZGVuID0gQm9vbGVhbih2YWwpXG4gIHRoaXMuX2RvdGZpbGVzID0gdW5kZWZpbmVkXG4gIGRlYnVnKCdoaWRkZW4gJXMnLCB0aGlzLl9oaWRkZW4pXG4gIHJldHVybiB0aGlzXG59LCAnc2VuZC5oaWRkZW46IHVzZSBkb3RmaWxlcyBvcHRpb24nKVxuXG4vKipcbiAqIFNldCBpbmRleCBgcGF0aHNgLCBzZXQgdG8gYSBmYWxzeVxuICogdmFsdWUgdG8gZGlzYWJsZSBpbmRleCBzdXBwb3J0LlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfEJvb2xlYW58QXJyYXl9IHBhdGhzXG4gKiBAcmV0dXJuIHtTZW5kU3RyZWFtfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5pbmRleCA9IGRlcHJlY2F0ZS5mdW5jdGlvbihmdW5jdGlvbiBpbmRleCAocGF0aHMpIHtcbiAgdmFyIGluZGV4ID0gIXBhdGhzID8gW10gOiBub3JtYWxpemVMaXN0KHBhdGhzLCAncGF0aHMgYXJndW1lbnQnKVxuICBkZWJ1ZygnaW5kZXggJW8nLCBwYXRocylcbiAgdGhpcy5faW5kZXggPSBpbmRleFxuICByZXR1cm4gdGhpc1xufSwgJ3NlbmQuaW5kZXg6IHBhc3MgaW5kZXggYXMgb3B0aW9uJylcblxuLyoqXG4gKiBTZXQgcm9vdCBgcGF0aGAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhdGhcbiAqIEByZXR1cm4ge1NlbmRTdHJlYW19XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblNlbmRTdHJlYW0ucHJvdG90eXBlLnJvb3QgPSBmdW5jdGlvbiByb290IChwYXRoKSB7XG4gIHRoaXMuX3Jvb3QgPSByZXNvbHZlKFN0cmluZyhwYXRoKSlcbiAgZGVidWcoJ3Jvb3QgJXMnLCB0aGlzLl9yb290KVxuICByZXR1cm4gdGhpc1xufVxuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5mcm9tID0gZGVwcmVjYXRlLmZ1bmN0aW9uKFNlbmRTdHJlYW0ucHJvdG90eXBlLnJvb3QsXG4gICdzZW5kLmZyb206IHBhc3Mgcm9vdCBhcyBvcHRpb24nKVxuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5yb290ID0gZGVwcmVjYXRlLmZ1bmN0aW9uKFNlbmRTdHJlYW0ucHJvdG90eXBlLnJvb3QsXG4gICdzZW5kLnJvb3Q6IHBhc3Mgcm9vdCBhcyBvcHRpb24nKVxuXG4vKipcbiAqIFNldCBtYXgtYWdlIHRvIGBtYXhBZ2VgLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBtYXhBZ2VcbiAqIEByZXR1cm4ge1NlbmRTdHJlYW19XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblNlbmRTdHJlYW0ucHJvdG90eXBlLm1heGFnZSA9IGRlcHJlY2F0ZS5mdW5jdGlvbihmdW5jdGlvbiBtYXhhZ2UgKG1heEFnZSkge1xuICB0aGlzLl9tYXhhZ2UgPSB0eXBlb2YgbWF4QWdlID09PSAnc3RyaW5nJ1xuICAgID8gbXMobWF4QWdlKVxuICAgIDogTnVtYmVyKG1heEFnZSlcbiAgdGhpcy5fbWF4YWdlID0gIWlzTmFOKHRoaXMuX21heGFnZSlcbiAgICA/IE1hdGgubWluKE1hdGgubWF4KDAsIHRoaXMuX21heGFnZSksIE1BWF9NQVhBR0UpXG4gICAgOiAwXG4gIGRlYnVnKCdtYXgtYWdlICVkJywgdGhpcy5fbWF4YWdlKVxuICByZXR1cm4gdGhpc1xufSwgJ3NlbmQubWF4YWdlOiBwYXNzIG1heEFnZSBhcyBvcHRpb24nKVxuXG4vKipcbiAqIEVtaXQgZXJyb3Igd2l0aCBgc3RhdHVzYC5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gc3RhdHVzXG4gKiBAcGFyYW0ge0Vycm9yfSBbZXJyXVxuICogQHByaXZhdGVcbiAqL1xuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5lcnJvciA9IGZ1bmN0aW9uIGVycm9yIChzdGF0dXMsIGVycikge1xuICAvLyBlbWl0IGlmIGxpc3RlbmVycyBpbnN0ZWFkIG9mIHJlc3BvbmRpbmdcbiAgaWYgKGhhc0xpc3RlbmVycyh0aGlzLCAnZXJyb3InKSkge1xuICAgIHJldHVybiB0aGlzLmVtaXQoJ2Vycm9yJywgY3JlYXRlRXJyb3Ioc3RhdHVzLCBlcnIsIHtcbiAgICAgIGV4cG9zZTogZmFsc2VcbiAgICB9KSlcbiAgfVxuXG4gIHZhciByZXMgPSB0aGlzLnJlc1xuICB2YXIgbXNnID0gc3RhdHVzZXNbc3RhdHVzXSB8fCBTdHJpbmcoc3RhdHVzKVxuICB2YXIgZG9jID0gY3JlYXRlSHRtbERvY3VtZW50KCdFcnJvcicsIGVzY2FwZUh0bWwobXNnKSlcblxuICAvLyBjbGVhciBleGlzdGluZyBoZWFkZXJzXG4gIGNsZWFySGVhZGVycyhyZXMpXG5cbiAgLy8gYWRkIGVycm9yIGhlYWRlcnNcbiAgaWYgKGVyciAmJiBlcnIuaGVhZGVycykge1xuICAgIHNldEhlYWRlcnMocmVzLCBlcnIuaGVhZGVycylcbiAgfVxuXG4gIC8vIHNlbmQgYmFzaWMgcmVzcG9uc2VcbiAgcmVzLnN0YXR1c0NvZGUgPSBzdGF0dXNcbiAgcmVzLnNldEhlYWRlcignQ29udGVudC1UeXBlJywgJ3RleHQvaHRtbDsgY2hhcnNldD1VVEYtOCcpXG4gIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtTGVuZ3RoJywgQnVmZmVyLmJ5dGVMZW5ndGgoZG9jKSlcbiAgcmVzLnNldEhlYWRlcignQ29udGVudC1TZWN1cml0eS1Qb2xpY3knLCBcImRlZmF1bHQtc3JjICdzZWxmJ1wiKVxuICByZXMuc2V0SGVhZGVyKCdYLUNvbnRlbnQtVHlwZS1PcHRpb25zJywgJ25vc25pZmYnKVxuICByZXMuZW5kKGRvYylcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB0aGUgcGF0aG5hbWUgZW5kcyB3aXRoIFwiL1wiLlxuICpcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKiBAcHJpdmF0ZVxuICovXG5cblNlbmRTdHJlYW0ucHJvdG90eXBlLmhhc1RyYWlsaW5nU2xhc2ggPSBmdW5jdGlvbiBoYXNUcmFpbGluZ1NsYXNoICgpIHtcbiAgcmV0dXJuIHRoaXMucGF0aFt0aGlzLnBhdGgubGVuZ3RoIC0gMV0gPT09ICcvJ1xufVxuXG4vKipcbiAqIENoZWNrIGlmIHRoaXMgaXMgYSBjb25kaXRpb25hbCBHRVQgcmVxdWVzdC5cbiAqXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuU2VuZFN0cmVhbS5wcm90b3R5cGUuaXNDb25kaXRpb25hbEdFVCA9IGZ1bmN0aW9uIGlzQ29uZGl0aW9uYWxHRVQgKCkge1xuICByZXR1cm4gdGhpcy5yZXEuaGVhZGVyc1snaWYtbWF0Y2gnXSB8fFxuICAgIHRoaXMucmVxLmhlYWRlcnNbJ2lmLXVubW9kaWZpZWQtc2luY2UnXSB8fFxuICAgIHRoaXMucmVxLmhlYWRlcnNbJ2lmLW5vbmUtbWF0Y2gnXSB8fFxuICAgIHRoaXMucmVxLmhlYWRlcnNbJ2lmLW1vZGlmaWVkLXNpbmNlJ11cbn1cblxuLyoqXG4gKiBDaGVjayBpZiB0aGUgcmVxdWVzdCBwcmVjb25kaXRpb25zIGZhaWxlZC5cbiAqXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICogQHByaXZhdGVcbiAqL1xuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5pc1ByZWNvbmRpdGlvbkZhaWx1cmUgPSBmdW5jdGlvbiBpc1ByZWNvbmRpdGlvbkZhaWx1cmUgKCkge1xuICB2YXIgcmVxID0gdGhpcy5yZXFcbiAgdmFyIHJlcyA9IHRoaXMucmVzXG5cbiAgLy8gaWYtbWF0Y2hcbiAgdmFyIG1hdGNoID0gcmVxLmhlYWRlcnNbJ2lmLW1hdGNoJ11cbiAgaWYgKG1hdGNoKSB7XG4gICAgdmFyIGV0YWcgPSByZXMuZ2V0SGVhZGVyKCdFVGFnJylcbiAgICByZXR1cm4gIWV0YWcgfHwgKG1hdGNoICE9PSAnKicgJiYgcGFyc2VUb2tlbkxpc3QobWF0Y2gpLmV2ZXJ5KGZ1bmN0aW9uIChtYXRjaCkge1xuICAgICAgcmV0dXJuIG1hdGNoICE9PSBldGFnICYmIG1hdGNoICE9PSAnVy8nICsgZXRhZyAmJiAnVy8nICsgbWF0Y2ggIT09IGV0YWdcbiAgICB9KSlcbiAgfVxuXG4gIC8vIGlmLXVubW9kaWZpZWQtc2luY2VcbiAgdmFyIHVubW9kaWZpZWRTaW5jZSA9IHBhcnNlSHR0cERhdGUocmVxLmhlYWRlcnNbJ2lmLXVubW9kaWZpZWQtc2luY2UnXSlcbiAgaWYgKCFpc05hTih1bm1vZGlmaWVkU2luY2UpKSB7XG4gICAgdmFyIGxhc3RNb2RpZmllZCA9IHBhcnNlSHR0cERhdGUocmVzLmdldEhlYWRlcignTGFzdC1Nb2RpZmllZCcpKVxuICAgIHJldHVybiBpc05hTihsYXN0TW9kaWZpZWQpIHx8IGxhc3RNb2RpZmllZCA+IHVubW9kaWZpZWRTaW5jZVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlXG59XG5cbi8qKlxuICogU3RyaXAgY29udGVudC0qIGhlYWRlciBmaWVsZHMuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5yZW1vdmVDb250ZW50SGVhZGVyRmllbGRzID0gZnVuY3Rpb24gcmVtb3ZlQ29udGVudEhlYWRlckZpZWxkcyAoKSB7XG4gIHZhciByZXMgPSB0aGlzLnJlc1xuICB2YXIgaGVhZGVycyA9IGdldEhlYWRlck5hbWVzKHJlcylcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGhlYWRlcnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaGVhZGVyID0gaGVhZGVyc1tpXVxuICAgIGlmIChoZWFkZXIuc3Vic3RyKDAsIDgpID09PSAnY29udGVudC0nICYmIGhlYWRlciAhPT0gJ2NvbnRlbnQtbG9jYXRpb24nKSB7XG4gICAgICByZXMucmVtb3ZlSGVhZGVyKGhlYWRlcilcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBSZXNwb25kIHdpdGggMzA0IG5vdCBtb2RpZmllZC5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5ub3RNb2RpZmllZCA9IGZ1bmN0aW9uIG5vdE1vZGlmaWVkICgpIHtcbiAgdmFyIHJlcyA9IHRoaXMucmVzXG4gIGRlYnVnKCdub3QgbW9kaWZpZWQnKVxuICB0aGlzLnJlbW92ZUNvbnRlbnRIZWFkZXJGaWVsZHMoKVxuICByZXMuc3RhdHVzQ29kZSA9IDMwNFxuICByZXMuZW5kKClcbn1cblxuLyoqXG4gKiBSYWlzZSBlcnJvciB0aGF0IGhlYWRlcnMgYWxyZWFkeSBzZW50LlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblNlbmRTdHJlYW0ucHJvdG90eXBlLmhlYWRlcnNBbHJlYWR5U2VudCA9IGZ1bmN0aW9uIGhlYWRlcnNBbHJlYWR5U2VudCAoKSB7XG4gIHZhciBlcnIgPSBuZXcgRXJyb3IoJ0NhblxcJ3Qgc2V0IGhlYWRlcnMgYWZ0ZXIgdGhleSBhcmUgc2VudC4nKVxuICBkZWJ1ZygnaGVhZGVycyBhbHJlYWR5IHNlbnQnKVxuICB0aGlzLmVycm9yKDUwMCwgZXJyKVxufVxuXG4vKipcbiAqIENoZWNrIGlmIHRoZSByZXF1ZXN0IGlzIGNhY2hlYWJsZSwgYWthXG4gKiByZXNwb25kZWQgd2l0aCAyeHggb3IgMzA0IChzZWUgUkZDIDI2MTYgc2VjdGlvbiAxNC4yezUsNn0pLlxuICpcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5pc0NhY2hhYmxlID0gZnVuY3Rpb24gaXNDYWNoYWJsZSAoKSB7XG4gIHZhciBzdGF0dXNDb2RlID0gdGhpcy5yZXMuc3RhdHVzQ29kZVxuICByZXR1cm4gKHN0YXR1c0NvZGUgPj0gMjAwICYmIHN0YXR1c0NvZGUgPCAzMDApIHx8XG4gICAgc3RhdHVzQ29kZSA9PT0gMzA0XG59XG5cbi8qKlxuICogSGFuZGxlIHN0YXQoKSBlcnJvci5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJvclxuICogQHByaXZhdGVcbiAqL1xuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5vblN0YXRFcnJvciA9IGZ1bmN0aW9uIG9uU3RhdEVycm9yIChlcnJvcikge1xuICBzd2l0Y2ggKGVycm9yLmNvZGUpIHtcbiAgICBjYXNlICdFTkFNRVRPT0xPTkcnOlxuICAgIGNhc2UgJ0VOT0VOVCc6XG4gICAgY2FzZSAnRU5PVERJUic6XG4gICAgICB0aGlzLmVycm9yKDQwNCwgZXJyb3IpXG4gICAgICBicmVha1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aGlzLmVycm9yKDUwMCwgZXJyb3IpXG4gICAgICBicmVha1xuICB9XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhlIGNhY2hlIGlzIGZyZXNoLlxuICpcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5pc0ZyZXNoID0gZnVuY3Rpb24gaXNGcmVzaCAoKSB7XG4gIHJldHVybiBmcmVzaCh0aGlzLnJlcS5oZWFkZXJzLCB7XG4gICAgJ2V0YWcnOiB0aGlzLnJlcy5nZXRIZWFkZXIoJ0VUYWcnKSxcbiAgICAnbGFzdC1tb2RpZmllZCc6IHRoaXMucmVzLmdldEhlYWRlcignTGFzdC1Nb2RpZmllZCcpXG4gIH0pXG59XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhlIHJhbmdlIGlzIGZyZXNoLlxuICpcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5pc1JhbmdlRnJlc2ggPSBmdW5jdGlvbiBpc1JhbmdlRnJlc2ggKCkge1xuICB2YXIgaWZSYW5nZSA9IHRoaXMucmVxLmhlYWRlcnNbJ2lmLXJhbmdlJ11cblxuICBpZiAoIWlmUmFuZ2UpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgLy8gaWYtcmFuZ2UgYXMgZXRhZ1xuICBpZiAoaWZSYW5nZS5pbmRleE9mKCdcIicpICE9PSAtMSkge1xuICAgIHZhciBldGFnID0gdGhpcy5yZXMuZ2V0SGVhZGVyKCdFVGFnJylcbiAgICByZXR1cm4gQm9vbGVhbihldGFnICYmIGlmUmFuZ2UuaW5kZXhPZihldGFnKSAhPT0gLTEpXG4gIH1cblxuICAvLyBpZi1yYW5nZSBhcyBtb2RpZmllZCBkYXRlXG4gIHZhciBsYXN0TW9kaWZpZWQgPSB0aGlzLnJlcy5nZXRIZWFkZXIoJ0xhc3QtTW9kaWZpZWQnKVxuICByZXR1cm4gcGFyc2VIdHRwRGF0ZShsYXN0TW9kaWZpZWQpIDw9IHBhcnNlSHR0cERhdGUoaWZSYW5nZSlcbn1cblxuLyoqXG4gKiBSZWRpcmVjdCB0byBwYXRoLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoXG4gKiBAcHJpdmF0ZVxuICovXG5cblNlbmRTdHJlYW0ucHJvdG90eXBlLnJlZGlyZWN0ID0gZnVuY3Rpb24gcmVkaXJlY3QgKHBhdGgpIHtcbiAgdmFyIHJlcyA9IHRoaXMucmVzXG5cbiAgaWYgKGhhc0xpc3RlbmVycyh0aGlzLCAnZGlyZWN0b3J5JykpIHtcbiAgICB0aGlzLmVtaXQoJ2RpcmVjdG9yeScsIHJlcywgcGF0aClcbiAgICByZXR1cm5cbiAgfVxuXG4gIGlmICh0aGlzLmhhc1RyYWlsaW5nU2xhc2goKSkge1xuICAgIHRoaXMuZXJyb3IoNDAzKVxuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIGxvYyA9IGVuY29kZVVybChjb2xsYXBzZUxlYWRpbmdTbGFzaGVzKHRoaXMucGF0aCArICcvJykpXG4gIHZhciBkb2MgPSBjcmVhdGVIdG1sRG9jdW1lbnQoJ1JlZGlyZWN0aW5nJywgJ1JlZGlyZWN0aW5nIHRvIDxhIGhyZWY9XCInICsgZXNjYXBlSHRtbChsb2MpICsgJ1wiPicgK1xuICAgIGVzY2FwZUh0bWwobG9jKSArICc8L2E+JylcblxuICAvLyByZWRpcmVjdFxuICByZXMuc3RhdHVzQ29kZSA9IDMwMVxuICByZXMuc2V0SGVhZGVyKCdDb250ZW50LVR5cGUnLCAndGV4dC9odG1sOyBjaGFyc2V0PVVURi04JylcbiAgcmVzLnNldEhlYWRlcignQ29udGVudC1MZW5ndGgnLCBCdWZmZXIuYnl0ZUxlbmd0aChkb2MpKVxuICByZXMuc2V0SGVhZGVyKCdDb250ZW50LVNlY3VyaXR5LVBvbGljeScsIFwiZGVmYXVsdC1zcmMgJ3NlbGYnXCIpXG4gIHJlcy5zZXRIZWFkZXIoJ1gtQ29udGVudC1UeXBlLU9wdGlvbnMnLCAnbm9zbmlmZicpXG4gIHJlcy5zZXRIZWFkZXIoJ0xvY2F0aW9uJywgbG9jKVxuICByZXMuZW5kKGRvYylcbn1cblxuLyoqXG4gKiBQaXBlIHRvIGByZXMuXG4gKlxuICogQHBhcmFtIHtTdHJlYW19IHJlc1xuICogQHJldHVybiB7U3RyZWFtfSByZXNcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuU2VuZFN0cmVhbS5wcm90b3R5cGUucGlwZSA9IGZ1bmN0aW9uIHBpcGUgKHJlcykge1xuICAvLyByb290IHBhdGhcbiAgdmFyIHJvb3QgPSB0aGlzLl9yb290XG5cbiAgLy8gcmVmZXJlbmNlc1xuICB0aGlzLnJlcyA9IHJlc1xuXG4gIC8vIGRlY29kZSB0aGUgcGF0aFxuICB2YXIgcGF0aCA9IGRlY29kZSh0aGlzLnBhdGgpXG4gIGlmIChwYXRoID09PSAtMSkge1xuICAgIHRoaXMuZXJyb3IoNDAwKVxuICAgIHJldHVybiByZXNcbiAgfVxuXG4gIC8vIG51bGwgYnl0ZShzKVxuICBpZiAofnBhdGguaW5kZXhPZignXFwwJykpIHtcbiAgICB0aGlzLmVycm9yKDQwMClcbiAgICByZXR1cm4gcmVzXG4gIH1cblxuICB2YXIgcGFydHNcbiAgaWYgKHJvb3QgIT09IG51bGwpIHtcbiAgICAvLyBub3JtYWxpemVcbiAgICBpZiAocGF0aCkge1xuICAgICAgcGF0aCA9IG5vcm1hbGl6ZSgnLicgKyBzZXAgKyBwYXRoKVxuICAgIH1cblxuICAgIC8vIG1hbGljaW91cyBwYXRoXG4gICAgaWYgKFVQX1BBVEhfUkVHRVhQLnRlc3QocGF0aCkpIHtcbiAgICAgIGRlYnVnKCdtYWxpY2lvdXMgcGF0aCBcIiVzXCInLCBwYXRoKVxuICAgICAgdGhpcy5lcnJvcig0MDMpXG4gICAgICByZXR1cm4gcmVzXG4gICAgfVxuXG4gICAgLy8gZXhwbG9kZSBwYXRoIHBhcnRzXG4gICAgcGFydHMgPSBwYXRoLnNwbGl0KHNlcClcblxuICAgIC8vIGpvaW4gLyBub3JtYWxpemUgZnJvbSBvcHRpb25hbCByb290IGRpclxuICAgIHBhdGggPSBub3JtYWxpemUoam9pbihyb290LCBwYXRoKSlcbiAgICByb290ID0gbm9ybWFsaXplKHJvb3QgKyBzZXApXG4gIH0gZWxzZSB7XG4gICAgLy8gXCIuLlwiIGlzIG1hbGljaW91cyB3aXRob3V0IFwicm9vdFwiXG4gICAgaWYgKFVQX1BBVEhfUkVHRVhQLnRlc3QocGF0aCkpIHtcbiAgICAgIGRlYnVnKCdtYWxpY2lvdXMgcGF0aCBcIiVzXCInLCBwYXRoKVxuICAgICAgdGhpcy5lcnJvcig0MDMpXG4gICAgICByZXR1cm4gcmVzXG4gICAgfVxuXG4gICAgLy8gZXhwbG9kZSBwYXRoIHBhcnRzXG4gICAgcGFydHMgPSBub3JtYWxpemUocGF0aCkuc3BsaXQoc2VwKVxuXG4gICAgLy8gcmVzb2x2ZSB0aGUgcGF0aFxuICAgIHBhdGggPSByZXNvbHZlKHBhdGgpXG4gIH1cblxuICAvLyBkb3RmaWxlIGhhbmRsaW5nXG4gIGlmIChjb250YWluc0RvdEZpbGUocGFydHMpKSB7XG4gICAgdmFyIGFjY2VzcyA9IHRoaXMuX2RvdGZpbGVzXG5cbiAgICAvLyBsZWdhY3kgc3VwcG9ydFxuICAgIGlmIChhY2Nlc3MgPT09IHVuZGVmaW5lZCkge1xuICAgICAgYWNjZXNzID0gcGFydHNbcGFydHMubGVuZ3RoIC0gMV1bMF0gPT09ICcuJ1xuICAgICAgICA/ICh0aGlzLl9oaWRkZW4gPyAnYWxsb3cnIDogJ2lnbm9yZScpXG4gICAgICAgIDogJ2FsbG93J1xuICAgIH1cblxuICAgIGRlYnVnKCclcyBkb3RmaWxlIFwiJXNcIicsIGFjY2VzcywgcGF0aClcbiAgICBzd2l0Y2ggKGFjY2Vzcykge1xuICAgICAgY2FzZSAnYWxsb3cnOlxuICAgICAgICBicmVha1xuICAgICAgY2FzZSAnZGVueSc6XG4gICAgICAgIHRoaXMuZXJyb3IoNDAzKVxuICAgICAgICByZXR1cm4gcmVzXG4gICAgICBjYXNlICdpZ25vcmUnOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhpcy5lcnJvcig0MDQpXG4gICAgICAgIHJldHVybiByZXNcbiAgICB9XG4gIH1cblxuICAvLyBpbmRleCBmaWxlIHN1cHBvcnRcbiAgaWYgKHRoaXMuX2luZGV4Lmxlbmd0aCAmJiB0aGlzLmhhc1RyYWlsaW5nU2xhc2goKSkge1xuICAgIHRoaXMuc2VuZEluZGV4KHBhdGgpXG4gICAgcmV0dXJuIHJlc1xuICB9XG5cbiAgdGhpcy5zZW5kRmlsZShwYXRoKVxuICByZXR1cm4gcmVzXG59XG5cbi8qKlxuICogVHJhbnNmZXIgYHBhdGhgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYXRoXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblNlbmRTdHJlYW0ucHJvdG90eXBlLnNlbmQgPSBmdW5jdGlvbiBzZW5kIChwYXRoLCBzdGF0KSB7XG4gIHZhciBsZW4gPSBzdGF0LnNpemVcbiAgdmFyIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnNcbiAgdmFyIG9wdHMgPSB7fVxuICB2YXIgcmVzID0gdGhpcy5yZXNcbiAgdmFyIHJlcSA9IHRoaXMucmVxXG4gIHZhciByYW5nZXMgPSByZXEuaGVhZGVycy5yYW5nZVxuICB2YXIgb2Zmc2V0ID0gb3B0aW9ucy5zdGFydCB8fCAwXG5cbiAgaWYgKGhlYWRlcnNTZW50KHJlcykpIHtcbiAgICAvLyBpbXBvc3NpYmxlIHRvIHNlbmQgbm93XG4gICAgdGhpcy5oZWFkZXJzQWxyZWFkeVNlbnQoKVxuICAgIHJldHVyblxuICB9XG5cbiAgZGVidWcoJ3BpcGUgXCIlc1wiJywgcGF0aClcblxuICAvLyBzZXQgaGVhZGVyIGZpZWxkc1xuICB0aGlzLnNldEhlYWRlcihwYXRoLCBzdGF0KVxuXG4gIC8vIHNldCBjb250ZW50LXR5cGVcbiAgdGhpcy50eXBlKHBhdGgpXG5cbiAgLy8gY29uZGl0aW9uYWwgR0VUIHN1cHBvcnRcbiAgaWYgKHRoaXMuaXNDb25kaXRpb25hbEdFVCgpKSB7XG4gICAgaWYgKHRoaXMuaXNQcmVjb25kaXRpb25GYWlsdXJlKCkpIHtcbiAgICAgIHRoaXMuZXJyb3IoNDEyKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaXNDYWNoYWJsZSgpICYmIHRoaXMuaXNGcmVzaCgpKSB7XG4gICAgICB0aGlzLm5vdE1vZGlmaWVkKClcbiAgICAgIHJldHVyblxuICAgIH1cbiAgfVxuXG4gIC8vIGFkanVzdCBsZW4gdG8gc3RhcnQvZW5kIG9wdGlvbnNcbiAgbGVuID0gTWF0aC5tYXgoMCwgbGVuIC0gb2Zmc2V0KVxuICBpZiAob3B0aW9ucy5lbmQgIT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBieXRlcyA9IG9wdGlvbnMuZW5kIC0gb2Zmc2V0ICsgMVxuICAgIGlmIChsZW4gPiBieXRlcykgbGVuID0gYnl0ZXNcbiAgfVxuXG4gIC8vIFJhbmdlIHN1cHBvcnRcbiAgaWYgKHRoaXMuX2FjY2VwdFJhbmdlcyAmJiBCWVRFU19SQU5HRV9SRUdFWFAudGVzdChyYW5nZXMpKSB7XG4gICAgLy8gcGFyc2VcbiAgICByYW5nZXMgPSBwYXJzZVJhbmdlKGxlbiwgcmFuZ2VzLCB7XG4gICAgICBjb21iaW5lOiB0cnVlXG4gICAgfSlcblxuICAgIC8vIElmLVJhbmdlIHN1cHBvcnRcbiAgICBpZiAoIXRoaXMuaXNSYW5nZUZyZXNoKCkpIHtcbiAgICAgIGRlYnVnKCdyYW5nZSBzdGFsZScpXG4gICAgICByYW5nZXMgPSAtMlxuICAgIH1cblxuICAgIC8vIHVuc2F0aXNmaWFibGVcbiAgICBpZiAocmFuZ2VzID09PSAtMSkge1xuICAgICAgZGVidWcoJ3JhbmdlIHVuc2F0aXNmaWFibGUnKVxuXG4gICAgICAvLyBDb250ZW50LVJhbmdlXG4gICAgICByZXMuc2V0SGVhZGVyKCdDb250ZW50LVJhbmdlJywgY29udGVudFJhbmdlKCdieXRlcycsIGxlbikpXG5cbiAgICAgIC8vIDQxNiBSZXF1ZXN0ZWQgUmFuZ2UgTm90IFNhdGlzZmlhYmxlXG4gICAgICByZXR1cm4gdGhpcy5lcnJvcig0MTYsIHtcbiAgICAgICAgaGVhZGVyczogeydDb250ZW50LVJhbmdlJzogcmVzLmdldEhlYWRlcignQ29udGVudC1SYW5nZScpfVxuICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyB2YWxpZCAoc3ludGFjdGljYWxseSBpbnZhbGlkL211bHRpcGxlIHJhbmdlcyBhcmUgdHJlYXRlZCBhcyBhIHJlZ3VsYXIgcmVzcG9uc2UpXG4gICAgaWYgKHJhbmdlcyAhPT0gLTIgJiYgcmFuZ2VzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgZGVidWcoJ3JhbmdlICVqJywgcmFuZ2VzKVxuXG4gICAgICAvLyBDb250ZW50LVJhbmdlXG4gICAgICByZXMuc3RhdHVzQ29kZSA9IDIwNlxuICAgICAgcmVzLnNldEhlYWRlcignQ29udGVudC1SYW5nZScsIGNvbnRlbnRSYW5nZSgnYnl0ZXMnLCBsZW4sIHJhbmdlc1swXSkpXG5cbiAgICAgIC8vIGFkanVzdCBmb3IgcmVxdWVzdGVkIHJhbmdlXG4gICAgICBvZmZzZXQgKz0gcmFuZ2VzWzBdLnN0YXJ0XG4gICAgICBsZW4gPSByYW5nZXNbMF0uZW5kIC0gcmFuZ2VzWzBdLnN0YXJ0ICsgMVxuICAgIH1cbiAgfVxuXG4gIC8vIGNsb25lIG9wdGlvbnNcbiAgZm9yICh2YXIgcHJvcCBpbiBvcHRpb25zKSB7XG4gICAgb3B0c1twcm9wXSA9IG9wdGlvbnNbcHJvcF1cbiAgfVxuXG4gIC8vIHNldCByZWFkIG9wdGlvbnNcbiAgb3B0cy5zdGFydCA9IG9mZnNldFxuICBvcHRzLmVuZCA9IE1hdGgubWF4KG9mZnNldCwgb2Zmc2V0ICsgbGVuIC0gMSlcblxuICAvLyBjb250ZW50LWxlbmd0aFxuICByZXMuc2V0SGVhZGVyKCdDb250ZW50LUxlbmd0aCcsIGxlbilcblxuICAvLyBIRUFEIHN1cHBvcnRcbiAgaWYgKHJlcS5tZXRob2QgPT09ICdIRUFEJykge1xuICAgIHJlcy5lbmQoKVxuICAgIHJldHVyblxuICB9XG5cbiAgdGhpcy5zdHJlYW0ocGF0aCwgb3B0cylcbn1cblxuLyoqXG4gKiBUcmFuc2ZlciBmaWxlIGZvciBgcGF0aGAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhdGhcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5TZW5kU3RyZWFtLnByb3RvdHlwZS5zZW5kRmlsZSA9IGZ1bmN0aW9uIHNlbmRGaWxlIChwYXRoKSB7XG4gIHZhciBpID0gMFxuICB2YXIgc2VsZiA9IHRoaXNcblxuICBkZWJ1Zygnc3RhdCBcIiVzXCInLCBwYXRoKVxuICBmcy5zdGF0KHBhdGgsIGZ1bmN0aW9uIG9uc3RhdCAoZXJyLCBzdGF0KSB7XG4gICAgaWYgKGVyciAmJiBlcnIuY29kZSA9PT0gJ0VOT0VOVCcgJiYgIWV4dG5hbWUocGF0aCkgJiYgcGF0aFtwYXRoLmxlbmd0aCAtIDFdICE9PSBzZXApIHtcbiAgICAgIC8vIG5vdCBmb3VuZCwgY2hlY2sgZXh0ZW5zaW9uc1xuICAgICAgcmV0dXJuIG5leHQoZXJyKVxuICAgIH1cbiAgICBpZiAoZXJyKSByZXR1cm4gc2VsZi5vblN0YXRFcnJvcihlcnIpXG4gICAgaWYgKHN0YXQuaXNEaXJlY3RvcnkoKSkgcmV0dXJuIHNlbGYucmVkaXJlY3QocGF0aClcbiAgICBzZWxmLmVtaXQoJ2ZpbGUnLCBwYXRoLCBzdGF0KVxuICAgIHNlbGYuc2VuZChwYXRoLCBzdGF0KVxuICB9KVxuXG4gIGZ1bmN0aW9uIG5leHQgKGVycikge1xuICAgIGlmIChzZWxmLl9leHRlbnNpb25zLmxlbmd0aCA8PSBpKSB7XG4gICAgICByZXR1cm4gZXJyXG4gICAgICAgID8gc2VsZi5vblN0YXRFcnJvcihlcnIpXG4gICAgICAgIDogc2VsZi5lcnJvcig0MDQpXG4gICAgfVxuXG4gICAgdmFyIHAgPSBwYXRoICsgJy4nICsgc2VsZi5fZXh0ZW5zaW9uc1tpKytdXG5cbiAgICBkZWJ1Zygnc3RhdCBcIiVzXCInLCBwKVxuICAgIGZzLnN0YXQocCwgZnVuY3Rpb24gKGVyciwgc3RhdCkge1xuICAgICAgaWYgKGVycikgcmV0dXJuIG5leHQoZXJyKVxuICAgICAgaWYgKHN0YXQuaXNEaXJlY3RvcnkoKSkgcmV0dXJuIG5leHQoKVxuICAgICAgc2VsZi5lbWl0KCdmaWxlJywgcCwgc3RhdClcbiAgICAgIHNlbGYuc2VuZChwLCBzdGF0KVxuICAgIH0pXG4gIH1cbn1cblxuLyoqXG4gKiBUcmFuc2ZlciBpbmRleCBmb3IgYHBhdGhgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYXRoXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuU2VuZFN0cmVhbS5wcm90b3R5cGUuc2VuZEluZGV4ID0gZnVuY3Rpb24gc2VuZEluZGV4IChwYXRoKSB7XG4gIHZhciBpID0gLTFcbiAgdmFyIHNlbGYgPSB0aGlzXG5cbiAgZnVuY3Rpb24gbmV4dCAoZXJyKSB7XG4gICAgaWYgKCsraSA+PSBzZWxmLl9pbmRleC5sZW5ndGgpIHtcbiAgICAgIGlmIChlcnIpIHJldHVybiBzZWxmLm9uU3RhdEVycm9yKGVycilcbiAgICAgIHJldHVybiBzZWxmLmVycm9yKDQwNClcbiAgICB9XG5cbiAgICB2YXIgcCA9IGpvaW4ocGF0aCwgc2VsZi5faW5kZXhbaV0pXG5cbiAgICBkZWJ1Zygnc3RhdCBcIiVzXCInLCBwKVxuICAgIGZzLnN0YXQocCwgZnVuY3Rpb24gKGVyciwgc3RhdCkge1xuICAgICAgaWYgKGVycikgcmV0dXJuIG5leHQoZXJyKVxuICAgICAgaWYgKHN0YXQuaXNEaXJlY3RvcnkoKSkgcmV0dXJuIG5leHQoKVxuICAgICAgc2VsZi5lbWl0KCdmaWxlJywgcCwgc3RhdClcbiAgICAgIHNlbGYuc2VuZChwLCBzdGF0KVxuICAgIH0pXG4gIH1cblxuICBuZXh0KClcbn1cblxuLyoqXG4gKiBTdHJlYW0gYHBhdGhgIHRvIHRoZSByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcGF0aFxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblNlbmRTdHJlYW0ucHJvdG90eXBlLnN0cmVhbSA9IGZ1bmN0aW9uIHN0cmVhbSAocGF0aCwgb3B0aW9ucykge1xuICAvLyBUT0RPOiB0aGlzIGlzIGFsbCBsYW1lLCByZWZhY3RvciBtZWVlZVxuICB2YXIgZmluaXNoZWQgPSBmYWxzZVxuICB2YXIgc2VsZiA9IHRoaXNcbiAgdmFyIHJlcyA9IHRoaXMucmVzXG5cbiAgLy8gcGlwZVxuICB2YXIgc3RyZWFtID0gZnMuY3JlYXRlUmVhZFN0cmVhbShwYXRoLCBvcHRpb25zKVxuICB0aGlzLmVtaXQoJ3N0cmVhbScsIHN0cmVhbSlcbiAgc3RyZWFtLnBpcGUocmVzKVxuXG4gIC8vIHJlc3BvbnNlIGZpbmlzaGVkLCBkb25lIHdpdGggdGhlIGZkXG4gIG9uRmluaXNoZWQocmVzLCBmdW5jdGlvbiBvbmZpbmlzaGVkICgpIHtcbiAgICBmaW5pc2hlZCA9IHRydWVcbiAgICBkZXN0cm95KHN0cmVhbSlcbiAgfSlcblxuICAvLyBlcnJvciBoYW5kbGluZyBjb2RlLXNtZWxsXG4gIHN0cmVhbS5vbignZXJyb3InLCBmdW5jdGlvbiBvbmVycm9yIChlcnIpIHtcbiAgICAvLyByZXF1ZXN0IGFscmVhZHkgZmluaXNoZWRcbiAgICBpZiAoZmluaXNoZWQpIHJldHVyblxuXG4gICAgLy8gY2xlYW4gdXAgc3RyZWFtXG4gICAgZmluaXNoZWQgPSB0cnVlXG4gICAgZGVzdHJveShzdHJlYW0pXG5cbiAgICAvLyBlcnJvclxuICAgIHNlbGYub25TdGF0RXJyb3IoZXJyKVxuICB9KVxuXG4gIC8vIGVuZFxuICBzdHJlYW0ub24oJ2VuZCcsIGZ1bmN0aW9uIG9uZW5kICgpIHtcbiAgICBzZWxmLmVtaXQoJ2VuZCcpXG4gIH0pXG59XG5cbi8qKlxuICogU2V0IGNvbnRlbnQtdHlwZSBiYXNlZCBvbiBgcGF0aGBcbiAqIGlmIGl0IGhhc24ndCBiZWVuIGV4cGxpY2l0bHkgc2V0LlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYXRoXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5TZW5kU3RyZWFtLnByb3RvdHlwZS50eXBlID0gZnVuY3Rpb24gdHlwZSAocGF0aCkge1xuICB2YXIgcmVzID0gdGhpcy5yZXNcblxuICBpZiAocmVzLmdldEhlYWRlcignQ29udGVudC1UeXBlJykpIHJldHVyblxuXG4gIHZhciB0eXBlID0gbWltZS5sb29rdXAocGF0aClcblxuICBpZiAoIXR5cGUpIHtcbiAgICBkZWJ1Zygnbm8gY29udGVudC10eXBlJylcbiAgICByZXR1cm5cbiAgfVxuXG4gIHZhciBjaGFyc2V0ID0gbWltZS5jaGFyc2V0cy5sb29rdXAodHlwZSlcblxuICBkZWJ1ZygnY29udGVudC10eXBlICVzJywgdHlwZSlcbiAgcmVzLnNldEhlYWRlcignQ29udGVudC1UeXBlJywgdHlwZSArIChjaGFyc2V0ID8gJzsgY2hhcnNldD0nICsgY2hhcnNldCA6ICcnKSlcbn1cblxuLyoqXG4gKiBTZXQgcmVzcG9uc2UgaGVhZGVyIGZpZWxkcywgbW9zdFxuICogZmllbGRzIG1heSBiZSBwcmUtZGVmaW5lZC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcGF0aFxuICogQHBhcmFtIHtPYmplY3R9IHN0YXRcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblNlbmRTdHJlYW0ucHJvdG90eXBlLnNldEhlYWRlciA9IGZ1bmN0aW9uIHNldEhlYWRlciAocGF0aCwgc3RhdCkge1xuICB2YXIgcmVzID0gdGhpcy5yZXNcblxuICB0aGlzLmVtaXQoJ2hlYWRlcnMnLCByZXMsIHBhdGgsIHN0YXQpXG5cbiAgaWYgKHRoaXMuX2FjY2VwdFJhbmdlcyAmJiAhcmVzLmdldEhlYWRlcignQWNjZXB0LVJhbmdlcycpKSB7XG4gICAgZGVidWcoJ2FjY2VwdCByYW5nZXMnKVxuICAgIHJlcy5zZXRIZWFkZXIoJ0FjY2VwdC1SYW5nZXMnLCAnYnl0ZXMnKVxuICB9XG5cbiAgaWYgKHRoaXMuX2NhY2hlQ29udHJvbCAmJiAhcmVzLmdldEhlYWRlcignQ2FjaGUtQ29udHJvbCcpKSB7XG4gICAgdmFyIGNhY2hlQ29udHJvbCA9ICdwdWJsaWMsIG1heC1hZ2U9JyArIE1hdGguZmxvb3IodGhpcy5fbWF4YWdlIC8gMTAwMClcblxuICAgIGlmICh0aGlzLl9pbW11dGFibGUpIHtcbiAgICAgIGNhY2hlQ29udHJvbCArPSAnLCBpbW11dGFibGUnXG4gICAgfVxuXG4gICAgZGVidWcoJ2NhY2hlLWNvbnRyb2wgJXMnLCBjYWNoZUNvbnRyb2wpXG4gICAgcmVzLnNldEhlYWRlcignQ2FjaGUtQ29udHJvbCcsIGNhY2hlQ29udHJvbClcbiAgfVxuXG4gIGlmICh0aGlzLl9sYXN0TW9kaWZpZWQgJiYgIXJlcy5nZXRIZWFkZXIoJ0xhc3QtTW9kaWZpZWQnKSkge1xuICAgIHZhciBtb2RpZmllZCA9IHN0YXQubXRpbWUudG9VVENTdHJpbmcoKVxuICAgIGRlYnVnKCdtb2RpZmllZCAlcycsIG1vZGlmaWVkKVxuICAgIHJlcy5zZXRIZWFkZXIoJ0xhc3QtTW9kaWZpZWQnLCBtb2RpZmllZClcbiAgfVxuXG4gIGlmICh0aGlzLl9ldGFnICYmICFyZXMuZ2V0SGVhZGVyKCdFVGFnJykpIHtcbiAgICB2YXIgdmFsID0gZXRhZyhzdGF0KVxuICAgIGRlYnVnKCdldGFnICVzJywgdmFsKVxuICAgIHJlcy5zZXRIZWFkZXIoJ0VUYWcnLCB2YWwpXG4gIH1cbn1cblxuLyoqXG4gKiBDbGVhciBhbGwgaGVhZGVycyBmcm9tIGEgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjbGVhckhlYWRlcnMgKHJlcykge1xuICB2YXIgaGVhZGVycyA9IGdldEhlYWRlck5hbWVzKHJlcylcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGhlYWRlcnMubGVuZ3RoOyBpKyspIHtcbiAgICByZXMucmVtb3ZlSGVhZGVyKGhlYWRlcnNbaV0pXG4gIH1cbn1cblxuLyoqXG4gKiBDb2xsYXBzZSBhbGwgbGVhZGluZyBzbGFzaGVzIGludG8gYSBzaW5nbGUgc2xhc2hcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjb2xsYXBzZUxlYWRpbmdTbGFzaGVzIChzdHIpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3RyW2ldICE9PSAnLycpIHtcbiAgICAgIGJyZWFrXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGkgPiAxXG4gICAgPyAnLycgKyBzdHIuc3Vic3RyKGkpXG4gICAgOiBzdHJcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgcGF0aCBwYXJ0cyBjb250YWluIGEgZG90ZmlsZS5cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjb250YWluc0RvdEZpbGUgKHBhcnRzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgcGFydCA9IHBhcnRzW2ldXG4gICAgaWYgKHBhcnQubGVuZ3RoID4gMSAmJiBwYXJ0WzBdID09PSAnLicpIHtcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgQ29udGVudC1SYW5nZSBoZWFkZXIuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAqIEBwYXJhbSB7bnVtYmVyfSBzaXplXG4gKiBAcGFyYW0ge2FycmF5fSBbcmFuZ2VdXG4gKi9cblxuZnVuY3Rpb24gY29udGVudFJhbmdlICh0eXBlLCBzaXplLCByYW5nZSkge1xuICByZXR1cm4gdHlwZSArICcgJyArIChyYW5nZSA/IHJhbmdlLnN0YXJ0ICsgJy0nICsgcmFuZ2UuZW5kIDogJyonKSArICcvJyArIHNpemVcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBtaW5pbWFsIEhUTUwgZG9jdW1lbnQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHRpdGxlXG4gKiBAcGFyYW0ge3N0cmluZ30gYm9keVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVIdG1sRG9jdW1lbnQgKHRpdGxlLCBib2R5KSB7XG4gIHJldHVybiAnPCFET0NUWVBFIGh0bWw+XFxuJyArXG4gICAgJzxodG1sIGxhbmc9XCJlblwiPlxcbicgK1xuICAgICc8aGVhZD5cXG4nICtcbiAgICAnPG1ldGEgY2hhcnNldD1cInV0Zi04XCI+XFxuJyArXG4gICAgJzx0aXRsZT4nICsgdGl0bGUgKyAnPC90aXRsZT5cXG4nICtcbiAgICAnPC9oZWFkPlxcbicgK1xuICAgICc8Ym9keT5cXG4nICtcbiAgICAnPHByZT4nICsgYm9keSArICc8L3ByZT5cXG4nICtcbiAgICAnPC9ib2R5PlxcbicgK1xuICAgICc8L2h0bWw+XFxuJ1xufVxuXG4vKipcbiAqIGRlY29kZVVSSUNvbXBvbmVudC5cbiAqXG4gKiBBbGxvd3MgVjggdG8gb25seSBkZW9wdGltaXplIHRoaXMgZm4gaW5zdGVhZCBvZiBhbGxcbiAqIG9mIHNlbmQoKS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcGF0aFxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZGVjb2RlIChwYXRoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChwYXRoKVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICByZXR1cm4gLTFcbiAgfVxufVxuXG4vKipcbiAqIEdldCB0aGUgaGVhZGVyIG5hbWVzIG9uIGEgcmVzcG5zZS5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzXG4gKiBAcmV0dXJucyB7YXJyYXlbc3RyaW5nXX1cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0SGVhZGVyTmFtZXMgKHJlcykge1xuICByZXR1cm4gdHlwZW9mIHJlcy5nZXRIZWFkZXJOYW1lcyAhPT0gJ2Z1bmN0aW9uJ1xuICAgID8gT2JqZWN0LmtleXMocmVzLl9oZWFkZXJzIHx8IHt9KVxuICAgIDogcmVzLmdldEhlYWRlck5hbWVzKClcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgZW1pdHRlciBoYXMgbGlzdGVuZXJzIG9mIGEgZ2l2ZW4gdHlwZS5cbiAqXG4gKiBUaGUgd2F5IHRvIGRvIHRoaXMgY2hlY2sgaXMgZG9uZSB0aHJlZSBkaWZmZXJlbnQgd2F5cyBpbiBOb2RlLmpzID49IDAuOFxuICogc28gdGhpcyBjb25zb2xpZGF0ZXMgdGhlbSBpbnRvIGEgbWluaW1hbCBzZXQgdXNpbmcgaW5zdGFuY2UgbWV0aG9kcy5cbiAqXG4gKiBAcGFyYW0ge0V2ZW50RW1pdHRlcn0gZW1pdHRlclxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBoYXNMaXN0ZW5lcnMgKGVtaXR0ZXIsIHR5cGUpIHtcbiAgdmFyIGNvdW50ID0gdHlwZW9mIGVtaXR0ZXIubGlzdGVuZXJDb3VudCAhPT0gJ2Z1bmN0aW9uJ1xuICAgID8gZW1pdHRlci5saXN0ZW5lcnModHlwZSkubGVuZ3RoXG4gICAgOiBlbWl0dGVyLmxpc3RlbmVyQ291bnQodHlwZSlcblxuICByZXR1cm4gY291bnQgPiAwXG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHRoZSByZXNwb25zZSBoZWFkZXJzIGhhdmUgYmVlbiBzZW50LlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXNcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBoZWFkZXJzU2VudCAocmVzKSB7XG4gIHJldHVybiB0eXBlb2YgcmVzLmhlYWRlcnNTZW50ICE9PSAnYm9vbGVhbidcbiAgICA/IEJvb2xlYW4ocmVzLl9oZWFkZXIpXG4gICAgOiByZXMuaGVhZGVyc1NlbnRcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGluZGV4IG9wdGlvbiBpbnRvIGFuIGFycmF5LlxuICpcbiAqIEBwYXJhbSB7Ym9vbGVhbnxzdHJpbmd8YXJyYXl9IHZhbFxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbm9ybWFsaXplTGlzdCAodmFsLCBuYW1lKSB7XG4gIHZhciBsaXN0ID0gW10uY29uY2F0KHZhbCB8fCBbXSlcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAodHlwZW9mIGxpc3RbaV0gIT09ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKG5hbWUgKyAnIG11c3QgYmUgYXJyYXkgb2Ygc3RyaW5ncyBvciBmYWxzZScpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxpc3Rcbn1cblxuLyoqXG4gKiBQYXJzZSBhbiBIVFRQIERhdGUgaW50byBhIG51bWJlci5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gZGF0ZVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZUh0dHBEYXRlIChkYXRlKSB7XG4gIHZhciB0aW1lc3RhbXAgPSBkYXRlICYmIERhdGUucGFyc2UoZGF0ZSlcblxuICByZXR1cm4gdHlwZW9mIHRpbWVzdGFtcCA9PT0gJ251bWJlcidcbiAgICA/IHRpbWVzdGFtcFxuICAgIDogTmFOXG59XG5cbi8qKlxuICogUGFyc2UgYSBIVFRQIHRva2VuIGxpc3QuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZVRva2VuTGlzdCAoc3RyKSB7XG4gIHZhciBlbmQgPSAwXG4gIHZhciBsaXN0ID0gW11cbiAgdmFyIHN0YXJ0ID0gMFxuXG4gIC8vIGdhdGhlciB0b2tlbnNcbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHN0ci5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIHN3aXRjaCAoc3RyLmNoYXJDb2RlQXQoaSkpIHtcbiAgICAgIGNhc2UgMHgyMDogLyogICAqL1xuICAgICAgICBpZiAoc3RhcnQgPT09IGVuZCkge1xuICAgICAgICAgIHN0YXJ0ID0gZW5kID0gaSArIDFcbiAgICAgICAgfVxuICAgICAgICBicmVha1xuICAgICAgY2FzZSAweDJjOiAvKiAsICovXG4gICAgICAgIGxpc3QucHVzaChzdHIuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpKVxuICAgICAgICBzdGFydCA9IGVuZCA9IGkgKyAxXG4gICAgICAgIGJyZWFrXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBlbmQgPSBpICsgMVxuICAgICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIC8vIGZpbmFsIHRva2VuXG4gIGxpc3QucHVzaChzdHIuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpKVxuXG4gIHJldHVybiBsaXN0XG59XG5cbi8qKlxuICogU2V0IGFuIG9iamVjdCBvZiBoZWFkZXJzIG9uIGEgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICogQHBhcmFtIHtvYmplY3R9IGhlYWRlcnNcbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2V0SGVhZGVycyAocmVzLCBoZWFkZXJzKSB7XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMoaGVhZGVycylcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0ga2V5c1tpXVxuICAgIHJlcy5zZXRIZWFkZXIoa2V5LCBoZWFkZXJzW2tleV0pXG4gIH1cbn1cbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImNyeXB0b1wiKTsiLCIndXNlIHN0cmljdCdcbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEwLTIwMTcgQnJpYW4gQ2FybHNvbiAoYnJpYW4ubS5jYXJsc29uQGdtYWlsLmNvbSlcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBSRUFETUUubWQgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKVxuXG5jb25zdCBkZWZhdWx0cyA9IHJlcXVpcmUoJy4vZGVmYXVsdHMnKVxuXG5mdW5jdGlvbiBlc2NhcGVFbGVtZW50IChlbGVtZW50UmVwcmVzZW50YXRpb24pIHtcbiAgdmFyIGVzY2FwZWQgPSBlbGVtZW50UmVwcmVzZW50YXRpb25cbiAgICAucmVwbGFjZSgvXFxcXC9nLCAnXFxcXFxcXFwnKVxuICAgIC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJylcblxuICByZXR1cm4gJ1wiJyArIGVzY2FwZWQgKyAnXCInXG59XG5cbi8vIGNvbnZlcnQgYSBKUyBhcnJheSB0byBhIHBvc3RncmVzIGFycmF5IGxpdGVyYWxcbi8vIHVzZXMgY29tbWEgc2VwYXJhdG9yIHNvIHdvbid0IHdvcmsgZm9yIHR5cGVzIGxpa2UgYm94IHRoYXQgdXNlXG4vLyBhIGRpZmZlcmVudCBhcnJheSBzZXBhcmF0b3IuXG5mdW5jdGlvbiBhcnJheVN0cmluZyAodmFsKSB7XG4gIHZhciByZXN1bHQgPSAneydcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWwubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoaSA+IDApIHtcbiAgICAgIHJlc3VsdCA9IHJlc3VsdCArICcsJ1xuICAgIH1cbiAgICBpZiAodmFsW2ldID09PSBudWxsIHx8IHR5cGVvZiB2YWxbaV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXN1bHQgPSByZXN1bHQgKyAnTlVMTCdcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsW2ldKSkge1xuICAgICAgcmVzdWx0ID0gcmVzdWx0ICsgYXJyYXlTdHJpbmcodmFsW2ldKVxuICAgIH0gZWxzZSBpZiAodmFsW2ldIGluc3RhbmNlb2YgQnVmZmVyKSB7XG4gICAgICByZXN1bHQgKz0gJ1xcXFxcXFxceCcgKyB2YWxbaV0udG9TdHJpbmcoJ2hleCcpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdCArPSBlc2NhcGVFbGVtZW50KHByZXBhcmVWYWx1ZSh2YWxbaV0pKVxuICAgIH1cbiAgfVxuICByZXN1bHQgPSByZXN1bHQgKyAnfSdcbiAgcmV0dXJuIHJlc3VsdFxufVxuXG4vLyBjb252ZXJ0cyB2YWx1ZXMgZnJvbSBqYXZhc2NyaXB0IHR5cGVzXG4vLyB0byB0aGVpciAncmF3JyBjb3VudGVycGFydHMgZm9yIHVzZSBhcyBhIHBvc3RncmVzIHBhcmFtZXRlclxuLy8gbm90ZTogeW91IGNhbiBvdmVycmlkZSB0aGlzIGZ1bmN0aW9uIHRvIHByb3ZpZGUgeW91ciBvd24gY29udmVyc2lvbiBtZWNoYW5pc21cbi8vIGZvciBjb21wbGV4IHR5cGVzLCBldGMuLi5cbnZhciBwcmVwYXJlVmFsdWUgPSBmdW5jdGlvbiAodmFsLCBzZWVuKSB7XG4gIGlmICh2YWwgaW5zdGFuY2VvZiBCdWZmZXIpIHtcbiAgICByZXR1cm4gdmFsXG4gIH1cbiAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyh2YWwpKSB7XG4gICAgdmFyIGJ1ZiA9IEJ1ZmZlci5mcm9tKHZhbC5idWZmZXIsIHZhbC5ieXRlT2Zmc2V0LCB2YWwuYnl0ZUxlbmd0aClcbiAgICBpZiAoYnVmLmxlbmd0aCA9PT0gdmFsLmJ5dGVMZW5ndGgpIHtcbiAgICAgIHJldHVybiBidWZcbiAgICB9XG4gICAgcmV0dXJuIGJ1Zi5zbGljZSh2YWwuYnl0ZU9mZnNldCwgdmFsLmJ5dGVPZmZzZXQgKyB2YWwuYnl0ZUxlbmd0aCkgLy8gTm9kZS5qcyB2NCBkb2VzIG5vdCBzdXBwb3J0IHRob3NlIEJ1ZmZlci5mcm9tIHBhcmFtc1xuICB9XG4gIGlmICh2YWwgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgaWYgKGRlZmF1bHRzLnBhcnNlSW5wdXREYXRlc0FzVVRDKSB7XG4gICAgICByZXR1cm4gZGF0ZVRvU3RyaW5nVVRDKHZhbClcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGRhdGVUb1N0cmluZyh2YWwpXG4gICAgfVxuICB9XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICByZXR1cm4gYXJyYXlTdHJpbmcodmFsKVxuICB9XG4gIGlmICh2YWwgPT09IG51bGwgfHwgdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIGlmICh0eXBlb2YgdmFsID09PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBwcmVwYXJlT2JqZWN0KHZhbCwgc2VlbilcbiAgfVxuICByZXR1cm4gdmFsLnRvU3RyaW5nKClcbn1cblxuZnVuY3Rpb24gcHJlcGFyZU9iamVjdCAodmFsLCBzZWVuKSB7XG4gIGlmICh2YWwgJiYgdHlwZW9mIHZhbC50b1Bvc3RncmVzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgc2VlbiA9IHNlZW4gfHwgW11cbiAgICBpZiAoc2Vlbi5pbmRleE9mKHZhbCkgIT09IC0xKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NpcmN1bGFyIHJlZmVyZW5jZSBkZXRlY3RlZCB3aGlsZSBwcmVwYXJpbmcgXCInICsgdmFsICsgJ1wiIGZvciBxdWVyeScpXG4gICAgfVxuICAgIHNlZW4ucHVzaCh2YWwpXG5cbiAgICByZXR1cm4gcHJlcGFyZVZhbHVlKHZhbC50b1Bvc3RncmVzKHByZXBhcmVWYWx1ZSksIHNlZW4pXG4gIH1cbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbClcbn1cblxuZnVuY3Rpb24gcGFkIChudW1iZXIsIGRpZ2l0cykge1xuICBudW1iZXIgPSAnJyArIG51bWJlclxuICB3aGlsZSAobnVtYmVyLmxlbmd0aCA8IGRpZ2l0cykgeyBudW1iZXIgPSAnMCcgKyBudW1iZXIgfVxuICByZXR1cm4gbnVtYmVyXG59XG5cbmZ1bmN0aW9uIGRhdGVUb1N0cmluZyAoZGF0ZSkge1xuICB2YXIgb2Zmc2V0ID0gLWRhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKVxuICB2YXIgcmV0ID0gcGFkKGRhdGUuZ2V0RnVsbFllYXIoKSwgNCkgKyAnLScgK1xuICAgIHBhZChkYXRlLmdldE1vbnRoKCkgKyAxLCAyKSArICctJyArXG4gICAgcGFkKGRhdGUuZ2V0RGF0ZSgpLCAyKSArICdUJyArXG4gICAgcGFkKGRhdGUuZ2V0SG91cnMoKSwgMikgKyAnOicgK1xuICAgIHBhZChkYXRlLmdldE1pbnV0ZXMoKSwgMikgKyAnOicgK1xuICAgIHBhZChkYXRlLmdldFNlY29uZHMoKSwgMikgKyAnLicgK1xuICAgIHBhZChkYXRlLmdldE1pbGxpc2Vjb25kcygpLCAzKVxuXG4gIGlmIChvZmZzZXQgPCAwKSB7XG4gICAgcmV0ICs9ICctJ1xuICAgIG9mZnNldCAqPSAtMVxuICB9IGVsc2UgeyByZXQgKz0gJysnIH1cblxuICByZXR1cm4gcmV0ICsgcGFkKE1hdGguZmxvb3Iob2Zmc2V0IC8gNjApLCAyKSArICc6JyArIHBhZChvZmZzZXQgJSA2MCwgMilcbn1cblxuZnVuY3Rpb24gZGF0ZVRvU3RyaW5nVVRDIChkYXRlKSB7XG4gIHZhciByZXQgPSBwYWQoZGF0ZS5nZXRVVENGdWxsWWVhcigpLCA0KSArICctJyArXG4gICAgcGFkKGRhdGUuZ2V0VVRDTW9udGgoKSArIDEsIDIpICsgJy0nICtcbiAgICBwYWQoZGF0ZS5nZXRVVENEYXRlKCksIDIpICsgJ1QnICtcbiAgICBwYWQoZGF0ZS5nZXRVVENIb3VycygpLCAyKSArICc6JyArXG4gICAgcGFkKGRhdGUuZ2V0VVRDTWludXRlcygpLCAyKSArICc6JyArXG4gICAgcGFkKGRhdGUuZ2V0VVRDU2Vjb25kcygpLCAyKSArICcuJyArXG4gICAgcGFkKGRhdGUuZ2V0VVRDTWlsbGlzZWNvbmRzKCksIDMpXG5cbiAgcmV0dXJuIHJldCArICcrMDA6MDAnXG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVF1ZXJ5Q29uZmlnIChjb25maWcsIHZhbHVlcywgY2FsbGJhY2spIHtcbiAgLy8gY2FuIHRha2UgaW4gc3RyaW5ncyBvciBjb25maWcgb2JqZWN0c1xuICBjb25maWcgPSAodHlwZW9mIChjb25maWcpID09PSAnc3RyaW5nJykgPyB7IHRleHQ6IGNvbmZpZyB9IDogY29uZmlnXG4gIGlmICh2YWx1ZXMpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgY29uZmlnLmNhbGxiYWNrID0gdmFsdWVzXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbmZpZy52YWx1ZXMgPSB2YWx1ZXNcbiAgICB9XG4gIH1cbiAgaWYgKGNhbGxiYWNrKSB7XG4gICAgY29uZmlnLmNhbGxiYWNrID0gY2FsbGJhY2tcbiAgfVxuICByZXR1cm4gY29uZmlnXG59XG5cbmNvbnN0IG1kNSA9IGZ1bmN0aW9uIChzdHJpbmcpIHtcbiAgcmV0dXJuIGNyeXB0by5jcmVhdGVIYXNoKCdtZDUnKS51cGRhdGUoc3RyaW5nLCAndXRmLTgnKS5kaWdlc3QoJ2hleCcpXG59XG5cbi8vIFNlZSBBdXRoZW50aWNhdGlvbk1ENVBhc3N3b3JkIGF0IGh0dHBzOi8vd3d3LnBvc3RncmVzcWwub3JnL2RvY3MvY3VycmVudC9zdGF0aWMvcHJvdG9jb2wtZmxvdy5odG1sXG5jb25zdCBwb3N0Z3Jlc01kNVBhc3N3b3JkSGFzaCA9IGZ1bmN0aW9uICh1c2VyLCBwYXNzd29yZCwgc2FsdCkge1xuICB2YXIgaW5uZXIgPSBtZDUocGFzc3dvcmQgKyB1c2VyKVxuICB2YXIgb3V0ZXIgPSBtZDUoQnVmZmVyLmNvbmNhdChbQnVmZmVyLmZyb20oaW5uZXIpLCBzYWx0XSkpXG4gIHJldHVybiAnbWQ1JyArIG91dGVyXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBwcmVwYXJlVmFsdWU6IGZ1bmN0aW9uIHByZXBhcmVWYWx1ZVdyYXBwZXIgKHZhbHVlKSB7XG4gICAgLy8gdGhpcyBlbnN1cmVzIHRoYXQgZXh0cmEgYXJndW1lbnRzIGRvIG5vdCBnZXQgcGFzc2VkIGludG8gcHJlcGFyZVZhbHVlXG4gICAgLy8gYnkgYWNjaWRlbnQsIGVnOiBmcm9tIGNhbGxpbmcgdmFsdWVzLm1hcCh1dGlscy5wcmVwYXJlVmFsdWUpXG4gICAgcmV0dXJuIHByZXBhcmVWYWx1ZSh2YWx1ZSlcbiAgfSxcbiAgbm9ybWFsaXplUXVlcnlDb25maWcsXG4gIHBvc3RncmVzTWQ1UGFzc3dvcmRIYXNoLFxuICBtZDVcbn1cbiIsIi8qIVxuICogZGVwZFxuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbmxhenlQcm9wZXJ0eShtb2R1bGUuZXhwb3J0cywgJ2NhbGxTaXRlVG9TdHJpbmcnLCBmdW5jdGlvbiBjYWxsU2l0ZVRvU3RyaW5nICgpIHtcbiAgdmFyIGxpbWl0ID0gRXJyb3Iuc3RhY2tUcmFjZUxpbWl0XG4gIHZhciBvYmogPSB7fVxuICB2YXIgcHJlcCA9IEVycm9yLnByZXBhcmVTdGFja1RyYWNlXG5cbiAgZnVuY3Rpb24gcHJlcGFyZU9iamVjdFN0YWNrVHJhY2UgKG9iaiwgc3RhY2spIHtcbiAgICByZXR1cm4gc3RhY2tcbiAgfVxuXG4gIEVycm9yLnByZXBhcmVTdGFja1RyYWNlID0gcHJlcGFyZU9iamVjdFN0YWNrVHJhY2VcbiAgRXJyb3Iuc3RhY2tUcmFjZUxpbWl0ID0gMlxuXG4gIC8vIGNhcHR1cmUgdGhlIHN0YWNrXG4gIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKG9iailcblxuICAvLyBzbGljZSB0aGUgc3RhY2tcbiAgdmFyIHN0YWNrID0gb2JqLnN0YWNrLnNsaWNlKClcblxuICBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZSA9IHByZXBcbiAgRXJyb3Iuc3RhY2tUcmFjZUxpbWl0ID0gbGltaXRcblxuICByZXR1cm4gc3RhY2tbMF0udG9TdHJpbmcgPyB0b1N0cmluZyA6IHJlcXVpcmUoJy4vY2FsbHNpdGUtdG9zdHJpbmcnKVxufSlcblxubGF6eVByb3BlcnR5KG1vZHVsZS5leHBvcnRzLCAnZXZlbnRMaXN0ZW5lckNvdW50JywgZnVuY3Rpb24gZXZlbnRMaXN0ZW5lckNvdW50ICgpIHtcbiAgcmV0dXJuIEV2ZW50RW1pdHRlci5saXN0ZW5lckNvdW50IHx8IHJlcXVpcmUoJy4vZXZlbnQtbGlzdGVuZXItY291bnQnKVxufSlcblxuLyoqXG4gKiBEZWZpbmUgYSBsYXp5IHByb3BlcnR5LlxuICovXG5cbmZ1bmN0aW9uIGxhenlQcm9wZXJ0eSAob2JqLCBwcm9wLCBnZXR0ZXIpIHtcbiAgZnVuY3Rpb24gZ2V0ICgpIHtcbiAgICB2YXIgdmFsID0gZ2V0dGVyKClcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIHByb3AsIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICB2YWx1ZTogdmFsXG4gICAgfSlcblxuICAgIHJldHVybiB2YWxcbiAgfVxuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIHByb3AsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGdldFxuICB9KVxufVxuXG4vKipcbiAqIENhbGwgdG9TdHJpbmcoKSBvbiB0aGUgb2JqXG4gKi9cblxuZnVuY3Rpb24gdG9TdHJpbmcgKG9iaikge1xuICByZXR1cm4gb2JqLnRvU3RyaW5nKClcbn1cbiIsIlxuLyoqXG4gKiBUaGlzIGlzIHRoZSBjb21tb24gbG9naWMgZm9yIGJvdGggdGhlIE5vZGUuanMgYW5kIHdlYiBicm93c2VyXG4gKiBpbXBsZW1lbnRhdGlvbnMgb2YgYGRlYnVnKClgLlxuICpcbiAqIEV4cG9zZSBgZGVidWcoKWAgYXMgdGhlIG1vZHVsZS5cbiAqL1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVEZWJ1Zy5kZWJ1ZyA9IGNyZWF0ZURlYnVnWydkZWZhdWx0J10gPSBjcmVhdGVEZWJ1ZztcbmV4cG9ydHMuY29lcmNlID0gY29lcmNlO1xuZXhwb3J0cy5kaXNhYmxlID0gZGlzYWJsZTtcbmV4cG9ydHMuZW5hYmxlID0gZW5hYmxlO1xuZXhwb3J0cy5lbmFibGVkID0gZW5hYmxlZDtcbmV4cG9ydHMuaHVtYW5pemUgPSByZXF1aXJlKCdtcycpO1xuXG4vKipcbiAqIFRoZSBjdXJyZW50bHkgYWN0aXZlIGRlYnVnIG1vZGUgbmFtZXMsIGFuZCBuYW1lcyB0byBza2lwLlxuICovXG5cbmV4cG9ydHMubmFtZXMgPSBbXTtcbmV4cG9ydHMuc2tpcHMgPSBbXTtcblxuLyoqXG4gKiBNYXAgb2Ygc3BlY2lhbCBcIiVuXCIgaGFuZGxpbmcgZnVuY3Rpb25zLCBmb3IgdGhlIGRlYnVnIFwiZm9ybWF0XCIgYXJndW1lbnQuXG4gKlxuICogVmFsaWQga2V5IG5hbWVzIGFyZSBhIHNpbmdsZSwgbG93ZXIgb3IgdXBwZXItY2FzZSBsZXR0ZXIsIGkuZS4gXCJuXCIgYW5kIFwiTlwiLlxuICovXG5cbmV4cG9ydHMuZm9ybWF0dGVycyA9IHt9O1xuXG4vKipcbiAqIFByZXZpb3VzIGxvZyB0aW1lc3RhbXAuXG4gKi9cblxudmFyIHByZXZUaW1lO1xuXG4vKipcbiAqIFNlbGVjdCBhIGNvbG9yLlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZVxuICogQHJldHVybiB7TnVtYmVyfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2VsZWN0Q29sb3IobmFtZXNwYWNlKSB7XG4gIHZhciBoYXNoID0gMCwgaTtcblxuICBmb3IgKGkgaW4gbmFtZXNwYWNlKSB7XG4gICAgaGFzaCAgPSAoKGhhc2ggPDwgNSkgLSBoYXNoKSArIG5hbWVzcGFjZS5jaGFyQ29kZUF0KGkpO1xuICAgIGhhc2ggfD0gMDsgLy8gQ29udmVydCB0byAzMmJpdCBpbnRlZ2VyXG4gIH1cblxuICByZXR1cm4gZXhwb3J0cy5jb2xvcnNbTWF0aC5hYnMoaGFzaCkgJSBleHBvcnRzLmNvbG9ycy5sZW5ndGhdO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIGRlYnVnZ2VyIHdpdGggdGhlIGdpdmVuIGBuYW1lc3BhY2VgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lc3BhY2VcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVEZWJ1ZyhuYW1lc3BhY2UpIHtcblxuICBmdW5jdGlvbiBkZWJ1ZygpIHtcbiAgICAvLyBkaXNhYmxlZD9cbiAgICBpZiAoIWRlYnVnLmVuYWJsZWQpIHJldHVybjtcblxuICAgIHZhciBzZWxmID0gZGVidWc7XG5cbiAgICAvLyBzZXQgYGRpZmZgIHRpbWVzdGFtcFxuICAgIHZhciBjdXJyID0gK25ldyBEYXRlKCk7XG4gICAgdmFyIG1zID0gY3VyciAtIChwcmV2VGltZSB8fCBjdXJyKTtcbiAgICBzZWxmLmRpZmYgPSBtcztcbiAgICBzZWxmLnByZXYgPSBwcmV2VGltZTtcbiAgICBzZWxmLmN1cnIgPSBjdXJyO1xuICAgIHByZXZUaW1lID0gY3VycjtcblxuICAgIC8vIHR1cm4gdGhlIGBhcmd1bWVudHNgIGludG8gYSBwcm9wZXIgQXJyYXlcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuXG4gICAgYXJnc1swXSA9IGV4cG9ydHMuY29lcmNlKGFyZ3NbMF0pO1xuXG4gICAgaWYgKCdzdHJpbmcnICE9PSB0eXBlb2YgYXJnc1swXSkge1xuICAgICAgLy8gYW55dGhpbmcgZWxzZSBsZXQncyBpbnNwZWN0IHdpdGggJU9cbiAgICAgIGFyZ3MudW5zaGlmdCgnJU8nKTtcbiAgICB9XG5cbiAgICAvLyBhcHBseSBhbnkgYGZvcm1hdHRlcnNgIHRyYW5zZm9ybWF0aW9uc1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgYXJnc1swXSA9IGFyZ3NbMF0ucmVwbGFjZSgvJShbYS16QS1aJV0pL2csIGZ1bmN0aW9uKG1hdGNoLCBmb3JtYXQpIHtcbiAgICAgIC8vIGlmIHdlIGVuY291bnRlciBhbiBlc2NhcGVkICUgdGhlbiBkb24ndCBpbmNyZWFzZSB0aGUgYXJyYXkgaW5kZXhcbiAgICAgIGlmIChtYXRjaCA9PT0gJyUlJykgcmV0dXJuIG1hdGNoO1xuICAgICAgaW5kZXgrKztcbiAgICAgIHZhciBmb3JtYXR0ZXIgPSBleHBvcnRzLmZvcm1hdHRlcnNbZm9ybWF0XTtcbiAgICAgIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZm9ybWF0dGVyKSB7XG4gICAgICAgIHZhciB2YWwgPSBhcmdzW2luZGV4XTtcbiAgICAgICAgbWF0Y2ggPSBmb3JtYXR0ZXIuY2FsbChzZWxmLCB2YWwpO1xuXG4gICAgICAgIC8vIG5vdyB3ZSBuZWVkIHRvIHJlbW92ZSBgYXJnc1tpbmRleF1gIHNpbmNlIGl0J3MgaW5saW5lZCBpbiB0aGUgYGZvcm1hdGBcbiAgICAgICAgYXJncy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICBpbmRleC0tO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1hdGNoO1xuICAgIH0pO1xuXG4gICAgLy8gYXBwbHkgZW52LXNwZWNpZmljIGZvcm1hdHRpbmcgKGNvbG9ycywgZXRjLilcbiAgICBleHBvcnRzLmZvcm1hdEFyZ3MuY2FsbChzZWxmLCBhcmdzKTtcblxuICAgIHZhciBsb2dGbiA9IGRlYnVnLmxvZyB8fCBleHBvcnRzLmxvZyB8fCBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpO1xuICAgIGxvZ0ZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuICB9XG5cbiAgZGVidWcubmFtZXNwYWNlID0gbmFtZXNwYWNlO1xuICBkZWJ1Zy5lbmFibGVkID0gZXhwb3J0cy5lbmFibGVkKG5hbWVzcGFjZSk7XG4gIGRlYnVnLnVzZUNvbG9ycyA9IGV4cG9ydHMudXNlQ29sb3JzKCk7XG4gIGRlYnVnLmNvbG9yID0gc2VsZWN0Q29sb3IobmFtZXNwYWNlKTtcblxuICAvLyBlbnYtc3BlY2lmaWMgaW5pdGlhbGl6YXRpb24gbG9naWMgZm9yIGRlYnVnIGluc3RhbmNlc1xuICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGV4cG9ydHMuaW5pdCkge1xuICAgIGV4cG9ydHMuaW5pdChkZWJ1Zyk7XG4gIH1cblxuICByZXR1cm4gZGVidWc7XG59XG5cbi8qKlxuICogRW5hYmxlcyBhIGRlYnVnIG1vZGUgYnkgbmFtZXNwYWNlcy4gVGhpcyBjYW4gaW5jbHVkZSBtb2Rlc1xuICogc2VwYXJhdGVkIGJ5IGEgY29sb24gYW5kIHdpbGRjYXJkcy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlc1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBlbmFibGUobmFtZXNwYWNlcykge1xuICBleHBvcnRzLnNhdmUobmFtZXNwYWNlcyk7XG5cbiAgZXhwb3J0cy5uYW1lcyA9IFtdO1xuICBleHBvcnRzLnNraXBzID0gW107XG5cbiAgdmFyIHNwbGl0ID0gKHR5cGVvZiBuYW1lc3BhY2VzID09PSAnc3RyaW5nJyA/IG5hbWVzcGFjZXMgOiAnJykuc3BsaXQoL1tcXHMsXSsvKTtcbiAgdmFyIGxlbiA9IHNwbGl0Lmxlbmd0aDtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgaWYgKCFzcGxpdFtpXSkgY29udGludWU7IC8vIGlnbm9yZSBlbXB0eSBzdHJpbmdzXG4gICAgbmFtZXNwYWNlcyA9IHNwbGl0W2ldLnJlcGxhY2UoL1xcKi9nLCAnLio/Jyk7XG4gICAgaWYgKG5hbWVzcGFjZXNbMF0gPT09ICctJykge1xuICAgICAgZXhwb3J0cy5za2lwcy5wdXNoKG5ldyBSZWdFeHAoJ14nICsgbmFtZXNwYWNlcy5zdWJzdHIoMSkgKyAnJCcpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXhwb3J0cy5uYW1lcy5wdXNoKG5ldyBSZWdFeHAoJ14nICsgbmFtZXNwYWNlcyArICckJykpO1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIERpc2FibGUgZGVidWcgb3V0cHV0LlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgZXhwb3J0cy5lbmFibGUoJycpO1xufVxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gbW9kZSBuYW1lIGlzIGVuYWJsZWQsIGZhbHNlIG90aGVyd2lzZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZW5hYmxlZChuYW1lKSB7XG4gIHZhciBpLCBsZW47XG4gIGZvciAoaSA9IDAsIGxlbiA9IGV4cG9ydHMuc2tpcHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoZXhwb3J0cy5za2lwc1tpXS50ZXN0KG5hbWUpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGZvciAoaSA9IDAsIGxlbiA9IGV4cG9ydHMubmFtZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoZXhwb3J0cy5uYW1lc1tpXS50ZXN0KG5hbWUpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIENvZXJjZSBgdmFsYC5cbiAqXG4gKiBAcGFyYW0ge01peGVkfSB2YWxcbiAqIEByZXR1cm4ge01peGVkfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY29lcmNlKHZhbCkge1xuICBpZiAodmFsIGluc3RhbmNlb2YgRXJyb3IpIHJldHVybiB2YWwuc3RhY2sgfHwgdmFsLm1lc3NhZ2U7XG4gIHJldHVybiB2YWw7XG59XG4iLCIvKipcbiAqIEhlbHBlcnMuXG4gKi9cblxudmFyIHMgPSAxMDAwO1xudmFyIG0gPSBzICogNjA7XG52YXIgaCA9IG0gKiA2MDtcbnZhciBkID0gaCAqIDI0O1xudmFyIHkgPSBkICogMzY1LjI1O1xuXG4vKipcbiAqIFBhcnNlIG9yIGZvcm1hdCB0aGUgZ2l2ZW4gYHZhbGAuXG4gKlxuICogT3B0aW9uczpcbiAqXG4gKiAgLSBgbG9uZ2AgdmVyYm9zZSBmb3JtYXR0aW5nIFtmYWxzZV1cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IHZhbFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHRocm93cyB7RXJyb3J9IHRocm93IGFuIGVycm9yIGlmIHZhbCBpcyBub3QgYSBub24tZW1wdHkgc3RyaW5nIG9yIGEgbnVtYmVyXG4gKiBAcmV0dXJuIHtTdHJpbmd8TnVtYmVyfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHZhbCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsO1xuICBpZiAodHlwZSA9PT0gJ3N0cmluZycgJiYgdmFsLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gcGFyc2UodmFsKTtcbiAgfSBlbHNlIGlmICh0eXBlID09PSAnbnVtYmVyJyAmJiBpc05hTih2YWwpID09PSBmYWxzZSkge1xuICAgIHJldHVybiBvcHRpb25zLmxvbmcgPyBmbXRMb25nKHZhbCkgOiBmbXRTaG9ydCh2YWwpO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICAndmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSB2YWxpZCBudW1iZXIuIHZhbD0nICtcbiAgICAgIEpTT04uc3RyaW5naWZ5KHZhbClcbiAgKTtcbn07XG5cbi8qKlxuICogUGFyc2UgdGhlIGdpdmVuIGBzdHJgIGFuZCByZXR1cm4gbWlsbGlzZWNvbmRzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHN0cikge1xuICBzdHIgPSBTdHJpbmcoc3RyKTtcbiAgaWYgKHN0ci5sZW5ndGggPiAxMDApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIG1hdGNoID0gL14oKD86XFxkKyk/XFwuP1xcZCspICoobWlsbGlzZWNvbmRzP3xtc2Vjcz98bXN8c2Vjb25kcz98c2Vjcz98c3xtaW51dGVzP3xtaW5zP3xtfGhvdXJzP3xocnM/fGh8ZGF5cz98ZHx5ZWFycz98eXJzP3x5KT8kL2kuZXhlYyhcbiAgICBzdHJcbiAgKTtcbiAgaWYgKCFtYXRjaCkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgbiA9IHBhcnNlRmxvYXQobWF0Y2hbMV0pO1xuICB2YXIgdHlwZSA9IChtYXRjaFsyXSB8fCAnbXMnKS50b0xvd2VyQ2FzZSgpO1xuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICd5ZWFycyc6XG4gICAgY2FzZSAneWVhcic6XG4gICAgY2FzZSAneXJzJzpcbiAgICBjYXNlICd5cic6XG4gICAgY2FzZSAneSc6XG4gICAgICByZXR1cm4gbiAqIHk7XG4gICAgY2FzZSAnZGF5cyc6XG4gICAgY2FzZSAnZGF5JzpcbiAgICBjYXNlICdkJzpcbiAgICAgIHJldHVybiBuICogZDtcbiAgICBjYXNlICdob3Vycyc6XG4gICAgY2FzZSAnaG91cic6XG4gICAgY2FzZSAnaHJzJzpcbiAgICBjYXNlICdocic6XG4gICAgY2FzZSAnaCc6XG4gICAgICByZXR1cm4gbiAqIGg7XG4gICAgY2FzZSAnbWludXRlcyc6XG4gICAgY2FzZSAnbWludXRlJzpcbiAgICBjYXNlICdtaW5zJzpcbiAgICBjYXNlICdtaW4nOlxuICAgIGNhc2UgJ20nOlxuICAgICAgcmV0dXJuIG4gKiBtO1xuICAgIGNhc2UgJ3NlY29uZHMnOlxuICAgIGNhc2UgJ3NlY29uZCc6XG4gICAgY2FzZSAnc2Vjcyc6XG4gICAgY2FzZSAnc2VjJzpcbiAgICBjYXNlICdzJzpcbiAgICAgIHJldHVybiBuICogcztcbiAgICBjYXNlICdtaWxsaXNlY29uZHMnOlxuICAgIGNhc2UgJ21pbGxpc2Vjb25kJzpcbiAgICBjYXNlICdtc2Vjcyc6XG4gICAgY2FzZSAnbXNlYyc6XG4gICAgY2FzZSAnbXMnOlxuICAgICAgcmV0dXJuIG47XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuLyoqXG4gKiBTaG9ydCBmb3JtYXQgZm9yIGBtc2AuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IG1zXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBmbXRTaG9ydChtcykge1xuICBpZiAobXMgPj0gZCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gZCkgKyAnZCc7XG4gIH1cbiAgaWYgKG1zID49IGgpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIGgpICsgJ2gnO1xuICB9XG4gIGlmIChtcyA+PSBtKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBtKSArICdtJztcbiAgfVxuICBpZiAobXMgPj0gcykge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gcykgKyAncyc7XG4gIH1cbiAgcmV0dXJuIG1zICsgJ21zJztcbn1cblxuLyoqXG4gKiBMb25nIGZvcm1hdCBmb3IgYG1zYC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGZtdExvbmcobXMpIHtcbiAgcmV0dXJuIHBsdXJhbChtcywgZCwgJ2RheScpIHx8XG4gICAgcGx1cmFsKG1zLCBoLCAnaG91cicpIHx8XG4gICAgcGx1cmFsKG1zLCBtLCAnbWludXRlJykgfHxcbiAgICBwbHVyYWwobXMsIHMsICdzZWNvbmQnKSB8fFxuICAgIG1zICsgJyBtcyc7XG59XG5cbi8qKlxuICogUGx1cmFsaXphdGlvbiBoZWxwZXIuXG4gKi9cblxuZnVuY3Rpb24gcGx1cmFsKG1zLCBuLCBuYW1lKSB7XG4gIGlmIChtcyA8IG4pIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKG1zIDwgbiAqIDEuNSkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKG1zIC8gbikgKyAnICcgKyBuYW1lO1xuICB9XG4gIHJldHVybiBNYXRoLmNlaWwobXMgLyBuKSArICcgJyArIG5hbWUgKyAncyc7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLy8gU29tZSBlbnZpcm9ubWVudHMgZG9uJ3QgaGF2ZSBnbG9iYWwgQnVmZmVyIChlLmcuIFJlYWN0IE5hdGl2ZSkuXG4vLyBTb2x1dGlvbiB3b3VsZCBiZSBpbnN0YWxsaW5nIG5wbSBtb2R1bGVzIFwiYnVmZmVyXCIgYW5kIFwic3RyZWFtXCIgZXhwbGljaXRseS5cbnZhciBCdWZmZXIgPSByZXF1aXJlKFwic2FmZXItYnVmZmVyXCIpLkJ1ZmZlcjtcblxudmFyIGJvbUhhbmRsaW5nID0gcmVxdWlyZShcIi4vYm9tLWhhbmRsaW5nXCIpLFxuICAgIGljb252ID0gbW9kdWxlLmV4cG9ydHM7XG5cbi8vIEFsbCBjb2RlY3MgYW5kIGFsaWFzZXMgYXJlIGtlcHQgaGVyZSwga2V5ZWQgYnkgZW5jb2RpbmcgbmFtZS9hbGlhcy5cbi8vIFRoZXkgYXJlIGxhenkgbG9hZGVkIGluIGBpY29udi5nZXRDb2RlY2AgZnJvbSBgZW5jb2RpbmdzL2luZGV4LmpzYC5cbmljb252LmVuY29kaW5ncyA9IG51bGw7XG5cbi8vIENoYXJhY3RlcnMgZW1pdHRlZCBpbiBjYXNlIG9mIGVycm9yLlxuaWNvbnYuZGVmYXVsdENoYXJVbmljb2RlID0gJ++/vSc7XG5pY29udi5kZWZhdWx0Q2hhclNpbmdsZUJ5dGUgPSAnPyc7XG5cbi8vIFB1YmxpYyBBUEkuXG5pY29udi5lbmNvZGUgPSBmdW5jdGlvbiBlbmNvZGUoc3RyLCBlbmNvZGluZywgb3B0aW9ucykge1xuICAgIHN0ciA9IFwiXCIgKyAoc3RyIHx8IFwiXCIpOyAvLyBFbnN1cmUgc3RyaW5nLlxuXG4gICAgdmFyIGVuY29kZXIgPSBpY29udi5nZXRFbmNvZGVyKGVuY29kaW5nLCBvcHRpb25zKTtcblxuICAgIHZhciByZXMgPSBlbmNvZGVyLndyaXRlKHN0cik7XG4gICAgdmFyIHRyYWlsID0gZW5jb2Rlci5lbmQoKTtcbiAgICBcbiAgICByZXR1cm4gKHRyYWlsICYmIHRyYWlsLmxlbmd0aCA+IDApID8gQnVmZmVyLmNvbmNhdChbcmVzLCB0cmFpbF0pIDogcmVzO1xufVxuXG5pY29udi5kZWNvZGUgPSBmdW5jdGlvbiBkZWNvZGUoYnVmLCBlbmNvZGluZywgb3B0aW9ucykge1xuICAgIGlmICh0eXBlb2YgYnVmID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAoIWljb252LnNraXBEZWNvZGVXYXJuaW5nKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdJY29udi1saXRlIHdhcm5pbmc6IGRlY29kZSgpLWluZyBzdHJpbmdzIGlzIGRlcHJlY2F0ZWQuIFJlZmVyIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9hc2h0dWNoa2luL2ljb252LWxpdGUvd2lraS9Vc2UtQnVmZmVycy13aGVuLWRlY29kaW5nJyk7XG4gICAgICAgICAgICBpY29udi5za2lwRGVjb2RlV2FybmluZyA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBidWYgPSBCdWZmZXIuZnJvbShcIlwiICsgKGJ1ZiB8fCBcIlwiKSwgXCJiaW5hcnlcIik7IC8vIEVuc3VyZSBidWZmZXIuXG4gICAgfVxuXG4gICAgdmFyIGRlY29kZXIgPSBpY29udi5nZXREZWNvZGVyKGVuY29kaW5nLCBvcHRpb25zKTtcblxuICAgIHZhciByZXMgPSBkZWNvZGVyLndyaXRlKGJ1Zik7XG4gICAgdmFyIHRyYWlsID0gZGVjb2Rlci5lbmQoKTtcblxuICAgIHJldHVybiB0cmFpbCA/IChyZXMgKyB0cmFpbCkgOiByZXM7XG59XG5cbmljb252LmVuY29kaW5nRXhpc3RzID0gZnVuY3Rpb24gZW5jb2RpbmdFeGlzdHMoZW5jKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWNvbnYuZ2V0Q29kZWMoZW5jKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuXG4vLyBMZWdhY3kgYWxpYXNlcyB0byBjb252ZXJ0IGZ1bmN0aW9uc1xuaWNvbnYudG9FbmNvZGluZyA9IGljb252LmVuY29kZTtcbmljb252LmZyb21FbmNvZGluZyA9IGljb252LmRlY29kZTtcblxuLy8gU2VhcmNoIGZvciBhIGNvZGVjIGluIGljb252LmVuY29kaW5ncy4gQ2FjaGUgY29kZWMgZGF0YSBpbiBpY29udi5fY29kZWNEYXRhQ2FjaGUuXG5pY29udi5fY29kZWNEYXRhQ2FjaGUgPSB7fTtcbmljb252LmdldENvZGVjID0gZnVuY3Rpb24gZ2V0Q29kZWMoZW5jb2RpbmcpIHtcbiAgICBpZiAoIWljb252LmVuY29kaW5ncylcbiAgICAgICAgaWNvbnYuZW5jb2RpbmdzID0gcmVxdWlyZShcIi4uL2VuY29kaW5nc1wiKTsgLy8gTGF6eSBsb2FkIGFsbCBlbmNvZGluZyBkZWZpbml0aW9ucy5cbiAgICBcbiAgICAvLyBDYW5vbmljYWxpemUgZW5jb2RpbmcgbmFtZTogc3RyaXAgYWxsIG5vbi1hbHBoYW51bWVyaWMgY2hhcnMgYW5kIGFwcGVuZGVkIHllYXIuXG4gICAgdmFyIGVuYyA9IGljb252Ll9jYW5vbmljYWxpemVFbmNvZGluZyhlbmNvZGluZyk7XG5cbiAgICAvLyBUcmF2ZXJzZSBpY29udi5lbmNvZGluZ3MgdG8gZmluZCBhY3R1YWwgY29kZWMuXG4gICAgdmFyIGNvZGVjT3B0aW9ucyA9IHt9O1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHZhciBjb2RlYyA9IGljb252Ll9jb2RlY0RhdGFDYWNoZVtlbmNdO1xuICAgICAgICBpZiAoY29kZWMpXG4gICAgICAgICAgICByZXR1cm4gY29kZWM7XG5cbiAgICAgICAgdmFyIGNvZGVjRGVmID0gaWNvbnYuZW5jb2RpbmdzW2VuY107XG5cbiAgICAgICAgc3dpdGNoICh0eXBlb2YgY29kZWNEZWYpIHtcbiAgICAgICAgICAgIGNhc2UgXCJzdHJpbmdcIjogLy8gRGlyZWN0IGFsaWFzIHRvIG90aGVyIGVuY29kaW5nLlxuICAgICAgICAgICAgICAgIGVuYyA9IGNvZGVjRGVmO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwib2JqZWN0XCI6IC8vIEFsaWFzIHdpdGggb3B0aW9ucy4gQ2FuIGJlIGxheWVyZWQuXG4gICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGNvZGVjRGVmKVxuICAgICAgICAgICAgICAgICAgICBjb2RlY09wdGlvbnNba2V5XSA9IGNvZGVjRGVmW2tleV07XG5cbiAgICAgICAgICAgICAgICBpZiAoIWNvZGVjT3B0aW9ucy5lbmNvZGluZ05hbWUpXG4gICAgICAgICAgICAgICAgICAgIGNvZGVjT3B0aW9ucy5lbmNvZGluZ05hbWUgPSBlbmM7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgZW5jID0gY29kZWNEZWYudHlwZTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBcImZ1bmN0aW9uXCI6IC8vIENvZGVjIGl0c2VsZi5cbiAgICAgICAgICAgICAgICBpZiAoIWNvZGVjT3B0aW9ucy5lbmNvZGluZ05hbWUpXG4gICAgICAgICAgICAgICAgICAgIGNvZGVjT3B0aW9ucy5lbmNvZGluZ05hbWUgPSBlbmM7XG5cbiAgICAgICAgICAgICAgICAvLyBUaGUgY29kZWMgZnVuY3Rpb24gbXVzdCBsb2FkIGFsbCB0YWJsZXMgYW5kIHJldHVybiBvYmplY3Qgd2l0aCAuZW5jb2RlciBhbmQgLmRlY29kZXIgbWV0aG9kcy5cbiAgICAgICAgICAgICAgICAvLyBJdCdsbCBiZSBjYWxsZWQgb25seSBvbmNlIChmb3IgZWFjaCBkaWZmZXJlbnQgb3B0aW9ucyBvYmplY3QpLlxuICAgICAgICAgICAgICAgIGNvZGVjID0gbmV3IGNvZGVjRGVmKGNvZGVjT3B0aW9ucywgaWNvbnYpO1xuXG4gICAgICAgICAgICAgICAgaWNvbnYuX2NvZGVjRGF0YUNhY2hlW2NvZGVjT3B0aW9ucy5lbmNvZGluZ05hbWVdID0gY29kZWM7IC8vIFNhdmUgaXQgdG8gYmUgcmV1c2VkIGxhdGVyLlxuICAgICAgICAgICAgICAgIHJldHVybiBjb2RlYztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFbmNvZGluZyBub3QgcmVjb2duaXplZDogJ1wiICsgZW5jb2RpbmcgKyBcIicgKHNlYXJjaGVkIGFzOiAnXCIrZW5jK1wiJylcIik7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmljb252Ll9jYW5vbmljYWxpemVFbmNvZGluZyA9IGZ1bmN0aW9uKGVuY29kaW5nKSB7XG4gICAgLy8gQ2Fub25pY2FsaXplIGVuY29kaW5nIG5hbWU6IHN0cmlwIGFsbCBub24tYWxwaGFudW1lcmljIGNoYXJzIGFuZCBhcHBlbmRlZCB5ZWFyLlxuICAgIHJldHVybiAoJycrZW5jb2RpbmcpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvOlxcZHs0fSR8W14wLTlhLXpdL2csIFwiXCIpO1xufVxuXG5pY29udi5nZXRFbmNvZGVyID0gZnVuY3Rpb24gZ2V0RW5jb2RlcihlbmNvZGluZywgb3B0aW9ucykge1xuICAgIHZhciBjb2RlYyA9IGljb252LmdldENvZGVjKGVuY29kaW5nKSxcbiAgICAgICAgZW5jb2RlciA9IG5ldyBjb2RlYy5lbmNvZGVyKG9wdGlvbnMsIGNvZGVjKTtcblxuICAgIGlmIChjb2RlYy5ib21Bd2FyZSAmJiBvcHRpb25zICYmIG9wdGlvbnMuYWRkQk9NKVxuICAgICAgICBlbmNvZGVyID0gbmV3IGJvbUhhbmRsaW5nLlByZXBlbmRCT00oZW5jb2Rlciwgb3B0aW9ucyk7XG5cbiAgICByZXR1cm4gZW5jb2Rlcjtcbn1cblxuaWNvbnYuZ2V0RGVjb2RlciA9IGZ1bmN0aW9uIGdldERlY29kZXIoZW5jb2RpbmcsIG9wdGlvbnMpIHtcbiAgICB2YXIgY29kZWMgPSBpY29udi5nZXRDb2RlYyhlbmNvZGluZyksXG4gICAgICAgIGRlY29kZXIgPSBuZXcgY29kZWMuZGVjb2RlcihvcHRpb25zLCBjb2RlYyk7XG5cbiAgICBpZiAoY29kZWMuYm9tQXdhcmUgJiYgIShvcHRpb25zICYmIG9wdGlvbnMuc3RyaXBCT00gPT09IGZhbHNlKSlcbiAgICAgICAgZGVjb2RlciA9IG5ldyBib21IYW5kbGluZy5TdHJpcEJPTShkZWNvZGVyLCBvcHRpb25zKTtcblxuICAgIHJldHVybiBkZWNvZGVyO1xufVxuXG5cbi8vIExvYWQgZXh0ZW5zaW9ucyBpbiBOb2RlLiBBbGwgb2YgdGhlbSBhcmUgb21pdHRlZCBpbiBCcm93c2VyaWZ5IGJ1aWxkIHZpYSAnYnJvd3NlcicgZmllbGQgaW4gcGFja2FnZS5qc29uLlxudmFyIG5vZGVWZXIgPSB0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgcHJvY2Vzcy52ZXJzaW9ucyAmJiBwcm9jZXNzLnZlcnNpb25zLm5vZGU7XG5pZiAobm9kZVZlcikge1xuXG4gICAgLy8gTG9hZCBzdHJlYW1pbmcgc3VwcG9ydCBpbiBOb2RlIHYwLjEwK1xuICAgIHZhciBub2RlVmVyQXJyID0gbm9kZVZlci5zcGxpdChcIi5cIikubWFwKE51bWJlcik7XG4gICAgaWYgKG5vZGVWZXJBcnJbMF0gPiAwIHx8IG5vZGVWZXJBcnJbMV0gPj0gMTApIHtcbiAgICAgICAgcmVxdWlyZShcIi4vc3RyZWFtc1wiKShpY29udik7XG4gICAgfVxuXG4gICAgLy8gTG9hZCBOb2RlIHByaW1pdGl2ZSBleHRlbnNpb25zLlxuICAgIHJlcXVpcmUoXCIuL2V4dGVuZC1ub2RlXCIpKGljb252KTtcbn1cblxuaWYgKFwixIBcIiAhPSBcIlxcdTAxMDBcIikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJpY29udi1saXRlIHdhcm5pbmc6IGphdmFzY3JpcHQgZmlsZXMgdXNlIGVuY29kaW5nIGRpZmZlcmVudCBmcm9tIHV0Zi04LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2FzaHR1Y2hraW4vaWNvbnYtbGl0ZS93aWtpL0phdmFzY3JpcHQtc291cmNlLWZpbGUtZW5jb2RpbmdzIGZvciBtb3JlIGluZm8uXCIpO1xufVxuIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwic3RyaW5nX2RlY29kZXJcIik7IiwiLyohXG4gKiB1bnBpcGVcbiAqIENvcHlyaWdodChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHVucGlwZVxuXG4vKipcbiAqIERldGVybWluZSBpZiB0aGVyZSBhcmUgTm9kZS5qcyBwaXBlLWxpa2UgZGF0YSBsaXN0ZW5lcnMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGhhc1BpcGVEYXRhTGlzdGVuZXJzKHN0cmVhbSkge1xuICB2YXIgbGlzdGVuZXJzID0gc3RyZWFtLmxpc3RlbmVycygnZGF0YScpXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAobGlzdGVuZXJzW2ldLm5hbWUgPT09ICdvbmRhdGEnKSB7XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZVxufVxuXG4vKipcbiAqIFVucGlwZSBhIHN0cmVhbSBmcm9tIGFsbCBkZXN0aW5hdGlvbnMuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHN0cmVhbVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHVucGlwZShzdHJlYW0pIHtcbiAgaWYgKCFzdHJlYW0pIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBzdHJlYW0gaXMgcmVxdWlyZWQnKVxuICB9XG5cbiAgaWYgKHR5cGVvZiBzdHJlYW0udW5waXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgLy8gbmV3LXN0eWxlXG4gICAgc3RyZWFtLnVucGlwZSgpXG4gICAgcmV0dXJuXG4gIH1cblxuICAvLyBOb2RlLmpzIDAuOCBoYWNrXG4gIGlmICghaGFzUGlwZURhdGFMaXN0ZW5lcnMoc3RyZWFtKSkge1xuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIGxpc3RlbmVyXG4gIHZhciBsaXN0ZW5lcnMgPSBzdHJlYW0ubGlzdGVuZXJzKCdjbG9zZScpXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICBsaXN0ZW5lciA9IGxpc3RlbmVyc1tpXVxuXG4gICAgaWYgKGxpc3RlbmVyLm5hbWUgIT09ICdjbGVhbnVwJyAmJiBsaXN0ZW5lci5uYW1lICE9PSAnb25jbG9zZScpIHtcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgLy8gaW52b2tlIHRoZSBsaXN0ZW5lclxuICAgIGxpc3RlbmVyLmNhbGwoc3RyZWFtKVxuICB9XG59XG4iLCIvKiFcbiAqIG1pbWUtdHlwZXNcbiAqIENvcHlyaWdodChjKSAyMDE0IEpvbmF0aGFuIE9uZ1xuICogQ29weXJpZ2h0KGMpIDIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBkYiA9IHJlcXVpcmUoJ21pbWUtZGInKVxudmFyIGV4dG5hbWUgPSByZXF1aXJlKCdwYXRoJykuZXh0bmFtZVxuXG4vKipcbiAqIE1vZHVsZSB2YXJpYWJsZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBFWFRSQUNUX1RZUEVfUkVHRVhQID0gL15cXHMqKFteO1xcc10qKSg/Ojt8XFxzfCQpL1xudmFyIFRFWFRfVFlQRV9SRUdFWFAgPSAvXnRleHRcXC8vaVxuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbmV4cG9ydHMuY2hhcnNldCA9IGNoYXJzZXRcbmV4cG9ydHMuY2hhcnNldHMgPSB7IGxvb2t1cDogY2hhcnNldCB9XG5leHBvcnRzLmNvbnRlbnRUeXBlID0gY29udGVudFR5cGVcbmV4cG9ydHMuZXh0ZW5zaW9uID0gZXh0ZW5zaW9uXG5leHBvcnRzLmV4dGVuc2lvbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpXG5leHBvcnRzLmxvb2t1cCA9IGxvb2t1cFxuZXhwb3J0cy50eXBlcyA9IE9iamVjdC5jcmVhdGUobnVsbClcblxuLy8gUG9wdWxhdGUgdGhlIGV4dGVuc2lvbnMvdHlwZXMgbWFwc1xucG9wdWxhdGVNYXBzKGV4cG9ydHMuZXh0ZW5zaW9ucywgZXhwb3J0cy50eXBlcylcblxuLyoqXG4gKiBHZXQgdGhlIGRlZmF1bHQgY2hhcnNldCBmb3IgYSBNSU1FIHR5cGUuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAqIEByZXR1cm4ge2Jvb2xlYW58c3RyaW5nfVxuICovXG5cbmZ1bmN0aW9uIGNoYXJzZXQgKHR5cGUpIHtcbiAgaWYgKCF0eXBlIHx8IHR5cGVvZiB0eXBlICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgLy8gVE9ETzogdXNlIG1lZGlhLXR5cGVyXG4gIHZhciBtYXRjaCA9IEVYVFJBQ1RfVFlQRV9SRUdFWFAuZXhlYyh0eXBlKVxuICB2YXIgbWltZSA9IG1hdGNoICYmIGRiW21hdGNoWzFdLnRvTG93ZXJDYXNlKCldXG5cbiAgaWYgKG1pbWUgJiYgbWltZS5jaGFyc2V0KSB7XG4gICAgcmV0dXJuIG1pbWUuY2hhcnNldFxuICB9XG5cbiAgLy8gZGVmYXVsdCB0ZXh0LyogdG8gdXRmLThcbiAgaWYgKG1hdGNoICYmIFRFWFRfVFlQRV9SRUdFWFAudGVzdChtYXRjaFsxXSkpIHtcbiAgICByZXR1cm4gJ1VURi04J1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgZnVsbCBDb250ZW50LVR5cGUgaGVhZGVyIGdpdmVuIGEgTUlNRSB0eXBlIG9yIGV4dGVuc2lvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtib29sZWFufHN0cmluZ31cbiAqL1xuXG5mdW5jdGlvbiBjb250ZW50VHlwZSAoc3RyKSB7XG4gIC8vIFRPRE86IHNob3VsZCB0aGlzIGV2ZW4gYmUgaW4gdGhpcyBtb2R1bGU/XG4gIGlmICghc3RyIHx8IHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICB2YXIgbWltZSA9IHN0ci5pbmRleE9mKCcvJykgPT09IC0xXG4gICAgPyBleHBvcnRzLmxvb2t1cChzdHIpXG4gICAgOiBzdHJcblxuICBpZiAoIW1pbWUpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIC8vIFRPRE86IHVzZSBjb250ZW50LXR5cGUgb3Igb3RoZXIgbW9kdWxlXG4gIGlmIChtaW1lLmluZGV4T2YoJ2NoYXJzZXQnKSA9PT0gLTEpIHtcbiAgICB2YXIgY2hhcnNldCA9IGV4cG9ydHMuY2hhcnNldChtaW1lKVxuICAgIGlmIChjaGFyc2V0KSBtaW1lICs9ICc7IGNoYXJzZXQ9JyArIGNoYXJzZXQudG9Mb3dlckNhc2UoKVxuICB9XG5cbiAgcmV0dXJuIG1pbWVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGRlZmF1bHQgZXh0ZW5zaW9uIGZvciBhIE1JTUUgdHlwZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICogQHJldHVybiB7Ym9vbGVhbnxzdHJpbmd9XG4gKi9cblxuZnVuY3Rpb24gZXh0ZW5zaW9uICh0eXBlKSB7XG4gIGlmICghdHlwZSB8fCB0eXBlb2YgdHlwZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIC8vIFRPRE86IHVzZSBtZWRpYS10eXBlclxuICB2YXIgbWF0Y2ggPSBFWFRSQUNUX1RZUEVfUkVHRVhQLmV4ZWModHlwZSlcblxuICAvLyBnZXQgZXh0ZW5zaW9uc1xuICB2YXIgZXh0cyA9IG1hdGNoICYmIGV4cG9ydHMuZXh0ZW5zaW9uc1ttYXRjaFsxXS50b0xvd2VyQ2FzZSgpXVxuXG4gIGlmICghZXh0cyB8fCAhZXh0cy5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIHJldHVybiBleHRzWzBdXG59XG5cbi8qKlxuICogTG9va3VwIHRoZSBNSU1FIHR5cGUgZm9yIGEgZmlsZSBwYXRoL2V4dGVuc2lvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcGF0aFxuICogQHJldHVybiB7Ym9vbGVhbnxzdHJpbmd9XG4gKi9cblxuZnVuY3Rpb24gbG9va3VwIChwYXRoKSB7XG4gIGlmICghcGF0aCB8fCB0eXBlb2YgcGF0aCAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIC8vIGdldCB0aGUgZXh0ZW5zaW9uIChcImV4dFwiIG9yIFwiLmV4dFwiIG9yIGZ1bGwgcGF0aClcbiAgdmFyIGV4dGVuc2lvbiA9IGV4dG5hbWUoJ3guJyArIHBhdGgpXG4gICAgLnRvTG93ZXJDYXNlKClcbiAgICAuc3Vic3RyKDEpXG5cbiAgaWYgKCFleHRlbnNpb24pIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIHJldHVybiBleHBvcnRzLnR5cGVzW2V4dGVuc2lvbl0gfHwgZmFsc2Vcbn1cblxuLyoqXG4gKiBQb3B1bGF0ZSB0aGUgZXh0ZW5zaW9ucyBhbmQgdHlwZXMgbWFwcy5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcG9wdWxhdGVNYXBzIChleHRlbnNpb25zLCB0eXBlcykge1xuICAvLyBzb3VyY2UgcHJlZmVyZW5jZSAobGVhc3QgLT4gbW9zdClcbiAgdmFyIHByZWZlcmVuY2UgPSBbJ25naW54JywgJ2FwYWNoZScsIHVuZGVmaW5lZCwgJ2lhbmEnXVxuXG4gIE9iamVjdC5rZXlzKGRiKS5mb3JFYWNoKGZ1bmN0aW9uIGZvckVhY2hNaW1lVHlwZSAodHlwZSkge1xuICAgIHZhciBtaW1lID0gZGJbdHlwZV1cbiAgICB2YXIgZXh0cyA9IG1pbWUuZXh0ZW5zaW9uc1xuXG4gICAgaWYgKCFleHRzIHx8ICFleHRzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgLy8gbWltZSAtPiBleHRlbnNpb25zXG4gICAgZXh0ZW5zaW9uc1t0eXBlXSA9IGV4dHNcblxuICAgIC8vIGV4dGVuc2lvbiAtPiBtaW1lXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBleHRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZXh0ZW5zaW9uID0gZXh0c1tpXVxuXG4gICAgICBpZiAodHlwZXNbZXh0ZW5zaW9uXSkge1xuICAgICAgICB2YXIgZnJvbSA9IHByZWZlcmVuY2UuaW5kZXhPZihkYlt0eXBlc1tleHRlbnNpb25dXS5zb3VyY2UpXG4gICAgICAgIHZhciB0byA9IHByZWZlcmVuY2UuaW5kZXhPZihtaW1lLnNvdXJjZSlcblxuICAgICAgICBpZiAodHlwZXNbZXh0ZW5zaW9uXSAhPT0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScgJiZcbiAgICAgICAgICAoZnJvbSA+IHRvIHx8IChmcm9tID09PSB0byAmJiB0eXBlc1tleHRlbnNpb25dLnN1YnN0cigwLCAxMikgPT09ICdhcHBsaWNhdGlvbi8nKSkpIHtcbiAgICAgICAgICAvLyBza2lwIHRoZSByZW1hcHBpbmdcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIHNldCB0aGUgZXh0ZW5zaW9uIC0+IG1pbWVcbiAgICAgIHR5cGVzW2V4dGVuc2lvbl0gPSB0eXBlXG4gICAgfVxuICB9KVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxudmFyIGhleFRhYmxlID0gKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgYXJyYXkgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDI1NjsgKytpKSB7XG4gICAgICAgIGFycmF5LnB1c2goJyUnICsgKChpIDwgMTYgPyAnMCcgOiAnJykgKyBpLnRvU3RyaW5nKDE2KSkudG9VcHBlckNhc2UoKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFycmF5O1xufSgpKTtcblxudmFyIGNvbXBhY3RRdWV1ZSA9IGZ1bmN0aW9uIGNvbXBhY3RRdWV1ZShxdWV1ZSkge1xuICAgIHZhciBvYmo7XG5cbiAgICB3aGlsZSAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHZhciBpdGVtID0gcXVldWUucG9wKCk7XG4gICAgICAgIG9iaiA9IGl0ZW0ub2JqW2l0ZW0ucHJvcF07XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgICAgICAgICAgdmFyIGNvbXBhY3RlZCA9IFtdO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IG9iai5sZW5ndGg7ICsraikge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygb2JqW2pdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICBjb21wYWN0ZWQucHVzaChvYmpbal0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaXRlbS5vYmpbaXRlbS5wcm9wXSA9IGNvbXBhY3RlZDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBvYmo7XG59O1xuXG52YXIgYXJyYXlUb09iamVjdCA9IGZ1bmN0aW9uIGFycmF5VG9PYmplY3Qoc291cmNlLCBvcHRpb25zKSB7XG4gICAgdmFyIG9iaiA9IG9wdGlvbnMgJiYgb3B0aW9ucy5wbGFpbk9iamVjdHMgPyBPYmplY3QuY3JlYXRlKG51bGwpIDoge307XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzb3VyY2UubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzb3VyY2VbaV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBvYmpbaV0gPSBzb3VyY2VbaV07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gb2JqO1xufTtcblxudmFyIG1lcmdlID0gZnVuY3Rpb24gbWVyZ2UodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMpIHtcbiAgICBpZiAoIXNvdXJjZSkge1xuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygc291cmNlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0YXJnZXQpKSB7XG4gICAgICAgICAgICB0YXJnZXQucHVzaChzb3VyY2UpO1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5wbGFpbk9iamVjdHMgfHwgb3B0aW9ucy5hbGxvd1Byb3RvdHlwZXMgfHwgIWhhcy5jYWxsKE9iamVjdC5wcm90b3R5cGUsIHNvdXJjZSkpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRbc291cmNlXSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gW3RhcmdldCwgc291cmNlXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiB0YXJnZXQgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBbdGFyZ2V0XS5jb25jYXQoc291cmNlKTtcbiAgICB9XG5cbiAgICB2YXIgbWVyZ2VUYXJnZXQgPSB0YXJnZXQ7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodGFyZ2V0KSAmJiAhQXJyYXkuaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICAgIG1lcmdlVGFyZ2V0ID0gYXJyYXlUb09iamVjdCh0YXJnZXQsIG9wdGlvbnMpO1xuICAgIH1cblxuICAgIGlmIChBcnJheS5pc0FycmF5KHRhcmdldCkgJiYgQXJyYXkuaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICAgIHNvdXJjZS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpKSB7XG4gICAgICAgICAgICBpZiAoaGFzLmNhbGwodGFyZ2V0LCBpKSkge1xuICAgICAgICAgICAgICAgIGlmICh0YXJnZXRbaV0gJiYgdHlwZW9mIHRhcmdldFtpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0W2ldID0gbWVyZ2UodGFyZ2V0W2ldLCBpdGVtLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQucHVzaChpdGVtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRhcmdldFtpXSA9IGl0ZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBPYmplY3Qua2V5cyhzb3VyY2UpLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBrZXkpIHtcbiAgICAgICAgdmFyIHZhbHVlID0gc291cmNlW2tleV07XG5cbiAgICAgICAgaWYgKGhhcy5jYWxsKGFjYywga2V5KSkge1xuICAgICAgICAgICAgYWNjW2tleV0gPSBtZXJnZShhY2Nba2V5XSwgdmFsdWUsIG9wdGlvbnMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYWNjW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIG1lcmdlVGFyZ2V0KTtcbn07XG5cbnZhciBhc3NpZ24gPSBmdW5jdGlvbiBhc3NpZ25TaW5nbGVTb3VyY2UodGFyZ2V0LCBzb3VyY2UpIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoc291cmNlKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5KSB7XG4gICAgICAgIGFjY1trZXldID0gc291cmNlW2tleV07XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgdGFyZ2V0KTtcbn07XG5cbnZhciBkZWNvZGUgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChzdHIucmVwbGFjZSgvXFwrL2csICcgJykpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG59O1xuXG52YXIgZW5jb2RlID0gZnVuY3Rpb24gZW5jb2RlKHN0cikge1xuICAgIC8vIFRoaXMgY29kZSB3YXMgb3JpZ2luYWxseSB3cml0dGVuIGJ5IEJyaWFuIFdoaXRlIChtc2NkZXgpIGZvciB0aGUgaW8uanMgY29yZSBxdWVyeXN0cmluZyBsaWJyYXJ5LlxuICAgIC8vIEl0IGhhcyBiZWVuIGFkYXB0ZWQgaGVyZSBmb3Igc3RyaWN0ZXIgYWRoZXJlbmNlIHRvIFJGQyAzOTg2XG4gICAgaWYgKHN0ci5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG5cbiAgICB2YXIgc3RyaW5nID0gdHlwZW9mIHN0ciA9PT0gJ3N0cmluZycgPyBzdHIgOiBTdHJpbmcoc3RyKTtcblxuICAgIHZhciBvdXQgPSAnJztcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0cmluZy5sZW5ndGg7ICsraSkge1xuICAgICAgICB2YXIgYyA9IHN0cmluZy5jaGFyQ29kZUF0KGkpO1xuXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIGMgPT09IDB4MkQgLy8gLVxuICAgICAgICAgICAgfHwgYyA9PT0gMHgyRSAvLyAuXG4gICAgICAgICAgICB8fCBjID09PSAweDVGIC8vIF9cbiAgICAgICAgICAgIHx8IGMgPT09IDB4N0UgLy8gflxuICAgICAgICAgICAgfHwgKGMgPj0gMHgzMCAmJiBjIDw9IDB4MzkpIC8vIDAtOVxuICAgICAgICAgICAgfHwgKGMgPj0gMHg0MSAmJiBjIDw9IDB4NUEpIC8vIGEtelxuICAgICAgICAgICAgfHwgKGMgPj0gMHg2MSAmJiBjIDw9IDB4N0EpIC8vIEEtWlxuICAgICAgICApIHtcbiAgICAgICAgICAgIG91dCArPSBzdHJpbmcuY2hhckF0KGkpO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoYyA8IDB4ODApIHtcbiAgICAgICAgICAgIG91dCA9IG91dCArIGhleFRhYmxlW2NdO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoYyA8IDB4ODAwKSB7XG4gICAgICAgICAgICBvdXQgPSBvdXQgKyAoaGV4VGFibGVbMHhDMCB8IChjID4+IDYpXSArIGhleFRhYmxlWzB4ODAgfCAoYyAmIDB4M0YpXSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjIDwgMHhEODAwIHx8IGMgPj0gMHhFMDAwKSB7XG4gICAgICAgICAgICBvdXQgPSBvdXQgKyAoaGV4VGFibGVbMHhFMCB8IChjID4+IDEyKV0gKyBoZXhUYWJsZVsweDgwIHwgKChjID4+IDYpICYgMHgzRildICsgaGV4VGFibGVbMHg4MCB8IChjICYgMHgzRildKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaSArPSAxO1xuICAgICAgICBjID0gMHgxMDAwMCArICgoKGMgJiAweDNGRikgPDwgMTApIHwgKHN0cmluZy5jaGFyQ29kZUF0KGkpICYgMHgzRkYpKTtcbiAgICAgICAgb3V0ICs9IGhleFRhYmxlWzB4RjAgfCAoYyA+PiAxOCldXG4gICAgICAgICAgICArIGhleFRhYmxlWzB4ODAgfCAoKGMgPj4gMTIpICYgMHgzRildXG4gICAgICAgICAgICArIGhleFRhYmxlWzB4ODAgfCAoKGMgPj4gNikgJiAweDNGKV1cbiAgICAgICAgICAgICsgaGV4VGFibGVbMHg4MCB8IChjICYgMHgzRildO1xuICAgIH1cblxuICAgIHJldHVybiBvdXQ7XG59O1xuXG52YXIgY29tcGFjdCA9IGZ1bmN0aW9uIGNvbXBhY3QodmFsdWUpIHtcbiAgICB2YXIgcXVldWUgPSBbeyBvYmo6IHsgbzogdmFsdWUgfSwgcHJvcDogJ28nIH1dO1xuICAgIHZhciByZWZzID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHF1ZXVlLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIHZhciBpdGVtID0gcXVldWVbaV07XG4gICAgICAgIHZhciBvYmogPSBpdGVtLm9ialtpdGVtLnByb3BdO1xuXG4gICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBrZXlzLmxlbmd0aDsgKytqKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0ga2V5c1tqXTtcbiAgICAgICAgICAgIHZhciB2YWwgPSBvYmpba2V5XTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsID09PSAnb2JqZWN0JyAmJiB2YWwgIT09IG51bGwgJiYgcmVmcy5pbmRleE9mKHZhbCkgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgcXVldWUucHVzaCh7IG9iajogb2JqLCBwcm9wOiBrZXkgfSk7XG4gICAgICAgICAgICAgICAgcmVmcy5wdXNoKHZhbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY29tcGFjdFF1ZXVlKHF1ZXVlKTtcbn07XG5cbnZhciBpc1JlZ0V4cCA9IGZ1bmN0aW9uIGlzUmVnRXhwKG9iaikge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgUmVnRXhwXSc7XG59O1xuXG52YXIgaXNCdWZmZXIgPSBmdW5jdGlvbiBpc0J1ZmZlcihvYmopIHtcbiAgICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gISEob2JqLmNvbnN0cnVjdG9yICYmIG9iai5jb25zdHJ1Y3Rvci5pc0J1ZmZlciAmJiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIob2JqKSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBhcnJheVRvT2JqZWN0OiBhcnJheVRvT2JqZWN0LFxuICAgIGFzc2lnbjogYXNzaWduLFxuICAgIGNvbXBhY3Q6IGNvbXBhY3QsXG4gICAgZGVjb2RlOiBkZWNvZGUsXG4gICAgZW5jb2RlOiBlbmNvZGUsXG4gICAgaXNCdWZmZXI6IGlzQnVmZmVyLFxuICAgIGlzUmVnRXhwOiBpc1JlZ0V4cCxcbiAgICBtZXJnZTogbWVyZ2Vcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciByZXBsYWNlID0gU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlO1xudmFyIHBlcmNlbnRUd2VudGllcyA9IC8lMjAvZztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgJ2RlZmF1bHQnOiAnUkZDMzk4NicsXG4gICAgZm9ybWF0dGVyczoge1xuICAgICAgICBSRkMxNzM4OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiByZXBsYWNlLmNhbGwodmFsdWUsIHBlcmNlbnRUd2VudGllcywgJysnKTtcbiAgICAgICAgfSxcbiAgICAgICAgUkZDMzk4NjogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIFJGQzE3Mzg6ICdSRkMxNzM4JyxcbiAgICBSRkMzOTg2OiAnUkZDMzk4Nidcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJxdWVyeXN0cmluZ1wiKTsiLCIvKiFcbiAqIGV4cHJlc3NcbiAqIENvcHlyaWdodChjKSAyMDA5LTIwMTMgVEogSG9sb3dheWNodWtcbiAqIENvcHlyaWdodChjKSAyMDEzIFJvbWFuIFNodHlsbWFuXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIFJvdXRlID0gcmVxdWlyZSgnLi9yb3V0ZScpO1xudmFyIExheWVyID0gcmVxdWlyZSgnLi9sYXllcicpO1xudmFyIG1ldGhvZHMgPSByZXF1aXJlKCdtZXRob2RzJyk7XG52YXIgbWl4aW4gPSByZXF1aXJlKCd1dGlscy1tZXJnZScpO1xudmFyIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnZXhwcmVzczpyb3V0ZXInKTtcbnZhciBkZXByZWNhdGUgPSByZXF1aXJlKCdkZXBkJykoJ2V4cHJlc3MnKTtcbnZhciBmbGF0dGVuID0gcmVxdWlyZSgnYXJyYXktZmxhdHRlbicpO1xudmFyIHBhcnNlVXJsID0gcmVxdWlyZSgncGFyc2V1cmwnKTtcbnZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJ3NldHByb3RvdHlwZW9mJylcblxuLyoqXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgb2JqZWN0UmVnRXhwID0gL15cXFtvYmplY3QgKFxcUyspXFxdJC87XG52YXIgc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG52YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG4vKipcbiAqIEluaXRpYWxpemUgYSBuZXcgYFJvdXRlcmAgd2l0aCB0aGUgZ2l2ZW4gYG9wdGlvbnNgLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm4ge1JvdXRlcn0gd2hpY2ggaXMgYW4gY2FsbGFibGUgZnVuY3Rpb25cbiAqIEBwdWJsaWNcbiAqL1xuXG52YXIgcHJvdG8gPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgdmFyIG9wdHMgPSBvcHRpb25zIHx8IHt9O1xuXG4gIGZ1bmN0aW9uIHJvdXRlcihyZXEsIHJlcywgbmV4dCkge1xuICAgIHJvdXRlci5oYW5kbGUocmVxLCByZXMsIG5leHQpO1xuICB9XG5cbiAgLy8gbWl4aW4gUm91dGVyIGNsYXNzIGZ1bmN0aW9uc1xuICBzZXRQcm90b3R5cGVPZihyb3V0ZXIsIHByb3RvKVxuXG4gIHJvdXRlci5wYXJhbXMgPSB7fTtcbiAgcm91dGVyLl9wYXJhbXMgPSBbXTtcbiAgcm91dGVyLmNhc2VTZW5zaXRpdmUgPSBvcHRzLmNhc2VTZW5zaXRpdmU7XG4gIHJvdXRlci5tZXJnZVBhcmFtcyA9IG9wdHMubWVyZ2VQYXJhbXM7XG4gIHJvdXRlci5zdHJpY3QgPSBvcHRzLnN0cmljdDtcbiAgcm91dGVyLnN0YWNrID0gW107XG5cbiAgcmV0dXJuIHJvdXRlcjtcbn07XG5cbi8qKlxuICogTWFwIHRoZSBnaXZlbiBwYXJhbSBwbGFjZWhvbGRlciBgbmFtZWAocykgdG8gdGhlIGdpdmVuIGNhbGxiYWNrLlxuICpcbiAqIFBhcmFtZXRlciBtYXBwaW5nIGlzIHVzZWQgdG8gcHJvdmlkZSBwcmUtY29uZGl0aW9ucyB0byByb3V0ZXNcbiAqIHdoaWNoIHVzZSBub3JtYWxpemVkIHBsYWNlaG9sZGVycy4gRm9yIGV4YW1wbGUgYSBfOnVzZXJfaWRfIHBhcmFtZXRlclxuICogY291bGQgYXV0b21hdGljYWxseSBsb2FkIGEgdXNlcidzIGluZm9ybWF0aW9uIGZyb20gdGhlIGRhdGFiYXNlIHdpdGhvdXRcbiAqIGFueSBhZGRpdGlvbmFsIGNvZGUsXG4gKlxuICogVGhlIGNhbGxiYWNrIHVzZXMgdGhlIHNhbWUgc2lnbmF0dXJlIGFzIG1pZGRsZXdhcmUsIHRoZSBvbmx5IGRpZmZlcmVuY2VcbiAqIGJlaW5nIHRoYXQgdGhlIHZhbHVlIG9mIHRoZSBwbGFjZWhvbGRlciBpcyBwYXNzZWQsIGluIHRoaXMgY2FzZSB0aGUgX2lkX1xuICogb2YgdGhlIHVzZXIuIE9uY2UgdGhlIGBuZXh0KClgIGZ1bmN0aW9uIGlzIGludm9rZWQsIGp1c3QgbGlrZSBtaWRkbGV3YXJlXG4gKiBpdCB3aWxsIGNvbnRpbnVlIG9uIHRvIGV4ZWN1dGUgdGhlIHJvdXRlLCBvciBzdWJzZXF1ZW50IHBhcmFtZXRlciBmdW5jdGlvbnMuXG4gKlxuICogSnVzdCBsaWtlIGluIG1pZGRsZXdhcmUsIHlvdSBtdXN0IGVpdGhlciByZXNwb25kIHRvIHRoZSByZXF1ZXN0IG9yIGNhbGwgbmV4dFxuICogdG8gYXZvaWQgc3RhbGxpbmcgdGhlIHJlcXVlc3QuXG4gKlxuICogIGFwcC5wYXJhbSgndXNlcl9pZCcsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0LCBpZCl7XG4gKiAgICBVc2VyLmZpbmQoaWQsIGZ1bmN0aW9uKGVyciwgdXNlcil7XG4gKiAgICAgIGlmIChlcnIpIHtcbiAqICAgICAgICByZXR1cm4gbmV4dChlcnIpO1xuICogICAgICB9IGVsc2UgaWYgKCF1c2VyKSB7XG4gKiAgICAgICAgcmV0dXJuIG5leHQobmV3IEVycm9yKCdmYWlsZWQgdG8gbG9hZCB1c2VyJykpO1xuICogICAgICB9XG4gKiAgICAgIHJlcS51c2VyID0gdXNlcjtcbiAqICAgICAgbmV4dCgpO1xuICogICAgfSk7XG4gKiAgfSk7XG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKiBAcmV0dXJuIHthcHB9IGZvciBjaGFpbmluZ1xuICogQHB1YmxpY1xuICovXG5cbnByb3RvLnBhcmFtID0gZnVuY3Rpb24gcGFyYW0obmFtZSwgZm4pIHtcbiAgLy8gcGFyYW0gbG9naWNcbiAgaWYgKHR5cGVvZiBuYW1lID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZGVwcmVjYXRlKCdyb3V0ZXIucGFyYW0oZm4pOiBSZWZhY3RvciB0byB1c2UgcGF0aCBwYXJhbXMnKTtcbiAgICB0aGlzLl9wYXJhbXMucHVzaChuYW1lKTtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBhcHBseSBwYXJhbSBmdW5jdGlvbnNcbiAgdmFyIHBhcmFtcyA9IHRoaXMuX3BhcmFtcztcbiAgdmFyIGxlbiA9IHBhcmFtcy5sZW5ndGg7XG4gIHZhciByZXQ7XG5cbiAgaWYgKG5hbWVbMF0gPT09ICc6Jykge1xuICAgIGRlcHJlY2F0ZSgncm91dGVyLnBhcmFtKCcgKyBKU09OLnN0cmluZ2lmeShuYW1lKSArICcsIGZuKTogVXNlIHJvdXRlci5wYXJhbSgnICsgSlNPTi5zdHJpbmdpZnkobmFtZS5zdWJzdHIoMSkpICsgJywgZm4pIGluc3RlYWQnKTtcbiAgICBuYW1lID0gbmFtZS5zdWJzdHIoMSk7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgaWYgKHJldCA9IHBhcmFtc1tpXShuYW1lLCBmbikpIHtcbiAgICAgIGZuID0gcmV0O1xuICAgIH1cbiAgfVxuXG4gIC8vIGVuc3VyZSB3ZSBlbmQgdXAgd2l0aCBhXG4gIC8vIG1pZGRsZXdhcmUgZnVuY3Rpb25cbiAgaWYgKCdmdW5jdGlvbicgIT09IHR5cGVvZiBmbikge1xuICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBwYXJhbSgpIGNhbGwgZm9yICcgKyBuYW1lICsgJywgZ290ICcgKyBmbik7XG4gIH1cblxuICAodGhpcy5wYXJhbXNbbmFtZV0gPSB0aGlzLnBhcmFtc1tuYW1lXSB8fCBbXSkucHVzaChmbik7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcSwgcmVzIGludG8gdGhlIHJvdXRlci5cbiAqIEBwcml2YXRlXG4gKi9cblxucHJvdG8uaGFuZGxlID0gZnVuY3Rpb24gaGFuZGxlKHJlcSwgcmVzLCBvdXQpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gIGRlYnVnKCdkaXNwYXRjaGluZyAlcyAlcycsIHJlcS5tZXRob2QsIHJlcS51cmwpO1xuXG4gIHZhciBpZHggPSAwO1xuICB2YXIgcHJvdG9ob3N0ID0gZ2V0UHJvdG9ob3N0KHJlcS51cmwpIHx8ICcnXG4gIHZhciByZW1vdmVkID0gJyc7XG4gIHZhciBzbGFzaEFkZGVkID0gZmFsc2U7XG4gIHZhciBwYXJhbWNhbGxlZCA9IHt9O1xuXG4gIC8vIHN0b3JlIG9wdGlvbnMgZm9yIE9QVElPTlMgcmVxdWVzdFxuICAvLyBvbmx5IHVzZWQgaWYgT1BUSU9OUyByZXF1ZXN0XG4gIHZhciBvcHRpb25zID0gW107XG5cbiAgLy8gbWlkZGxld2FyZSBhbmQgcm91dGVzXG4gIHZhciBzdGFjayA9IHNlbGYuc3RhY2s7XG5cbiAgLy8gbWFuYWdlIGludGVyLXJvdXRlciB2YXJpYWJsZXNcbiAgdmFyIHBhcmVudFBhcmFtcyA9IHJlcS5wYXJhbXM7XG4gIHZhciBwYXJlbnRVcmwgPSByZXEuYmFzZVVybCB8fCAnJztcbiAgdmFyIGRvbmUgPSByZXN0b3JlKG91dCwgcmVxLCAnYmFzZVVybCcsICduZXh0JywgJ3BhcmFtcycpO1xuXG4gIC8vIHNldHVwIG5leHQgbGF5ZXJcbiAgcmVxLm5leHQgPSBuZXh0O1xuXG4gIC8vIGZvciBvcHRpb25zIHJlcXVlc3RzLCByZXNwb25kIHdpdGggYSBkZWZhdWx0IGlmIG5vdGhpbmcgZWxzZSByZXNwb25kc1xuICBpZiAocmVxLm1ldGhvZCA9PT0gJ09QVElPTlMnKSB7XG4gICAgZG9uZSA9IHdyYXAoZG9uZSwgZnVuY3Rpb24ob2xkLCBlcnIpIHtcbiAgICAgIGlmIChlcnIgfHwgb3B0aW9ucy5sZW5ndGggPT09IDApIHJldHVybiBvbGQoZXJyKTtcbiAgICAgIHNlbmRPcHRpb25zUmVzcG9uc2UocmVzLCBvcHRpb25zLCBvbGQpO1xuICAgIH0pO1xuICB9XG5cbiAgLy8gc2V0dXAgYmFzaWMgcmVxIHZhbHVlc1xuICByZXEuYmFzZVVybCA9IHBhcmVudFVybDtcbiAgcmVxLm9yaWdpbmFsVXJsID0gcmVxLm9yaWdpbmFsVXJsIHx8IHJlcS51cmw7XG5cbiAgbmV4dCgpO1xuXG4gIGZ1bmN0aW9uIG5leHQoZXJyKSB7XG4gICAgdmFyIGxheWVyRXJyb3IgPSBlcnIgPT09ICdyb3V0ZSdcbiAgICAgID8gbnVsbFxuICAgICAgOiBlcnI7XG5cbiAgICAvLyByZW1vdmUgYWRkZWQgc2xhc2hcbiAgICBpZiAoc2xhc2hBZGRlZCkge1xuICAgICAgcmVxLnVybCA9IHJlcS51cmwuc3Vic3RyKDEpO1xuICAgICAgc2xhc2hBZGRlZCA9IGZhbHNlO1xuICAgIH1cblxuICAgIC8vIHJlc3RvcmUgYWx0ZXJlZCByZXEudXJsXG4gICAgaWYgKHJlbW92ZWQubGVuZ3RoICE9PSAwKSB7XG4gICAgICByZXEuYmFzZVVybCA9IHBhcmVudFVybDtcbiAgICAgIHJlcS51cmwgPSBwcm90b2hvc3QgKyByZW1vdmVkICsgcmVxLnVybC5zdWJzdHIocHJvdG9ob3N0Lmxlbmd0aCk7XG4gICAgICByZW1vdmVkID0gJyc7XG4gICAgfVxuXG4gICAgLy8gc2lnbmFsIHRvIGV4aXQgcm91dGVyXG4gICAgaWYgKGxheWVyRXJyb3IgPT09ICdyb3V0ZXInKSB7XG4gICAgICBzZXRJbW1lZGlhdGUoZG9uZSwgbnVsbClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIG5vIG1vcmUgbWF0Y2hpbmcgbGF5ZXJzXG4gICAgaWYgKGlkeCA+PSBzdGFjay5sZW5ndGgpIHtcbiAgICAgIHNldEltbWVkaWF0ZShkb25lLCBsYXllckVycm9yKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBnZXQgcGF0aG5hbWUgb2YgcmVxdWVzdFxuICAgIHZhciBwYXRoID0gZ2V0UGF0aG5hbWUocmVxKTtcblxuICAgIGlmIChwYXRoID09IG51bGwpIHtcbiAgICAgIHJldHVybiBkb25lKGxheWVyRXJyb3IpO1xuICAgIH1cblxuICAgIC8vIGZpbmQgbmV4dCBtYXRjaGluZyBsYXllclxuICAgIHZhciBsYXllcjtcbiAgICB2YXIgbWF0Y2g7XG4gICAgdmFyIHJvdXRlO1xuXG4gICAgd2hpbGUgKG1hdGNoICE9PSB0cnVlICYmIGlkeCA8IHN0YWNrLmxlbmd0aCkge1xuICAgICAgbGF5ZXIgPSBzdGFja1tpZHgrK107XG4gICAgICBtYXRjaCA9IG1hdGNoTGF5ZXIobGF5ZXIsIHBhdGgpO1xuICAgICAgcm91dGUgPSBsYXllci5yb3V0ZTtcblxuICAgICAgaWYgKHR5cGVvZiBtYXRjaCAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIC8vIGhvbGQgb24gdG8gbGF5ZXJFcnJvclxuICAgICAgICBsYXllckVycm9yID0gbGF5ZXJFcnJvciB8fCBtYXRjaDtcbiAgICAgIH1cblxuICAgICAgaWYgKG1hdGNoICE9PSB0cnVlKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXJvdXRlKSB7XG4gICAgICAgIC8vIHByb2Nlc3Mgbm9uLXJvdXRlIGhhbmRsZXJzIG5vcm1hbGx5XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobGF5ZXJFcnJvcikge1xuICAgICAgICAvLyByb3V0ZXMgZG8gbm90IG1hdGNoIHdpdGggYSBwZW5kaW5nIGVycm9yXG4gICAgICAgIG1hdGNoID0gZmFsc2U7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICB2YXIgbWV0aG9kID0gcmVxLm1ldGhvZDtcbiAgICAgIHZhciBoYXNfbWV0aG9kID0gcm91dGUuX2hhbmRsZXNfbWV0aG9kKG1ldGhvZCk7XG5cbiAgICAgIC8vIGJ1aWxkIHVwIGF1dG9tYXRpYyBvcHRpb25zIHJlc3BvbnNlXG4gICAgICBpZiAoIWhhc19tZXRob2QgJiYgbWV0aG9kID09PSAnT1BUSU9OUycpIHtcbiAgICAgICAgYXBwZW5kTWV0aG9kcyhvcHRpb25zLCByb3V0ZS5fb3B0aW9ucygpKTtcbiAgICAgIH1cblxuICAgICAgLy8gZG9uJ3QgZXZlbiBib3RoZXIgbWF0Y2hpbmcgcm91dGVcbiAgICAgIGlmICghaGFzX21ldGhvZCAmJiBtZXRob2QgIT09ICdIRUFEJykge1xuICAgICAgICBtYXRjaCA9IGZhbHNlO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBubyBtYXRjaFxuICAgIGlmIChtYXRjaCAhPT0gdHJ1ZSkge1xuICAgICAgcmV0dXJuIGRvbmUobGF5ZXJFcnJvcik7XG4gICAgfVxuXG4gICAgLy8gc3RvcmUgcm91dGUgZm9yIGRpc3BhdGNoIG9uIGNoYW5nZVxuICAgIGlmIChyb3V0ZSkge1xuICAgICAgcmVxLnJvdXRlID0gcm91dGU7XG4gICAgfVxuXG4gICAgLy8gQ2FwdHVyZSBvbmUtdGltZSBsYXllciB2YWx1ZXNcbiAgICByZXEucGFyYW1zID0gc2VsZi5tZXJnZVBhcmFtc1xuICAgICAgPyBtZXJnZVBhcmFtcyhsYXllci5wYXJhbXMsIHBhcmVudFBhcmFtcylcbiAgICAgIDogbGF5ZXIucGFyYW1zO1xuICAgIHZhciBsYXllclBhdGggPSBsYXllci5wYXRoO1xuXG4gICAgLy8gdGhpcyBzaG91bGQgYmUgZG9uZSBmb3IgdGhlIGxheWVyXG4gICAgc2VsZi5wcm9jZXNzX3BhcmFtcyhsYXllciwgcGFyYW1jYWxsZWQsIHJlcSwgcmVzLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIHJldHVybiBuZXh0KGxheWVyRXJyb3IgfHwgZXJyKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHJvdXRlKSB7XG4gICAgICAgIHJldHVybiBsYXllci5oYW5kbGVfcmVxdWVzdChyZXEsIHJlcywgbmV4dCk7XG4gICAgICB9XG5cbiAgICAgIHRyaW1fcHJlZml4KGxheWVyLCBsYXllckVycm9yLCBsYXllclBhdGgsIHBhdGgpO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gdHJpbV9wcmVmaXgobGF5ZXIsIGxheWVyRXJyb3IsIGxheWVyUGF0aCwgcGF0aCkge1xuICAgIGlmIChsYXllclBhdGgubGVuZ3RoICE9PSAwKSB7XG4gICAgICAvLyBWYWxpZGF0ZSBwYXRoIGJyZWFrcyBvbiBhIHBhdGggc2VwYXJhdG9yXG4gICAgICB2YXIgYyA9IHBhdGhbbGF5ZXJQYXRoLmxlbmd0aF1cbiAgICAgIGlmIChjICYmIGMgIT09ICcvJyAmJiBjICE9PSAnLicpIHJldHVybiBuZXh0KGxheWVyRXJyb3IpXG5cbiAgICAgIC8vIFRyaW0gb2ZmIHRoZSBwYXJ0IG9mIHRoZSB1cmwgdGhhdCBtYXRjaGVzIHRoZSByb3V0ZVxuICAgICAgLy8gbWlkZGxld2FyZSAoLnVzZSBzdHVmZikgbmVlZHMgdG8gaGF2ZSB0aGUgcGF0aCBzdHJpcHBlZFxuICAgICAgZGVidWcoJ3RyaW0gcHJlZml4ICglcykgZnJvbSB1cmwgJXMnLCBsYXllclBhdGgsIHJlcS51cmwpO1xuICAgICAgcmVtb3ZlZCA9IGxheWVyUGF0aDtcbiAgICAgIHJlcS51cmwgPSBwcm90b2hvc3QgKyByZXEudXJsLnN1YnN0cihwcm90b2hvc3QubGVuZ3RoICsgcmVtb3ZlZC5sZW5ndGgpO1xuXG4gICAgICAvLyBFbnN1cmUgbGVhZGluZyBzbGFzaFxuICAgICAgaWYgKCFwcm90b2hvc3QgJiYgcmVxLnVybFswXSAhPT0gJy8nKSB7XG4gICAgICAgIHJlcS51cmwgPSAnLycgKyByZXEudXJsO1xuICAgICAgICBzbGFzaEFkZGVkID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLy8gU2V0dXAgYmFzZSBVUkwgKG5vIHRyYWlsaW5nIHNsYXNoKVxuICAgICAgcmVxLmJhc2VVcmwgPSBwYXJlbnRVcmwgKyAocmVtb3ZlZFtyZW1vdmVkLmxlbmd0aCAtIDFdID09PSAnLydcbiAgICAgICAgPyByZW1vdmVkLnN1YnN0cmluZygwLCByZW1vdmVkLmxlbmd0aCAtIDEpXG4gICAgICAgIDogcmVtb3ZlZCk7XG4gICAgfVxuXG4gICAgZGVidWcoJyVzICVzIDogJXMnLCBsYXllci5uYW1lLCBsYXllclBhdGgsIHJlcS5vcmlnaW5hbFVybCk7XG5cbiAgICBpZiAobGF5ZXJFcnJvcikge1xuICAgICAgbGF5ZXIuaGFuZGxlX2Vycm9yKGxheWVyRXJyb3IsIHJlcSwgcmVzLCBuZXh0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGF5ZXIuaGFuZGxlX3JlcXVlc3QocmVxLCByZXMsIG5leHQpO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBQcm9jZXNzIGFueSBwYXJhbWV0ZXJzIGZvciB0aGUgbGF5ZXIuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnByb3RvLnByb2Nlc3NfcGFyYW1zID0gZnVuY3Rpb24gcHJvY2Vzc19wYXJhbXMobGF5ZXIsIGNhbGxlZCwgcmVxLCByZXMsIGRvbmUpIHtcbiAgdmFyIHBhcmFtcyA9IHRoaXMucGFyYW1zO1xuXG4gIC8vIGNhcHR1cmVkIHBhcmFtZXRlcnMgZnJvbSB0aGUgbGF5ZXIsIGtleXMgYW5kIHZhbHVlc1xuICB2YXIga2V5cyA9IGxheWVyLmtleXM7XG5cbiAgLy8gZmFzdCB0cmFja1xuICBpZiAoIWtleXMgfHwga2V5cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gZG9uZSgpO1xuICB9XG5cbiAgdmFyIGkgPSAwO1xuICB2YXIgbmFtZTtcbiAgdmFyIHBhcmFtSW5kZXggPSAwO1xuICB2YXIga2V5O1xuICB2YXIgcGFyYW1WYWw7XG4gIHZhciBwYXJhbUNhbGxiYWNrcztcbiAgdmFyIHBhcmFtQ2FsbGVkO1xuXG4gIC8vIHByb2Nlc3MgcGFyYW1zIGluIG9yZGVyXG4gIC8vIHBhcmFtIGNhbGxiYWNrcyBjYW4gYmUgYXN5bmNcbiAgZnVuY3Rpb24gcGFyYW0oZXJyKSB7XG4gICAgaWYgKGVycikge1xuICAgICAgcmV0dXJuIGRvbmUoZXJyKTtcbiAgICB9XG5cbiAgICBpZiAoaSA+PSBrZXlzLmxlbmd0aCApIHtcbiAgICAgIHJldHVybiBkb25lKCk7XG4gICAgfVxuXG4gICAgcGFyYW1JbmRleCA9IDA7XG4gICAga2V5ID0ga2V5c1tpKytdO1xuICAgIG5hbWUgPSBrZXkubmFtZTtcbiAgICBwYXJhbVZhbCA9IHJlcS5wYXJhbXNbbmFtZV07XG4gICAgcGFyYW1DYWxsYmFja3MgPSBwYXJhbXNbbmFtZV07XG4gICAgcGFyYW1DYWxsZWQgPSBjYWxsZWRbbmFtZV07XG5cbiAgICBpZiAocGFyYW1WYWwgPT09IHVuZGVmaW5lZCB8fCAhcGFyYW1DYWxsYmFja3MpIHtcbiAgICAgIHJldHVybiBwYXJhbSgpO1xuICAgIH1cblxuICAgIC8vIHBhcmFtIHByZXZpb3VzbHkgY2FsbGVkIHdpdGggc2FtZSB2YWx1ZSBvciBlcnJvciBvY2N1cnJlZFxuICAgIGlmIChwYXJhbUNhbGxlZCAmJiAocGFyYW1DYWxsZWQubWF0Y2ggPT09IHBhcmFtVmFsXG4gICAgICB8fCAocGFyYW1DYWxsZWQuZXJyb3IgJiYgcGFyYW1DYWxsZWQuZXJyb3IgIT09ICdyb3V0ZScpKSkge1xuICAgICAgLy8gcmVzdG9yZSB2YWx1ZVxuICAgICAgcmVxLnBhcmFtc1tuYW1lXSA9IHBhcmFtQ2FsbGVkLnZhbHVlO1xuXG4gICAgICAvLyBuZXh0IHBhcmFtXG4gICAgICByZXR1cm4gcGFyYW0ocGFyYW1DYWxsZWQuZXJyb3IpO1xuICAgIH1cblxuICAgIGNhbGxlZFtuYW1lXSA9IHBhcmFtQ2FsbGVkID0ge1xuICAgICAgZXJyb3I6IG51bGwsXG4gICAgICBtYXRjaDogcGFyYW1WYWwsXG4gICAgICB2YWx1ZTogcGFyYW1WYWxcbiAgICB9O1xuXG4gICAgcGFyYW1DYWxsYmFjaygpO1xuICB9XG5cbiAgLy8gc2luZ2xlIHBhcmFtIGNhbGxiYWNrc1xuICBmdW5jdGlvbiBwYXJhbUNhbGxiYWNrKGVycikge1xuICAgIHZhciBmbiA9IHBhcmFtQ2FsbGJhY2tzW3BhcmFtSW5kZXgrK107XG5cbiAgICAvLyBzdG9yZSB1cGRhdGVkIHZhbHVlXG4gICAgcGFyYW1DYWxsZWQudmFsdWUgPSByZXEucGFyYW1zW2tleS5uYW1lXTtcblxuICAgIGlmIChlcnIpIHtcbiAgICAgIC8vIHN0b3JlIGVycm9yXG4gICAgICBwYXJhbUNhbGxlZC5lcnJvciA9IGVycjtcbiAgICAgIHBhcmFtKGVycik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCFmbikgcmV0dXJuIHBhcmFtKCk7XG5cbiAgICB0cnkge1xuICAgICAgZm4ocmVxLCByZXMsIHBhcmFtQ2FsbGJhY2ssIHBhcmFtVmFsLCBrZXkubmFtZSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcGFyYW1DYWxsYmFjayhlKTtcbiAgICB9XG4gIH1cblxuICBwYXJhbSgpO1xufTtcblxuLyoqXG4gKiBVc2UgdGhlIGdpdmVuIG1pZGRsZXdhcmUgZnVuY3Rpb24sIHdpdGggb3B0aW9uYWwgcGF0aCwgZGVmYXVsdGluZyB0byBcIi9cIi5cbiAqXG4gKiBVc2UgKGxpa2UgYC5hbGxgKSB3aWxsIHJ1biBmb3IgYW55IGh0dHAgTUVUSE9ELCBidXQgaXQgd2lsbCBub3QgYWRkXG4gKiBoYW5kbGVycyBmb3IgdGhvc2UgbWV0aG9kcyBzbyBPUFRJT05TIHJlcXVlc3RzIHdpbGwgbm90IGNvbnNpZGVyIGAudXNlYFxuICogZnVuY3Rpb25zIGV2ZW4gaWYgdGhleSBjb3VsZCByZXNwb25kLlxuICpcbiAqIFRoZSBvdGhlciBkaWZmZXJlbmNlIGlzIHRoYXQgX3JvdXRlXyBwYXRoIGlzIHN0cmlwcGVkIGFuZCBub3QgdmlzaWJsZVxuICogdG8gdGhlIGhhbmRsZXIgZnVuY3Rpb24uIFRoZSBtYWluIGVmZmVjdCBvZiB0aGlzIGZlYXR1cmUgaXMgdGhhdCBtb3VudGVkXG4gKiBoYW5kbGVycyBjYW4gb3BlcmF0ZSB3aXRob3V0IGFueSBjb2RlIGNoYW5nZXMgcmVnYXJkbGVzcyBvZiB0aGUgXCJwcmVmaXhcIlxuICogcGF0aG5hbWUuXG4gKlxuICogQHB1YmxpY1xuICovXG5cbnByb3RvLnVzZSA9IGZ1bmN0aW9uIHVzZShmbikge1xuICB2YXIgb2Zmc2V0ID0gMDtcbiAgdmFyIHBhdGggPSAnLyc7XG5cbiAgLy8gZGVmYXVsdCBwYXRoIHRvICcvJ1xuICAvLyBkaXNhbWJpZ3VhdGUgcm91dGVyLnVzZShbZm5dKVxuICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIGFyZyA9IGZuO1xuXG4gICAgd2hpbGUgKEFycmF5LmlzQXJyYXkoYXJnKSAmJiBhcmcubGVuZ3RoICE9PSAwKSB7XG4gICAgICBhcmcgPSBhcmdbMF07XG4gICAgfVxuXG4gICAgLy8gZmlyc3QgYXJnIGlzIHRoZSBwYXRoXG4gICAgaWYgKHR5cGVvZiBhcmcgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIG9mZnNldCA9IDE7XG4gICAgICBwYXRoID0gZm47XG4gICAgfVxuICB9XG5cbiAgdmFyIGNhbGxiYWNrcyA9IGZsYXR0ZW4oc2xpY2UuY2FsbChhcmd1bWVudHMsIG9mZnNldCkpO1xuXG4gIGlmIChjYWxsYmFja3MubGVuZ3RoID09PSAwKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignUm91dGVyLnVzZSgpIHJlcXVpcmVzIGEgbWlkZGxld2FyZSBmdW5jdGlvbicpXG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBmbiA9IGNhbGxiYWNrc1tpXTtcblxuICAgIGlmICh0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1JvdXRlci51c2UoKSByZXF1aXJlcyBhIG1pZGRsZXdhcmUgZnVuY3Rpb24gYnV0IGdvdCBhICcgKyBnZXR0eXBlKGZuKSlcbiAgICB9XG5cbiAgICAvLyBhZGQgdGhlIG1pZGRsZXdhcmVcbiAgICBkZWJ1ZygndXNlICVvICVzJywgcGF0aCwgZm4ubmFtZSB8fCAnPGFub255bW91cz4nKVxuXG4gICAgdmFyIGxheWVyID0gbmV3IExheWVyKHBhdGgsIHtcbiAgICAgIHNlbnNpdGl2ZTogdGhpcy5jYXNlU2Vuc2l0aXZlLFxuICAgICAgc3RyaWN0OiBmYWxzZSxcbiAgICAgIGVuZDogZmFsc2VcbiAgICB9LCBmbik7XG5cbiAgICBsYXllci5yb3V0ZSA9IHVuZGVmaW5lZDtcblxuICAgIHRoaXMuc3RhY2sucHVzaChsYXllcik7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogQ3JlYXRlIGEgbmV3IFJvdXRlIGZvciB0aGUgZ2l2ZW4gcGF0aC5cbiAqXG4gKiBFYWNoIHJvdXRlIGNvbnRhaW5zIGEgc2VwYXJhdGUgbWlkZGxld2FyZSBzdGFjayBhbmQgVkVSQiBoYW5kbGVycy5cbiAqXG4gKiBTZWUgdGhlIFJvdXRlIGFwaSBkb2N1bWVudGF0aW9uIGZvciBkZXRhaWxzIG9uIGFkZGluZyBoYW5kbGVyc1xuICogYW5kIG1pZGRsZXdhcmUgdG8gcm91dGVzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYXRoXG4gKiBAcmV0dXJuIHtSb3V0ZX1cbiAqIEBwdWJsaWNcbiAqL1xuXG5wcm90by5yb3V0ZSA9IGZ1bmN0aW9uIHJvdXRlKHBhdGgpIHtcbiAgdmFyIHJvdXRlID0gbmV3IFJvdXRlKHBhdGgpO1xuXG4gIHZhciBsYXllciA9IG5ldyBMYXllcihwYXRoLCB7XG4gICAgc2Vuc2l0aXZlOiB0aGlzLmNhc2VTZW5zaXRpdmUsXG4gICAgc3RyaWN0OiB0aGlzLnN0cmljdCxcbiAgICBlbmQ6IHRydWVcbiAgfSwgcm91dGUuZGlzcGF0Y2guYmluZChyb3V0ZSkpO1xuXG4gIGxheWVyLnJvdXRlID0gcm91dGU7XG5cbiAgdGhpcy5zdGFjay5wdXNoKGxheWVyKTtcbiAgcmV0dXJuIHJvdXRlO1xufTtcblxuLy8gY3JlYXRlIFJvdXRlciNWRVJCIGZ1bmN0aW9uc1xubWV0aG9kcy5jb25jYXQoJ2FsbCcpLmZvckVhY2goZnVuY3Rpb24obWV0aG9kKXtcbiAgcHJvdG9bbWV0aG9kXSA9IGZ1bmN0aW9uKHBhdGgpe1xuICAgIHZhciByb3V0ZSA9IHRoaXMucm91dGUocGF0aClcbiAgICByb3V0ZVttZXRob2RdLmFwcGx5KHJvdXRlLCBzbGljZS5jYWxsKGFyZ3VtZW50cywgMSkpO1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xufSk7XG5cbi8vIGFwcGVuZCBtZXRob2RzIHRvIGEgbGlzdCBvZiBtZXRob2RzXG5mdW5jdGlvbiBhcHBlbmRNZXRob2RzKGxpc3QsIGFkZGl0aW9uKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYWRkaXRpb24ubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgbWV0aG9kID0gYWRkaXRpb25baV07XG4gICAgaWYgKGxpc3QuaW5kZXhPZihtZXRob2QpID09PSAtMSkge1xuICAgICAgbGlzdC5wdXNoKG1ldGhvZCk7XG4gICAgfVxuICB9XG59XG5cbi8vIGdldCBwYXRobmFtZSBvZiByZXF1ZXN0XG5mdW5jdGlvbiBnZXRQYXRobmFtZShyZXEpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcGFyc2VVcmwocmVxKS5wYXRobmFtZTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufVxuXG4vLyBHZXQgZ2V0IHByb3RvY29sICsgaG9zdCBmb3IgYSBVUkxcbmZ1bmN0aW9uIGdldFByb3RvaG9zdCh1cmwpIHtcbiAgaWYgKHR5cGVvZiB1cmwgIT09ICdzdHJpbmcnIHx8IHVybC5sZW5ndGggPT09IDAgfHwgdXJsWzBdID09PSAnLycpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSB1cmwuaW5kZXhPZignPycpXG4gIHZhciBwYXRoTGVuZ3RoID0gc2VhcmNoSW5kZXggIT09IC0xXG4gICAgPyBzZWFyY2hJbmRleFxuICAgIDogdXJsLmxlbmd0aFxuICB2YXIgZnFkbkluZGV4ID0gdXJsLnN1YnN0cigwLCBwYXRoTGVuZ3RoKS5pbmRleE9mKCc6Ly8nKVxuXG4gIHJldHVybiBmcWRuSW5kZXggIT09IC0xXG4gICAgPyB1cmwuc3Vic3RyKDAsIHVybC5pbmRleE9mKCcvJywgMyArIGZxZG5JbmRleCkpXG4gICAgOiB1bmRlZmluZWRcbn1cblxuLy8gZ2V0IHR5cGUgZm9yIGVycm9yIG1lc3NhZ2VcbmZ1bmN0aW9uIGdldHR5cGUob2JqKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIG9iajtcblxuICBpZiAodHlwZSAhPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gdHlwZTtcbiAgfVxuXG4gIC8vIGluc3BlY3QgW1tDbGFzc11dIGZvciBvYmplY3RzXG4gIHJldHVybiB0b1N0cmluZy5jYWxsKG9iailcbiAgICAucmVwbGFjZShvYmplY3RSZWdFeHAsICckMScpO1xufVxuXG4vKipcbiAqIE1hdGNoIHBhdGggdG8gYSBsYXllci5cbiAqXG4gKiBAcGFyYW0ge0xheWVyfSBsYXllclxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbWF0Y2hMYXllcihsYXllciwgcGF0aCkge1xuICB0cnkge1xuICAgIHJldHVybiBsYXllci5tYXRjaChwYXRoKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIGVycjtcbiAgfVxufVxuXG4vLyBtZXJnZSBwYXJhbXMgd2l0aCBwYXJlbnQgcGFyYW1zXG5mdW5jdGlvbiBtZXJnZVBhcmFtcyhwYXJhbXMsIHBhcmVudCkge1xuICBpZiAodHlwZW9mIHBhcmVudCAhPT0gJ29iamVjdCcgfHwgIXBhcmVudCkge1xuICAgIHJldHVybiBwYXJhbXM7XG4gIH1cblxuICAvLyBtYWtlIGNvcHkgb2YgcGFyZW50IGZvciBiYXNlXG4gIHZhciBvYmogPSBtaXhpbih7fSwgcGFyZW50KTtcblxuICAvLyBzaW1wbGUgbm9uLW51bWVyaWMgbWVyZ2luZ1xuICBpZiAoISgwIGluIHBhcmFtcykgfHwgISgwIGluIHBhcmVudCkpIHtcbiAgICByZXR1cm4gbWl4aW4ob2JqLCBwYXJhbXMpO1xuICB9XG5cbiAgdmFyIGkgPSAwO1xuICB2YXIgbyA9IDA7XG5cbiAgLy8gZGV0ZXJtaW5lIG51bWVyaWMgZ2Fwc1xuICB3aGlsZSAoaSBpbiBwYXJhbXMpIHtcbiAgICBpKys7XG4gIH1cblxuICB3aGlsZSAobyBpbiBwYXJlbnQpIHtcbiAgICBvKys7XG4gIH1cblxuICAvLyBvZmZzZXQgbnVtZXJpYyBpbmRpY2VzIGluIHBhcmFtcyBiZWZvcmUgbWVyZ2VcbiAgZm9yIChpLS07IGkgPj0gMDsgaS0tKSB7XG4gICAgcGFyYW1zW2kgKyBvXSA9IHBhcmFtc1tpXTtcblxuICAgIC8vIGNyZWF0ZSBob2xlcyBmb3IgdGhlIG1lcmdlIHdoZW4gbmVjZXNzYXJ5XG4gICAgaWYgKGkgPCBvKSB7XG4gICAgICBkZWxldGUgcGFyYW1zW2ldO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtaXhpbihvYmosIHBhcmFtcyk7XG59XG5cbi8vIHJlc3RvcmUgb2JqIHByb3BzIGFmdGVyIGZ1bmN0aW9uXG5mdW5jdGlvbiByZXN0b3JlKGZuLCBvYmopIHtcbiAgdmFyIHByb3BzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAyKTtcbiAgdmFyIHZhbHMgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDIpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICBwcm9wc1tpXSA9IGFyZ3VtZW50c1tpICsgMl07XG4gICAgdmFsc1tpXSA9IG9ialtwcm9wc1tpXV07XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIC8vIHJlc3RvcmUgdmFsc1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIG9ialtwcm9wc1tpXV0gPSB2YWxzW2ldO1xuICAgIH1cblxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9O1xufVxuXG4vLyBzZW5kIGFuIE9QVElPTlMgcmVzcG9uc2VcbmZ1bmN0aW9uIHNlbmRPcHRpb25zUmVzcG9uc2UocmVzLCBvcHRpb25zLCBuZXh0KSB7XG4gIHRyeSB7XG4gICAgdmFyIGJvZHkgPSBvcHRpb25zLmpvaW4oJywnKTtcbiAgICByZXMuc2V0KCdBbGxvdycsIGJvZHkpO1xuICAgIHJlcy5zZW5kKGJvZHkpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBuZXh0KGVycik7XG4gIH1cbn1cblxuLy8gd3JhcCBhIGZ1bmN0aW9uXG5mdW5jdGlvbiB3cmFwKG9sZCwgZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHByb3h5KCkge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggKyAxKTtcblxuICAgIGFyZ3NbMF0gPSBvbGQ7XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgYXJnc1tpICsgMV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuXG4gICAgZm4uYXBwbHkodGhpcywgYXJncyk7XG4gIH07XG59XG4iLCIvKiFcbiAqIGV4cHJlc3NcbiAqIENvcHlyaWdodChjKSAyMDA5LTIwMTMgVEogSG9sb3dheWNodWtcbiAqIENvcHlyaWdodChjKSAyMDEzIFJvbWFuIFNodHlsbWFuXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnZXhwcmVzczpyb3V0ZXI6cm91dGUnKTtcbnZhciBmbGF0dGVuID0gcmVxdWlyZSgnYXJyYXktZmxhdHRlbicpO1xudmFyIExheWVyID0gcmVxdWlyZSgnLi9sYXllcicpO1xudmFyIG1ldGhvZHMgPSByZXF1aXJlKCdtZXRob2RzJyk7XG5cbi8qKlxuICogTW9kdWxlIHZhcmlhYmxlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xudmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJvdXRlO1xuXG4vKipcbiAqIEluaXRpYWxpemUgYFJvdXRlYCB3aXRoIHRoZSBnaXZlbiBgcGF0aGAsXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhdGhcbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBSb3V0ZShwYXRoKSB7XG4gIHRoaXMucGF0aCA9IHBhdGg7XG4gIHRoaXMuc3RhY2sgPSBbXTtcblxuICBkZWJ1ZygnbmV3ICVvJywgcGF0aClcblxuICAvLyByb3V0ZSBoYW5kbGVycyBmb3IgdmFyaW91cyBodHRwIG1ldGhvZHNcbiAgdGhpcy5tZXRob2RzID0ge307XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHRoZSByb3V0ZSBoYW5kbGVzIGEgZ2l2ZW4gbWV0aG9kLlxuICogQHByaXZhdGVcbiAqL1xuXG5Sb3V0ZS5wcm90b3R5cGUuX2hhbmRsZXNfbWV0aG9kID0gZnVuY3Rpb24gX2hhbmRsZXNfbWV0aG9kKG1ldGhvZCkge1xuICBpZiAodGhpcy5tZXRob2RzLl9hbGwpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHZhciBuYW1lID0gbWV0aG9kLnRvTG93ZXJDYXNlKCk7XG5cbiAgaWYgKG5hbWUgPT09ICdoZWFkJyAmJiAhdGhpcy5tZXRob2RzWydoZWFkJ10pIHtcbiAgICBuYW1lID0gJ2dldCc7XG4gIH1cblxuICByZXR1cm4gQm9vbGVhbih0aGlzLm1ldGhvZHNbbmFtZV0pO1xufTtcblxuLyoqXG4gKiBAcmV0dXJuIHtBcnJheX0gc3VwcG9ydGVkIEhUVFAgbWV0aG9kc1xuICogQHByaXZhdGVcbiAqL1xuXG5Sb3V0ZS5wcm90b3R5cGUuX29wdGlvbnMgPSBmdW5jdGlvbiBfb3B0aW9ucygpIHtcbiAgdmFyIG1ldGhvZHMgPSBPYmplY3Qua2V5cyh0aGlzLm1ldGhvZHMpO1xuXG4gIC8vIGFwcGVuZCBhdXRvbWF0aWMgaGVhZFxuICBpZiAodGhpcy5tZXRob2RzLmdldCAmJiAhdGhpcy5tZXRob2RzLmhlYWQpIHtcbiAgICBtZXRob2RzLnB1c2goJ2hlYWQnKTtcbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbWV0aG9kcy5sZW5ndGg7IGkrKykge1xuICAgIC8vIG1ha2UgdXBwZXIgY2FzZVxuICAgIG1ldGhvZHNbaV0gPSBtZXRob2RzW2ldLnRvVXBwZXJDYXNlKCk7XG4gIH1cblxuICByZXR1cm4gbWV0aG9kcztcbn07XG5cbi8qKlxuICogZGlzcGF0Y2ggcmVxLCByZXMgaW50byB0aGlzIHJvdXRlXG4gKiBAcHJpdmF0ZVxuICovXG5cblJvdXRlLnByb3RvdHlwZS5kaXNwYXRjaCA9IGZ1bmN0aW9uIGRpc3BhdGNoKHJlcSwgcmVzLCBkb25lKSB7XG4gIHZhciBpZHggPSAwO1xuICB2YXIgc3RhY2sgPSB0aGlzLnN0YWNrO1xuICBpZiAoc3RhY2subGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIGRvbmUoKTtcbiAgfVxuXG4gIHZhciBtZXRob2QgPSByZXEubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG4gIGlmIChtZXRob2QgPT09ICdoZWFkJyAmJiAhdGhpcy5tZXRob2RzWydoZWFkJ10pIHtcbiAgICBtZXRob2QgPSAnZ2V0JztcbiAgfVxuXG4gIHJlcS5yb3V0ZSA9IHRoaXM7XG5cbiAgbmV4dCgpO1xuXG4gIGZ1bmN0aW9uIG5leHQoZXJyKSB7XG4gICAgLy8gc2lnbmFsIHRvIGV4aXQgcm91dGVcbiAgICBpZiAoZXJyICYmIGVyciA9PT0gJ3JvdXRlJykge1xuICAgICAgcmV0dXJuIGRvbmUoKTtcbiAgICB9XG5cbiAgICAvLyBzaWduYWwgdG8gZXhpdCByb3V0ZXJcbiAgICBpZiAoZXJyICYmIGVyciA9PT0gJ3JvdXRlcicpIHtcbiAgICAgIHJldHVybiBkb25lKGVycilcbiAgICB9XG5cbiAgICB2YXIgbGF5ZXIgPSBzdGFja1tpZHgrK107XG4gICAgaWYgKCFsYXllcikge1xuICAgICAgcmV0dXJuIGRvbmUoZXJyKTtcbiAgICB9XG5cbiAgICBpZiAobGF5ZXIubWV0aG9kICYmIGxheWVyLm1ldGhvZCAhPT0gbWV0aG9kKSB7XG4gICAgICByZXR1cm4gbmV4dChlcnIpO1xuICAgIH1cblxuICAgIGlmIChlcnIpIHtcbiAgICAgIGxheWVyLmhhbmRsZV9lcnJvcihlcnIsIHJlcSwgcmVzLCBuZXh0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGF5ZXIuaGFuZGxlX3JlcXVlc3QocmVxLCByZXMsIG5leHQpO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBBZGQgYSBoYW5kbGVyIGZvciBhbGwgSFRUUCB2ZXJicyB0byB0aGlzIHJvdXRlLlxuICpcbiAqIEJlaGF2ZXMganVzdCBsaWtlIG1pZGRsZXdhcmUgYW5kIGNhbiByZXNwb25kIG9yIGNhbGwgYG5leHRgXG4gKiB0byBjb250aW51ZSBwcm9jZXNzaW5nLlxuICpcbiAqIFlvdSBjYW4gdXNlIG11bHRpcGxlIGAuYWxsYCBjYWxsIHRvIGFkZCBtdWx0aXBsZSBoYW5kbGVycy5cbiAqXG4gKiAgIGZ1bmN0aW9uIGNoZWNrX3NvbWV0aGluZyhyZXEsIHJlcywgbmV4dCl7XG4gKiAgICAgbmV4dCgpO1xuICogICB9O1xuICpcbiAqICAgZnVuY3Rpb24gdmFsaWRhdGVfdXNlcihyZXEsIHJlcywgbmV4dCl7XG4gKiAgICAgbmV4dCgpO1xuICogICB9O1xuICpcbiAqICAgcm91dGVcbiAqICAgLmFsbCh2YWxpZGF0ZV91c2VyKVxuICogICAuYWxsKGNoZWNrX3NvbWV0aGluZylcbiAqICAgLmdldChmdW5jdGlvbihyZXEsIHJlcywgbmV4dCl7XG4gKiAgICAgcmVzLnNlbmQoJ2hlbGxvIHdvcmxkJyk7XG4gKiAgIH0pO1xuICpcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGhhbmRsZXJcbiAqIEByZXR1cm4ge1JvdXRlfSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUm91dGUucHJvdG90eXBlLmFsbCA9IGZ1bmN0aW9uIGFsbCgpIHtcbiAgdmFyIGhhbmRsZXMgPSBmbGF0dGVuKHNsaWNlLmNhbGwoYXJndW1lbnRzKSk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBoYW5kbGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGhhbmRsZSA9IGhhbmRsZXNbaV07XG5cbiAgICBpZiAodHlwZW9mIGhhbmRsZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdmFyIHR5cGUgPSB0b1N0cmluZy5jYWxsKGhhbmRsZSk7XG4gICAgICB2YXIgbXNnID0gJ1JvdXRlLmFsbCgpIHJlcXVpcmVzIGEgY2FsbGJhY2sgZnVuY3Rpb24gYnV0IGdvdCBhICcgKyB0eXBlXG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKG1zZyk7XG4gICAgfVxuXG4gICAgdmFyIGxheWVyID0gTGF5ZXIoJy8nLCB7fSwgaGFuZGxlKTtcbiAgICBsYXllci5tZXRob2QgPSB1bmRlZmluZWQ7XG5cbiAgICB0aGlzLm1ldGhvZHMuX2FsbCA9IHRydWU7XG4gICAgdGhpcy5zdGFjay5wdXNoKGxheWVyKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxubWV0aG9kcy5mb3JFYWNoKGZ1bmN0aW9uKG1ldGhvZCl7XG4gIFJvdXRlLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgaGFuZGxlcyA9IGZsYXR0ZW4oc2xpY2UuY2FsbChhcmd1bWVudHMpKTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaGFuZGxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGhhbmRsZSA9IGhhbmRsZXNbaV07XG5cbiAgICAgIGlmICh0eXBlb2YgaGFuZGxlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhciB0eXBlID0gdG9TdHJpbmcuY2FsbChoYW5kbGUpO1xuICAgICAgICB2YXIgbXNnID0gJ1JvdXRlLicgKyBtZXRob2QgKyAnKCkgcmVxdWlyZXMgYSBjYWxsYmFjayBmdW5jdGlvbiBidXQgZ290IGEgJyArIHR5cGVcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG4gICAgICB9XG5cbiAgICAgIGRlYnVnKCclcyAlbycsIG1ldGhvZCwgdGhpcy5wYXRoKVxuXG4gICAgICB2YXIgbGF5ZXIgPSBMYXllcignLycsIHt9LCBoYW5kbGUpO1xuICAgICAgbGF5ZXIubWV0aG9kID0gbWV0aG9kO1xuXG4gICAgICB0aGlzLm1ldGhvZHNbbWV0aG9kXSA9IHRydWU7XG4gICAgICB0aGlzLnN0YWNrLnB1c2gobGF5ZXIpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xufSk7XG4iLCIvKiFcbiAqIGV4cHJlc3NcbiAqIENvcHlyaWdodChjKSAyMDA5LTIwMTMgVEogSG9sb3dheWNodWtcbiAqIENvcHlyaWdodChjKSAyMDEzIFJvbWFuIFNodHlsbWFuXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIHBhdGhSZWdleHAgPSByZXF1aXJlKCdwYXRoLXRvLXJlZ2V4cCcpO1xudmFyIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnZXhwcmVzczpyb3V0ZXI6bGF5ZXInKTtcblxuLyoqXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gTGF5ZXI7XG5cbmZ1bmN0aW9uIExheWVyKHBhdGgsIG9wdGlvbnMsIGZuKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBMYXllcikpIHtcbiAgICByZXR1cm4gbmV3IExheWVyKHBhdGgsIG9wdGlvbnMsIGZuKTtcbiAgfVxuXG4gIGRlYnVnKCduZXcgJW8nLCBwYXRoKVxuICB2YXIgb3B0cyA9IG9wdGlvbnMgfHwge307XG5cbiAgdGhpcy5oYW5kbGUgPSBmbjtcbiAgdGhpcy5uYW1lID0gZm4ubmFtZSB8fCAnPGFub255bW91cz4nO1xuICB0aGlzLnBhcmFtcyA9IHVuZGVmaW5lZDtcbiAgdGhpcy5wYXRoID0gdW5kZWZpbmVkO1xuICB0aGlzLnJlZ2V4cCA9IHBhdGhSZWdleHAocGF0aCwgdGhpcy5rZXlzID0gW10sIG9wdHMpO1xuXG4gIC8vIHNldCBmYXN0IHBhdGggZmxhZ3NcbiAgdGhpcy5yZWdleHAuZmFzdF9zdGFyID0gcGF0aCA9PT0gJyonXG4gIHRoaXMucmVnZXhwLmZhc3Rfc2xhc2ggPSBwYXRoID09PSAnLycgJiYgb3B0cy5lbmQgPT09IGZhbHNlXG59XG5cbi8qKlxuICogSGFuZGxlIHRoZSBlcnJvciBmb3IgdGhlIGxheWVyLlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVycm9yXG4gKiBAcGFyYW0ge1JlcXVlc3R9IHJlcVxuICogQHBhcmFtIHtSZXNwb25zZX0gcmVzXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBuZXh0XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5MYXllci5wcm90b3R5cGUuaGFuZGxlX2Vycm9yID0gZnVuY3Rpb24gaGFuZGxlX2Vycm9yKGVycm9yLCByZXEsIHJlcywgbmV4dCkge1xuICB2YXIgZm4gPSB0aGlzLmhhbmRsZTtcblxuICBpZiAoZm4ubGVuZ3RoICE9PSA0KSB7XG4gICAgLy8gbm90IGEgc3RhbmRhcmQgZXJyb3IgaGFuZGxlclxuICAgIHJldHVybiBuZXh0KGVycm9yKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgZm4oZXJyb3IsIHJlcSwgcmVzLCBuZXh0KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgbmV4dChlcnIpO1xuICB9XG59O1xuXG4vKipcbiAqIEhhbmRsZSB0aGUgcmVxdWVzdCBmb3IgdGhlIGxheWVyLlxuICpcbiAqIEBwYXJhbSB7UmVxdWVzdH0gcmVxXG4gKiBAcGFyYW0ge1Jlc3BvbnNlfSByZXNcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IG5leHRcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbkxheWVyLnByb3RvdHlwZS5oYW5kbGVfcmVxdWVzdCA9IGZ1bmN0aW9uIGhhbmRsZShyZXEsIHJlcywgbmV4dCkge1xuICB2YXIgZm4gPSB0aGlzLmhhbmRsZTtcblxuICBpZiAoZm4ubGVuZ3RoID4gMykge1xuICAgIC8vIG5vdCBhIHN0YW5kYXJkIHJlcXVlc3QgaGFuZGxlclxuICAgIHJldHVybiBuZXh0KCk7XG4gIH1cblxuICB0cnkge1xuICAgIGZuKHJlcSwgcmVzLCBuZXh0KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgbmV4dChlcnIpO1xuICB9XG59O1xuXG4vKipcbiAqIENoZWNrIGlmIHRoaXMgcm91dGUgbWF0Y2hlcyBgcGF0aGAsIGlmIHNvXG4gKiBwb3B1bGF0ZSBgLnBhcmFtc2AuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhdGhcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5MYXllci5wcm90b3R5cGUubWF0Y2ggPSBmdW5jdGlvbiBtYXRjaChwYXRoKSB7XG4gIHZhciBtYXRjaFxuXG4gIGlmIChwYXRoICE9IG51bGwpIHtcbiAgICAvLyBmYXN0IHBhdGggbm9uLWVuZGluZyBtYXRjaCBmb3IgLyAoYW55IHBhdGggbWF0Y2hlcylcbiAgICBpZiAodGhpcy5yZWdleHAuZmFzdF9zbGFzaCkge1xuICAgICAgdGhpcy5wYXJhbXMgPSB7fVxuICAgICAgdGhpcy5wYXRoID0gJydcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgLy8gZmFzdCBwYXRoIGZvciAqIChldmVyeXRoaW5nIG1hdGNoZWQgaW4gYSBwYXJhbSlcbiAgICBpZiAodGhpcy5yZWdleHAuZmFzdF9zdGFyKSB7XG4gICAgICB0aGlzLnBhcmFtcyA9IHsnMCc6IGRlY29kZV9wYXJhbShwYXRoKX1cbiAgICAgIHRoaXMucGF0aCA9IHBhdGhcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgLy8gbWF0Y2ggdGhlIHBhdGhcbiAgICBtYXRjaCA9IHRoaXMucmVnZXhwLmV4ZWMocGF0aClcbiAgfVxuXG4gIGlmICghbWF0Y2gpIHtcbiAgICB0aGlzLnBhcmFtcyA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLnBhdGggPSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gc3RvcmUgdmFsdWVzXG4gIHRoaXMucGFyYW1zID0ge307XG4gIHRoaXMucGF0aCA9IG1hdGNoWzBdXG5cbiAgdmFyIGtleXMgPSB0aGlzLmtleXM7XG4gIHZhciBwYXJhbXMgPSB0aGlzLnBhcmFtcztcblxuICBmb3IgKHZhciBpID0gMTsgaSA8IG1hdGNoLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNbaSAtIDFdO1xuICAgIHZhciBwcm9wID0ga2V5Lm5hbWU7XG4gICAgdmFyIHZhbCA9IGRlY29kZV9wYXJhbShtYXRjaFtpXSlcblxuICAgIGlmICh2YWwgIT09IHVuZGVmaW5lZCB8fCAhKGhhc093blByb3BlcnR5LmNhbGwocGFyYW1zLCBwcm9wKSkpIHtcbiAgICAgIHBhcmFtc1twcm9wXSA9IHZhbDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn07XG5cbi8qKlxuICogRGVjb2RlIHBhcmFtIHZhbHVlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWxcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZGVjb2RlX3BhcmFtKHZhbCkge1xuICBpZiAodHlwZW9mIHZhbCAhPT0gJ3N0cmluZycgfHwgdmFsLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB2YWw7XG4gIH1cblxuICB0cnkge1xuICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQodmFsKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaWYgKGVyciBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICBlcnIubWVzc2FnZSA9ICdGYWlsZWQgdG8gZGVjb2RlIHBhcmFtIFxcJycgKyB2YWwgKyAnXFwnJztcbiAgICAgIGVyci5zdGF0dXMgPSBlcnIuc3RhdHVzQ29kZSA9IDQwMDtcbiAgICB9XG5cbiAgICB0aHJvdyBlcnI7XG4gIH1cbn1cbiIsIi8qIVxuICogZXhwcmVzc1xuICogQ29weXJpZ2h0KGMpIDIwMDktMjAxMyBUSiBIb2xvd2F5Y2h1a1xuICogQ29weXJpZ2h0KGMpIDIwMTMgUm9tYW4gU2h0eWxtYW5cbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICovXG5cbnZhciBtZXJnZSA9IHJlcXVpcmUoJ3V0aWxzLW1lcmdlJylcbnZhciBwYXJzZVVybCA9IHJlcXVpcmUoJ3BhcnNldXJsJyk7XG52YXIgcXMgPSByZXF1aXJlKCdxcycpO1xuXG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBxdWVyeShvcHRpb25zKSB7XG4gIHZhciBvcHRzID0gbWVyZ2Uoe30sIG9wdGlvbnMpXG4gIHZhciBxdWVyeXBhcnNlID0gcXMucGFyc2U7XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcXVlcnlwYXJzZSA9IG9wdGlvbnM7XG4gICAgb3B0cyA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlmIChvcHRzICE9PSB1bmRlZmluZWQgJiYgb3B0cy5hbGxvd1Byb3RvdHlwZXMgPT09IHVuZGVmaW5lZCkge1xuICAgIC8vIGJhY2stY29tcGF0IGZvciBxcyBtb2R1bGVcbiAgICBvcHRzLmFsbG93UHJvdG90eXBlcyA9IHRydWU7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gcXVlcnkocmVxLCByZXMsIG5leHQpe1xuICAgIGlmICghcmVxLnF1ZXJ5KSB7XG4gICAgICB2YXIgdmFsID0gcGFyc2VVcmwocmVxKS5xdWVyeTtcbiAgICAgIHJlcS5xdWVyeSA9IHF1ZXJ5cGFyc2UodmFsLCBvcHRzKTtcbiAgICB9XG5cbiAgICBuZXh0KCk7XG4gIH07XG59O1xuIiwiLyohXG4gKiBjb250ZW50LWRpc3Bvc2l0aW9uXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50RGlzcG9zaXRpb25cbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2VcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICovXG5cbnZhciBiYXNlbmFtZSA9IHJlcXVpcmUoJ3BhdGgnKS5iYXNlbmFtZVxuXG4vKipcbiAqIFJlZ0V4cCB0byBtYXRjaCBub24gYXR0ci1jaGFyLCAqYWZ0ZXIqIGVuY29kZVVSSUNvbXBvbmVudCAoaS5lLiBub3QgaW5jbHVkaW5nIFwiJVwiKVxuICovXG5cbnZhciBFTkNPREVfVVJMX0FUVFJfQ0hBUl9SRUdFWFAgPSAvW1xceDAwLVxceDIwXCInKCkqLC86Ozw9Pj9AW1xcXFxcXF17fVxceDdmXS9nIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29udHJvbC1yZWdleFxuXG4vKipcbiAqIFJlZ0V4cCB0byBtYXRjaCBwZXJjZW50IGVuY29kaW5nIGVzY2FwZS5cbiAqL1xuXG52YXIgSEVYX0VTQ0FQRV9SRUdFWFAgPSAvJVswLTlBLUZhLWZdezJ9L1xudmFyIEhFWF9FU0NBUEVfUkVQTEFDRV9SRUdFWFAgPSAvJShbMC05QS1GYS1mXXsyfSkvZ1xuXG4vKipcbiAqIFJlZ0V4cCB0byBtYXRjaCBub24tbGF0aW4xIGNoYXJhY3RlcnMuXG4gKi9cblxudmFyIE5PTl9MQVRJTjFfUkVHRVhQID0gL1teXFx4MjAtXFx4N2VcXHhhMC1cXHhmZl0vZ1xuXG4vKipcbiAqIFJlZ0V4cCB0byBtYXRjaCBxdW90ZWQtcGFpciBpbiBSRkMgMjYxNlxuICpcbiAqIHF1b3RlZC1wYWlyID0gXCJcXFwiIENIQVJcbiAqIENIQVIgICAgICAgID0gPGFueSBVUy1BU0NJSSBjaGFyYWN0ZXIgKG9jdGV0cyAwIC0gMTI3KT5cbiAqL1xuXG52YXIgUUVTQ19SRUdFWFAgPSAvXFxcXChbXFx1MDAwMC1cXHUwMDdmXSkvZ1xuXG4vKipcbiAqIFJlZ0V4cCB0byBtYXRjaCBjaGFycyB0aGF0IG11c3QgYmUgcXVvdGVkLXBhaXIgaW4gUkZDIDI2MTZcbiAqL1xuXG52YXIgUVVPVEVfUkVHRVhQID0gLyhbXFxcXFwiXSkvZ1xuXG4vKipcbiAqIFJlZ0V4cCBmb3IgdmFyaW91cyBSRkMgMjYxNiBncmFtbWFyXG4gKlxuICogcGFyYW1ldGVyICAgICA9IHRva2VuIFwiPVwiICggdG9rZW4gfCBxdW90ZWQtc3RyaW5nIClcbiAqIHRva2VuICAgICAgICAgPSAxKjxhbnkgQ0hBUiBleGNlcHQgQ1RMcyBvciBzZXBhcmF0b3JzPlxuICogc2VwYXJhdG9ycyAgICA9IFwiKFwiIHwgXCIpXCIgfCBcIjxcIiB8IFwiPlwiIHwgXCJAXCJcbiAqICAgICAgICAgICAgICAgfCBcIixcIiB8IFwiO1wiIHwgXCI6XCIgfCBcIlxcXCIgfCA8XCI+XG4gKiAgICAgICAgICAgICAgIHwgXCIvXCIgfCBcIltcIiB8IFwiXVwiIHwgXCI/XCIgfCBcIj1cIlxuICogICAgICAgICAgICAgICB8IFwie1wiIHwgXCJ9XCIgfCBTUCB8IEhUXG4gKiBxdW90ZWQtc3RyaW5nID0gKCA8XCI+ICoocWR0ZXh0IHwgcXVvdGVkLXBhaXIgKSA8XCI+IClcbiAqIHFkdGV4dCAgICAgICAgPSA8YW55IFRFWFQgZXhjZXB0IDxcIj4+XG4gKiBxdW90ZWQtcGFpciAgID0gXCJcXFwiIENIQVJcbiAqIENIQVIgICAgICAgICAgPSA8YW55IFVTLUFTQ0lJIGNoYXJhY3RlciAob2N0ZXRzIDAgLSAxMjcpPlxuICogVEVYVCAgICAgICAgICA9IDxhbnkgT0NURVQgZXhjZXB0IENUTHMsIGJ1dCBpbmNsdWRpbmcgTFdTPlxuICogTFdTICAgICAgICAgICA9IFtDUkxGXSAxKiggU1AgfCBIVCApXG4gKiBDUkxGICAgICAgICAgID0gQ1IgTEZcbiAqIENSICAgICAgICAgICAgPSA8VVMtQVNDSUkgQ1IsIGNhcnJpYWdlIHJldHVybiAoMTMpPlxuICogTEYgICAgICAgICAgICA9IDxVUy1BU0NJSSBMRiwgbGluZWZlZWQgKDEwKT5cbiAqIFNQICAgICAgICAgICAgPSA8VVMtQVNDSUkgU1AsIHNwYWNlICgzMik+XG4gKiBIVCAgICAgICAgICAgID0gPFVTLUFTQ0lJIEhULCBob3Jpem9udGFsLXRhYiAoOSk+XG4gKiBDVEwgICAgICAgICAgID0gPGFueSBVUy1BU0NJSSBjb250cm9sIGNoYXJhY3RlciAob2N0ZXRzIDAgLSAzMSkgYW5kIERFTCAoMTI3KT5cbiAqIE9DVEVUICAgICAgICAgPSA8YW55IDgtYml0IHNlcXVlbmNlIG9mIGRhdGE+XG4gKi9cblxudmFyIFBBUkFNX1JFR0VYUCA9IC87W1xceDA5XFx4MjBdKihbISMkJSYnKisuMC05QS1aXl9gYS16fH4tXSspW1xceDA5XFx4MjBdKj1bXFx4MDlcXHgyMF0qKFwiKD86W1xceDIwIVxceDIzLVxceDViXFx4NWQtXFx4N2VcXHg4MC1cXHhmZl18XFxcXFtcXHgyMC1cXHg3ZV0pKlwifFshIyQlJicqKy4wLTlBLVpeX2BhLXp8fi1dKylbXFx4MDlcXHgyMF0qL2cgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb250cm9sLXJlZ2V4XG52YXIgVEVYVF9SRUdFWFAgPSAvXltcXHgyMC1cXHg3ZVxceDgwLVxceGZmXSskL1xudmFyIFRPS0VOX1JFR0VYUCA9IC9eWyEjJCUmJyorLjAtOUEtWl5fYGEtenx+LV0rJC9cblxuLyoqXG4gKiBSZWdFeHAgZm9yIHZhcmlvdXMgUkZDIDU5ODcgZ3JhbW1hclxuICpcbiAqIGV4dC12YWx1ZSAgICAgPSBjaGFyc2V0ICBcIidcIiBbIGxhbmd1YWdlIF0gXCInXCIgdmFsdWUtY2hhcnNcbiAqIGNoYXJzZXQgICAgICAgPSBcIlVURi04XCIgLyBcIklTTy04ODU5LTFcIiAvIG1pbWUtY2hhcnNldFxuICogbWltZS1jaGFyc2V0ICA9IDEqbWltZS1jaGFyc2V0Y1xuICogbWltZS1jaGFyc2V0YyA9IEFMUEhBIC8gRElHSVRcbiAqICAgICAgICAgICAgICAgLyBcIiFcIiAvIFwiI1wiIC8gXCIkXCIgLyBcIiVcIiAvIFwiJlwiXG4gKiAgICAgICAgICAgICAgIC8gXCIrXCIgLyBcIi1cIiAvIFwiXlwiIC8gXCJfXCIgLyBcImBcIlxuICogICAgICAgICAgICAgICAvIFwie1wiIC8gXCJ9XCIgLyBcIn5cIlxuICogbGFuZ3VhZ2UgICAgICA9ICggMiozQUxQSEEgWyBleHRsYW5nIF0gKVxuICogICAgICAgICAgICAgICAvIDRBTFBIQVxuICogICAgICAgICAgICAgICAvIDUqOEFMUEhBXG4gKiBleHRsYW5nICAgICAgID0gKjMoIFwiLVwiIDNBTFBIQSApXG4gKiB2YWx1ZS1jaGFycyAgID0gKiggcGN0LWVuY29kZWQgLyBhdHRyLWNoYXIgKVxuICogcGN0LWVuY29kZWQgICA9IFwiJVwiIEhFWERJRyBIRVhESUdcbiAqIGF0dHItY2hhciAgICAgPSBBTFBIQSAvIERJR0lUXG4gKiAgICAgICAgICAgICAgIC8gXCIhXCIgLyBcIiNcIiAvIFwiJFwiIC8gXCImXCIgLyBcIitcIiAvIFwiLVwiIC8gXCIuXCJcbiAqICAgICAgICAgICAgICAgLyBcIl5cIiAvIFwiX1wiIC8gXCJgXCIgLyBcInxcIiAvIFwiflwiXG4gKi9cblxudmFyIEVYVF9WQUxVRV9SRUdFWFAgPSAvXihbQS1aYS16MC05ISMkJSYrXFwtXl9ge31+XSspJyg/OltBLVphLXpdezIsM30oPzotW0EtWmEtel17M30pezAsM318W0EtWmEtel17NCw4fXwpJygoPzolWzAtOUEtRmEtZl17Mn18W0EtWmEtejAtOSEjJCYrLl5fYHx+LV0pKykkL1xuXG4vKipcbiAqIFJlZ0V4cCBmb3IgdmFyaW91cyBSRkMgNjI2NiBncmFtbWFyXG4gKlxuICogZGlzcG9zaXRpb24tdHlwZSA9IFwiaW5saW5lXCIgfCBcImF0dGFjaG1lbnRcIiB8IGRpc3AtZXh0LXR5cGVcbiAqIGRpc3AtZXh0LXR5cGUgICAgPSB0b2tlblxuICogZGlzcG9zaXRpb24tcGFybSA9IGZpbGVuYW1lLXBhcm0gfCBkaXNwLWV4dC1wYXJtXG4gKiBmaWxlbmFtZS1wYXJtICAgID0gXCJmaWxlbmFtZVwiIFwiPVwiIHZhbHVlXG4gKiAgICAgICAgICAgICAgICAgIHwgXCJmaWxlbmFtZSpcIiBcIj1cIiBleHQtdmFsdWVcbiAqIGRpc3AtZXh0LXBhcm0gICAgPSB0b2tlbiBcIj1cIiB2YWx1ZVxuICogICAgICAgICAgICAgICAgICB8IGV4dC10b2tlbiBcIj1cIiBleHQtdmFsdWVcbiAqIGV4dC10b2tlbiAgICAgICAgPSA8dGhlIGNoYXJhY3RlcnMgaW4gdG9rZW4sIGZvbGxvd2VkIGJ5IFwiKlwiPlxuICovXG5cbnZhciBESVNQT1NJVElPTl9UWVBFX1JFR0VYUCA9IC9eKFshIyQlJicqKy4wLTlBLVpeX2BhLXp8fi1dKylbXFx4MDlcXHgyMF0qKD86JHw7KS8gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb250cm9sLXJlZ2V4XG5cbi8qKlxuICogQ3JlYXRlIGFuIGF0dGFjaG1lbnQgQ29udGVudC1EaXNwb3NpdGlvbiBoZWFkZXIuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IFtmaWxlbmFtZV1cbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy50eXBlPWF0dGFjaG1lbnRdXG4gKiBAcGFyYW0ge3N0cmluZ3xib29sZWFufSBbb3B0aW9ucy5mYWxsYmFjaz10cnVlXVxuICogQHJldHVybiB7c3RyaW5nfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBjb250ZW50RGlzcG9zaXRpb24gKGZpbGVuYW1lLCBvcHRpb25zKSB7XG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fVxuXG4gIC8vIGdldCB0eXBlXG4gIHZhciB0eXBlID0gb3B0cy50eXBlIHx8ICdhdHRhY2htZW50J1xuXG4gIC8vIGdldCBwYXJhbWV0ZXJzXG4gIHZhciBwYXJhbXMgPSBjcmVhdGVwYXJhbXMoZmlsZW5hbWUsIG9wdHMuZmFsbGJhY2spXG5cbiAgLy8gZm9ybWF0IGludG8gc3RyaW5nXG4gIHJldHVybiBmb3JtYXQobmV3IENvbnRlbnREaXNwb3NpdGlvbih0eXBlLCBwYXJhbXMpKVxufVxuXG4vKipcbiAqIENyZWF0ZSBwYXJhbWV0ZXJzIG9iamVjdCBmcm9tIGZpbGVuYW1lIGFuZCBmYWxsYmFjay5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gW2ZpbGVuYW1lXVxuICogQHBhcmFtIHtzdHJpbmd8Ym9vbGVhbn0gW2ZhbGxiYWNrPXRydWVdXG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVwYXJhbXMgKGZpbGVuYW1lLCBmYWxsYmFjaykge1xuICBpZiAoZmlsZW5hbWUgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIHBhcmFtcyA9IHt9XG5cbiAgaWYgKHR5cGVvZiBmaWxlbmFtZSAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdmaWxlbmFtZSBtdXN0IGJlIGEgc3RyaW5nJylcbiAgfVxuXG4gIC8vIGZhbGxiYWNrIGRlZmF1bHRzIHRvIHRydWVcbiAgaWYgKGZhbGxiYWNrID09PSB1bmRlZmluZWQpIHtcbiAgICBmYWxsYmFjayA9IHRydWVcbiAgfVxuXG4gIGlmICh0eXBlb2YgZmFsbGJhY2sgIT09ICdzdHJpbmcnICYmIHR5cGVvZiBmYWxsYmFjayAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZmFsbGJhY2sgbXVzdCBiZSBhIHN0cmluZyBvciBib29sZWFuJylcbiAgfVxuXG4gIGlmICh0eXBlb2YgZmFsbGJhY2sgPT09ICdzdHJpbmcnICYmIE5PTl9MQVRJTjFfUkVHRVhQLnRlc3QoZmFsbGJhY2spKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZmFsbGJhY2sgbXVzdCBiZSBJU08tODg1OS0xIHN0cmluZycpXG4gIH1cblxuICAvLyByZXN0cmljdCB0byBmaWxlIGJhc2UgbmFtZVxuICB2YXIgbmFtZSA9IGJhc2VuYW1lKGZpbGVuYW1lKVxuXG4gIC8vIGRldGVybWluZSBpZiBuYW1lIGlzIHN1aXRhYmxlIGZvciBxdW90ZWQgc3RyaW5nXG4gIHZhciBpc1F1b3RlZFN0cmluZyA9IFRFWFRfUkVHRVhQLnRlc3QobmFtZSlcblxuICAvLyBnZW5lcmF0ZSBmYWxsYmFjayBuYW1lXG4gIHZhciBmYWxsYmFja05hbWUgPSB0eXBlb2YgZmFsbGJhY2sgIT09ICdzdHJpbmcnXG4gICAgPyBmYWxsYmFjayAmJiBnZXRsYXRpbjEobmFtZSlcbiAgICA6IGJhc2VuYW1lKGZhbGxiYWNrKVxuICB2YXIgaGFzRmFsbGJhY2sgPSB0eXBlb2YgZmFsbGJhY2tOYW1lID09PSAnc3RyaW5nJyAmJiBmYWxsYmFja05hbWUgIT09IG5hbWVcblxuICAvLyBzZXQgZXh0ZW5kZWQgZmlsZW5hbWUgcGFyYW1ldGVyXG4gIGlmIChoYXNGYWxsYmFjayB8fCAhaXNRdW90ZWRTdHJpbmcgfHwgSEVYX0VTQ0FQRV9SRUdFWFAudGVzdChuYW1lKSkge1xuICAgIHBhcmFtc1snZmlsZW5hbWUqJ10gPSBuYW1lXG4gIH1cblxuICAvLyBzZXQgZmlsZW5hbWUgcGFyYW1ldGVyXG4gIGlmIChpc1F1b3RlZFN0cmluZyB8fCBoYXNGYWxsYmFjaykge1xuICAgIHBhcmFtcy5maWxlbmFtZSA9IGhhc0ZhbGxiYWNrXG4gICAgICA/IGZhbGxiYWNrTmFtZVxuICAgICAgOiBuYW1lXG4gIH1cblxuICByZXR1cm4gcGFyYW1zXG59XG5cbi8qKlxuICogRm9ybWF0IG9iamVjdCB0byBDb250ZW50LURpc3Bvc2l0aW9uIGhlYWRlci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqXG4gKiBAcGFyYW0ge3N0cmluZ30gb2JqLnR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb2JqLnBhcmFtZXRlcnNdXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBmb3JtYXQgKG9iaikge1xuICB2YXIgcGFyYW1ldGVycyA9IG9iai5wYXJhbWV0ZXJzXG4gIHZhciB0eXBlID0gb2JqLnR5cGVcblxuICBpZiAoIXR5cGUgfHwgdHlwZW9mIHR5cGUgIT09ICdzdHJpbmcnIHx8ICFUT0tFTl9SRUdFWFAudGVzdCh0eXBlKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgdHlwZScpXG4gIH1cblxuICAvLyBzdGFydCB3aXRoIG5vcm1hbGl6ZWQgdHlwZVxuICB2YXIgc3RyaW5nID0gU3RyaW5nKHR5cGUpLnRvTG93ZXJDYXNlKClcblxuICAvLyBhcHBlbmQgcGFyYW1ldGVyc1xuICBpZiAocGFyYW1ldGVycyAmJiB0eXBlb2YgcGFyYW1ldGVycyA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIgcGFyYW1cbiAgICB2YXIgcGFyYW1zID0gT2JqZWN0LmtleXMocGFyYW1ldGVycykuc29ydCgpXG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhcmFtcy5sZW5ndGg7IGkrKykge1xuICAgICAgcGFyYW0gPSBwYXJhbXNbaV1cblxuICAgICAgdmFyIHZhbCA9IHBhcmFtLnN1YnN0cigtMSkgPT09ICcqJ1xuICAgICAgICA/IHVzdHJpbmcocGFyYW1ldGVyc1twYXJhbV0pXG4gICAgICAgIDogcXN0cmluZyhwYXJhbWV0ZXJzW3BhcmFtXSlcblxuICAgICAgc3RyaW5nICs9ICc7ICcgKyBwYXJhbSArICc9JyArIHZhbFxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdHJpbmdcbn1cblxuLyoqXG4gKiBEZWNvZGUgYSBSRkMgNjk4NyBmaWVsZCB2YWx1ZSAoZ3JhY2VmdWxseSkuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZGVjb2RlZmllbGQgKHN0cikge1xuICB2YXIgbWF0Y2ggPSBFWFRfVkFMVUVfUkVHRVhQLmV4ZWMoc3RyKVxuXG4gIGlmICghbWF0Y2gpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIGV4dGVuZGVkIGZpZWxkIHZhbHVlJylcbiAgfVxuXG4gIHZhciBjaGFyc2V0ID0gbWF0Y2hbMV0udG9Mb3dlckNhc2UoKVxuICB2YXIgZW5jb2RlZCA9IG1hdGNoWzJdXG4gIHZhciB2YWx1ZVxuXG4gIC8vIHRvIGJpbmFyeSBzdHJpbmdcbiAgdmFyIGJpbmFyeSA9IGVuY29kZWQucmVwbGFjZShIRVhfRVNDQVBFX1JFUExBQ0VfUkVHRVhQLCBwZGVjb2RlKVxuXG4gIHN3aXRjaCAoY2hhcnNldCkge1xuICAgIGNhc2UgJ2lzby04ODU5LTEnOlxuICAgICAgdmFsdWUgPSBnZXRsYXRpbjEoYmluYXJ5KVxuICAgICAgYnJlYWtcbiAgICBjYXNlICd1dGYtOCc6XG4gICAgICB2YWx1ZSA9IG5ldyBCdWZmZXIoYmluYXJ5LCAnYmluYXJ5JykudG9TdHJpbmcoJ3V0ZjgnKVxuICAgICAgYnJlYWtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigndW5zdXBwb3J0ZWQgY2hhcnNldCBpbiBleHRlbmRlZCBmaWVsZCcpXG4gIH1cblxuICByZXR1cm4gdmFsdWVcbn1cblxuLyoqXG4gKiBHZXQgSVNPLTg4NTktMSB2ZXJzaW9uIG9mIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBnZXRsYXRpbjEgKHZhbCkge1xuICAvLyBzaW1wbGUgVW5pY29kZSAtPiBJU08tODg1OS0xIHRyYW5zZm9ybWF0aW9uXG4gIHJldHVybiBTdHJpbmcodmFsKS5yZXBsYWNlKE5PTl9MQVRJTjFfUkVHRVhQLCAnPycpXG59XG5cbi8qKlxuICogUGFyc2UgQ29udGVudC1EaXNwb3NpdGlvbiBoZWFkZXIgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdcbiAqIEByZXR1cm4ge29iamVjdH1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlIChzdHJpbmcpIHtcbiAgaWYgKCFzdHJpbmcgfHwgdHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBzdHJpbmcgaXMgcmVxdWlyZWQnKVxuICB9XG5cbiAgdmFyIG1hdGNoID0gRElTUE9TSVRJT05fVFlQRV9SRUdFWFAuZXhlYyhzdHJpbmcpXG5cbiAgaWYgKCFtYXRjaCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgdHlwZSBmb3JtYXQnKVxuICB9XG5cbiAgLy8gbm9ybWFsaXplIHR5cGVcbiAgdmFyIGluZGV4ID0gbWF0Y2hbMF0ubGVuZ3RoXG4gIHZhciB0eXBlID0gbWF0Y2hbMV0udG9Mb3dlckNhc2UoKVxuXG4gIHZhciBrZXlcbiAgdmFyIG5hbWVzID0gW11cbiAgdmFyIHBhcmFtcyA9IHt9XG4gIHZhciB2YWx1ZVxuXG4gIC8vIGNhbGN1bGF0ZSBpbmRleCB0byBzdGFydCBhdFxuICBpbmRleCA9IFBBUkFNX1JFR0VYUC5sYXN0SW5kZXggPSBtYXRjaFswXS5zdWJzdHIoLTEpID09PSAnOydcbiAgICA/IGluZGV4IC0gMVxuICAgIDogaW5kZXhcblxuICAvLyBtYXRjaCBwYXJhbWV0ZXJzXG4gIHdoaWxlICgobWF0Y2ggPSBQQVJBTV9SRUdFWFAuZXhlYyhzdHJpbmcpKSkge1xuICAgIGlmIChtYXRjaC5pbmRleCAhPT0gaW5kZXgpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgcGFyYW1ldGVyIGZvcm1hdCcpXG4gICAgfVxuXG4gICAgaW5kZXggKz0gbWF0Y2hbMF0ubGVuZ3RoXG4gICAga2V5ID0gbWF0Y2hbMV0udG9Mb3dlckNhc2UoKVxuICAgIHZhbHVlID0gbWF0Y2hbMl1cblxuICAgIGlmIChuYW1lcy5pbmRleE9mKGtleSkgIT09IC0xKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIGR1cGxpY2F0ZSBwYXJhbWV0ZXInKVxuICAgIH1cblxuICAgIG5hbWVzLnB1c2goa2V5KVxuXG4gICAgaWYgKGtleS5pbmRleE9mKCcqJykgKyAxID09PSBrZXkubGVuZ3RoKSB7XG4gICAgICAvLyBkZWNvZGUgZXh0ZW5kZWQgdmFsdWVcbiAgICAgIGtleSA9IGtleS5zbGljZSgwLCAtMSlcbiAgICAgIHZhbHVlID0gZGVjb2RlZmllbGQodmFsdWUpXG5cbiAgICAgIC8vIG92ZXJ3cml0ZSBleGlzdGluZyB2YWx1ZVxuICAgICAgcGFyYW1zW2tleV0gPSB2YWx1ZVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHBhcmFtc1trZXldID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICBpZiAodmFsdWVbMF0gPT09ICdcIicpIHtcbiAgICAgIC8vIHJlbW92ZSBxdW90ZXMgYW5kIGVzY2FwZXNcbiAgICAgIHZhbHVlID0gdmFsdWVcbiAgICAgICAgLnN1YnN0cigxLCB2YWx1ZS5sZW5ndGggLSAyKVxuICAgICAgICAucmVwbGFjZShRRVNDX1JFR0VYUCwgJyQxJylcbiAgICB9XG5cbiAgICBwYXJhbXNba2V5XSA9IHZhbHVlXG4gIH1cblxuICBpZiAoaW5kZXggIT09IC0xICYmIGluZGV4ICE9PSBzdHJpbmcubGVuZ3RoKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW52YWxpZCBwYXJhbWV0ZXIgZm9ybWF0JylcbiAgfVxuXG4gIHJldHVybiBuZXcgQ29udGVudERpc3Bvc2l0aW9uKHR5cGUsIHBhcmFtcylcbn1cblxuLyoqXG4gKiBQZXJjZW50IGRlY29kZSBhIHNpbmdsZSBjaGFyYWN0ZXIuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHBhcmFtIHtzdHJpbmd9IGhleFxuICogQHJldHVybiB7c3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGRlY29kZSAoc3RyLCBoZXgpIHtcbiAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQoaGV4LCAxNikpXG59XG5cbi8qKlxuICogUGVyY2VudCBlbmNvZGUgYSBzaW5nbGUgY2hhcmFjdGVyLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjaGFyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwZW5jb2RlIChjaGFyKSB7XG4gIHZhciBoZXggPSBTdHJpbmcoY2hhcilcbiAgICAuY2hhckNvZGVBdCgwKVxuICAgIC50b1N0cmluZygxNilcbiAgICAudG9VcHBlckNhc2UoKVxuICByZXR1cm4gaGV4Lmxlbmd0aCA9PT0gMVxuICAgID8gJyUwJyArIGhleFxuICAgIDogJyUnICsgaGV4XG59XG5cbi8qKlxuICogUXVvdGUgYSBzdHJpbmcgZm9yIEhUVFAuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbFxuICogQHJldHVybiB7c3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcXN0cmluZyAodmFsKSB7XG4gIHZhciBzdHIgPSBTdHJpbmcodmFsKVxuXG4gIHJldHVybiAnXCInICsgc3RyLnJlcGxhY2UoUVVPVEVfUkVHRVhQLCAnXFxcXCQxJykgKyAnXCInXG59XG5cbi8qKlxuICogRW5jb2RlIGEgVW5pY29kZSBzdHJpbmcgZm9yIEhUVFAgKFJGQyA1OTg3KS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiB1c3RyaW5nICh2YWwpIHtcbiAgdmFyIHN0ciA9IFN0cmluZyh2YWwpXG5cbiAgLy8gcGVyY2VudCBlbmNvZGUgYXMgVVRGLThcbiAgdmFyIGVuY29kZWQgPSBlbmNvZGVVUklDb21wb25lbnQoc3RyKVxuICAgIC5yZXBsYWNlKEVOQ09ERV9VUkxfQVRUUl9DSEFSX1JFR0VYUCwgcGVuY29kZSlcblxuICByZXR1cm4gJ1VURi04XFwnXFwnJyArIGVuY29kZWRcbn1cblxuLyoqXG4gKiBDbGFzcyBmb3IgcGFyc2VkIENvbnRlbnQtRGlzcG9zaXRpb24gaGVhZGVyIGZvciB2OCBvcHRpbWl6YXRpb25cbiAqL1xuXG5mdW5jdGlvbiBDb250ZW50RGlzcG9zaXRpb24gKHR5cGUsIHBhcmFtZXRlcnMpIHtcbiAgdGhpcy50eXBlID0gdHlwZVxuICB0aGlzLnBhcmFtZXRlcnMgPSBwYXJhbWV0ZXJzXG59XG4iLCIvKiFcbiAqIGV0YWdcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTYgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZXRhZ1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKVxudmFyIFN0YXRzID0gcmVxdWlyZSgnZnMnKS5TdGF0c1xuXG4vKipcbiAqIE1vZHVsZSB2YXJpYWJsZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdcblxuLyoqXG4gKiBHZW5lcmF0ZSBhbiBlbnRpdHkgdGFnLlxuICpcbiAqIEBwYXJhbSB7QnVmZmVyfHN0cmluZ30gZW50aXR5XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGVudGl0eXRhZyAoZW50aXR5KSB7XG4gIGlmIChlbnRpdHkubGVuZ3RoID09PSAwKSB7XG4gICAgLy8gZmFzdC1wYXRoIGVtcHR5XG4gICAgcmV0dXJuICdcIjAtMmptajdsNXJTdzB5VmIvdmxXQVlrSy9ZQndrXCInXG4gIH1cblxuICAvLyBjb21wdXRlIGhhc2ggb2YgZW50aXR5XG4gIHZhciBoYXNoID0gY3J5cHRvXG4gICAgLmNyZWF0ZUhhc2goJ3NoYTEnKVxuICAgIC51cGRhdGUoZW50aXR5LCAndXRmOCcpXG4gICAgLmRpZ2VzdCgnYmFzZTY0JylcbiAgICAuc3Vic3RyaW5nKDAsIDI3KVxuXG4gIC8vIGNvbXB1dGUgbGVuZ3RoIG9mIGVudGl0eVxuICB2YXIgbGVuID0gdHlwZW9mIGVudGl0eSA9PT0gJ3N0cmluZydcbiAgICA/IEJ1ZmZlci5ieXRlTGVuZ3RoKGVudGl0eSwgJ3V0ZjgnKVxuICAgIDogZW50aXR5Lmxlbmd0aFxuXG4gIHJldHVybiAnXCInICsgbGVuLnRvU3RyaW5nKDE2KSArICctJyArIGhhc2ggKyAnXCInXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgc2ltcGxlIEVUYWcuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd8QnVmZmVyfFN0YXRzfSBlbnRpdHlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMud2Vha11cbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBldGFnIChlbnRpdHksIG9wdGlvbnMpIHtcbiAgaWYgKGVudGl0eSA9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgZW50aXR5IGlzIHJlcXVpcmVkJylcbiAgfVxuXG4gIC8vIHN1cHBvcnQgZnMuU3RhdHMgb2JqZWN0XG4gIHZhciBpc1N0YXRzID0gaXNzdGF0cyhlbnRpdHkpXG4gIHZhciB3ZWFrID0gb3B0aW9ucyAmJiB0eXBlb2Ygb3B0aW9ucy53ZWFrID09PSAnYm9vbGVhbidcbiAgICA/IG9wdGlvbnMud2Vha1xuICAgIDogaXNTdGF0c1xuXG4gIC8vIHZhbGlkYXRlIGFyZ3VtZW50XG4gIGlmICghaXNTdGF0cyAmJiB0eXBlb2YgZW50aXR5ICE9PSAnc3RyaW5nJyAmJiAhQnVmZmVyLmlzQnVmZmVyKGVudGl0eSkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBlbnRpdHkgbXVzdCBiZSBzdHJpbmcsIEJ1ZmZlciwgb3IgZnMuU3RhdHMnKVxuICB9XG5cbiAgLy8gZ2VuZXJhdGUgZW50aXR5IHRhZ1xuICB2YXIgdGFnID0gaXNTdGF0c1xuICAgID8gc3RhdHRhZyhlbnRpdHkpXG4gICAgOiBlbnRpdHl0YWcoZW50aXR5KVxuXG4gIHJldHVybiB3ZWFrXG4gICAgPyAnVy8nICsgdGFnXG4gICAgOiB0YWdcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgb2JqZWN0IGlzIGEgU3RhdHMgb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBpc3N0YXRzIChvYmopIHtcbiAgLy8gZ2VudWluZSBmcy5TdGF0c1xuICBpZiAodHlwZW9mIFN0YXRzID09PSAnZnVuY3Rpb24nICYmIG9iaiBpbnN0YW5jZW9mIFN0YXRzKSB7XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuXG4gIC8vIHF1YWNrIHF1YWNrXG4gIHJldHVybiBvYmogJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiZcbiAgICAnY3RpbWUnIGluIG9iaiAmJiB0b1N0cmluZy5jYWxsKG9iai5jdGltZSkgPT09ICdbb2JqZWN0IERhdGVdJyAmJlxuICAgICdtdGltZScgaW4gb2JqICYmIHRvU3RyaW5nLmNhbGwob2JqLm10aW1lKSA9PT0gJ1tvYmplY3QgRGF0ZV0nICYmXG4gICAgJ2lubycgaW4gb2JqICYmIHR5cGVvZiBvYmouaW5vID09PSAnbnVtYmVyJyAmJlxuICAgICdzaXplJyBpbiBvYmogJiYgdHlwZW9mIG9iai5zaXplID09PSAnbnVtYmVyJ1xufVxuXG4vKipcbiAqIEdlbmVyYXRlIGEgdGFnIGZvciBhIHN0YXQuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHN0YXRcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc3RhdHRhZyAoc3RhdCkge1xuICB2YXIgbXRpbWUgPSBzdGF0Lm10aW1lLmdldFRpbWUoKS50b1N0cmluZygxNilcbiAgdmFyIHNpemUgPSBzdGF0LnNpemUudG9TdHJpbmcoMTYpXG5cbiAgcmV0dXJuICdcIicgKyBzaXplICsgJy0nICsgbXRpbWUgKyAnXCInXG59XG4iLCIvKiFcbiAqIGZyZXNoXG4gKiBDb3B5cmlnaHQoYykgMjAxMiBUSiBIb2xvd2F5Y2h1a1xuICogQ29weXJpZ2h0KGMpIDIwMTYtMjAxNyBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogUmVnRXhwIHRvIGNoZWNrIGZvciBuby1jYWNoZSB0b2tlbiBpbiBDYWNoZS1Db250cm9sLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgQ0FDSEVfQ09OVFJPTF9OT19DQUNIRV9SRUdFWFAgPSAvKD86XnwsKVxccyo/bm8tY2FjaGVcXHMqPyg/Oix8JCkvXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmcmVzaFxuXG4vKipcbiAqIENoZWNrIGZyZXNobmVzcyBvZiB0aGUgcmVzcG9uc2UgdXNpbmcgcmVxdWVzdCBhbmQgcmVzcG9uc2UgaGVhZGVycy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcmVxSGVhZGVyc1xuICogQHBhcmFtIHtPYmplY3R9IHJlc0hlYWRlcnNcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZnJlc2ggKHJlcUhlYWRlcnMsIHJlc0hlYWRlcnMpIHtcbiAgLy8gZmllbGRzXG4gIHZhciBtb2RpZmllZFNpbmNlID0gcmVxSGVhZGVyc1snaWYtbW9kaWZpZWQtc2luY2UnXVxuICB2YXIgbm9uZU1hdGNoID0gcmVxSGVhZGVyc1snaWYtbm9uZS1tYXRjaCddXG5cbiAgLy8gdW5jb25kaXRpb25hbCByZXF1ZXN0XG4gIGlmICghbW9kaWZpZWRTaW5jZSAmJiAhbm9uZU1hdGNoKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvLyBBbHdheXMgcmV0dXJuIHN0YWxlIHdoZW4gQ2FjaGUtQ29udHJvbDogbm8tY2FjaGVcbiAgLy8gdG8gc3VwcG9ydCBlbmQtdG8tZW5kIHJlbG9hZCByZXF1ZXN0c1xuICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMjYxNiNzZWN0aW9uLTE0LjkuNFxuICB2YXIgY2FjaGVDb250cm9sID0gcmVxSGVhZGVyc1snY2FjaGUtY29udHJvbCddXG4gIGlmIChjYWNoZUNvbnRyb2wgJiYgQ0FDSEVfQ09OVFJPTF9OT19DQUNIRV9SRUdFWFAudGVzdChjYWNoZUNvbnRyb2wpKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvLyBpZi1ub25lLW1hdGNoXG4gIGlmIChub25lTWF0Y2ggJiYgbm9uZU1hdGNoICE9PSAnKicpIHtcbiAgICB2YXIgZXRhZyA9IHJlc0hlYWRlcnNbJ2V0YWcnXVxuXG4gICAgaWYgKCFldGFnKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICB2YXIgZXRhZ1N0YWxlID0gdHJ1ZVxuICAgIHZhciBtYXRjaGVzID0gcGFyc2VUb2tlbkxpc3Qobm9uZU1hdGNoKVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbWF0Y2hlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIG1hdGNoID0gbWF0Y2hlc1tpXVxuICAgICAgaWYgKG1hdGNoID09PSBldGFnIHx8IG1hdGNoID09PSAnVy8nICsgZXRhZyB8fCAnVy8nICsgbWF0Y2ggPT09IGV0YWcpIHtcbiAgICAgICAgZXRhZ1N0YWxlID0gZmFsc2VcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZXRhZ1N0YWxlKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gIH1cblxuICAvLyBpZi1tb2RpZmllZC1zaW5jZVxuICBpZiAobW9kaWZpZWRTaW5jZSkge1xuICAgIHZhciBsYXN0TW9kaWZpZWQgPSByZXNIZWFkZXJzWydsYXN0LW1vZGlmaWVkJ11cbiAgICB2YXIgbW9kaWZpZWRTdGFsZSA9ICFsYXN0TW9kaWZpZWQgfHwgIShwYXJzZUh0dHBEYXRlKGxhc3RNb2RpZmllZCkgPD0gcGFyc2VIdHRwRGF0ZShtb2RpZmllZFNpbmNlKSlcblxuICAgIGlmIChtb2RpZmllZFN0YWxlKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZVxufVxuXG4vKipcbiAqIFBhcnNlIGFuIEhUVFAgRGF0ZSBpbnRvIGEgbnVtYmVyLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRlXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlSHR0cERhdGUgKGRhdGUpIHtcbiAgdmFyIHRpbWVzdGFtcCA9IGRhdGUgJiYgRGF0ZS5wYXJzZShkYXRlKVxuXG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0OiBndWFyZCBhZ2FpbnN0IGRhdGUuanMgRGF0ZS5wYXJzZSBwYXRjaGluZ1xuICByZXR1cm4gdHlwZW9mIHRpbWVzdGFtcCA9PT0gJ251bWJlcidcbiAgICA/IHRpbWVzdGFtcFxuICAgIDogTmFOXG59XG5cbi8qKlxuICogUGFyc2UgYSBIVFRQIHRva2VuIGxpc3QuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZVRva2VuTGlzdCAoc3RyKSB7XG4gIHZhciBlbmQgPSAwXG4gIHZhciBsaXN0ID0gW11cbiAgdmFyIHN0YXJ0ID0gMFxuXG4gIC8vIGdhdGhlciB0b2tlbnNcbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHN0ci5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIHN3aXRjaCAoc3RyLmNoYXJDb2RlQXQoaSkpIHtcbiAgICAgIGNhc2UgMHgyMDogLyogICAqL1xuICAgICAgICBpZiAoc3RhcnQgPT09IGVuZCkge1xuICAgICAgICAgIHN0YXJ0ID0gZW5kID0gaSArIDFcbiAgICAgICAgfVxuICAgICAgICBicmVha1xuICAgICAgY2FzZSAweDJjOiAvKiAsICovXG4gICAgICAgIGxpc3QucHVzaChzdHIuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpKVxuICAgICAgICBzdGFydCA9IGVuZCA9IGkgKyAxXG4gICAgICAgIGJyZWFrXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBlbmQgPSBpICsgMVxuICAgICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIC8vIGZpbmFsIHRva2VuXG4gIGxpc3QucHVzaChzdHIuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpKVxuXG4gIHJldHVybiBsaXN0XG59XG4iLCIvKiFcbiAqIHJhbmdlLXBhcnNlclxuICogQ29weXJpZ2h0KGMpIDIwMTItMjAxNCBUSiBIb2xvd2F5Y2h1a1xuICogQ29weXJpZ2h0KGMpIDIwMTUtMjAxNiBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSByYW5nZVBhcnNlclxuXG4vKipcbiAqIFBhcnNlIFwiUmFuZ2VcIiBoZWFkZXIgYHN0cmAgcmVsYXRpdmUgdG8gdGhlIGdpdmVuIGZpbGUgYHNpemVgLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBzaXplXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiBAcmV0dXJuIHtBcnJheX1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiByYW5nZVBhcnNlciAoc2l6ZSwgc3RyLCBvcHRpb25zKSB7XG4gIHZhciBpbmRleCA9IHN0ci5pbmRleE9mKCc9JylcblxuICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgcmV0dXJuIC0yXG4gIH1cblxuICAvLyBzcGxpdCB0aGUgcmFuZ2Ugc3RyaW5nXG4gIHZhciBhcnIgPSBzdHIuc2xpY2UoaW5kZXggKyAxKS5zcGxpdCgnLCcpXG4gIHZhciByYW5nZXMgPSBbXVxuXG4gIC8vIGFkZCByYW5nZXMgdHlwZVxuICByYW5nZXMudHlwZSA9IHN0ci5zbGljZSgwLCBpbmRleClcblxuICAvLyBwYXJzZSBhbGwgcmFuZ2VzXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHJhbmdlID0gYXJyW2ldLnNwbGl0KCctJylcbiAgICB2YXIgc3RhcnQgPSBwYXJzZUludChyYW5nZVswXSwgMTApXG4gICAgdmFyIGVuZCA9IHBhcnNlSW50KHJhbmdlWzFdLCAxMClcblxuICAgIC8vIC1ubm5cbiAgICBpZiAoaXNOYU4oc3RhcnQpKSB7XG4gICAgICBzdGFydCA9IHNpemUgLSBlbmRcbiAgICAgIGVuZCA9IHNpemUgLSAxXG4gICAgLy8gbm5uLVxuICAgIH0gZWxzZSBpZiAoaXNOYU4oZW5kKSkge1xuICAgICAgZW5kID0gc2l6ZSAtIDFcbiAgICB9XG5cbiAgICAvLyBsaW1pdCBsYXN0LWJ5dGUtcG9zIHRvIGN1cnJlbnQgbGVuZ3RoXG4gICAgaWYgKGVuZCA+IHNpemUgLSAxKSB7XG4gICAgICBlbmQgPSBzaXplIC0gMVxuICAgIH1cblxuICAgIC8vIGludmFsaWQgb3IgdW5zYXRpc2lmaWFibGVcbiAgICBpZiAoaXNOYU4oc3RhcnQpIHx8IGlzTmFOKGVuZCkgfHwgc3RhcnQgPiBlbmQgfHwgc3RhcnQgPCAwKSB7XG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIC8vIGFkZCByYW5nZVxuICAgIHJhbmdlcy5wdXNoKHtcbiAgICAgIHN0YXJ0OiBzdGFydCxcbiAgICAgIGVuZDogZW5kXG4gICAgfSlcbiAgfVxuXG4gIGlmIChyYW5nZXMubGVuZ3RoIDwgMSkge1xuICAgIC8vIHVuc2F0aXNpZmlhYmxlXG4gICAgcmV0dXJuIC0xXG4gIH1cblxuICByZXR1cm4gb3B0aW9ucyAmJiBvcHRpb25zLmNvbWJpbmVcbiAgICA/IGNvbWJpbmVSYW5nZXMocmFuZ2VzKVxuICAgIDogcmFuZ2VzXG59XG5cbi8qKlxuICogQ29tYmluZSBvdmVybGFwcGluZyAmIGFkamFjZW50IHJhbmdlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY29tYmluZVJhbmdlcyAocmFuZ2VzKSB7XG4gIHZhciBvcmRlcmVkID0gcmFuZ2VzLm1hcChtYXBXaXRoSW5kZXgpLnNvcnQoc29ydEJ5UmFuZ2VTdGFydClcblxuICBmb3IgKHZhciBqID0gMCwgaSA9IDE7IGkgPCBvcmRlcmVkLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHJhbmdlID0gb3JkZXJlZFtpXVxuICAgIHZhciBjdXJyZW50ID0gb3JkZXJlZFtqXVxuXG4gICAgaWYgKHJhbmdlLnN0YXJ0ID4gY3VycmVudC5lbmQgKyAxKSB7XG4gICAgICAvLyBuZXh0IHJhbmdlXG4gICAgICBvcmRlcmVkWysral0gPSByYW5nZVxuICAgIH0gZWxzZSBpZiAocmFuZ2UuZW5kID4gY3VycmVudC5lbmQpIHtcbiAgICAgIC8vIGV4dGVuZCByYW5nZVxuICAgICAgY3VycmVudC5lbmQgPSByYW5nZS5lbmRcbiAgICAgIGN1cnJlbnQuaW5kZXggPSBNYXRoLm1pbihjdXJyZW50LmluZGV4LCByYW5nZS5pbmRleClcbiAgICB9XG4gIH1cblxuICAvLyB0cmltIG9yZGVyZWQgYXJyYXlcbiAgb3JkZXJlZC5sZW5ndGggPSBqICsgMVxuXG4gIC8vIGdlbmVyYXRlIGNvbWJpbmVkIHJhbmdlXG4gIHZhciBjb21iaW5lZCA9IG9yZGVyZWQuc29ydChzb3J0QnlSYW5nZUluZGV4KS5tYXAobWFwV2l0aG91dEluZGV4KVxuXG4gIC8vIGNvcHkgcmFuZ2VzIHR5cGVcbiAgY29tYmluZWQudHlwZSA9IHJhbmdlcy50eXBlXG5cbiAgcmV0dXJuIGNvbWJpbmVkXG59XG5cbi8qKlxuICogTWFwIGZ1bmN0aW9uIHRvIGFkZCBpbmRleCB2YWx1ZSB0byByYW5nZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIG1hcFdpdGhJbmRleCAocmFuZ2UsIGluZGV4KSB7XG4gIHJldHVybiB7XG4gICAgc3RhcnQ6IHJhbmdlLnN0YXJ0LFxuICAgIGVuZDogcmFuZ2UuZW5kLFxuICAgIGluZGV4OiBpbmRleFxuICB9XG59XG5cbi8qKlxuICogTWFwIGZ1bmN0aW9uIHRvIHJlbW92ZSBpbmRleCB2YWx1ZSBmcm9tIHJhbmdlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbWFwV2l0aG91dEluZGV4IChyYW5nZSkge1xuICByZXR1cm4ge1xuICAgIHN0YXJ0OiByYW5nZS5zdGFydCxcbiAgICBlbmQ6IHJhbmdlLmVuZFxuICB9XG59XG5cbi8qKlxuICogU29ydCBmdW5jdGlvbiB0byBzb3J0IHJhbmdlcyBieSBpbmRleC5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc29ydEJ5UmFuZ2VJbmRleCAoYSwgYikge1xuICByZXR1cm4gYS5pbmRleCAtIGIuaW5kZXhcbn1cblxuLyoqXG4gKiBTb3J0IGZ1bmN0aW9uIHRvIHNvcnQgcmFuZ2VzIGJ5IHN0YXJ0IHBvc2l0aW9uLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBzb3J0QnlSYW5nZVN0YXJ0IChhLCBiKSB7XG4gIHJldHVybiBhLnN0YXJ0IC0gYi5zdGFydFxufVxuIiwiLyohXG4gKiBwcm94eS1hZGRyXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE2IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHByb3h5YWRkclxubW9kdWxlLmV4cG9ydHMuYWxsID0gYWxsYWRkcnNcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIGZvcndhcmRlZCA9IHJlcXVpcmUoJ2ZvcndhcmRlZCcpXG52YXIgaXBhZGRyID0gcmVxdWlyZSgnaXBhZGRyLmpzJylcblxuLyoqXG4gKiBWYXJpYWJsZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBESUdJVF9SRUdFWFAgPSAvXlswLTldKyQvXG52YXIgaXNpcCA9IGlwYWRkci5pc1ZhbGlkXG52YXIgcGFyc2VpcCA9IGlwYWRkci5wYXJzZVxuXG4vKipcbiAqIFByZS1kZWZpbmVkIElQIHJhbmdlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIElQX1JBTkdFUyA9IHtcbiAgbGlua2xvY2FsOiBbJzE2OS4yNTQuMC4wLzE2JywgJ2ZlODA6Oi8xMCddLFxuICBsb29wYmFjazogWycxMjcuMC4wLjEvOCcsICc6OjEvMTI4J10sXG4gIHVuaXF1ZWxvY2FsOiBbJzEwLjAuMC4wLzgnLCAnMTcyLjE2LjAuMC8xMicsICcxOTIuMTY4LjAuMC8xNicsICdmYzAwOjovNyddXG59XG5cbi8qKlxuICogR2V0IGFsbCBhZGRyZXNzZXMgaW4gdGhlIHJlcXVlc3QsIG9wdGlvbmFsbHkgc3RvcHBpbmdcbiAqIGF0IHRoZSBmaXJzdCB1bnRydXN0ZWQuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHJlcXVlc3RcbiAqIEBwYXJhbSB7RnVuY3Rpb258QXJyYXl8U3RyaW5nfSBbdHJ1c3RdXG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gYWxsYWRkcnMgKHJlcSwgdHJ1c3QpIHtcbiAgLy8gZ2V0IGFkZHJlc3Nlc1xuICB2YXIgYWRkcnMgPSBmb3J3YXJkZWQocmVxKVxuXG4gIGlmICghdHJ1c3QpIHtcbiAgICAvLyBSZXR1cm4gYWxsIGFkZHJlc3Nlc1xuICAgIHJldHVybiBhZGRyc1xuICB9XG5cbiAgaWYgKHR5cGVvZiB0cnVzdCAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRydXN0ID0gY29tcGlsZSh0cnVzdClcbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYWRkcnMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgaWYgKHRydXN0KGFkZHJzW2ldLCBpKSkgY29udGludWVcblxuICAgIGFkZHJzLmxlbmd0aCA9IGkgKyAxXG4gIH1cblxuICByZXR1cm4gYWRkcnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGFyZ3VtZW50IGludG8gdHJ1c3QgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHtBcnJheXxTdHJpbmd9IHZhbFxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjb21waWxlICh2YWwpIHtcbiAgaWYgKCF2YWwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBpcyByZXF1aXJlZCcpXG4gIH1cblxuICB2YXIgdHJ1c3RcblxuICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycpIHtcbiAgICB0cnVzdCA9IFt2YWxdXG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgdHJ1c3QgPSB2YWwuc2xpY2UoKVxuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3Vuc3VwcG9ydGVkIHRydXN0IGFyZ3VtZW50JylcbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdHJ1c3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YWwgPSB0cnVzdFtpXVxuXG4gICAgaWYgKCFJUF9SQU5HRVMuaGFzT3duUHJvcGVydHkodmFsKSkge1xuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICAvLyBTcGxpY2UgaW4gcHJlLWRlZmluZWQgcmFuZ2VcbiAgICB2YWwgPSBJUF9SQU5HRVNbdmFsXVxuICAgIHRydXN0LnNwbGljZS5hcHBseSh0cnVzdCwgW2ksIDFdLmNvbmNhdCh2YWwpKVxuICAgIGkgKz0gdmFsLmxlbmd0aCAtIDFcbiAgfVxuXG4gIHJldHVybiBjb21waWxlVHJ1c3QoY29tcGlsZVJhbmdlU3VibmV0cyh0cnVzdCkpXG59XG5cbi8qKlxuICogQ29tcGlsZSBgYXJyYCBlbGVtZW50cyBpbnRvIHJhbmdlIHN1Ym5ldHMuXG4gKlxuICogQHBhcmFtIHtBcnJheX0gYXJyXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNvbXBpbGVSYW5nZVN1Ym5ldHMgKGFycikge1xuICB2YXIgcmFuZ2VTdWJuZXRzID0gbmV3IEFycmF5KGFyci5sZW5ndGgpXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcbiAgICByYW5nZVN1Ym5ldHNbaV0gPSBwYXJzZWlwTm90YXRpb24oYXJyW2ldKVxuICB9XG5cbiAgcmV0dXJuIHJhbmdlU3VibmV0c1xufVxuXG4vKipcbiAqIENvbXBpbGUgcmFuZ2Ugc3VibmV0IGFycmF5IGludG8gdHJ1c3QgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHtBcnJheX0gcmFuZ2VTdWJuZXRzXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNvbXBpbGVUcnVzdCAocmFuZ2VTdWJuZXRzKSB7XG4gIC8vIFJldHVybiBvcHRpbWl6ZWQgZnVuY3Rpb24gYmFzZWQgb24gbGVuZ3RoXG4gIHZhciBsZW4gPSByYW5nZVN1Ym5ldHMubGVuZ3RoXG4gIHJldHVybiBsZW4gPT09IDBcbiAgICA/IHRydXN0Tm9uZVxuICAgIDogbGVuID09PSAxXG4gICAgICA/IHRydXN0U2luZ2xlKHJhbmdlU3VibmV0c1swXSlcbiAgICAgIDogdHJ1c3RNdWx0aShyYW5nZVN1Ym5ldHMpXG59XG5cbi8qKlxuICogUGFyc2UgSVAgbm90YXRpb24gc3RyaW5nIGludG8gcmFuZ2Ugc3VibmV0LlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBub3RlXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlaXBOb3RhdGlvbiAobm90ZSkge1xuICB2YXIgcG9zID0gbm90ZS5sYXN0SW5kZXhPZignLycpXG4gIHZhciBzdHIgPSBwb3MgIT09IC0xXG4gICAgPyBub3RlLnN1YnN0cmluZygwLCBwb3MpXG4gICAgOiBub3RlXG5cbiAgaWYgKCFpc2lwKHN0cikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIElQIGFkZHJlc3M6ICcgKyBzdHIpXG4gIH1cblxuICB2YXIgaXAgPSBwYXJzZWlwKHN0cilcblxuICBpZiAocG9zID09PSAtMSAmJiBpcC5raW5kKCkgPT09ICdpcHY2JyAmJiBpcC5pc0lQdjRNYXBwZWRBZGRyZXNzKCkpIHtcbiAgICAvLyBTdG9yZSBhcyBJUHY0XG4gICAgaXAgPSBpcC50b0lQdjRBZGRyZXNzKClcbiAgfVxuXG4gIHZhciBtYXggPSBpcC5raW5kKCkgPT09ICdpcHY2J1xuICAgID8gMTI4XG4gICAgOiAzMlxuXG4gIHZhciByYW5nZSA9IHBvcyAhPT0gLTFcbiAgICA/IG5vdGUuc3Vic3RyaW5nKHBvcyArIDEsIG5vdGUubGVuZ3RoKVxuICAgIDogbnVsbFxuXG4gIGlmIChyYW5nZSA9PT0gbnVsbCkge1xuICAgIHJhbmdlID0gbWF4XG4gIH0gZWxzZSBpZiAoRElHSVRfUkVHRVhQLnRlc3QocmFuZ2UpKSB7XG4gICAgcmFuZ2UgPSBwYXJzZUludChyYW5nZSwgMTApXG4gIH0gZWxzZSBpZiAoaXAua2luZCgpID09PSAnaXB2NCcgJiYgaXNpcChyYW5nZSkpIHtcbiAgICByYW5nZSA9IHBhcnNlTmV0bWFzayhyYW5nZSlcbiAgfSBlbHNlIHtcbiAgICByYW5nZSA9IG51bGxcbiAgfVxuXG4gIGlmIChyYW5nZSA8PSAwIHx8IHJhbmdlID4gbWF4KSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW52YWxpZCByYW5nZSBvbiBhZGRyZXNzOiAnICsgbm90ZSlcbiAgfVxuXG4gIHJldHVybiBbaXAsIHJhbmdlXVxufVxuXG4vKipcbiAqIFBhcnNlIG5ldG1hc2sgc3RyaW5nIGludG8gQ0lEUiByYW5nZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmV0bWFza1xuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZU5ldG1hc2sgKG5ldG1hc2spIHtcbiAgdmFyIGlwID0gcGFyc2VpcChuZXRtYXNrKVxuICB2YXIga2luZCA9IGlwLmtpbmQoKVxuXG4gIHJldHVybiBraW5kID09PSAnaXB2NCdcbiAgICA/IGlwLnByZWZpeExlbmd0aEZyb21TdWJuZXRNYXNrKClcbiAgICA6IG51bGxcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgYWRkcmVzcyBvZiBwcm94aWVkIHJlcXVlc3QuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHJlcXVlc3RcbiAqIEBwYXJhbSB7RnVuY3Rpb258QXJyYXl8U3RyaW5nfSB0cnVzdFxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHByb3h5YWRkciAocmVxLCB0cnVzdCkge1xuICBpZiAoIXJlcSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3JlcSBhcmd1bWVudCBpcyByZXF1aXJlZCcpXG4gIH1cblxuICBpZiAoIXRydXN0KSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcigndHJ1c3QgYXJndW1lbnQgaXMgcmVxdWlyZWQnKVxuICB9XG5cbiAgdmFyIGFkZHJzID0gYWxsYWRkcnMocmVxLCB0cnVzdClcbiAgdmFyIGFkZHIgPSBhZGRyc1thZGRycy5sZW5ndGggLSAxXVxuXG4gIHJldHVybiBhZGRyXG59XG5cbi8qKlxuICogU3RhdGljIHRydXN0IGZ1bmN0aW9uIHRvIHRydXN0IG5vdGhpbmcuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiB0cnVzdE5vbmUgKCkge1xuICByZXR1cm4gZmFsc2Vcbn1cblxuLyoqXG4gKiBDb21waWxlIHRydXN0IGZ1bmN0aW9uIGZvciBtdWx0aXBsZSBzdWJuZXRzLlxuICpcbiAqIEBwYXJhbSB7QXJyYXl9IHN1Ym5ldHNcbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gdHJ1c3RNdWx0aSAoc3VibmV0cykge1xuICByZXR1cm4gZnVuY3Rpb24gdHJ1c3QgKGFkZHIpIHtcbiAgICBpZiAoIWlzaXAoYWRkcikpIHJldHVybiBmYWxzZVxuXG4gICAgdmFyIGlwID0gcGFyc2VpcChhZGRyKVxuICAgIHZhciBpcGNvbnZcbiAgICB2YXIga2luZCA9IGlwLmtpbmQoKVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdWJuZXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc3VibmV0ID0gc3VibmV0c1tpXVxuICAgICAgdmFyIHN1Ym5ldGlwID0gc3VibmV0WzBdXG4gICAgICB2YXIgc3VibmV0a2luZCA9IHN1Ym5ldGlwLmtpbmQoKVxuICAgICAgdmFyIHN1Ym5ldHJhbmdlID0gc3VibmV0WzFdXG4gICAgICB2YXIgdHJ1c3RlZCA9IGlwXG5cbiAgICAgIGlmIChraW5kICE9PSBzdWJuZXRraW5kKSB7XG4gICAgICAgIGlmIChzdWJuZXRraW5kID09PSAnaXB2NCcgJiYgIWlwLmlzSVB2NE1hcHBlZEFkZHJlc3MoKSkge1xuICAgICAgICAgIC8vIEluY29tcGF0aWJsZSBJUCBhZGRyZXNzZXNcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFpcGNvbnYpIHtcbiAgICAgICAgICAvLyBDb252ZXJ0IElQIHRvIG1hdGNoIHN1Ym5ldCBJUCBraW5kXG4gICAgICAgICAgaXBjb252ID0gc3VibmV0a2luZCA9PT0gJ2lwdjQnXG4gICAgICAgICAgICA/IGlwLnRvSVB2NEFkZHJlc3MoKVxuICAgICAgICAgICAgOiBpcC50b0lQdjRNYXBwZWRBZGRyZXNzKClcbiAgICAgICAgfVxuXG4gICAgICAgIHRydXN0ZWQgPSBpcGNvbnZcbiAgICAgIH1cblxuICAgICAgaWYgKHRydXN0ZWQubWF0Y2goc3VibmV0aXAsIHN1Ym5ldHJhbmdlKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZVxuICB9XG59XG5cbi8qKlxuICogQ29tcGlsZSB0cnVzdCBmdW5jdGlvbiBmb3Igc2luZ2xlIHN1Ym5ldC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gc3VibmV0XG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHRydXN0U2luZ2xlIChzdWJuZXQpIHtcbiAgdmFyIHN1Ym5ldGlwID0gc3VibmV0WzBdXG4gIHZhciBzdWJuZXRraW5kID0gc3VibmV0aXAua2luZCgpXG4gIHZhciBzdWJuZXRpc2lwdjQgPSBzdWJuZXRraW5kID09PSAnaXB2NCdcbiAgdmFyIHN1Ym5ldHJhbmdlID0gc3VibmV0WzFdXG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHRydXN0IChhZGRyKSB7XG4gICAgaWYgKCFpc2lwKGFkZHIpKSByZXR1cm4gZmFsc2VcblxuICAgIHZhciBpcCA9IHBhcnNlaXAoYWRkcilcbiAgICB2YXIga2luZCA9IGlwLmtpbmQoKVxuXG4gICAgaWYgKGtpbmQgIT09IHN1Ym5ldGtpbmQpIHtcbiAgICAgIGlmIChzdWJuZXRpc2lwdjQgJiYgIWlwLmlzSVB2NE1hcHBlZEFkZHJlc3MoKSkge1xuICAgICAgICAvLyBJbmNvbXBhdGlibGUgSVAgYWRkcmVzc2VzXG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfVxuXG4gICAgICAvLyBDb252ZXJ0IElQIHRvIG1hdGNoIHN1Ym5ldCBJUCBraW5kXG4gICAgICBpcCA9IHN1Ym5ldGlzaXB2NFxuICAgICAgICA/IGlwLnRvSVB2NEFkZHJlc3MoKVxuICAgICAgICA6IGlwLnRvSVB2NE1hcHBlZEFkZHJlc3MoKVxuICAgIH1cblxuICAgIHJldHVybiBpcC5tYXRjaChzdWJuZXRpcCwgc3VibmV0cmFuZ2UpXG4gIH1cbn1cbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obW9kdWxlKSB7XG5cdGlmICghbW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdG1vZHVsZS5kZXByZWNhdGUgPSBmdW5jdGlvbigpIHt9O1xuXHRcdG1vZHVsZS5wYXRocyA9IFtdO1xuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxuXHRcdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiIsIi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xuXG52YXIgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG5cbi8qKlxuICogU2lnbiB0aGUgZ2l2ZW4gYHZhbGAgd2l0aCBgc2VjcmV0YC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdmFsXG4gKiBAcGFyYW0ge1N0cmluZ30gc2VjcmV0XG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLnNpZ24gPSBmdW5jdGlvbih2YWwsIHNlY3JldCl7XG4gIGlmICgnc3RyaW5nJyAhPSB0eXBlb2YgdmFsKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ29va2llIHZhbHVlIG11c3QgYmUgcHJvdmlkZWQgYXMgYSBzdHJpbmcuXCIpO1xuICBpZiAoJ3N0cmluZycgIT0gdHlwZW9mIHNlY3JldCkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlNlY3JldCBzdHJpbmcgbXVzdCBiZSBwcm92aWRlZC5cIik7XG4gIHJldHVybiB2YWwgKyAnLicgKyBjcnlwdG9cbiAgICAuY3JlYXRlSG1hYygnc2hhMjU2Jywgc2VjcmV0KVxuICAgIC51cGRhdGUodmFsKVxuICAgIC5kaWdlc3QoJ2Jhc2U2NCcpXG4gICAgLnJlcGxhY2UoL1xcPSskLywgJycpO1xufTtcblxuLyoqXG4gKiBVbnNpZ24gYW5kIGRlY29kZSB0aGUgZ2l2ZW4gYHZhbGAgd2l0aCBgc2VjcmV0YCxcbiAqIHJldHVybmluZyBgZmFsc2VgIGlmIHRoZSBzaWduYXR1cmUgaXMgaW52YWxpZC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdmFsXG4gKiBAcGFyYW0ge1N0cmluZ30gc2VjcmV0XG4gKiBAcmV0dXJuIHtTdHJpbmd8Qm9vbGVhbn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmV4cG9ydHMudW5zaWduID0gZnVuY3Rpb24odmFsLCBzZWNyZXQpe1xuICBpZiAoJ3N0cmluZycgIT0gdHlwZW9mIHZhbCkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlNpZ25lZCBjb29raWUgc3RyaW5nIG11c3QgYmUgcHJvdmlkZWQuXCIpO1xuICBpZiAoJ3N0cmluZycgIT0gdHlwZW9mIHNlY3JldCkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlNlY3JldCBzdHJpbmcgbXVzdCBiZSBwcm92aWRlZC5cIik7XG4gIHZhciBzdHIgPSB2YWwuc2xpY2UoMCwgdmFsLmxhc3RJbmRleE9mKCcuJykpXG4gICAgLCBtYWMgPSBleHBvcnRzLnNpZ24oc3RyLCBzZWNyZXQpO1xuICBcbiAgcmV0dXJuIHNoYTEobWFjKSA9PSBzaGExKHZhbCkgPyBzdHIgOiBmYWxzZTtcbn07XG5cbi8qKlxuICogUHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHNoYTEoc3RyKXtcbiAgcmV0dXJuIGNyeXB0by5jcmVhdGVIYXNoKCdzaGExJykudXBkYXRlKHN0cikuZGlnZXN0KCdoZXgnKTtcbn1cbiIsIi8qIVxuICogY29va2llXG4gKiBDb3B5cmlnaHQoYykgMjAxMi0yMDE0IFJvbWFuIFNodHlsbWFuXG4gKiBDb3B5cmlnaHQoYykgMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcbmV4cG9ydHMuc2VyaWFsaXplID0gc2VyaWFsaXplO1xuXG4vKipcbiAqIE1vZHVsZSB2YXJpYWJsZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBkZWNvZGUgPSBkZWNvZGVVUklDb21wb25lbnQ7XG52YXIgZW5jb2RlID0gZW5jb2RlVVJJQ29tcG9uZW50O1xudmFyIHBhaXJTcGxpdFJlZ0V4cCA9IC87ICovO1xuXG4vKipcbiAqIFJlZ0V4cCB0byBtYXRjaCBmaWVsZC1jb250ZW50IGluIFJGQyA3MjMwIHNlYyAzLjJcbiAqXG4gKiBmaWVsZC1jb250ZW50ID0gZmllbGQtdmNoYXIgWyAxKiggU1AgLyBIVEFCICkgZmllbGQtdmNoYXIgXVxuICogZmllbGQtdmNoYXIgICA9IFZDSEFSIC8gb2JzLXRleHRcbiAqIG9icy10ZXh0ICAgICAgPSAleDgwLUZGXG4gKi9cblxudmFyIGZpZWxkQ29udGVudFJlZ0V4cCA9IC9eW1xcdTAwMDlcXHUwMDIwLVxcdTAwN2VcXHUwMDgwLVxcdTAwZmZdKyQvO1xuXG4vKipcbiAqIFBhcnNlIGEgY29va2llIGhlYWRlci5cbiAqXG4gKiBQYXJzZSB0aGUgZ2l2ZW4gY29va2llIGhlYWRlciBzdHJpbmcgaW50byBhbiBvYmplY3RcbiAqIFRoZSBvYmplY3QgaGFzIHRoZSB2YXJpb3VzIGNvb2tpZXMgYXMga2V5cyhuYW1lcykgPT4gdmFsdWVzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICogQHJldHVybiB7b2JqZWN0fVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHN0ciwgb3B0aW9ucykge1xuICBpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBzdHIgbXVzdCBiZSBhIHN0cmluZycpO1xuICB9XG5cbiAgdmFyIG9iaiA9IHt9XG4gIHZhciBvcHQgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgcGFpcnMgPSBzdHIuc3BsaXQocGFpclNwbGl0UmVnRXhwKTtcbiAgdmFyIGRlYyA9IG9wdC5kZWNvZGUgfHwgZGVjb2RlO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGFpcnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgcGFpciA9IHBhaXJzW2ldO1xuICAgIHZhciBlcV9pZHggPSBwYWlyLmluZGV4T2YoJz0nKTtcblxuICAgIC8vIHNraXAgdGhpbmdzIHRoYXQgZG9uJ3QgbG9vayBsaWtlIGtleT12YWx1ZVxuICAgIGlmIChlcV9pZHggPCAwKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICB2YXIga2V5ID0gcGFpci5zdWJzdHIoMCwgZXFfaWR4KS50cmltKClcbiAgICB2YXIgdmFsID0gcGFpci5zdWJzdHIoKytlcV9pZHgsIHBhaXIubGVuZ3RoKS50cmltKCk7XG5cbiAgICAvLyBxdW90ZWQgdmFsdWVzXG4gICAgaWYgKCdcIicgPT0gdmFsWzBdKSB7XG4gICAgICB2YWwgPSB2YWwuc2xpY2UoMSwgLTEpO1xuICAgIH1cblxuICAgIC8vIG9ubHkgYXNzaWduIG9uY2VcbiAgICBpZiAodW5kZWZpbmVkID09IG9ialtrZXldKSB7XG4gICAgICBvYmpba2V5XSA9IHRyeURlY29kZSh2YWwsIGRlYyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuLyoqXG4gKiBTZXJpYWxpemUgZGF0YSBpbnRvIGEgY29va2llIGhlYWRlci5cbiAqXG4gKiBTZXJpYWxpemUgdGhlIGEgbmFtZSB2YWx1ZSBwYWlyIGludG8gYSBjb29raWUgc3RyaW5nIHN1aXRhYmxlIGZvclxuICogaHR0cCBoZWFkZXJzLiBBbiBvcHRpb25hbCBvcHRpb25zIG9iamVjdCBzcGVjaWZpZWQgY29va2llIHBhcmFtZXRlcnMuXG4gKlxuICogc2VyaWFsaXplKCdmb28nLCAnYmFyJywgeyBodHRwT25seTogdHJ1ZSB9KVxuICogICA9PiBcImZvbz1iYXI7IGh0dHBPbmx5XCJcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICogQHBhcmFtIHtzdHJpbmd9IHZhbFxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICogQHJldHVybiB7c3RyaW5nfVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHNlcmlhbGl6ZShuYW1lLCB2YWwsIG9wdGlvbnMpIHtcbiAgdmFyIG9wdCA9IG9wdGlvbnMgfHwge307XG4gIHZhciBlbmMgPSBvcHQuZW5jb2RlIHx8IGVuY29kZTtcblxuICBpZiAodHlwZW9mIGVuYyAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBlbmNvZGUgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgaWYgKCFmaWVsZENvbnRlbnRSZWdFeHAudGVzdChuYW1lKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IG5hbWUgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgdmFyIHZhbHVlID0gZW5jKHZhbCk7XG5cbiAgaWYgKHZhbHVlICYmICFmaWVsZENvbnRlbnRSZWdFeHAudGVzdCh2YWx1ZSkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCB2YWwgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgdmFyIHN0ciA9IG5hbWUgKyAnPScgKyB2YWx1ZTtcblxuICBpZiAobnVsbCAhPSBvcHQubWF4QWdlKSB7XG4gICAgdmFyIG1heEFnZSA9IG9wdC5tYXhBZ2UgLSAwO1xuICAgIGlmIChpc05hTihtYXhBZ2UpKSB0aHJvdyBuZXcgRXJyb3IoJ21heEFnZSBzaG91bGQgYmUgYSBOdW1iZXInKTtcbiAgICBzdHIgKz0gJzsgTWF4LUFnZT0nICsgTWF0aC5mbG9vcihtYXhBZ2UpO1xuICB9XG5cbiAgaWYgKG9wdC5kb21haW4pIHtcbiAgICBpZiAoIWZpZWxkQ29udGVudFJlZ0V4cC50ZXN0KG9wdC5kb21haW4pKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gZG9tYWluIGlzIGludmFsaWQnKTtcbiAgICB9XG5cbiAgICBzdHIgKz0gJzsgRG9tYWluPScgKyBvcHQuZG9tYWluO1xuICB9XG5cbiAgaWYgKG9wdC5wYXRoKSB7XG4gICAgaWYgKCFmaWVsZENvbnRlbnRSZWdFeHAudGVzdChvcHQucGF0aCkpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBwYXRoIGlzIGludmFsaWQnKTtcbiAgICB9XG5cbiAgICBzdHIgKz0gJzsgUGF0aD0nICsgb3B0LnBhdGg7XG4gIH1cblxuICBpZiAob3B0LmV4cGlyZXMpIHtcbiAgICBpZiAodHlwZW9mIG9wdC5leHBpcmVzLnRvVVRDU3RyaW5nICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gZXhwaXJlcyBpcyBpbnZhbGlkJyk7XG4gICAgfVxuXG4gICAgc3RyICs9ICc7IEV4cGlyZXM9JyArIG9wdC5leHBpcmVzLnRvVVRDU3RyaW5nKCk7XG4gIH1cblxuICBpZiAob3B0Lmh0dHBPbmx5KSB7XG4gICAgc3RyICs9ICc7IEh0dHBPbmx5JztcbiAgfVxuXG4gIGlmIChvcHQuc2VjdXJlKSB7XG4gICAgc3RyICs9ICc7IFNlY3VyZSc7XG4gIH1cblxuICBpZiAob3B0LnNhbWVTaXRlKSB7XG4gICAgdmFyIHNhbWVTaXRlID0gdHlwZW9mIG9wdC5zYW1lU2l0ZSA9PT0gJ3N0cmluZydcbiAgICAgID8gb3B0LnNhbWVTaXRlLnRvTG93ZXJDYXNlKCkgOiBvcHQuc2FtZVNpdGU7XG5cbiAgICBzd2l0Y2ggKHNhbWVTaXRlKSB7XG4gICAgICBjYXNlIHRydWU6XG4gICAgICAgIHN0ciArPSAnOyBTYW1lU2l0ZT1TdHJpY3QnO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2xheCc6XG4gICAgICAgIHN0ciArPSAnOyBTYW1lU2l0ZT1MYXgnO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3N0cmljdCc6XG4gICAgICAgIHN0ciArPSAnOyBTYW1lU2l0ZT1TdHJpY3QnO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBzYW1lU2l0ZSBpcyBpbnZhbGlkJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHN0cjtcbn1cblxuLyoqXG4gKiBUcnkgZGVjb2RpbmcgYSBzdHJpbmcgdXNpbmcgYSBkZWNvZGluZyBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBkZWNvZGVcbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gdHJ5RGVjb2RlKHN0ciwgZGVjb2RlKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRlY29kZShzdHIpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHN0cjtcbiAgfVxufVxuIiwiJ3VzZSBzdHJpY3QnXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMC0yMDE3IEJyaWFuIENhcmxzb24gKGJyaWFuLm0uY2FybHNvbkBnbWFpbC5jb20pXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogUkVBRE1FLm1kIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJylcbnZhciBDbGllbnQgPSByZXF1aXJlKCcuL2NsaWVudCcpXG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuL2RlZmF1bHRzJylcbnZhciBDb25uZWN0aW9uID0gcmVxdWlyZSgnLi9jb25uZWN0aW9uJylcbnZhciBQb29sID0gcmVxdWlyZSgncGctcG9vbCcpXG5cbmNvbnN0IHBvb2xGYWN0b3J5ID0gKENsaWVudCkgPT4ge1xuICB2YXIgQm91bmRQb29sID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICB2YXIgY29uZmlnID0gT2JqZWN0LmFzc2lnbih7IENsaWVudDogQ2xpZW50IH0sIG9wdGlvbnMpXG4gICAgcmV0dXJuIG5ldyBQb29sKGNvbmZpZylcbiAgfVxuXG4gIHV0aWwuaW5oZXJpdHMoQm91bmRQb29sLCBQb29sKVxuXG4gIHJldHVybiBCb3VuZFBvb2xcbn1cblxudmFyIFBHID0gZnVuY3Rpb24gKGNsaWVudENvbnN0cnVjdG9yKSB7XG4gIHRoaXMuZGVmYXVsdHMgPSBkZWZhdWx0c1xuICB0aGlzLkNsaWVudCA9IGNsaWVudENvbnN0cnVjdG9yXG4gIHRoaXMuUXVlcnkgPSB0aGlzLkNsaWVudC5RdWVyeVxuICB0aGlzLlBvb2wgPSBwb29sRmFjdG9yeSh0aGlzLkNsaWVudClcbiAgdGhpcy5fcG9vbHMgPSBbXVxuICB0aGlzLkNvbm5lY3Rpb24gPSBDb25uZWN0aW9uXG4gIHRoaXMudHlwZXMgPSByZXF1aXJlKCdwZy10eXBlcycpXG59XG5cbmlmICh0eXBlb2YgcHJvY2Vzcy5lbnYuTk9ERV9QR19GT1JDRV9OQVRJVkUgIT09ICd1bmRlZmluZWQnKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gbmV3IFBHKHJlcXVpcmUoJy4vbmF0aXZlJykpXG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IG5ldyBQRyhDbGllbnQpXG5cbiAgLy8gbGF6eSByZXF1aXJlIG5hdGl2ZSBtb2R1bGUuLi50aGUgbmF0aXZlIG1vZHVsZSBtYXkgbm90IGhhdmUgaW5zdGFsbGVkXG4gIG1vZHVsZS5leHBvcnRzLl9fZGVmaW5lR2V0dGVyX18oJ25hdGl2ZScsIGZ1bmN0aW9uICgpIHtcbiAgICBkZWxldGUgbW9kdWxlLmV4cG9ydHMubmF0aXZlXG4gICAgdmFyIG5hdGl2ZSA9IG51bGxcbiAgICB0cnkge1xuICAgICAgbmF0aXZlID0gbmV3IFBHKHJlcXVpcmUoJy4vbmF0aXZlJykpXG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBpZiAoZXJyLmNvZGUgIT09ICdNT0RVTEVfTk9UX0ZPVU5EJykge1xuICAgICAgICB0aHJvdyBlcnJcbiAgICAgIH1cbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyLm1lc3NhZ2UpXG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzLm5hdGl2ZSA9IG5hdGl2ZVxuICAgIHJldHVybiBuYXRpdmVcbiAgfSlcbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG5leHBvcnRzLnBhcnNlID0gZnVuY3Rpb24gKHNvdXJjZSwgdHJhbnNmb3JtKSB7XG4gIHJldHVybiBuZXcgQXJyYXlQYXJzZXIoc291cmNlLCB0cmFuc2Zvcm0pLnBhcnNlKClcbn1cblxuY2xhc3MgQXJyYXlQYXJzZXIge1xuICBjb25zdHJ1Y3RvciAoc291cmNlLCB0cmFuc2Zvcm0pIHtcbiAgICB0aGlzLnNvdXJjZSA9IHNvdXJjZVxuICAgIHRoaXMudHJhbnNmb3JtID0gdHJhbnNmb3JtIHx8IGlkZW50aXR5XG4gICAgdGhpcy5wb3NpdGlvbiA9IDBcbiAgICB0aGlzLmVudHJpZXMgPSBbXVxuICAgIHRoaXMucmVjb3JkZWQgPSBbXVxuICAgIHRoaXMuZGltZW5zaW9uID0gMFxuICB9XG5cbiAgaXNFb2YgKCkge1xuICAgIHJldHVybiB0aGlzLnBvc2l0aW9uID49IHRoaXMuc291cmNlLmxlbmd0aFxuICB9XG5cbiAgbmV4dENoYXJhY3RlciAoKSB7XG4gICAgdmFyIGNoYXJhY3RlciA9IHRoaXMuc291cmNlW3RoaXMucG9zaXRpb24rK11cbiAgICBpZiAoY2hhcmFjdGVyID09PSAnXFxcXCcpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHZhbHVlOiB0aGlzLnNvdXJjZVt0aGlzLnBvc2l0aW9uKytdLFxuICAgICAgICBlc2NhcGVkOiB0cnVlXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICB2YWx1ZTogY2hhcmFjdGVyLFxuICAgICAgZXNjYXBlZDogZmFsc2VcbiAgICB9XG4gIH1cblxuICByZWNvcmQgKGNoYXJhY3Rlcikge1xuICAgIHRoaXMucmVjb3JkZWQucHVzaChjaGFyYWN0ZXIpXG4gIH1cblxuICBuZXdFbnRyeSAoaW5jbHVkZUVtcHR5KSB7XG4gICAgdmFyIGVudHJ5XG4gICAgaWYgKHRoaXMucmVjb3JkZWQubGVuZ3RoID4gMCB8fCBpbmNsdWRlRW1wdHkpIHtcbiAgICAgIGVudHJ5ID0gdGhpcy5yZWNvcmRlZC5qb2luKCcnKVxuICAgICAgaWYgKGVudHJ5ID09PSAnTlVMTCcgJiYgIWluY2x1ZGVFbXB0eSkge1xuICAgICAgICBlbnRyeSA9IG51bGxcbiAgICAgIH1cbiAgICAgIGlmIChlbnRyeSAhPT0gbnVsbCkgZW50cnkgPSB0aGlzLnRyYW5zZm9ybShlbnRyeSlcbiAgICAgIHRoaXMuZW50cmllcy5wdXNoKGVudHJ5KVxuICAgICAgdGhpcy5yZWNvcmRlZCA9IFtdXG4gICAgfVxuICB9XG5cbiAgY29uc3VtZURpbWVuc2lvbnMgKCkge1xuICAgIGlmICh0aGlzLnNvdXJjZVswXSA9PT0gJ1snKSB7XG4gICAgICB3aGlsZSAoIXRoaXMuaXNFb2YoKSkge1xuICAgICAgICB2YXIgY2hhciA9IHRoaXMubmV4dENoYXJhY3RlcigpXG4gICAgICAgIGlmIChjaGFyLnZhbHVlID09PSAnPScpIGJyZWFrXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcGFyc2UgKG5lc3RlZCkge1xuICAgIHZhciBjaGFyYWN0ZXIsIHBhcnNlciwgcXVvdGVcbiAgICB0aGlzLmNvbnN1bWVEaW1lbnNpb25zKClcbiAgICB3aGlsZSAoIXRoaXMuaXNFb2YoKSkge1xuICAgICAgY2hhcmFjdGVyID0gdGhpcy5uZXh0Q2hhcmFjdGVyKClcbiAgICAgIGlmIChjaGFyYWN0ZXIudmFsdWUgPT09ICd7JyAmJiAhcXVvdGUpIHtcbiAgICAgICAgdGhpcy5kaW1lbnNpb24rK1xuICAgICAgICBpZiAodGhpcy5kaW1lbnNpb24gPiAxKSB7XG4gICAgICAgICAgcGFyc2VyID0gbmV3IEFycmF5UGFyc2VyKHRoaXMuc291cmNlLnN1YnN0cih0aGlzLnBvc2l0aW9uIC0gMSksIHRoaXMudHJhbnNmb3JtKVxuICAgICAgICAgIHRoaXMuZW50cmllcy5wdXNoKHBhcnNlci5wYXJzZSh0cnVlKSlcbiAgICAgICAgICB0aGlzLnBvc2l0aW9uICs9IHBhcnNlci5wb3NpdGlvbiAtIDJcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChjaGFyYWN0ZXIudmFsdWUgPT09ICd9JyAmJiAhcXVvdGUpIHtcbiAgICAgICAgdGhpcy5kaW1lbnNpb24tLVxuICAgICAgICBpZiAoIXRoaXMuZGltZW5zaW9uKSB7XG4gICAgICAgICAgdGhpcy5uZXdFbnRyeSgpXG4gICAgICAgICAgaWYgKG5lc3RlZCkgcmV0dXJuIHRoaXMuZW50cmllc1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGNoYXJhY3Rlci52YWx1ZSA9PT0gJ1wiJyAmJiAhY2hhcmFjdGVyLmVzY2FwZWQpIHtcbiAgICAgICAgaWYgKHF1b3RlKSB0aGlzLm5ld0VudHJ5KHRydWUpXG4gICAgICAgIHF1b3RlID0gIXF1b3RlXG4gICAgICB9IGVsc2UgaWYgKGNoYXJhY3Rlci52YWx1ZSA9PT0gJywnICYmICFxdW90ZSkge1xuICAgICAgICB0aGlzLm5ld0VudHJ5KClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucmVjb3JkKGNoYXJhY3Rlci52YWx1ZSlcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHRoaXMuZGltZW5zaW9uICE9PSAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FycmF5IGRpbWVuc2lvbiBub3QgYmFsYW5jZWQnKVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy5lbnRyaWVzXG4gIH1cbn1cblxuZnVuY3Rpb24gaWRlbnRpdHkgKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZVxufVxuIiwidmFyIGFycmF5ID0gcmVxdWlyZSgncG9zdGdyZXMtYXJyYXknKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNyZWF0ZTogZnVuY3Rpb24gKHNvdXJjZSwgdHJhbnNmb3JtKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhcnNlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGFycmF5LnBhcnNlKHNvdXJjZSwgdHJhbnNmb3JtKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnXG5cbnZhciBEQVRFX1RJTUUgPSAvKFxcZHsxLH0pLShcXGR7Mn0pLShcXGR7Mn0pIChcXGR7Mn0pOihcXGR7Mn0pOihcXGR7Mn0pKFxcLlxcZHsxLH0pPy9cbnZhciBEQVRFID0gL14oXFxkezEsfSktKFxcZHsyfSktKFxcZHsyfSkkL1xudmFyIFRJTUVfWk9ORSA9IC8oW1orLV0pKFxcZHsyfSk/Oj8oXFxkezJ9KT86PyhcXGR7Mn0pPy9cbnZhciBCQyA9IC9CQyQvXG52YXIgSU5GSU5JVFkgPSAvXi0/aW5maW5pdHkkL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHBhcnNlRGF0ZSAoaXNvRGF0ZSkge1xuICBpZiAoSU5GSU5JVFkudGVzdChpc29EYXRlKSkge1xuICAgIC8vIENhcGl0YWxpemUgdG8gSW5maW5pdHkgYmVmb3JlIHBhc3NpbmcgdG8gTnVtYmVyXG4gICAgcmV0dXJuIE51bWJlcihpc29EYXRlLnJlcGxhY2UoJ2knLCAnSScpKVxuICB9XG4gIHZhciBtYXRjaGVzID0gREFURV9USU1FLmV4ZWMoaXNvRGF0ZSlcblxuICBpZiAoIW1hdGNoZXMpIHtcbiAgICAvLyBGb3JjZSBZWVlZLU1NLUREIGRhdGVzIHRvIGJlIHBhcnNlZCBhcyBsb2NhbCB0aW1lXG4gICAgcmV0dXJuIERBVEUudGVzdChpc29EYXRlKSA/XG4gICAgICBnZXREYXRlKGlzb0RhdGUpIDpcbiAgICAgIG51bGxcbiAgfVxuXG4gIHZhciBpc0JDID0gQkMudGVzdChpc29EYXRlKVxuICB2YXIgeWVhciA9IHBhcnNlSW50KG1hdGNoZXNbMV0sIDEwKVxuICB2YXIgaXNGaXJzdENlbnR1cnkgPSB5ZWFyID4gMCAmJiB5ZWFyIDwgMTAwXG4gIHllYXIgPSAoaXNCQyA/ICctJyA6ICcnKSArIHllYXJcblxuICB2YXIgbW9udGggPSBwYXJzZUludChtYXRjaGVzWzJdLCAxMCkgLSAxXG4gIHZhciBkYXkgPSBtYXRjaGVzWzNdXG4gIHZhciBob3VyID0gcGFyc2VJbnQobWF0Y2hlc1s0XSwgMTApXG4gIHZhciBtaW51dGUgPSBwYXJzZUludChtYXRjaGVzWzVdLCAxMClcbiAgdmFyIHNlY29uZCA9IHBhcnNlSW50KG1hdGNoZXNbNl0sIDEwKVxuXG4gIHZhciBtcyA9IG1hdGNoZXNbN11cbiAgbXMgPSBtcyA/IDEwMDAgKiBwYXJzZUZsb2F0KG1zKSA6IDBcblxuICB2YXIgZGF0ZVxuICB2YXIgb2Zmc2V0ID0gdGltZVpvbmVPZmZzZXQoaXNvRGF0ZSlcbiAgaWYgKG9mZnNldCAhPSBudWxsKSB7XG4gICAgdmFyIHV0YyA9IERhdGUuVVRDKHllYXIsIG1vbnRoLCBkYXksIGhvdXIsIG1pbnV0ZSwgc2Vjb25kLCBtcylcbiAgICBkYXRlID0gbmV3IERhdGUodXRjIC0gb2Zmc2V0KVxuICB9IGVsc2Uge1xuICAgIGRhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgZGF5LCBob3VyLCBtaW51dGUsIHNlY29uZCwgbXMpXG4gIH1cblxuICBpZiAoaXNGaXJzdENlbnR1cnkpIHtcbiAgICBkYXRlLnNldFVUQ0Z1bGxZZWFyKHllYXIpXG4gIH1cblxuICByZXR1cm4gZGF0ZVxufVxuXG5mdW5jdGlvbiBnZXREYXRlIChpc29EYXRlKSB7XG4gIHZhciBtYXRjaGVzID0gREFURS5leGVjKGlzb0RhdGUpXG4gIHZhciB5ZWFyID0gcGFyc2VJbnQobWF0Y2hlc1sxXSwgMTApXG4gIHZhciBtb250aCA9IHBhcnNlSW50KG1hdGNoZXNbMl0sIDEwKSAtIDFcbiAgdmFyIGRheSA9IG1hdGNoZXNbM11cbiAgLy8gWVlZWS1NTS1ERCB3aWxsIGJlIHBhcnNlZCBhcyBsb2NhbCB0aW1lXG4gIHZhciBkYXRlID0gbmV3IERhdGUoeWVhciwgbW9udGgsIGRheSlcbiAgZGF0ZS5zZXRGdWxsWWVhcih5ZWFyKVxuICByZXR1cm4gZGF0ZVxufVxuXG4vLyBtYXRjaCB0aW1lem9uZXM6XG4vLyBaIChVVEMpXG4vLyAtMDVcbi8vICswNjozMFxuZnVuY3Rpb24gdGltZVpvbmVPZmZzZXQgKGlzb0RhdGUpIHtcbiAgdmFyIHpvbmUgPSBUSU1FX1pPTkUuZXhlYyhpc29EYXRlLnNwbGl0KCcgJylbMV0pXG4gIGlmICghem9uZSkgcmV0dXJuXG4gIHZhciB0eXBlID0gem9uZVsxXVxuXG4gIGlmICh0eXBlID09PSAnWicpIHtcbiAgICByZXR1cm4gMFxuICB9XG4gIHZhciBzaWduID0gdHlwZSA9PT0gJy0nID8gLTEgOiAxXG4gIHZhciBvZmZzZXQgPSBwYXJzZUludCh6b25lWzJdLCAxMCkgKiAzNjAwICtcbiAgICBwYXJzZUludCh6b25lWzNdIHx8IDAsIDEwKSAqIDYwICtcbiAgICBwYXJzZUludCh6b25lWzRdIHx8IDAsIDEwKVxuXG4gIHJldHVybiBvZmZzZXQgKiBzaWduICogMTAwMFxufVxuIiwiJ3VzZSBzdHJpY3QnXG5cbnZhciBleHRlbmQgPSByZXF1aXJlKCd4dGVuZC9tdXRhYmxlJylcblxubW9kdWxlLmV4cG9ydHMgPSBQb3N0Z3Jlc0ludGVydmFsXG5cbmZ1bmN0aW9uIFBvc3RncmVzSW50ZXJ2YWwgKHJhdykge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUG9zdGdyZXNJbnRlcnZhbCkpIHtcbiAgICByZXR1cm4gbmV3IFBvc3RncmVzSW50ZXJ2YWwocmF3KVxuICB9XG4gIGV4dGVuZCh0aGlzLCBwYXJzZShyYXcpKVxufVxudmFyIHByb3BlcnRpZXMgPSBbJ3NlY29uZHMnLCAnbWludXRlcycsICdob3VycycsICdkYXlzJywgJ21vbnRocycsICd5ZWFycyddXG5Qb3N0Z3Jlc0ludGVydmFsLnByb3RvdHlwZS50b1Bvc3RncmVzID0gZnVuY3Rpb24gKCkge1xuICB2YXIgZmlsdGVyZWQgPSBwcm9wZXJ0aWVzLmZpbHRlcih0aGlzLmhhc093blByb3BlcnR5LCB0aGlzKVxuXG4gIC8vIEluIGFkZGl0aW9uIHRvIGBwcm9wZXJ0aWVzYCwgd2UgbmVlZCB0byBhY2NvdW50IGZvciBmcmFjdGlvbnMgb2Ygc2Vjb25kcy5cbiAgaWYgKHRoaXMubWlsbGlzZWNvbmRzICYmIGZpbHRlcmVkLmluZGV4T2YoJ3NlY29uZHMnKSA8IDApIHtcbiAgICBmaWx0ZXJlZC5wdXNoKCdzZWNvbmRzJylcbiAgfVxuXG4gIGlmIChmaWx0ZXJlZC5sZW5ndGggPT09IDApIHJldHVybiAnMCdcbiAgcmV0dXJuIGZpbHRlcmVkXG4gICAgLm1hcChmdW5jdGlvbiAocHJvcGVydHkpIHtcbiAgICAgIHZhciB2YWx1ZSA9IHRoaXNbcHJvcGVydHldIHx8IDBcblxuICAgICAgLy8gQWNjb3VudCBmb3IgZnJhY3Rpb25hbCBwYXJ0IG9mIHNlY29uZHMsXG4gICAgICAvLyByZW1vdmUgdHJhaWxpbmcgemVyb2VzLlxuICAgICAgaWYgKHByb3BlcnR5ID09PSAnc2Vjb25kcycgJiYgdGhpcy5taWxsaXNlY29uZHMpIHtcbiAgICAgICAgdmFsdWUgPSAodmFsdWUgKyB0aGlzLm1pbGxpc2Vjb25kcyAvIDEwMDApLnRvRml4ZWQoNikucmVwbGFjZSgvXFwuPzArJC8sICcnKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdmFsdWUgKyAnICcgKyBwcm9wZXJ0eVxuICAgIH0sIHRoaXMpXG4gICAgLmpvaW4oJyAnKVxufVxuXG52YXIgcHJvcGVydGllc0lTT0VxdWl2YWxlbnQgPSB7XG4gIHllYXJzOiAnWScsXG4gIG1vbnRoczogJ00nLFxuICBkYXlzOiAnRCcsXG4gIGhvdXJzOiAnSCcsXG4gIG1pbnV0ZXM6ICdNJyxcbiAgc2Vjb25kczogJ1MnXG59XG52YXIgZGF0ZVByb3BlcnRpZXMgPSBbJ3llYXJzJywgJ21vbnRocycsICdkYXlzJ11cbnZhciB0aW1lUHJvcGVydGllcyA9IFsnaG91cnMnLCAnbWludXRlcycsICdzZWNvbmRzJ11cbi8vIGFjY29yZGluZyB0byBJU08gODYwMVxuUG9zdGdyZXNJbnRlcnZhbC5wcm90b3R5cGUudG9JU09TdHJpbmcgPSBQb3N0Z3Jlc0ludGVydmFsLnByb3RvdHlwZS50b0lTTyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGRhdGVQYXJ0ID0gZGF0ZVByb3BlcnRpZXNcbiAgICAubWFwKGJ1aWxkUHJvcGVydHksIHRoaXMpXG4gICAgLmpvaW4oJycpXG5cbiAgdmFyIHRpbWVQYXJ0ID0gdGltZVByb3BlcnRpZXNcbiAgICAubWFwKGJ1aWxkUHJvcGVydHksIHRoaXMpXG4gICAgLmpvaW4oJycpXG5cbiAgcmV0dXJuICdQJyArIGRhdGVQYXJ0ICsgJ1QnICsgdGltZVBhcnRcblxuICBmdW5jdGlvbiBidWlsZFByb3BlcnR5IChwcm9wZXJ0eSkge1xuICAgIHZhciB2YWx1ZSA9IHRoaXNbcHJvcGVydHldIHx8IDBcblxuICAgIC8vIEFjY291bnQgZm9yIGZyYWN0aW9uYWwgcGFydCBvZiBzZWNvbmRzLFxuICAgIC8vIHJlbW92ZSB0cmFpbGluZyB6ZXJvZXMuXG4gICAgaWYgKHByb3BlcnR5ID09PSAnc2Vjb25kcycgJiYgdGhpcy5taWxsaXNlY29uZHMpIHtcbiAgICAgIHZhbHVlID0gKHZhbHVlICsgdGhpcy5taWxsaXNlY29uZHMgLyAxMDAwKS50b0ZpeGVkKDYpLnJlcGxhY2UoLzArJC8sICcnKVxuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZSArIHByb3BlcnRpZXNJU09FcXVpdmFsZW50W3Byb3BlcnR5XVxuICB9XG59XG5cbnZhciBOVU1CRVIgPSAnKFsrLV0/XFxcXGQrKSdcbnZhciBZRUFSID0gTlVNQkVSICsgJ1xcXFxzK3llYXJzPydcbnZhciBNT05USCA9IE5VTUJFUiArICdcXFxccyttb25zPydcbnZhciBEQVkgPSBOVU1CRVIgKyAnXFxcXHMrZGF5cz8nXG52YXIgVElNRSA9ICcoWystXSk/KFtcXFxcZF0qKTooXFxcXGRcXFxcZCk6KFxcXFxkXFxcXGQpXFxcXC4/KFxcXFxkezEsNn0pPydcbnZhciBJTlRFUlZBTCA9IG5ldyBSZWdFeHAoW1lFQVIsIE1PTlRILCBEQVksIFRJTUVdLm1hcChmdW5jdGlvbiAocmVnZXhTdHJpbmcpIHtcbiAgcmV0dXJuICcoJyArIHJlZ2V4U3RyaW5nICsgJyk/J1xufSlcbiAgLmpvaW4oJ1xcXFxzKicpKVxuXG4vLyBQb3NpdGlvbnMgb2YgdmFsdWVzIGluIHJlZ2V4IG1hdGNoXG52YXIgcG9zaXRpb25zID0ge1xuICB5ZWFyczogMixcbiAgbW9udGhzOiA0LFxuICBkYXlzOiA2LFxuICBob3VyczogOSxcbiAgbWludXRlczogMTAsXG4gIHNlY29uZHM6IDExLFxuICBtaWxsaXNlY29uZHM6IDEyXG59XG4vLyBXZSBjYW4gdXNlIG5lZ2F0aXZlIHRpbWVcbnZhciBuZWdhdGl2ZXMgPSBbJ2hvdXJzJywgJ21pbnV0ZXMnLCAnc2Vjb25kcycsICdtaWxsaXNlY29uZHMnXVxuXG5mdW5jdGlvbiBwYXJzZU1pbGxpc2Vjb25kcyAoZnJhY3Rpb24pIHtcbiAgLy8gYWRkIG9taXR0ZWQgemVyb2VzXG4gIHZhciBtaWNyb3NlY29uZHMgPSBmcmFjdGlvbiArICcwMDAwMDAnLnNsaWNlKGZyYWN0aW9uLmxlbmd0aClcbiAgcmV0dXJuIHBhcnNlSW50KG1pY3Jvc2Vjb25kcywgMTApIC8gMTAwMFxufVxuXG5mdW5jdGlvbiBwYXJzZSAoaW50ZXJ2YWwpIHtcbiAgaWYgKCFpbnRlcnZhbCkgcmV0dXJuIHt9XG4gIHZhciBtYXRjaGVzID0gSU5URVJWQUwuZXhlYyhpbnRlcnZhbClcbiAgdmFyIGlzTmVnYXRpdmUgPSBtYXRjaGVzWzhdID09PSAnLSdcbiAgcmV0dXJuIE9iamVjdC5rZXlzKHBvc2l0aW9ucylcbiAgICAucmVkdWNlKGZ1bmN0aW9uIChwYXJzZWQsIHByb3BlcnR5KSB7XG4gICAgICB2YXIgcG9zaXRpb24gPSBwb3NpdGlvbnNbcHJvcGVydHldXG4gICAgICB2YXIgdmFsdWUgPSBtYXRjaGVzW3Bvc2l0aW9uXVxuICAgICAgLy8gbm8gZW1wdHkgc3RyaW5nXG4gICAgICBpZiAoIXZhbHVlKSByZXR1cm4gcGFyc2VkXG4gICAgICAvLyBtaWxsaXNlY29uZHMgYXJlIGFjdHVhbGx5IG1pY3Jvc2Vjb25kcyAodXAgdG8gNiBkaWdpdHMpXG4gICAgICAvLyB3aXRoIG9taXR0ZWQgdHJhaWxpbmcgemVyb2VzLlxuICAgICAgdmFsdWUgPSBwcm9wZXJ0eSA9PT0gJ21pbGxpc2Vjb25kcydcbiAgICAgICAgPyBwYXJzZU1pbGxpc2Vjb25kcyh2YWx1ZSlcbiAgICAgICAgOiBwYXJzZUludCh2YWx1ZSwgMTApXG4gICAgICAvLyBubyB6ZXJvc1xuICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuIHBhcnNlZFxuICAgICAgaWYgKGlzTmVnYXRpdmUgJiYgfm5lZ2F0aXZlcy5pbmRleE9mKHByb3BlcnR5KSkge1xuICAgICAgICB2YWx1ZSAqPSAtMVxuICAgICAgfVxuICAgICAgcGFyc2VkW3Byb3BlcnR5XSA9IHZhbHVlXG4gICAgICByZXR1cm4gcGFyc2VkXG4gICAgfSwge30pXG59XG4iLCIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUJ5dGVhIChpbnB1dCkge1xuICBpZiAoL15cXFxceC8udGVzdChpbnB1dCkpIHtcbiAgICAvLyBuZXcgJ2hleCcgc3R5bGUgcmVzcG9uc2UgKHBnID45LjApXG4gICAgcmV0dXJuIG5ldyBCdWZmZXIoaW5wdXQuc3Vic3RyKDIpLCAnaGV4JylcbiAgfVxuICB2YXIgb3V0cHV0ID0gJydcbiAgdmFyIGkgPSAwXG4gIHdoaWxlIChpIDwgaW5wdXQubGVuZ3RoKSB7XG4gICAgaWYgKGlucHV0W2ldICE9PSAnXFxcXCcpIHtcbiAgICAgIG91dHB1dCArPSBpbnB1dFtpXVxuICAgICAgKytpXG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICgvWzAtN117M30vLnRlc3QoaW5wdXQuc3Vic3RyKGkgKyAxLCAzKSkpIHtcbiAgICAgICAgb3V0cHV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQoaW5wdXQuc3Vic3RyKGkgKyAxLCAzKSwgOCkpXG4gICAgICAgIGkgKz0gNFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIGJhY2tzbGFzaGVzID0gMVxuICAgICAgICB3aGlsZSAoaSArIGJhY2tzbGFzaGVzIDwgaW5wdXQubGVuZ3RoICYmIGlucHV0W2kgKyBiYWNrc2xhc2hlc10gPT09ICdcXFxcJykge1xuICAgICAgICAgIGJhY2tzbGFzaGVzKytcbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IE1hdGguZmxvb3IoYmFja3NsYXNoZXMgLyAyKTsgKytrKSB7XG4gICAgICAgICAgb3V0cHV0ICs9ICdcXFxcJ1xuICAgICAgICB9XG4gICAgICAgIGkgKz0gTWF0aC5mbG9vcihiYWNrc2xhc2hlcyAvIDIpICogMlxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gbmV3IEJ1ZmZlcihvdXRwdXQsICdiaW5hcnknKVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vLyBzZWxlY3RlZCBzbyAoQkFTRSAtIDEpICogMHgxMDAwMDAwMDAgKyAweGZmZmZmZmZmIGlzIGEgc2FmZSBpbnRlZ2VyXG52YXIgQkFTRSA9IDEwMDAwMDA7XG5cbmZ1bmN0aW9uIHJlYWRJbnQ4KGJ1ZmZlcikge1xuXHR2YXIgaGlnaCA9IGJ1ZmZlci5yZWFkSW50MzJCRSgwKTtcblx0dmFyIGxvdyA9IGJ1ZmZlci5yZWFkVUludDMyQkUoNCk7XG5cdHZhciBzaWduID0gJyc7XG5cblx0aWYgKGhpZ2ggPCAwKSB7XG5cdFx0aGlnaCA9IH5oaWdoICsgKGxvdyA9PT0gMCk7XG5cdFx0bG93ID0gKH5sb3cgKyAxKSA+Pj4gMDtcblx0XHRzaWduID0gJy0nO1xuXHR9XG5cblx0dmFyIHJlc3VsdCA9ICcnO1xuXHR2YXIgY2Fycnk7XG5cdHZhciB0O1xuXHR2YXIgZGlnaXRzO1xuXHR2YXIgcGFkO1xuXHR2YXIgbDtcblx0dmFyIGk7XG5cblx0e1xuXHRcdGNhcnJ5ID0gaGlnaCAlIEJBU0U7XG5cdFx0aGlnaCA9IGhpZ2ggLyBCQVNFID4+PiAwO1xuXG5cdFx0dCA9IDB4MTAwMDAwMDAwICogY2FycnkgKyBsb3c7XG5cdFx0bG93ID0gdCAvIEJBU0UgPj4+IDA7XG5cdFx0ZGlnaXRzID0gJycgKyAodCAtIEJBU0UgKiBsb3cpO1xuXG5cdFx0aWYgKGxvdyA9PT0gMCAmJiBoaWdoID09PSAwKSB7XG5cdFx0XHRyZXR1cm4gc2lnbiArIGRpZ2l0cyArIHJlc3VsdDtcblx0XHR9XG5cblx0XHRwYWQgPSAnJztcblx0XHRsID0gNiAtIGRpZ2l0cy5sZW5ndGg7XG5cblx0XHRmb3IgKGkgPSAwOyBpIDwgbDsgaSsrKSB7XG5cdFx0XHRwYWQgKz0gJzAnO1xuXHRcdH1cblxuXHRcdHJlc3VsdCA9IHBhZCArIGRpZ2l0cyArIHJlc3VsdDtcblx0fVxuXG5cdHtcblx0XHRjYXJyeSA9IGhpZ2ggJSBCQVNFO1xuXHRcdGhpZ2ggPSBoaWdoIC8gQkFTRSA+Pj4gMDtcblxuXHRcdHQgPSAweDEwMDAwMDAwMCAqIGNhcnJ5ICsgbG93O1xuXHRcdGxvdyA9IHQgLyBCQVNFID4+PiAwO1xuXHRcdGRpZ2l0cyA9ICcnICsgKHQgLSBCQVNFICogbG93KTtcblxuXHRcdGlmIChsb3cgPT09IDAgJiYgaGlnaCA9PT0gMCkge1xuXHRcdFx0cmV0dXJuIHNpZ24gKyBkaWdpdHMgKyByZXN1bHQ7XG5cdFx0fVxuXG5cdFx0cGFkID0gJyc7XG5cdFx0bCA9IDYgLSBkaWdpdHMubGVuZ3RoO1xuXG5cdFx0Zm9yIChpID0gMDsgaSA8IGw7IGkrKykge1xuXHRcdFx0cGFkICs9ICcwJztcblx0XHR9XG5cblx0XHRyZXN1bHQgPSBwYWQgKyBkaWdpdHMgKyByZXN1bHQ7XG5cdH1cblxuXHR7XG5cdFx0Y2FycnkgPSBoaWdoICUgQkFTRTtcblx0XHRoaWdoID0gaGlnaCAvIEJBU0UgPj4+IDA7XG5cblx0XHR0ID0gMHgxMDAwMDAwMDAgKiBjYXJyeSArIGxvdztcblx0XHRsb3cgPSB0IC8gQkFTRSA+Pj4gMDtcblx0XHRkaWdpdHMgPSAnJyArICh0IC0gQkFTRSAqIGxvdyk7XG5cblx0XHRpZiAobG93ID09PSAwICYmIGhpZ2ggPT09IDApIHtcblx0XHRcdHJldHVybiBzaWduICsgZGlnaXRzICsgcmVzdWx0O1xuXHRcdH1cblxuXHRcdHBhZCA9ICcnO1xuXHRcdGwgPSA2IC0gZGlnaXRzLmxlbmd0aDtcblxuXHRcdGZvciAoaSA9IDA7IGkgPCBsOyBpKyspIHtcblx0XHRcdHBhZCArPSAnMCc7XG5cdFx0fVxuXG5cdFx0cmVzdWx0ID0gcGFkICsgZGlnaXRzICsgcmVzdWx0O1xuXHR9XG5cblx0e1xuXHRcdGNhcnJ5ID0gaGlnaCAlIEJBU0U7XG5cdFx0dCA9IDB4MTAwMDAwMDAwICogY2FycnkgKyBsb3c7XG5cdFx0ZGlnaXRzID0gJycgKyB0ICUgQkFTRTtcblxuXHRcdHJldHVybiBzaWduICsgZGlnaXRzICsgcmVzdWx0O1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcmVhZEludDg7XG4iLCIndXNlIHN0cmljdCdcbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEwLTIwMTcgQnJpYW4gQ2FybHNvbiAoYnJpYW4ubS5jYXJsc29uQGdtYWlsLmNvbSlcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBSRUFETUUubWQgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG52YXIgdHlwZXMgPSByZXF1aXJlKCdwZy10eXBlcycpXG5cbmZ1bmN0aW9uIFR5cGVPdmVycmlkZXMgKHVzZXJUeXBlcykge1xuICB0aGlzLl90eXBlcyA9IHVzZXJUeXBlcyB8fCB0eXBlc1xuICB0aGlzLnRleHQgPSB7fVxuICB0aGlzLmJpbmFyeSA9IHt9XG59XG5cblR5cGVPdmVycmlkZXMucHJvdG90eXBlLmdldE92ZXJyaWRlcyA9IGZ1bmN0aW9uIChmb3JtYXQpIHtcbiAgc3dpdGNoIChmb3JtYXQpIHtcbiAgICBjYXNlICd0ZXh0JzogcmV0dXJuIHRoaXMudGV4dFxuICAgIGNhc2UgJ2JpbmFyeSc6IHJldHVybiB0aGlzLmJpbmFyeVxuICAgIGRlZmF1bHQ6IHJldHVybiB7fVxuICB9XG59XG5cblR5cGVPdmVycmlkZXMucHJvdG90eXBlLnNldFR5cGVQYXJzZXIgPSBmdW5jdGlvbiAob2lkLCBmb3JtYXQsIHBhcnNlRm4pIHtcbiAgaWYgKHR5cGVvZiBmb3JtYXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBwYXJzZUZuID0gZm9ybWF0XG4gICAgZm9ybWF0ID0gJ3RleHQnXG4gIH1cbiAgdGhpcy5nZXRPdmVycmlkZXMoZm9ybWF0KVtvaWRdID0gcGFyc2VGblxufVxuXG5UeXBlT3ZlcnJpZGVzLnByb3RvdHlwZS5nZXRUeXBlUGFyc2VyID0gZnVuY3Rpb24gKG9pZCwgZm9ybWF0KSB7XG4gIGZvcm1hdCA9IGZvcm1hdCB8fCAndGV4dCdcbiAgcmV0dXJuIHRoaXMuZ2V0T3ZlcnJpZGVzKGZvcm1hdClbb2lkXSB8fCB0aGlzLl90eXBlcy5nZXRUeXBlUGFyc2VyKG9pZCwgZm9ybWF0KVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFR5cGVPdmVycmlkZXNcbiIsIid1c2Ugc3RyaWN0J1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTAtMjAxNyBCcmlhbiBDYXJsc29uIChicmlhbi5tLmNhcmxzb25AZ21haWwuY29tKVxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIFJFQURNRS5tZCBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbnZhciBkbnMgPSByZXF1aXJlKCdkbnMnKVxuXG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuL2RlZmF1bHRzJylcblxudmFyIHBhcnNlID0gcmVxdWlyZSgncGctY29ubmVjdGlvbi1zdHJpbmcnKS5wYXJzZSAvLyBwYXJzZXMgYSBjb25uZWN0aW9uIHN0cmluZ1xuXG52YXIgdmFsID0gZnVuY3Rpb24gKGtleSwgY29uZmlnLCBlbnZWYXIpIHtcbiAgaWYgKGVudlZhciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgZW52VmFyID0gcHJvY2Vzcy5lbnZbICdQRycgKyBrZXkudG9VcHBlckNhc2UoKSBdXG4gIH0gZWxzZSBpZiAoZW52VmFyID09PSBmYWxzZSkge1xuICAgIC8vIGRvIG5vdGhpbmcgLi4uIHVzZSBmYWxzZVxuICB9IGVsc2Uge1xuICAgIGVudlZhciA9IHByb2Nlc3MuZW52WyBlbnZWYXIgXVxuICB9XG5cbiAgcmV0dXJuIGNvbmZpZ1trZXldIHx8XG4gICAgZW52VmFyIHx8XG4gICAgZGVmYXVsdHNba2V5XVxufVxuXG52YXIgdXNlU3NsID0gZnVuY3Rpb24gKCkge1xuICBzd2l0Y2ggKHByb2Nlc3MuZW52LlBHU1NMTU9ERSkge1xuICAgIGNhc2UgJ2Rpc2FibGUnOlxuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgY2FzZSAncHJlZmVyJzpcbiAgICBjYXNlICdyZXF1aXJlJzpcbiAgICBjYXNlICd2ZXJpZnktY2EnOlxuICAgIGNhc2UgJ3ZlcmlmeS1mdWxsJzpcbiAgICAgIHJldHVybiB0cnVlXG4gIH1cbiAgcmV0dXJuIGRlZmF1bHRzLnNzbFxufVxuXG52YXIgQ29ubmVjdGlvblBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gIC8vIGlmIGEgc3RyaW5nIGlzIHBhc3NlZCwgaXQgaXMgYSByYXcgY29ubmVjdGlvbiBzdHJpbmcgc28gd2UgcGFyc2UgaXQgaW50byBhIGNvbmZpZ1xuICBjb25maWcgPSB0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJyA/IHBhcnNlKGNvbmZpZykgOiBjb25maWcgfHwge31cblxuICAvLyBpZiB0aGUgY29uZmlnIGhhcyBhIGNvbm5lY3Rpb25TdHJpbmcgZGVmaW5lZCwgcGFyc2UgSVQgaW50byB0aGUgY29uZmlnIHdlIHVzZVxuICAvLyB0aGlzIHdpbGwgb3ZlcnJpZGUgb3RoZXIgZGVmYXVsdCB2YWx1ZXMgd2l0aCB3aGF0IGlzIHN0b3JlZCBpbiBjb25uZWN0aW9uU3RyaW5nXG4gIGlmIChjb25maWcuY29ubmVjdGlvblN0cmluZykge1xuICAgIGNvbmZpZyA9IE9iamVjdC5hc3NpZ24oe30sIGNvbmZpZywgcGFyc2UoY29uZmlnLmNvbm5lY3Rpb25TdHJpbmcpKVxuICB9XG5cbiAgdGhpcy51c2VyID0gdmFsKCd1c2VyJywgY29uZmlnKVxuICB0aGlzLmRhdGFiYXNlID0gdmFsKCdkYXRhYmFzZScsIGNvbmZpZylcbiAgdGhpcy5wb3J0ID0gcGFyc2VJbnQodmFsKCdwb3J0JywgY29uZmlnKSwgMTApXG4gIHRoaXMuaG9zdCA9IHZhbCgnaG9zdCcsIGNvbmZpZylcbiAgdGhpcy5wYXNzd29yZCA9IHZhbCgncGFzc3dvcmQnLCBjb25maWcpXG4gIHRoaXMuYmluYXJ5ID0gdmFsKCdiaW5hcnknLCBjb25maWcpXG4gIHRoaXMuc3NsID0gdHlwZW9mIGNvbmZpZy5zc2wgPT09ICd1bmRlZmluZWQnID8gdXNlU3NsKCkgOiBjb25maWcuc3NsXG4gIHRoaXMuY2xpZW50X2VuY29kaW5nID0gdmFsKCdjbGllbnRfZW5jb2RpbmcnLCBjb25maWcpXG4gIHRoaXMucmVwbGljYXRpb24gPSB2YWwoJ3JlcGxpY2F0aW9uJywgY29uZmlnKVxuICAvLyBhIGRvbWFpbiBzb2NrZXQgYmVnaW5zIHdpdGggJy8nXG4gIHRoaXMuaXNEb21haW5Tb2NrZXQgPSAoISh0aGlzLmhvc3QgfHwgJycpLmluZGV4T2YoJy8nKSlcblxuICB0aGlzLmFwcGxpY2F0aW9uX25hbWUgPSB2YWwoJ2FwcGxpY2F0aW9uX25hbWUnLCBjb25maWcsICdQR0FQUE5BTUUnKVxuICB0aGlzLmZhbGxiYWNrX2FwcGxpY2F0aW9uX25hbWUgPSB2YWwoJ2ZhbGxiYWNrX2FwcGxpY2F0aW9uX25hbWUnLCBjb25maWcsIGZhbHNlKVxuICB0aGlzLnN0YXRlbWVudF90aW1lb3V0ID0gdmFsKCdzdGF0ZW1lbnRfdGltZW91dCcsIGNvbmZpZywgZmFsc2UpXG4gIHRoaXMucXVlcnlfdGltZW91dCA9IHZhbCgncXVlcnlfdGltZW91dCcsIGNvbmZpZywgZmFsc2UpXG59XG5cbi8vIENvbnZlcnQgYXJnIHRvIGEgc3RyaW5nLCBzdXJyb3VuZCBpbiBzaW5nbGUgcXVvdGVzLCBhbmQgZXNjYXBlIHNpbmdsZSBxdW90ZXMgYW5kIGJhY2tzbGFzaGVzXG52YXIgcXVvdGVQYXJhbVZhbHVlID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiBcIidcIiArICgnJyArIHZhbHVlKS5yZXBsYWNlKC9cXFxcL2csICdcXFxcXFxcXCcpLnJlcGxhY2UoLycvZywgXCJcXFxcJ1wiKSArIFwiJ1wiXG59XG5cbnZhciBhZGQgPSBmdW5jdGlvbiAocGFyYW1zLCBjb25maWcsIHBhcmFtTmFtZSkge1xuICB2YXIgdmFsdWUgPSBjb25maWdbcGFyYW1OYW1lXVxuICBpZiAodmFsdWUpIHtcbiAgICBwYXJhbXMucHVzaChwYXJhbU5hbWUgKyAnPScgKyBxdW90ZVBhcmFtVmFsdWUodmFsdWUpKVxuICB9XG59XG5cbkNvbm5lY3Rpb25QYXJhbWV0ZXJzLnByb3RvdHlwZS5nZXRMaWJwcUNvbm5lY3Rpb25TdHJpbmcgPSBmdW5jdGlvbiAoY2IpIHtcbiAgdmFyIHBhcmFtcyA9IFtdXG4gIGFkZChwYXJhbXMsIHRoaXMsICd1c2VyJylcbiAgYWRkKHBhcmFtcywgdGhpcywgJ3Bhc3N3b3JkJylcbiAgYWRkKHBhcmFtcywgdGhpcywgJ3BvcnQnKVxuICBhZGQocGFyYW1zLCB0aGlzLCAnYXBwbGljYXRpb25fbmFtZScpXG4gIGFkZChwYXJhbXMsIHRoaXMsICdmYWxsYmFja19hcHBsaWNhdGlvbl9uYW1lJylcblxuICB2YXIgc3NsID0gdHlwZW9mIHRoaXMuc3NsID09PSAnb2JqZWN0JyA/IHRoaXMuc3NsIDogeyBzc2xtb2RlOiB0aGlzLnNzbCB9XG4gIGFkZChwYXJhbXMsIHNzbCwgJ3NzbG1vZGUnKVxuICBhZGQocGFyYW1zLCBzc2wsICdzc2xjYScpXG4gIGFkZChwYXJhbXMsIHNzbCwgJ3NzbGtleScpXG4gIGFkZChwYXJhbXMsIHNzbCwgJ3NzbGNlcnQnKVxuICBhZGQocGFyYW1zLCBzc2wsICdzc2xyb290Y2VydCcpXG5cbiAgaWYgKHRoaXMuZGF0YWJhc2UpIHtcbiAgICBwYXJhbXMucHVzaCgnZGJuYW1lPScgKyBxdW90ZVBhcmFtVmFsdWUodGhpcy5kYXRhYmFzZSkpXG4gIH1cbiAgaWYgKHRoaXMucmVwbGljYXRpb24pIHtcbiAgICBwYXJhbXMucHVzaCgncmVwbGljYXRpb249JyArIHF1b3RlUGFyYW1WYWx1ZSh0aGlzLnJlcGxpY2F0aW9uKSlcbiAgfVxuICBpZiAodGhpcy5ob3N0KSB7XG4gICAgcGFyYW1zLnB1c2goJ2hvc3Q9JyArIHF1b3RlUGFyYW1WYWx1ZSh0aGlzLmhvc3QpKVxuICB9XG4gIGlmICh0aGlzLmlzRG9tYWluU29ja2V0KSB7XG4gICAgcmV0dXJuIGNiKG51bGwsIHBhcmFtcy5qb2luKCcgJykpXG4gIH1cbiAgaWYgKHRoaXMuY2xpZW50X2VuY29kaW5nKSB7XG4gICAgcGFyYW1zLnB1c2goJ2NsaWVudF9lbmNvZGluZz0nICsgcXVvdGVQYXJhbVZhbHVlKHRoaXMuY2xpZW50X2VuY29kaW5nKSlcbiAgfVxuICBkbnMubG9va3VwKHRoaXMuaG9zdCwgZnVuY3Rpb24gKGVyciwgYWRkcmVzcykge1xuICAgIGlmIChlcnIpIHJldHVybiBjYihlcnIsIG51bGwpXG4gICAgcGFyYW1zLnB1c2goJ2hvc3RhZGRyPScgKyBxdW90ZVBhcmFtVmFsdWUoYWRkcmVzcykpXG4gICAgcmV0dXJuIGNiKG51bGwsIHBhcmFtcy5qb2luKCcgJykpXG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0gQ29ubmVjdGlvblBhcmFtZXRlcnNcbiIsIid1c2Ugc3RyaWN0J1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTAtMjAxNyBCcmlhbiBDYXJsc29uIChicmlhbi5tLmNhcmxzb25AZ21haWwuY29tKVxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIFJFQURNRS5tZCBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbnZhciBuZXQgPSByZXF1aXJlKCduZXQnKVxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxudmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJylcblxudmFyIFdyaXRlciA9IHJlcXVpcmUoJ2J1ZmZlci13cml0ZXInKVxudmFyIFJlYWRlciA9IHJlcXVpcmUoJ3BhY2tldC1yZWFkZXInKVxuXG52YXIgVEVYVF9NT0RFID0gMFxudmFyIEJJTkFSWV9NT0RFID0gMVxudmFyIENvbm5lY3Rpb24gPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpXG4gIGNvbmZpZyA9IGNvbmZpZyB8fCB7fVxuICB0aGlzLnN0cmVhbSA9IGNvbmZpZy5zdHJlYW0gfHwgbmV3IG5ldC5Tb2NrZXQoKVxuICB0aGlzLl9rZWVwQWxpdmUgPSBjb25maWcua2VlcEFsaXZlXG4gIHRoaXMubGFzdEJ1ZmZlciA9IGZhbHNlXG4gIHRoaXMubGFzdE9mZnNldCA9IDBcbiAgdGhpcy5idWZmZXIgPSBudWxsXG4gIHRoaXMub2Zmc2V0ID0gbnVsbFxuICB0aGlzLmVuY29kaW5nID0gY29uZmlnLmVuY29kaW5nIHx8ICd1dGY4J1xuICB0aGlzLnBhcnNlZFN0YXRlbWVudHMgPSB7fVxuICB0aGlzLndyaXRlciA9IG5ldyBXcml0ZXIoKVxuICB0aGlzLnNzbCA9IGNvbmZpZy5zc2wgfHwgZmFsc2VcbiAgdGhpcy5fZW5kaW5nID0gZmFsc2VcbiAgdGhpcy5fbW9kZSA9IFRFWFRfTU9ERVxuICB0aGlzLl9lbWl0TWVzc2FnZSA9IGZhbHNlXG4gIHRoaXMuX3JlYWRlciA9IG5ldyBSZWFkZXIoe1xuICAgIGhlYWRlclNpemU6IDEsXG4gICAgbGVuZ3RoUGFkZGluZzogLTRcbiAgfSlcbiAgdmFyIHNlbGYgPSB0aGlzXG4gIHRoaXMub24oJ25ld0xpc3RlbmVyJywgZnVuY3Rpb24gKGV2ZW50TmFtZSkge1xuICAgIGlmIChldmVudE5hbWUgPT09ICdtZXNzYWdlJykge1xuICAgICAgc2VsZi5fZW1pdE1lc3NhZ2UgPSB0cnVlXG4gICAgfVxuICB9KVxufVxuXG51dGlsLmluaGVyaXRzKENvbm5lY3Rpb24sIEV2ZW50RW1pdHRlcilcblxuQ29ubmVjdGlvbi5wcm90b3R5cGUuY29ubmVjdCA9IGZ1bmN0aW9uIChwb3J0LCBob3N0KSB7XG4gIGlmICh0aGlzLnN0cmVhbS5yZWFkeVN0YXRlID09PSAnY2xvc2VkJykge1xuICAgIHRoaXMuc3RyZWFtLmNvbm5lY3QocG9ydCwgaG9zdClcbiAgfSBlbHNlIGlmICh0aGlzLnN0cmVhbS5yZWFkeVN0YXRlID09PSAnb3BlbicpIHtcbiAgICB0aGlzLmVtaXQoJ2Nvbm5lY3QnKVxuICB9XG5cbiAgdmFyIHNlbGYgPSB0aGlzXG5cbiAgdGhpcy5zdHJlYW0ub24oJ2Nvbm5lY3QnLCBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHNlbGYuX2tlZXBBbGl2ZSkge1xuICAgICAgc2VsZi5zdHJlYW0uc2V0S2VlcEFsaXZlKHRydWUpXG4gICAgfVxuICAgIHNlbGYuZW1pdCgnY29ubmVjdCcpXG4gIH0pXG5cbiAgY29uc3QgcmVwb3J0U3RyZWFtRXJyb3IgPSBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAvLyBkb24ndCByYWlzZSBFQ09OTlJFU0VUIGVycm9ycyAtIHRoZXkgY2FuICYgc2hvdWxkIGJlIGlnbm9yZWRcbiAgICAvLyBkdXJpbmcgZGlzY29ubmVjdFxuICAgIGlmIChzZWxmLl9lbmRpbmcgJiYgZXJyb3IuY29kZSA9PT0gJ0VDT05OUkVTRVQnKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgc2VsZi5lbWl0KCdlcnJvcicsIGVycm9yKVxuICB9XG4gIHRoaXMuc3RyZWFtLm9uKCdlcnJvcicsIHJlcG9ydFN0cmVhbUVycm9yKVxuXG4gIHRoaXMuc3RyZWFtLm9uKCdjbG9zZScsIGZ1bmN0aW9uICgpIHtcbiAgICBzZWxmLmVtaXQoJ2VuZCcpXG4gIH0pXG5cbiAgaWYgKCF0aGlzLnNzbCkge1xuICAgIHJldHVybiB0aGlzLmF0dGFjaExpc3RlbmVycyh0aGlzLnN0cmVhbSlcbiAgfVxuXG4gIHRoaXMuc3RyZWFtLm9uY2UoJ2RhdGEnLCBmdW5jdGlvbiAoYnVmZmVyKSB7XG4gICAgdmFyIHJlc3BvbnNlQ29kZSA9IGJ1ZmZlci50b1N0cmluZygndXRmOCcpXG4gICAgc3dpdGNoIChyZXNwb25zZUNvZGUpIHtcbiAgICAgIGNhc2UgJ04nOiAvLyBTZXJ2ZXIgZG9lcyBub3Qgc3VwcG9ydCBTU0wgY29ubmVjdGlvbnNcbiAgICAgICAgcmV0dXJuIHNlbGYuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ1RoZSBzZXJ2ZXIgZG9lcyBub3Qgc3VwcG9ydCBTU0wgY29ubmVjdGlvbnMnKSlcbiAgICAgIGNhc2UgJ1MnOiAvLyBTZXJ2ZXIgc3VwcG9ydHMgU1NMIGNvbm5lY3Rpb25zLCBjb250aW51ZSB3aXRoIGEgc2VjdXJlIGNvbm5lY3Rpb25cbiAgICAgICAgYnJlYWtcbiAgICAgIGRlZmF1bHQ6IC8vIEFueSBvdGhlciByZXNwb25zZSBieXRlLCBpbmNsdWRpbmcgJ0UnIChFcnJvclJlc3BvbnNlKSBpbmRpY2F0aW5nIGEgc2VydmVyIGVycm9yXG4gICAgICAgIHJldHVybiBzZWxmLmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKCdUaGVyZSB3YXMgYW4gZXJyb3IgZXN0YWJsaXNoaW5nIGFuIFNTTCBjb25uZWN0aW9uJykpXG4gICAgfVxuICAgIHZhciB0bHMgPSByZXF1aXJlKCd0bHMnKVxuICAgIHNlbGYuc3RyZWFtID0gdGxzLmNvbm5lY3Qoe1xuICAgICAgc29ja2V0OiBzZWxmLnN0cmVhbSxcbiAgICAgIHNlcnZlcm5hbWU6IGhvc3QsXG4gICAgICBjaGVja1NlcnZlcklkZW50aXR5OiBzZWxmLnNzbC5jaGVja1NlcnZlcklkZW50aXR5IHx8IHRscy5jaGVja1NlcnZlcklkZW50aXR5LFxuICAgICAgcmVqZWN0VW5hdXRob3JpemVkOiBzZWxmLnNzbC5yZWplY3RVbmF1dGhvcml6ZWQsXG4gICAgICBjYTogc2VsZi5zc2wuY2EsXG4gICAgICBwZng6IHNlbGYuc3NsLnBmeCxcbiAgICAgIGtleTogc2VsZi5zc2wua2V5LFxuICAgICAgcGFzc3BocmFzZTogc2VsZi5zc2wucGFzc3BocmFzZSxcbiAgICAgIGNlcnQ6IHNlbGYuc3NsLmNlcnQsXG4gICAgICBzZWN1cmVPcHRpb25zOiBzZWxmLnNzbC5zZWN1cmVPcHRpb25zLFxuICAgICAgTlBOUHJvdG9jb2xzOiBzZWxmLnNzbC5OUE5Qcm90b2NvbHNcbiAgICB9KVxuICAgIHNlbGYuYXR0YWNoTGlzdGVuZXJzKHNlbGYuc3RyZWFtKVxuICAgIHNlbGYuc3RyZWFtLm9uKCdlcnJvcicsIHJlcG9ydFN0cmVhbUVycm9yKVxuXG4gICAgc2VsZi5lbWl0KCdzc2xjb25uZWN0JylcbiAgfSlcbn1cblxuQ29ubmVjdGlvbi5wcm90b3R5cGUuYXR0YWNoTGlzdGVuZXJzID0gZnVuY3Rpb24gKHN0cmVhbSkge1xuICB2YXIgc2VsZiA9IHRoaXNcbiAgc3RyZWFtLm9uKCdkYXRhJywgZnVuY3Rpb24gKGJ1ZmYpIHtcbiAgICBzZWxmLl9yZWFkZXIuYWRkQ2h1bmsoYnVmZilcbiAgICB2YXIgcGFja2V0ID0gc2VsZi5fcmVhZGVyLnJlYWQoKVxuICAgIHdoaWxlIChwYWNrZXQpIHtcbiAgICAgIHZhciBtc2cgPSBzZWxmLnBhcnNlTWVzc2FnZShwYWNrZXQpXG4gICAgICB2YXIgZXZlbnROYW1lID0gbXNnLm5hbWUgPT09ICdlcnJvcicgPyAnZXJyb3JNZXNzYWdlJyA6IG1zZy5uYW1lXG4gICAgICBpZiAoc2VsZi5fZW1pdE1lc3NhZ2UpIHtcbiAgICAgICAgc2VsZi5lbWl0KCdtZXNzYWdlJywgbXNnKVxuICAgICAgfVxuICAgICAgc2VsZi5lbWl0KGV2ZW50TmFtZSwgbXNnKVxuICAgICAgcGFja2V0ID0gc2VsZi5fcmVhZGVyLnJlYWQoKVxuICAgIH1cbiAgfSlcbiAgc3RyZWFtLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgc2VsZi5lbWl0KCdlbmQnKVxuICB9KVxufVxuXG5Db25uZWN0aW9uLnByb3RvdHlwZS5yZXF1ZXN0U3NsID0gZnVuY3Rpb24gKCkge1xuICB2YXIgYm9keUJ1ZmZlciA9IHRoaXMud3JpdGVyXG4gICAgLmFkZEludDE2KDB4MDREMilcbiAgICAuYWRkSW50MTYoMHgxNjJGKS5mbHVzaCgpXG5cbiAgdmFyIGxlbmd0aCA9IGJvZHlCdWZmZXIubGVuZ3RoICsgNFxuXG4gIHZhciBidWZmZXIgPSBuZXcgV3JpdGVyKClcbiAgICAuYWRkSW50MzIobGVuZ3RoKVxuICAgIC5hZGQoYm9keUJ1ZmZlcilcbiAgICAuam9pbigpXG4gIHRoaXMuc3RyZWFtLndyaXRlKGJ1ZmZlcilcbn1cblxuQ29ubmVjdGlvbi5wcm90b3R5cGUuc3RhcnR1cCA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgdmFyIHdyaXRlciA9IHRoaXMud3JpdGVyXG4gICAgLmFkZEludDE2KDMpXG4gICAgLmFkZEludDE2KDApXG5cbiAgT2JqZWN0LmtleXMoY29uZmlnKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgdmFsID0gY29uZmlnW2tleV1cbiAgICB3cml0ZXIuYWRkQ1N0cmluZyhrZXkpLmFkZENTdHJpbmcodmFsKVxuICB9KVxuXG4gIHdyaXRlci5hZGRDU3RyaW5nKCdjbGllbnRfZW5jb2RpbmcnKS5hZGRDU3RyaW5nKFwiJ3V0Zi04J1wiKVxuXG4gIHZhciBib2R5QnVmZmVyID0gd3JpdGVyLmFkZENTdHJpbmcoJycpLmZsdXNoKClcbiAgLy8gdGhpcyBtZXNzYWdlIGlzIHNlbnQgd2l0aG91dCBhIGNvZGVcblxuICB2YXIgbGVuZ3RoID0gYm9keUJ1ZmZlci5sZW5ndGggKyA0XG5cbiAgdmFyIGJ1ZmZlciA9IG5ldyBXcml0ZXIoKVxuICAgIC5hZGRJbnQzMihsZW5ndGgpXG4gICAgLmFkZChib2R5QnVmZmVyKVxuICAgIC5qb2luKClcbiAgdGhpcy5zdHJlYW0ud3JpdGUoYnVmZmVyKVxufVxuXG5Db25uZWN0aW9uLnByb3RvdHlwZS5jYW5jZWwgPSBmdW5jdGlvbiAocHJvY2Vzc0lELCBzZWNyZXRLZXkpIHtcbiAgdmFyIGJvZHlCdWZmZXIgPSB0aGlzLndyaXRlclxuICAgIC5hZGRJbnQxNigxMjM0KVxuICAgIC5hZGRJbnQxNig1Njc4KVxuICAgIC5hZGRJbnQzMihwcm9jZXNzSUQpXG4gICAgLmFkZEludDMyKHNlY3JldEtleSlcbiAgICAuZmx1c2goKVxuXG4gIHZhciBsZW5ndGggPSBib2R5QnVmZmVyLmxlbmd0aCArIDRcblxuICB2YXIgYnVmZmVyID0gbmV3IFdyaXRlcigpXG4gICAgLmFkZEludDMyKGxlbmd0aClcbiAgICAuYWRkKGJvZHlCdWZmZXIpXG4gICAgLmpvaW4oKVxuICB0aGlzLnN0cmVhbS53cml0ZShidWZmZXIpXG59XG5cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnBhc3N3b3JkID0gZnVuY3Rpb24gKHBhc3N3b3JkKSB7XG4gIC8vIDB4NzAgPSAncCdcbiAgdGhpcy5fc2VuZCgweDcwLCB0aGlzLndyaXRlci5hZGRDU3RyaW5nKHBhc3N3b3JkKSlcbn1cblxuQ29ubmVjdGlvbi5wcm90b3R5cGUuX3NlbmQgPSBmdW5jdGlvbiAoY29kZSwgbW9yZSkge1xuICBpZiAoIXRoaXMuc3RyZWFtLndyaXRhYmxlKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbiAgaWYgKG1vcmUgPT09IHRydWUpIHtcbiAgICB0aGlzLndyaXRlci5hZGRIZWFkZXIoY29kZSlcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdGhpcy5zdHJlYW0ud3JpdGUodGhpcy53cml0ZXIuZmx1c2goY29kZSkpXG4gIH1cbn1cblxuQ29ubmVjdGlvbi5wcm90b3R5cGUucXVlcnkgPSBmdW5jdGlvbiAodGV4dCkge1xuICAvLyAweDUxID0gUVxuICB0aGlzLnN0cmVhbS53cml0ZSh0aGlzLndyaXRlci5hZGRDU3RyaW5nKHRleHQpLmZsdXNoKDB4NTEpKVxufVxuXG4vLyBzZW5kIHBhcnNlIG1lc3NhZ2Vcbi8vIFwibW9yZVwiID09PSB0cnVlIHRvIGJ1ZmZlciB0aGUgbWVzc2FnZSB1bnRpbCBmbHVzaCgpIGlzIGNhbGxlZFxuQ29ubmVjdGlvbi5wcm90b3R5cGUucGFyc2UgPSBmdW5jdGlvbiAocXVlcnksIG1vcmUpIHtcbiAgLy8gZXhwZWN0IHNvbWV0aGluZyBsaWtlIHRoaXM6XG4gIC8vIHsgbmFtZTogJ3F1ZXJ5TmFtZScsXG4gIC8vICAgdGV4dDogJ3NlbGVjdCAqIGZyb20gYmxhaCcsXG4gIC8vICAgdHlwZXM6IFsnaW50OCcsICdib29sJ10gfVxuXG4gIC8vIG5vcm1hbGl6ZSBtaXNzaW5nIHF1ZXJ5IG5hbWVzIHRvIGFsbG93IGZvciBudWxsXG4gIHF1ZXJ5Lm5hbWUgPSBxdWVyeS5uYW1lIHx8ICcnXG4gIGlmIChxdWVyeS5uYW1lLmxlbmd0aCA+IDYzKSB7XG4gICAgY29uc29sZS5lcnJvcignV2FybmluZyEgUG9zdGdyZXMgb25seSBzdXBwb3J0cyA2MyBjaGFyYWN0ZXJzIGZvciBxdWVyeSBuYW1lcy4nKVxuICAgIGNvbnNvbGUuZXJyb3IoJ1lvdSBzdXBwbGllZCcsIHF1ZXJ5Lm5hbWUsICcoJywgcXVlcnkubmFtZS5sZW5ndGgsICcpJylcbiAgICBjb25zb2xlLmVycm9yKCdUaGlzIGNhbiBjYXVzZSBjb25mbGljdHMgYW5kIHNpbGVudCBlcnJvcnMgZXhlY3V0aW5nIHF1ZXJpZXMnKVxuICB9XG4gIC8vIG5vcm1hbGl6ZSBudWxsIHR5cGUgYXJyYXlcbiAgcXVlcnkudHlwZXMgPSBxdWVyeS50eXBlcyB8fCBbXVxuICB2YXIgbGVuID0gcXVlcnkudHlwZXMubGVuZ3RoXG4gIHZhciBidWZmZXIgPSB0aGlzLndyaXRlclxuICAgIC5hZGRDU3RyaW5nKHF1ZXJ5Lm5hbWUpIC8vIG5hbWUgb2YgcXVlcnlcbiAgICAuYWRkQ1N0cmluZyhxdWVyeS50ZXh0KSAvLyBhY3R1YWwgcXVlcnkgdGV4dFxuICAgIC5hZGRJbnQxNihsZW4pXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICBidWZmZXIuYWRkSW50MzIocXVlcnkudHlwZXNbaV0pXG4gIH1cblxuICB2YXIgY29kZSA9IDB4NTBcbiAgdGhpcy5fc2VuZChjb2RlLCBtb3JlKVxufVxuXG4vLyBzZW5kIGJpbmQgbWVzc2FnZVxuLy8gXCJtb3JlXCIgPT09IHRydWUgdG8gYnVmZmVyIHRoZSBtZXNzYWdlIHVudGlsIGZsdXNoKCkgaXMgY2FsbGVkXG5Db25uZWN0aW9uLnByb3RvdHlwZS5iaW5kID0gZnVuY3Rpb24gKGNvbmZpZywgbW9yZSkge1xuICAvLyBub3JtYWxpemUgY29uZmlnXG4gIGNvbmZpZyA9IGNvbmZpZyB8fCB7fVxuICBjb25maWcucG9ydGFsID0gY29uZmlnLnBvcnRhbCB8fCAnJ1xuICBjb25maWcuc3RhdGVtZW50ID0gY29uZmlnLnN0YXRlbWVudCB8fCAnJ1xuICBjb25maWcuYmluYXJ5ID0gY29uZmlnLmJpbmFyeSB8fCBmYWxzZVxuICB2YXIgdmFsdWVzID0gY29uZmlnLnZhbHVlcyB8fCBbXVxuICB2YXIgbGVuID0gdmFsdWVzLmxlbmd0aFxuICB2YXIgdXNlQmluYXJ5ID0gZmFsc2VcbiAgZm9yICh2YXIgaiA9IDA7IGogPCBsZW47IGorKykgeyB1c2VCaW5hcnkgfD0gdmFsdWVzW2pdIGluc3RhbmNlb2YgQnVmZmVyIH1cbiAgdmFyIGJ1ZmZlciA9IHRoaXMud3JpdGVyXG4gICAgLmFkZENTdHJpbmcoY29uZmlnLnBvcnRhbClcbiAgICAuYWRkQ1N0cmluZyhjb25maWcuc3RhdGVtZW50KVxuICBpZiAoIXVzZUJpbmFyeSkgeyBidWZmZXIuYWRkSW50MTYoMCkgfSBlbHNlIHtcbiAgICBidWZmZXIuYWRkSW50MTYobGVuKVxuICAgIGZvciAoaiA9IDA7IGogPCBsZW47IGorKykgeyBidWZmZXIuYWRkSW50MTYodmFsdWVzW2pdIGluc3RhbmNlb2YgQnVmZmVyKSB9XG4gIH1cbiAgYnVmZmVyLmFkZEludDE2KGxlbilcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgIHZhciB2YWwgPSB2YWx1ZXNbaV1cbiAgICBpZiAodmFsID09PSBudWxsIHx8IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBidWZmZXIuYWRkSW50MzIoLTEpXG4gICAgfSBlbHNlIGlmICh2YWwgaW5zdGFuY2VvZiBCdWZmZXIpIHtcbiAgICAgIGJ1ZmZlci5hZGRJbnQzMih2YWwubGVuZ3RoKVxuICAgICAgYnVmZmVyLmFkZCh2YWwpXG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1ZmZlci5hZGRJbnQzMihCdWZmZXIuYnl0ZUxlbmd0aCh2YWwpKVxuICAgICAgYnVmZmVyLmFkZFN0cmluZyh2YWwpXG4gICAgfVxuICB9XG5cbiAgaWYgKGNvbmZpZy5iaW5hcnkpIHtcbiAgICBidWZmZXIuYWRkSW50MTYoMSkgLy8gZm9ybWF0IGNvZGVzIHRvIHVzZSBiaW5hcnlcbiAgICBidWZmZXIuYWRkSW50MTYoMSlcbiAgfSBlbHNlIHtcbiAgICBidWZmZXIuYWRkSW50MTYoMCkgLy8gZm9ybWF0IGNvZGVzIHRvIHVzZSB0ZXh0XG4gIH1cbiAgLy8gMHg0MiA9ICdCJ1xuICB0aGlzLl9zZW5kKDB4NDIsIG1vcmUpXG59XG5cbi8vIHNlbmQgZXhlY3V0ZSBtZXNzYWdlXG4vLyBcIm1vcmVcIiA9PT0gdHJ1ZSB0byBidWZmZXIgdGhlIG1lc3NhZ2UgdW50aWwgZmx1c2goKSBpcyBjYWxsZWRcbkNvbm5lY3Rpb24ucHJvdG90eXBlLmV4ZWN1dGUgPSBmdW5jdGlvbiAoY29uZmlnLCBtb3JlKSB7XG4gIGNvbmZpZyA9IGNvbmZpZyB8fCB7fVxuICBjb25maWcucG9ydGFsID0gY29uZmlnLnBvcnRhbCB8fCAnJ1xuICBjb25maWcucm93cyA9IGNvbmZpZy5yb3dzIHx8ICcnXG4gIHRoaXMud3JpdGVyXG4gICAgLmFkZENTdHJpbmcoY29uZmlnLnBvcnRhbClcbiAgICAuYWRkSW50MzIoY29uZmlnLnJvd3MpXG5cbiAgLy8gMHg0NSA9ICdFJ1xuICB0aGlzLl9zZW5kKDB4NDUsIG1vcmUpXG59XG5cbnZhciBlbXB0eUJ1ZmZlciA9IEJ1ZmZlci5hbGxvYygwKVxuXG5Db25uZWN0aW9uLnByb3RvdHlwZS5mbHVzaCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gMHg0OCA9ICdIJ1xuICB0aGlzLndyaXRlci5hZGQoZW1wdHlCdWZmZXIpXG4gIHRoaXMuX3NlbmQoMHg0OClcbn1cblxuQ29ubmVjdGlvbi5wcm90b3R5cGUuc3luYyA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gY2xlYXIgb3V0IGFueSBwZW5kaW5nIGRhdGEgaW4gdGhlIHdyaXRlclxuICB0aGlzLndyaXRlci5mbHVzaCgwKVxuXG4gIHRoaXMud3JpdGVyLmFkZChlbXB0eUJ1ZmZlcilcbiAgdGhpcy5fZW5kaW5nID0gdHJ1ZVxuICB0aGlzLl9zZW5kKDB4NTMpXG59XG5cbmNvbnN0IEVORF9CVUZGRVIgPSBCdWZmZXIuZnJvbShbMHg1OCwgMHgwMCwgMHgwMCwgMHgwMCwgMHgwNF0pXG5cbkNvbm5lY3Rpb24ucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gMHg1OCA9ICdYJ1xuICB0aGlzLndyaXRlci5hZGQoZW1wdHlCdWZmZXIpXG4gIHRoaXMuX2VuZGluZyA9IHRydWVcbiAgcmV0dXJuIHRoaXMuc3RyZWFtLndyaXRlKEVORF9CVUZGRVIsICgpID0+IHtcbiAgICB0aGlzLnN0cmVhbS5lbmQoKVxuICB9KVxufVxuXG5Db25uZWN0aW9uLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uIChtc2csIG1vcmUpIHtcbiAgdGhpcy53cml0ZXIuYWRkQ1N0cmluZyhtc2cudHlwZSArIChtc2cubmFtZSB8fCAnJykpXG4gIHRoaXMuX3NlbmQoMHg0MywgbW9yZSlcbn1cblxuQ29ubmVjdGlvbi5wcm90b3R5cGUuZGVzY3JpYmUgPSBmdW5jdGlvbiAobXNnLCBtb3JlKSB7XG4gIHRoaXMud3JpdGVyLmFkZENTdHJpbmcobXNnLnR5cGUgKyAobXNnLm5hbWUgfHwgJycpKVxuICB0aGlzLl9zZW5kKDB4NDQsIG1vcmUpXG59XG5cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnNlbmRDb3B5RnJvbUNodW5rID0gZnVuY3Rpb24gKGNodW5rKSB7XG4gIHRoaXMuc3RyZWFtLndyaXRlKHRoaXMud3JpdGVyLmFkZChjaHVuaykuZmx1c2goMHg2NCkpXG59XG5cbkNvbm5lY3Rpb24ucHJvdG90eXBlLmVuZENvcHlGcm9tID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLnN0cmVhbS53cml0ZSh0aGlzLndyaXRlci5hZGQoZW1wdHlCdWZmZXIpLmZsdXNoKDB4NjMpKVxufVxuXG5Db25uZWN0aW9uLnByb3RvdHlwZS5zZW5kQ29weUZhaWwgPSBmdW5jdGlvbiAobXNnKSB7XG4gIC8vIHRoaXMuc3RyZWFtLndyaXRlKHRoaXMud3JpdGVyLmFkZChlbXB0eUJ1ZmZlcikuZmx1c2goMHg2NikpO1xuICB0aGlzLndyaXRlci5hZGRDU3RyaW5nKG1zZylcbiAgdGhpcy5fc2VuZCgweDY2KVxufVxuXG52YXIgTWVzc2FnZSA9IGZ1bmN0aW9uIChuYW1lLCBsZW5ndGgpIHtcbiAgdGhpcy5uYW1lID0gbmFtZVxuICB0aGlzLmxlbmd0aCA9IGxlbmd0aFxufVxuXG5Db25uZWN0aW9uLnByb3RvdHlwZS5wYXJzZU1lc3NhZ2UgPSBmdW5jdGlvbiAoYnVmZmVyKSB7XG4gIHRoaXMub2Zmc2V0ID0gMFxuICB2YXIgbGVuZ3RoID0gYnVmZmVyLmxlbmd0aCArIDRcbiAgc3dpdGNoICh0aGlzLl9yZWFkZXIuaGVhZGVyKSB7XG4gICAgY2FzZSAweDUyOiAvLyBSXG4gICAgICByZXR1cm4gdGhpcy5wYXJzZVIoYnVmZmVyLCBsZW5ndGgpXG5cbiAgICBjYXNlIDB4NTM6IC8vIFNcbiAgICAgIHJldHVybiB0aGlzLnBhcnNlUyhidWZmZXIsIGxlbmd0aClcblxuICAgIGNhc2UgMHg0YjogLy8gS1xuICAgICAgcmV0dXJuIHRoaXMucGFyc2VLKGJ1ZmZlciwgbGVuZ3RoKVxuXG4gICAgY2FzZSAweDQzOiAvLyBDXG4gICAgICByZXR1cm4gdGhpcy5wYXJzZUMoYnVmZmVyLCBsZW5ndGgpXG5cbiAgICBjYXNlIDB4NWE6IC8vIFpcbiAgICAgIHJldHVybiB0aGlzLnBhcnNlWihidWZmZXIsIGxlbmd0aClcblxuICAgIGNhc2UgMHg1NDogLy8gVFxuICAgICAgcmV0dXJuIHRoaXMucGFyc2VUKGJ1ZmZlciwgbGVuZ3RoKVxuXG4gICAgY2FzZSAweDQ0OiAvLyBEXG4gICAgICByZXR1cm4gdGhpcy5wYXJzZUQoYnVmZmVyLCBsZW5ndGgpXG5cbiAgICBjYXNlIDB4NDU6IC8vIEVcbiAgICAgIHJldHVybiB0aGlzLnBhcnNlRShidWZmZXIsIGxlbmd0aClcblxuICAgIGNhc2UgMHg0ZTogLy8gTlxuICAgICAgcmV0dXJuIHRoaXMucGFyc2VOKGJ1ZmZlciwgbGVuZ3RoKVxuXG4gICAgY2FzZSAweDMxOiAvLyAxXG4gICAgICByZXR1cm4gbmV3IE1lc3NhZ2UoJ3BhcnNlQ29tcGxldGUnLCBsZW5ndGgpXG5cbiAgICBjYXNlIDB4MzI6IC8vIDJcbiAgICAgIHJldHVybiBuZXcgTWVzc2FnZSgnYmluZENvbXBsZXRlJywgbGVuZ3RoKVxuXG4gICAgY2FzZSAweDMzOiAvLyAzXG4gICAgICByZXR1cm4gbmV3IE1lc3NhZ2UoJ2Nsb3NlQ29tcGxldGUnLCBsZW5ndGgpXG5cbiAgICBjYXNlIDB4NDE6IC8vIEFcbiAgICAgIHJldHVybiB0aGlzLnBhcnNlQShidWZmZXIsIGxlbmd0aClcblxuICAgIGNhc2UgMHg2ZTogLy8gblxuICAgICAgcmV0dXJuIG5ldyBNZXNzYWdlKCdub0RhdGEnLCBsZW5ndGgpXG5cbiAgICBjYXNlIDB4NDk6IC8vIElcbiAgICAgIHJldHVybiBuZXcgTWVzc2FnZSgnZW1wdHlRdWVyeScsIGxlbmd0aClcblxuICAgIGNhc2UgMHg3MzogLy8gc1xuICAgICAgcmV0dXJuIG5ldyBNZXNzYWdlKCdwb3J0YWxTdXNwZW5kZWQnLCBsZW5ndGgpXG5cbiAgICBjYXNlIDB4NDc6IC8vIEdcbiAgICAgIHJldHVybiB0aGlzLnBhcnNlRyhidWZmZXIsIGxlbmd0aClcblxuICAgIGNhc2UgMHg0ODogLy8gSFxuICAgICAgcmV0dXJuIHRoaXMucGFyc2VIKGJ1ZmZlciwgbGVuZ3RoKVxuXG4gICAgY2FzZSAweDU3OiAvLyBXXG4gICAgICByZXR1cm4gbmV3IE1lc3NhZ2UoJ3JlcGxpY2F0aW9uU3RhcnQnLCBsZW5ndGgpXG5cbiAgICBjYXNlIDB4NjM6IC8vIGNcbiAgICAgIHJldHVybiBuZXcgTWVzc2FnZSgnY29weURvbmUnLCBsZW5ndGgpXG5cbiAgICBjYXNlIDB4NjQ6IC8vIGRcbiAgICAgIHJldHVybiB0aGlzLnBhcnNlZChidWZmZXIsIGxlbmd0aClcbiAgfVxufVxuXG5Db25uZWN0aW9uLnByb3RvdHlwZS5wYXJzZVIgPSBmdW5jdGlvbiAoYnVmZmVyLCBsZW5ndGgpIHtcbiAgdmFyIGNvZGUgPSAwXG4gIHZhciBtc2cgPSBuZXcgTWVzc2FnZSgnYXV0aGVudGljYXRpb25PaycsIGxlbmd0aClcbiAgaWYgKG1zZy5sZW5ndGggPT09IDgpIHtcbiAgICBjb2RlID0gdGhpcy5wYXJzZUludDMyKGJ1ZmZlcilcbiAgICBpZiAoY29kZSA9PT0gMykge1xuICAgICAgbXNnLm5hbWUgPSAnYXV0aGVudGljYXRpb25DbGVhcnRleHRQYXNzd29yZCdcbiAgICB9XG4gICAgcmV0dXJuIG1zZ1xuICB9XG4gIGlmIChtc2cubGVuZ3RoID09PSAxMikge1xuICAgIGNvZGUgPSB0aGlzLnBhcnNlSW50MzIoYnVmZmVyKVxuICAgIGlmIChjb2RlID09PSA1KSB7IC8vIG1kNSByZXF1aXJlZFxuICAgICAgbXNnLm5hbWUgPSAnYXV0aGVudGljYXRpb25NRDVQYXNzd29yZCdcbiAgICAgIG1zZy5zYWx0ID0gQnVmZmVyLmFsbG9jKDQpXG4gICAgICBidWZmZXIuY29weShtc2cuc2FsdCwgMCwgdGhpcy5vZmZzZXQsIHRoaXMub2Zmc2V0ICsgNClcbiAgICAgIHRoaXMub2Zmc2V0ICs9IDRcbiAgICAgIHJldHVybiBtc2dcbiAgICB9XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIGF1dGhlbnRpY2F0aW9uT2sgbWVzc2FnZSB0eXBlJyArIHV0aWwuaW5zcGVjdChtc2cpKVxufVxuXG5Db25uZWN0aW9uLnByb3RvdHlwZS5wYXJzZVMgPSBmdW5jdGlvbiAoYnVmZmVyLCBsZW5ndGgpIHtcbiAgdmFyIG1zZyA9IG5ldyBNZXNzYWdlKCdwYXJhbWV0ZXJTdGF0dXMnLCBsZW5ndGgpXG4gIG1zZy5wYXJhbWV0ZXJOYW1lID0gdGhpcy5wYXJzZUNTdHJpbmcoYnVmZmVyKVxuICBtc2cucGFyYW1ldGVyVmFsdWUgPSB0aGlzLnBhcnNlQ1N0cmluZyhidWZmZXIpXG4gIHJldHVybiBtc2dcbn1cblxuQ29ubmVjdGlvbi5wcm90b3R5cGUucGFyc2VLID0gZnVuY3Rpb24gKGJ1ZmZlciwgbGVuZ3RoKSB7XG4gIHZhciBtc2cgPSBuZXcgTWVzc2FnZSgnYmFja2VuZEtleURhdGEnLCBsZW5ndGgpXG4gIG1zZy5wcm9jZXNzSUQgPSB0aGlzLnBhcnNlSW50MzIoYnVmZmVyKVxuICBtc2cuc2VjcmV0S2V5ID0gdGhpcy5wYXJzZUludDMyKGJ1ZmZlcilcbiAgcmV0dXJuIG1zZ1xufVxuXG5Db25uZWN0aW9uLnByb3RvdHlwZS5wYXJzZUMgPSBmdW5jdGlvbiAoYnVmZmVyLCBsZW5ndGgpIHtcbiAgdmFyIG1zZyA9IG5ldyBNZXNzYWdlKCdjb21tYW5kQ29tcGxldGUnLCBsZW5ndGgpXG4gIG1zZy50ZXh0ID0gdGhpcy5wYXJzZUNTdHJpbmcoYnVmZmVyKVxuICByZXR1cm4gbXNnXG59XG5cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnBhcnNlWiA9IGZ1bmN0aW9uIChidWZmZXIsIGxlbmd0aCkge1xuICB2YXIgbXNnID0gbmV3IE1lc3NhZ2UoJ3JlYWR5Rm9yUXVlcnknLCBsZW5ndGgpXG4gIG1zZy5uYW1lID0gJ3JlYWR5Rm9yUXVlcnknXG4gIG1zZy5zdGF0dXMgPSB0aGlzLnJlYWRTdHJpbmcoYnVmZmVyLCAxKVxuICByZXR1cm4gbXNnXG59XG5cbnZhciBST1dfREVTQ1JJUFRJT04gPSAncm93RGVzY3JpcHRpb24nXG5Db25uZWN0aW9uLnByb3RvdHlwZS5wYXJzZVQgPSBmdW5jdGlvbiAoYnVmZmVyLCBsZW5ndGgpIHtcbiAgdmFyIG1zZyA9IG5ldyBNZXNzYWdlKFJPV19ERVNDUklQVElPTiwgbGVuZ3RoKVxuICBtc2cuZmllbGRDb3VudCA9IHRoaXMucGFyc2VJbnQxNihidWZmZXIpXG4gIHZhciBmaWVsZHMgPSBbXVxuICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5maWVsZENvdW50OyBpKyspIHtcbiAgICBmaWVsZHMucHVzaCh0aGlzLnBhcnNlRmllbGQoYnVmZmVyKSlcbiAgfVxuICBtc2cuZmllbGRzID0gZmllbGRzXG4gIHJldHVybiBtc2dcbn1cblxudmFyIEZpZWxkID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLm5hbWUgPSBudWxsXG4gIHRoaXMudGFibGVJRCA9IG51bGxcbiAgdGhpcy5jb2x1bW5JRCA9IG51bGxcbiAgdGhpcy5kYXRhVHlwZUlEID0gbnVsbFxuICB0aGlzLmRhdGFUeXBlU2l6ZSA9IG51bGxcbiAgdGhpcy5kYXRhVHlwZU1vZGlmaWVyID0gbnVsbFxuICB0aGlzLmZvcm1hdCA9IG51bGxcbn1cblxudmFyIEZPUk1BVF9URVhUID0gJ3RleHQnXG52YXIgRk9STUFUX0JJTkFSWSA9ICdiaW5hcnknXG5Db25uZWN0aW9uLnByb3RvdHlwZS5wYXJzZUZpZWxkID0gZnVuY3Rpb24gKGJ1ZmZlcikge1xuICB2YXIgZmllbGQgPSBuZXcgRmllbGQoKVxuICBmaWVsZC5uYW1lID0gdGhpcy5wYXJzZUNTdHJpbmcoYnVmZmVyKVxuICBmaWVsZC50YWJsZUlEID0gdGhpcy5wYXJzZUludDMyKGJ1ZmZlcilcbiAgZmllbGQuY29sdW1uSUQgPSB0aGlzLnBhcnNlSW50MTYoYnVmZmVyKVxuICBmaWVsZC5kYXRhVHlwZUlEID0gdGhpcy5wYXJzZUludDMyKGJ1ZmZlcilcbiAgZmllbGQuZGF0YVR5cGVTaXplID0gdGhpcy5wYXJzZUludDE2KGJ1ZmZlcilcbiAgZmllbGQuZGF0YVR5cGVNb2RpZmllciA9IHRoaXMucGFyc2VJbnQzMihidWZmZXIpXG4gIGlmICh0aGlzLnBhcnNlSW50MTYoYnVmZmVyKSA9PT0gVEVYVF9NT0RFKSB7XG4gICAgdGhpcy5fbW9kZSA9IFRFWFRfTU9ERVxuICAgIGZpZWxkLmZvcm1hdCA9IEZPUk1BVF9URVhUXG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fbW9kZSA9IEJJTkFSWV9NT0RFXG4gICAgZmllbGQuZm9ybWF0ID0gRk9STUFUX0JJTkFSWVxuICB9XG4gIHJldHVybiBmaWVsZFxufVxuXG52YXIgREFUQV9ST1cgPSAnZGF0YVJvdydcbnZhciBEYXRhUm93TWVzc2FnZSA9IGZ1bmN0aW9uIChsZW5ndGgsIGZpZWxkQ291bnQpIHtcbiAgdGhpcy5uYW1lID0gREFUQV9ST1dcbiAgdGhpcy5sZW5ndGggPSBsZW5ndGhcbiAgdGhpcy5maWVsZENvdW50ID0gZmllbGRDb3VudFxuICB0aGlzLmZpZWxkcyA9IFtdXG59XG5cbi8vIGV4dHJlbWVseSBob3QtcGF0aCBjb2RlXG5Db25uZWN0aW9uLnByb3RvdHlwZS5wYXJzZUQgPSBmdW5jdGlvbiAoYnVmZmVyLCBsZW5ndGgpIHtcbiAgdmFyIGZpZWxkQ291bnQgPSB0aGlzLnBhcnNlSW50MTYoYnVmZmVyKVxuICB2YXIgbXNnID0gbmV3IERhdGFSb3dNZXNzYWdlKGxlbmd0aCwgZmllbGRDb3VudClcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBmaWVsZENvdW50OyBpKyspIHtcbiAgICBtc2cuZmllbGRzLnB1c2godGhpcy5fcmVhZFZhbHVlKGJ1ZmZlcikpXG4gIH1cbiAgcmV0dXJuIG1zZ1xufVxuXG4vLyBleHRyZW1lbHkgaG90LXBhdGggY29kZVxuQ29ubmVjdGlvbi5wcm90b3R5cGUuX3JlYWRWYWx1ZSA9IGZ1bmN0aW9uIChidWZmZXIpIHtcbiAgdmFyIGxlbmd0aCA9IHRoaXMucGFyc2VJbnQzMihidWZmZXIpXG4gIGlmIChsZW5ndGggPT09IC0xKSByZXR1cm4gbnVsbFxuICBpZiAodGhpcy5fbW9kZSA9PT0gVEVYVF9NT0RFKSB7XG4gICAgcmV0dXJuIHRoaXMucmVhZFN0cmluZyhidWZmZXIsIGxlbmd0aClcbiAgfVxuICByZXR1cm4gdGhpcy5yZWFkQnl0ZXMoYnVmZmVyLCBsZW5ndGgpXG59XG5cbi8vIHBhcnNlcyBlcnJvclxuQ29ubmVjdGlvbi5wcm90b3R5cGUucGFyc2VFID0gZnVuY3Rpb24gKGJ1ZmZlciwgbGVuZ3RoKSB7XG4gIHZhciBmaWVsZHMgPSB7fVxuICB2YXIgbXNnLCBpdGVtXG4gIHZhciBpbnB1dCA9IG5ldyBNZXNzYWdlKCdlcnJvcicsIGxlbmd0aClcbiAgdmFyIGZpZWxkVHlwZSA9IHRoaXMucmVhZFN0cmluZyhidWZmZXIsIDEpXG4gIHdoaWxlIChmaWVsZFR5cGUgIT09ICdcXDAnKSB7XG4gICAgZmllbGRzW2ZpZWxkVHlwZV0gPSB0aGlzLnBhcnNlQ1N0cmluZyhidWZmZXIpXG4gICAgZmllbGRUeXBlID0gdGhpcy5yZWFkU3RyaW5nKGJ1ZmZlciwgMSlcbiAgfVxuICBpZiAoaW5wdXQubmFtZSA9PT0gJ2Vycm9yJykge1xuICAgIC8vIHRoZSBtc2cgaXMgYW4gRXJyb3IgaW5zdGFuY2VcbiAgICBtc2cgPSBuZXcgRXJyb3IoZmllbGRzLk0pXG4gICAgZm9yIChpdGVtIGluIGlucHV0KSB7XG4gICAgICAvLyBjb3B5IGlucHV0IHByb3BlcnRpZXMgdG8gdGhlIGVycm9yXG4gICAgICBpZiAoaW5wdXQuaGFzT3duUHJvcGVydHkoaXRlbSkpIHtcbiAgICAgICAgbXNnW2l0ZW1dID0gaW5wdXRbaXRlbV1cbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gdGhlIG1zZyBpcyBhbiBvYmplY3QgbGl0ZXJhbFxuICAgIG1zZyA9IGlucHV0XG4gICAgbXNnLm1lc3NhZ2UgPSBmaWVsZHMuTVxuICB9XG4gIG1zZy5zZXZlcml0eSA9IGZpZWxkcy5TXG4gIG1zZy5jb2RlID0gZmllbGRzLkNcbiAgbXNnLmRldGFpbCA9IGZpZWxkcy5EXG4gIG1zZy5oaW50ID0gZmllbGRzLkhcbiAgbXNnLnBvc2l0aW9uID0gZmllbGRzLlBcbiAgbXNnLmludGVybmFsUG9zaXRpb24gPSBmaWVsZHMucFxuICBtc2cuaW50ZXJuYWxRdWVyeSA9IGZpZWxkcy5xXG4gIG1zZy53aGVyZSA9IGZpZWxkcy5XXG4gIG1zZy5zY2hlbWEgPSBmaWVsZHMuc1xuICBtc2cudGFibGUgPSBmaWVsZHMudFxuICBtc2cuY29sdW1uID0gZmllbGRzLmNcbiAgbXNnLmRhdGFUeXBlID0gZmllbGRzLmRcbiAgbXNnLmNvbnN0cmFpbnQgPSBmaWVsZHMublxuICBtc2cuZmlsZSA9IGZpZWxkcy5GXG4gIG1zZy5saW5lID0gZmllbGRzLkxcbiAgbXNnLnJvdXRpbmUgPSBmaWVsZHMuUlxuICByZXR1cm4gbXNnXG59XG5cbi8vIHNhbWUgdGhpbmcsIGRpZmZlcmVudCBuYW1lXG5Db25uZWN0aW9uLnByb3RvdHlwZS5wYXJzZU4gPSBmdW5jdGlvbiAoYnVmZmVyLCBsZW5ndGgpIHtcbiAgdmFyIG1zZyA9IHRoaXMucGFyc2VFKGJ1ZmZlciwgbGVuZ3RoKVxuICBtc2cubmFtZSA9ICdub3RpY2UnXG4gIHJldHVybiBtc2dcbn1cblxuQ29ubmVjdGlvbi5wcm90b3R5cGUucGFyc2VBID0gZnVuY3Rpb24gKGJ1ZmZlciwgbGVuZ3RoKSB7XG4gIHZhciBtc2cgPSBuZXcgTWVzc2FnZSgnbm90aWZpY2F0aW9uJywgbGVuZ3RoKVxuICBtc2cucHJvY2Vzc0lkID0gdGhpcy5wYXJzZUludDMyKGJ1ZmZlcilcbiAgbXNnLmNoYW5uZWwgPSB0aGlzLnBhcnNlQ1N0cmluZyhidWZmZXIpXG4gIG1zZy5wYXlsb2FkID0gdGhpcy5wYXJzZUNTdHJpbmcoYnVmZmVyKVxuICByZXR1cm4gbXNnXG59XG5cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnBhcnNlRyA9IGZ1bmN0aW9uIChidWZmZXIsIGxlbmd0aCkge1xuICB2YXIgbXNnID0gbmV3IE1lc3NhZ2UoJ2NvcHlJblJlc3BvbnNlJywgbGVuZ3RoKVxuICByZXR1cm4gdGhpcy5wYXJzZUdIKGJ1ZmZlciwgbXNnKVxufVxuXG5Db25uZWN0aW9uLnByb3RvdHlwZS5wYXJzZUggPSBmdW5jdGlvbiAoYnVmZmVyLCBsZW5ndGgpIHtcbiAgdmFyIG1zZyA9IG5ldyBNZXNzYWdlKCdjb3B5T3V0UmVzcG9uc2UnLCBsZW5ndGgpXG4gIHJldHVybiB0aGlzLnBhcnNlR0goYnVmZmVyLCBtc2cpXG59XG5cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnBhcnNlR0ggPSBmdW5jdGlvbiAoYnVmZmVyLCBtc2cpIHtcbiAgdmFyIGlzQmluYXJ5ID0gYnVmZmVyW3RoaXMub2Zmc2V0XSAhPT0gMFxuICB0aGlzLm9mZnNldCsrXG4gIG1zZy5iaW5hcnkgPSBpc0JpbmFyeVxuICB2YXIgY29sdW1uQ291bnQgPSB0aGlzLnBhcnNlSW50MTYoYnVmZmVyKVxuICBtc2cuY29sdW1uVHlwZXMgPSBbXVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbHVtbkNvdW50OyBpKyspIHtcbiAgICBtc2cuY29sdW1uVHlwZXMucHVzaCh0aGlzLnBhcnNlSW50MTYoYnVmZmVyKSlcbiAgfVxuICByZXR1cm4gbXNnXG59XG5cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnBhcnNlZCA9IGZ1bmN0aW9uIChidWZmZXIsIGxlbmd0aCkge1xuICB2YXIgbXNnID0gbmV3IE1lc3NhZ2UoJ2NvcHlEYXRhJywgbGVuZ3RoKVxuICBtc2cuY2h1bmsgPSB0aGlzLnJlYWRCeXRlcyhidWZmZXIsIG1zZy5sZW5ndGggLSA0KVxuICByZXR1cm4gbXNnXG59XG5cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnBhcnNlSW50MzIgPSBmdW5jdGlvbiAoYnVmZmVyKSB7XG4gIHZhciB2YWx1ZSA9IGJ1ZmZlci5yZWFkSW50MzJCRSh0aGlzLm9mZnNldClcbiAgdGhpcy5vZmZzZXQgKz0gNFxuICByZXR1cm4gdmFsdWVcbn1cblxuQ29ubmVjdGlvbi5wcm90b3R5cGUucGFyc2VJbnQxNiA9IGZ1bmN0aW9uIChidWZmZXIpIHtcbiAgdmFyIHZhbHVlID0gYnVmZmVyLnJlYWRJbnQxNkJFKHRoaXMub2Zmc2V0KVxuICB0aGlzLm9mZnNldCArPSAyXG4gIHJldHVybiB2YWx1ZVxufVxuXG5Db25uZWN0aW9uLnByb3RvdHlwZS5yZWFkU3RyaW5nID0gZnVuY3Rpb24gKGJ1ZmZlciwgbGVuZ3RoKSB7XG4gIHJldHVybiBidWZmZXIudG9TdHJpbmcodGhpcy5lbmNvZGluZywgdGhpcy5vZmZzZXQsICh0aGlzLm9mZnNldCArPSBsZW5ndGgpKVxufVxuXG5Db25uZWN0aW9uLnByb3RvdHlwZS5yZWFkQnl0ZXMgPSBmdW5jdGlvbiAoYnVmZmVyLCBsZW5ndGgpIHtcbiAgcmV0dXJuIGJ1ZmZlci5zbGljZSh0aGlzLm9mZnNldCwgKHRoaXMub2Zmc2V0ICs9IGxlbmd0aCkpXG59XG5cbkNvbm5lY3Rpb24ucHJvdG90eXBlLnBhcnNlQ1N0cmluZyA9IGZ1bmN0aW9uIChidWZmZXIpIHtcbiAgdmFyIHN0YXJ0ID0gdGhpcy5vZmZzZXRcbiAgdmFyIGVuZCA9IGJ1ZmZlci5pbmRleE9mKDAsIHN0YXJ0KVxuICB0aGlzLm9mZnNldCA9IGVuZCArIDFcbiAgcmV0dXJuIGJ1ZmZlci50b1N0cmluZyh0aGlzLmVuY29kaW5nLCBzdGFydCwgZW5kKVxufVxuLy8gZW5kIHBhcnNpbmcgbWV0aG9kc1xubW9kdWxlLmV4cG9ydHMgPSBDb25uZWN0aW9uXG4iLCIndXNlIHN0cmljdCdcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9jbGllbnQnKVxuIiwiZnVuY3Rpb24gd2VicGFja0VtcHR5Q29udGV4dChyZXEpIHtcblx0dmFyIGUgPSBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiICsgcmVxICsgXCInXCIpO1xuXHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdHRocm93IGU7XG59XG53ZWJwYWNrRW1wdHlDb250ZXh0LmtleXMgPSBmdW5jdGlvbigpIHsgcmV0dXJuIFtdOyB9O1xud2VicGFja0VtcHR5Q29udGV4dC5yZXNvbHZlID0gd2VicGFja0VtcHR5Q29udGV4dDtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0VtcHR5Q29udGV4dDtcbndlYnBhY2tFbXB0eUNvbnRleHQuaWQgPSA3MTsiLCIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5wYXJzZSA9IGZ1bmN0aW9uIChzb3VyY2UsIHRyYW5zZm9ybSkge1xuICByZXR1cm4gbmV3IEFycmF5UGFyc2VyKHNvdXJjZSwgdHJhbnNmb3JtKS5wYXJzZSgpXG59XG5cbmZ1bmN0aW9uIEFycmF5UGFyc2VyIChzb3VyY2UsIHRyYW5zZm9ybSkge1xuICB0aGlzLnNvdXJjZSA9IHNvdXJjZVxuICB0aGlzLnRyYW5zZm9ybSA9IHRyYW5zZm9ybSB8fCBpZGVudGl0eVxuICB0aGlzLnBvc2l0aW9uID0gMFxuICB0aGlzLmVudHJpZXMgPSBbXVxuICB0aGlzLnJlY29yZGVkID0gW11cbiAgdGhpcy5kaW1lbnNpb24gPSAwXG59XG5cbkFycmF5UGFyc2VyLnByb3RvdHlwZS5pc0VvZiA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMucG9zaXRpb24gPj0gdGhpcy5zb3VyY2UubGVuZ3RoXG59XG5cbkFycmF5UGFyc2VyLnByb3RvdHlwZS5uZXh0Q2hhcmFjdGVyID0gZnVuY3Rpb24gKCkge1xuICB2YXIgY2hhcmFjdGVyID0gdGhpcy5zb3VyY2VbdGhpcy5wb3NpdGlvbisrXVxuICBpZiAoY2hhcmFjdGVyID09PSAnXFxcXCcpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWU6IHRoaXMuc291cmNlW3RoaXMucG9zaXRpb24rK10sXG4gICAgICBlc2NhcGVkOiB0cnVlXG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgdmFsdWU6IGNoYXJhY3RlcixcbiAgICBlc2NhcGVkOiBmYWxzZVxuICB9XG59XG5cbkFycmF5UGFyc2VyLnByb3RvdHlwZS5yZWNvcmQgPSBmdW5jdGlvbiAoY2hhcmFjdGVyKSB7XG4gIHRoaXMucmVjb3JkZWQucHVzaChjaGFyYWN0ZXIpXG59XG5cbkFycmF5UGFyc2VyLnByb3RvdHlwZS5uZXdFbnRyeSA9IGZ1bmN0aW9uIChpbmNsdWRlRW1wdHkpIHtcbiAgdmFyIGVudHJ5XG4gIGlmICh0aGlzLnJlY29yZGVkLmxlbmd0aCA+IDAgfHwgaW5jbHVkZUVtcHR5KSB7XG4gICAgZW50cnkgPSB0aGlzLnJlY29yZGVkLmpvaW4oJycpXG4gICAgaWYgKGVudHJ5ID09PSAnTlVMTCcgJiYgIWluY2x1ZGVFbXB0eSkge1xuICAgICAgZW50cnkgPSBudWxsXG4gICAgfVxuICAgIGlmIChlbnRyeSAhPT0gbnVsbCkgZW50cnkgPSB0aGlzLnRyYW5zZm9ybShlbnRyeSlcbiAgICB0aGlzLmVudHJpZXMucHVzaChlbnRyeSlcbiAgICB0aGlzLnJlY29yZGVkID0gW11cbiAgfVxufVxuXG5BcnJheVBhcnNlci5wcm90b3R5cGUucGFyc2UgPSBmdW5jdGlvbiAobmVzdGVkKSB7XG4gIHZhciBjaGFyYWN0ZXIsIHBhcnNlciwgcXVvdGVcbiAgd2hpbGUgKCF0aGlzLmlzRW9mKCkpIHtcbiAgICBjaGFyYWN0ZXIgPSB0aGlzLm5leHRDaGFyYWN0ZXIoKVxuICAgIGlmIChjaGFyYWN0ZXIudmFsdWUgPT09ICd7JyAmJiAhcXVvdGUpIHtcbiAgICAgIHRoaXMuZGltZW5zaW9uKytcbiAgICAgIGlmICh0aGlzLmRpbWVuc2lvbiA+IDEpIHtcbiAgICAgICAgcGFyc2VyID0gbmV3IEFycmF5UGFyc2VyKHRoaXMuc291cmNlLnN1YnN0cih0aGlzLnBvc2l0aW9uIC0gMSksIHRoaXMudHJhbnNmb3JtKVxuICAgICAgICB0aGlzLmVudHJpZXMucHVzaChwYXJzZXIucGFyc2UodHJ1ZSkpXG4gICAgICAgIHRoaXMucG9zaXRpb24gKz0gcGFyc2VyLnBvc2l0aW9uIC0gMlxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoY2hhcmFjdGVyLnZhbHVlID09PSAnfScgJiYgIXF1b3RlKSB7XG4gICAgICB0aGlzLmRpbWVuc2lvbi0tXG4gICAgICBpZiAoIXRoaXMuZGltZW5zaW9uKSB7XG4gICAgICAgIHRoaXMubmV3RW50cnkoKVxuICAgICAgICBpZiAobmVzdGVkKSByZXR1cm4gdGhpcy5lbnRyaWVzXG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjaGFyYWN0ZXIudmFsdWUgPT09ICdcIicgJiYgIWNoYXJhY3Rlci5lc2NhcGVkKSB7XG4gICAgICBpZiAocXVvdGUpIHRoaXMubmV3RW50cnkodHJ1ZSlcbiAgICAgIHF1b3RlID0gIXF1b3RlXG4gICAgfSBlbHNlIGlmIChjaGFyYWN0ZXIudmFsdWUgPT09ICcsJyAmJiAhcXVvdGUpIHtcbiAgICAgIHRoaXMubmV3RW50cnkoKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlY29yZChjaGFyYWN0ZXIudmFsdWUpXG4gICAgfVxuICB9XG4gIGlmICh0aGlzLmRpbWVuc2lvbiAhPT0gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcignYXJyYXkgZGltZW5zaW9uIG5vdCBiYWxhbmNlZCcpXG4gIH1cbiAgcmV0dXJuIHRoaXMuZW50cmllc1xufVxuXG5mdW5jdGlvbiBpZGVudGl0eSAodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlXG59XG4iLCJ2YXIgYXJyYXkgPSByZXF1aXJlKCdwb3N0Z3Jlcy1hcnJheScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY3JlYXRlOiBmdW5jdGlvbiAoc291cmNlLCB0cmFuc2Zvcm0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGFyc2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYXJyYXkucGFyc2Uoc291cmNlLCB0cmFuc2Zvcm0pO1xuICAgICAgfVxuICAgIH07XG4gIH1cbn07XG4iLCIvKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxudmFyIGFwcCA9IHJlcXVpcmUoJy4uL2FwcCcpO1xudmFyIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnYWxsb3dhbmNlLW1hbmFnZXI6c2VydmVyJyk7XG52YXIgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKTtcblxuLyoqXG4gKiBHZXQgcG9ydCBmcm9tIGVudmlyb25tZW50IGFuZCBzdG9yZSBpbiBFeHByZXNzLlxuICovXG5cbnZhciBwb3J0ID0gbm9ybWFsaXplUG9ydChwcm9jZXNzLmVudi5QT1JUIHx8ICczMDAxJyk7XG5hcHAuc2V0KCdwb3J0JywgcG9ydCk7XG5cbi8qKlxuICogQ3JlYXRlIEhUVFAgc2VydmVyLlxuICovXG5cbnZhciBzZXJ2ZXIgPSBodHRwLmNyZWF0ZVNlcnZlcihhcHApO1xuXG4vKipcbiAqIExpc3RlbiBvbiBwcm92aWRlZCBwb3J0LCBvbiBhbGwgbmV0d29yayBpbnRlcmZhY2VzLlxuICovXG5cbnNlcnZlci5saXN0ZW4ocG9ydCk7XG5zZXJ2ZXIub24oJ2Vycm9yJywgb25FcnJvcik7XG5zZXJ2ZXIub24oJ2xpc3RlbmluZycsIG9uTGlzdGVuaW5nKTtcblxuLyoqXG4gKiBOb3JtYWxpemUgYSBwb3J0IGludG8gYSBudW1iZXIsIHN0cmluZywgb3IgZmFsc2UuXG4gKi9cblxuZnVuY3Rpb24gbm9ybWFsaXplUG9ydCh2YWwpIHtcbiAgdmFyIHBvcnQgPSBwYXJzZUludCh2YWwsIDEwKTtcblxuICBpZiAoaXNOYU4ocG9ydCkpIHtcbiAgICAvLyBuYW1lZCBwaXBlXG4gICAgcmV0dXJuIHZhbDtcbiAgfVxuXG4gIGlmIChwb3J0ID49IDApIHtcbiAgICAvLyBwb3J0IG51bWJlclxuICAgIHJldHVybiBwb3J0O1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIEV2ZW50IGxpc3RlbmVyIGZvciBIVFRQIHNlcnZlciBcImVycm9yXCIgZXZlbnQuXG4gKi9cblxuZnVuY3Rpb24gb25FcnJvcihlcnJvcikge1xuICBpZiAoZXJyb3Iuc3lzY2FsbCAhPT0gJ2xpc3RlbicpIHtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxuXG4gIHZhciBiaW5kID0gdHlwZW9mIHBvcnQgPT09ICdzdHJpbmcnXG4gICAgPyAnUGlwZSAnICsgcG9ydFxuICAgIDogJ1BvcnQgJyArIHBvcnQ7XG5cbiAgLy8gaGFuZGxlIHNwZWNpZmljIGxpc3RlbiBlcnJvcnMgd2l0aCBmcmllbmRseSBtZXNzYWdlc1xuICBzd2l0Y2ggKGVycm9yLmNvZGUpIHtcbiAgICBjYXNlICdFQUNDRVMnOlxuICAgICAgY29uc29sZS5lcnJvcihiaW5kICsgJyByZXF1aXJlcyBlbGV2YXRlZCBwcml2aWxlZ2VzJyk7XG4gICAgICBwcm9jZXNzLmV4aXQoMSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdFQUREUklOVVNFJzpcbiAgICAgIGNvbnNvbGUuZXJyb3IoYmluZCArICcgaXMgYWxyZWFkeSBpbiB1c2UnKTtcbiAgICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG4vKipcbiAqIEV2ZW50IGxpc3RlbmVyIGZvciBIVFRQIHNlcnZlciBcImxpc3RlbmluZ1wiIGV2ZW50LlxuICovXG5cbmZ1bmN0aW9uIG9uTGlzdGVuaW5nKCkge1xuICB2YXIgYWRkciA9IHNlcnZlci5hZGRyZXNzKCk7XG4gIHZhciBiaW5kID0gdHlwZW9mIGFkZHIgPT09ICdzdHJpbmcnXG4gICAgPyAncGlwZSAnICsgYWRkclxuICAgIDogJ3BvcnQgJyArIGFkZHIucG9ydDtcbiAgZGVidWcoJ0xpc3RlbmluZyBvbiAnICsgYmluZCk7XG59XG4iLCJpbXBvcnQgZXhwcmVzcywgeyBqc29uLCB1cmxlbmNvZGVkIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgeyBqb2luIH0gZnJvbSAncGF0aCc7XG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gJ2Nvb2tpZS1wYXJzZXInO1xuaW1wb3J0IGxvZ2dlciBmcm9tICdtb3JnYW4nO1xuXG5pbXBvcnQgYXBpUm91dGVzIGZyb20gJy4vcm91dGVzL2FwaSc7XG5pbXBvcnQgeyBpbml0aWFsaXplREIgfSBmcm9tICcuL2RiJztcblxudmFyIGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShsb2dnZXIoJ2RldicpKTtcbmFwcC51c2UoanNvbigpKTtcbmFwcC51c2UodXJsZW5jb2RlZCh7XG4gICAgZXh0ZW5kZWQ6IGZhbHNlXG59KSk7XG5hcHAudXNlKGNvb2tpZVBhcnNlcigpKTtcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoam9pbihfX2Rpcm5hbWUsICdjbGllbnQvYnVpbGQnKSkpO1xuXG4vLyBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uIChlcnIsIHJlcSwgcmVzKSB7XG4gICAgLy8gc2V0IGxvY2Fscywgb25seSBwcm92aWRpbmcgZXJyb3IgaW4gZGV2ZWxvcG1lbnRcbiAgICByZXMubG9jYWxzLm1lc3NhZ2UgPSBlcnIubWVzc2FnZTtcbiAgICByZXMubG9jYWxzLmVycm9yID0gcmVxLmFwcC5nZXQoJ2VudicpID09PSAnZGV2ZWxvcG1lbnQnID8gZXJyIDoge307XG5cbiAgICAvLyByZW5kZXIgdGhlIGVycm9yIHBhZ2VcbiAgICByZXMuc3RhdHVzKGVyci5zdGF0dXMgfHwgNTAwKTtcbiAgICByZXMuc2VuZChlcnIubWVzc2FnZSk7XG59KTtcblxuaW5pdGlhbGl6ZURCKCk7XG5cbmFwcC51c2UoJy9hcGknLCBhcGlSb3V0ZXMpO1xuXG5leHBvcnQgZGVmYXVsdCBhcHA7IiwiLyohXG4gKiBkZXBkXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBjYWxsU2l0ZVRvU3RyaW5nXG5cbi8qKlxuICogRm9ybWF0IGEgQ2FsbFNpdGUgZmlsZSBsb2NhdGlvbiB0byBhIHN0cmluZy5cbiAqL1xuXG5mdW5jdGlvbiBjYWxsU2l0ZUZpbGVMb2NhdGlvbiAoY2FsbFNpdGUpIHtcbiAgdmFyIGZpbGVOYW1lXG4gIHZhciBmaWxlTG9jYXRpb24gPSAnJ1xuXG4gIGlmIChjYWxsU2l0ZS5pc05hdGl2ZSgpKSB7XG4gICAgZmlsZUxvY2F0aW9uID0gJ25hdGl2ZSdcbiAgfSBlbHNlIGlmIChjYWxsU2l0ZS5pc0V2YWwoKSkge1xuICAgIGZpbGVOYW1lID0gY2FsbFNpdGUuZ2V0U2NyaXB0TmFtZU9yU291cmNlVVJMKClcbiAgICBpZiAoIWZpbGVOYW1lKSB7XG4gICAgICBmaWxlTG9jYXRpb24gPSBjYWxsU2l0ZS5nZXRFdmFsT3JpZ2luKClcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZmlsZU5hbWUgPSBjYWxsU2l0ZS5nZXRGaWxlTmFtZSgpXG4gIH1cblxuICBpZiAoZmlsZU5hbWUpIHtcbiAgICBmaWxlTG9jYXRpb24gKz0gZmlsZU5hbWVcblxuICAgIHZhciBsaW5lTnVtYmVyID0gY2FsbFNpdGUuZ2V0TGluZU51bWJlcigpXG4gICAgaWYgKGxpbmVOdW1iZXIgIT0gbnVsbCkge1xuICAgICAgZmlsZUxvY2F0aW9uICs9ICc6JyArIGxpbmVOdW1iZXJcblxuICAgICAgdmFyIGNvbHVtbk51bWJlciA9IGNhbGxTaXRlLmdldENvbHVtbk51bWJlcigpXG4gICAgICBpZiAoY29sdW1uTnVtYmVyKSB7XG4gICAgICAgIGZpbGVMb2NhdGlvbiArPSAnOicgKyBjb2x1bW5OdW1iZXJcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmlsZUxvY2F0aW9uIHx8ICd1bmtub3duIHNvdXJjZSdcbn1cblxuLyoqXG4gKiBGb3JtYXQgYSBDYWxsU2l0ZSB0byBhIHN0cmluZy5cbiAqL1xuXG5mdW5jdGlvbiBjYWxsU2l0ZVRvU3RyaW5nIChjYWxsU2l0ZSkge1xuICB2YXIgYWRkU3VmZml4ID0gdHJ1ZVxuICB2YXIgZmlsZUxvY2F0aW9uID0gY2FsbFNpdGVGaWxlTG9jYXRpb24oY2FsbFNpdGUpXG4gIHZhciBmdW5jdGlvbk5hbWUgPSBjYWxsU2l0ZS5nZXRGdW5jdGlvbk5hbWUoKVxuICB2YXIgaXNDb25zdHJ1Y3RvciA9IGNhbGxTaXRlLmlzQ29uc3RydWN0b3IoKVxuICB2YXIgaXNNZXRob2RDYWxsID0gIShjYWxsU2l0ZS5pc1RvcGxldmVsKCkgfHwgaXNDb25zdHJ1Y3RvcilcbiAgdmFyIGxpbmUgPSAnJ1xuXG4gIGlmIChpc01ldGhvZENhbGwpIHtcbiAgICB2YXIgbWV0aG9kTmFtZSA9IGNhbGxTaXRlLmdldE1ldGhvZE5hbWUoKVxuICAgIHZhciB0eXBlTmFtZSA9IGdldENvbnN0cnVjdG9yTmFtZShjYWxsU2l0ZSlcblxuICAgIGlmIChmdW5jdGlvbk5hbWUpIHtcbiAgICAgIGlmICh0eXBlTmFtZSAmJiBmdW5jdGlvbk5hbWUuaW5kZXhPZih0eXBlTmFtZSkgIT09IDApIHtcbiAgICAgICAgbGluZSArPSB0eXBlTmFtZSArICcuJ1xuICAgICAgfVxuXG4gICAgICBsaW5lICs9IGZ1bmN0aW9uTmFtZVxuXG4gICAgICBpZiAobWV0aG9kTmFtZSAmJiBmdW5jdGlvbk5hbWUubGFzdEluZGV4T2YoJy4nICsgbWV0aG9kTmFtZSkgIT09IGZ1bmN0aW9uTmFtZS5sZW5ndGggLSBtZXRob2ROYW1lLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgbGluZSArPSAnIFthcyAnICsgbWV0aG9kTmFtZSArICddJ1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBsaW5lICs9IHR5cGVOYW1lICsgJy4nICsgKG1ldGhvZE5hbWUgfHwgJzxhbm9ueW1vdXM+JylcbiAgICB9XG4gIH0gZWxzZSBpZiAoaXNDb25zdHJ1Y3Rvcikge1xuICAgIGxpbmUgKz0gJ25ldyAnICsgKGZ1bmN0aW9uTmFtZSB8fCAnPGFub255bW91cz4nKVxuICB9IGVsc2UgaWYgKGZ1bmN0aW9uTmFtZSkge1xuICAgIGxpbmUgKz0gZnVuY3Rpb25OYW1lXG4gIH0gZWxzZSB7XG4gICAgYWRkU3VmZml4ID0gZmFsc2VcbiAgICBsaW5lICs9IGZpbGVMb2NhdGlvblxuICB9XG5cbiAgaWYgKGFkZFN1ZmZpeCkge1xuICAgIGxpbmUgKz0gJyAoJyArIGZpbGVMb2NhdGlvbiArICcpJ1xuICB9XG5cbiAgcmV0dXJuIGxpbmVcbn1cblxuLyoqXG4gKiBHZXQgY29uc3RydWN0b3IgbmFtZSBvZiByZXZpdmVyLlxuICovXG5cbmZ1bmN0aW9uIGdldENvbnN0cnVjdG9yTmFtZSAob2JqKSB7XG4gIHZhciByZWNlaXZlciA9IG9iai5yZWNlaXZlclxuICByZXR1cm4gKHJlY2VpdmVyLmNvbnN0cnVjdG9yICYmIHJlY2VpdmVyLmNvbnN0cnVjdG9yLm5hbWUpIHx8IG51bGxcbn1cbiIsIi8qIVxuICogZGVwZFxuICogQ29weXJpZ2h0KGMpIDIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZXZlbnRMaXN0ZW5lckNvdW50XG5cbi8qKlxuICogR2V0IHRoZSBjb3VudCBvZiBsaXN0ZW5lcnMgb24gYW4gZXZlbnQgZW1pdHRlciBvZiBhIHNwZWNpZmljIHR5cGUuXG4gKi9cblxuZnVuY3Rpb24gZXZlbnRMaXN0ZW5lckNvdW50IChlbWl0dGVyLCB0eXBlKSB7XG4gIHJldHVybiBlbWl0dGVyLmxpc3RlbmVycyh0eXBlKS5sZW5ndGhcbn1cbiIsIi8qIVxuICogc3RhdHVzZXNcbiAqIENvcHlyaWdodChjKSAyMDE0IEpvbmF0aGFuIE9uZ1xuICogQ29weXJpZ2h0KGMpIDIwMTYgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBjb2RlcyA9IHJlcXVpcmUoJy4vY29kZXMuanNvbicpXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBzdGF0dXNcblxuLy8gc3RhdHVzIGNvZGUgdG8gbWVzc2FnZSBtYXBcbnN0YXR1cy5TVEFUVVNfQ09ERVMgPSBjb2Rlc1xuXG4vLyBhcnJheSBvZiBzdGF0dXMgY29kZXNcbnN0YXR1cy5jb2RlcyA9IHBvcHVsYXRlU3RhdHVzZXNNYXAoc3RhdHVzLCBjb2RlcylcblxuLy8gc3RhdHVzIGNvZGVzIGZvciByZWRpcmVjdHNcbnN0YXR1cy5yZWRpcmVjdCA9IHtcbiAgMzAwOiB0cnVlLFxuICAzMDE6IHRydWUsXG4gIDMwMjogdHJ1ZSxcbiAgMzAzOiB0cnVlLFxuICAzMDU6IHRydWUsXG4gIDMwNzogdHJ1ZSxcbiAgMzA4OiB0cnVlXG59XG5cbi8vIHN0YXR1cyBjb2RlcyBmb3IgZW1wdHkgYm9kaWVzXG5zdGF0dXMuZW1wdHkgPSB7XG4gIDIwNDogdHJ1ZSxcbiAgMjA1OiB0cnVlLFxuICAzMDQ6IHRydWVcbn1cblxuLy8gc3RhdHVzIGNvZGVzIGZvciB3aGVuIHlvdSBzaG91bGQgcmV0cnkgdGhlIHJlcXVlc3RcbnN0YXR1cy5yZXRyeSA9IHtcbiAgNTAyOiB0cnVlLFxuICA1MDM6IHRydWUsXG4gIDUwNDogdHJ1ZVxufVxuXG4vKipcbiAqIFBvcHVsYXRlIHRoZSBzdGF0dXNlcyBtYXAgZm9yIGdpdmVuIGNvZGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwb3B1bGF0ZVN0YXR1c2VzTWFwIChzdGF0dXNlcywgY29kZXMpIHtcbiAgdmFyIGFyciA9IFtdXG5cbiAgT2JqZWN0LmtleXMoY29kZXMpLmZvckVhY2goZnVuY3Rpb24gZm9yRWFjaENvZGUgKGNvZGUpIHtcbiAgICB2YXIgbWVzc2FnZSA9IGNvZGVzW2NvZGVdXG4gICAgdmFyIHN0YXR1cyA9IE51bWJlcihjb2RlKVxuXG4gICAgLy8gUG9wdWxhdGUgcHJvcGVydGllc1xuICAgIHN0YXR1c2VzW3N0YXR1c10gPSBtZXNzYWdlXG4gICAgc3RhdHVzZXNbbWVzc2FnZV0gPSBzdGF0dXNcbiAgICBzdGF0dXNlc1ttZXNzYWdlLnRvTG93ZXJDYXNlKCldID0gc3RhdHVzXG5cbiAgICAvLyBBZGQgdG8gYXJyYXlcbiAgICBhcnIucHVzaChzdGF0dXMpXG4gIH0pXG5cbiAgcmV0dXJuIGFyclxufVxuXG4vKipcbiAqIEdldCB0aGUgc3RhdHVzIGNvZGUuXG4gKlxuICogR2l2ZW4gYSBudW1iZXIsIHRoaXMgd2lsbCB0aHJvdyBpZiBpdCBpcyBub3QgYSBrbm93biBzdGF0dXNcbiAqIGNvZGUsIG90aGVyd2lzZSB0aGUgY29kZSB3aWxsIGJlIHJldHVybmVkLiBHaXZlbiBhIHN0cmluZyxcbiAqIHRoZSBzdHJpbmcgd2lsbCBiZSBwYXJzZWQgZm9yIGEgbnVtYmVyIGFuZCByZXR1cm4gdGhlIGNvZGVcbiAqIGlmIHZhbGlkLCBvdGhlcndpc2Ugd2lsbCBsb29rdXAgdGhlIGNvZGUgYXNzdW1pbmcgdGhpcyBpc1xuICogdGhlIHN0YXR1cyBtZXNzYWdlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gY29kZVxuICogQHJldHVybnMge251bWJlcn1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBzdGF0dXMgKGNvZGUpIHtcbiAgaWYgKHR5cGVvZiBjb2RlID09PSAnbnVtYmVyJykge1xuICAgIGlmICghc3RhdHVzW2NvZGVdKSB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgc3RhdHVzIGNvZGU6ICcgKyBjb2RlKVxuICAgIHJldHVybiBjb2RlXG4gIH1cblxuICBpZiAodHlwZW9mIGNvZGUgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignY29kZSBtdXN0IGJlIGEgbnVtYmVyIG9yIHN0cmluZycpXG4gIH1cblxuICAvLyAnNDAzJ1xuICB2YXIgbiA9IHBhcnNlSW50KGNvZGUsIDEwKVxuICBpZiAoIWlzTmFOKG4pKSB7XG4gICAgaWYgKCFzdGF0dXNbbl0pIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBzdGF0dXMgY29kZTogJyArIG4pXG4gICAgcmV0dXJuIG5cbiAgfVxuXG4gIG4gPSBzdGF0dXNbY29kZS50b0xvd2VyQ2FzZSgpXVxuICBpZiAoIW4pIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBzdGF0dXMgbWVzc2FnZTogXCInICsgY29kZSArICdcIicpXG4gIHJldHVybiBuXG59XG4iLCJ0cnkge1xuICB2YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcbiAgaWYgKHR5cGVvZiB1dGlsLmluaGVyaXRzICE9PSAnZnVuY3Rpb24nKSB0aHJvdyAnJztcbiAgbW9kdWxlLmV4cG9ydHMgPSB1dGlsLmluaGVyaXRzO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vaW5oZXJpdHNfYnJvd3Nlci5qcycpO1xufVxuIiwiaWYgKHR5cGVvZiBPYmplY3QuY3JlYXRlID09PSAnZnVuY3Rpb24nKSB7XG4gIC8vIGltcGxlbWVudGF0aW9uIGZyb20gc3RhbmRhcmQgbm9kZS5qcyAndXRpbCcgbW9kdWxlXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICBjdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDdG9yLnByb3RvdHlwZSwge1xuICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgdmFsdWU6IGN0b3IsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gIH07XG59IGVsc2Uge1xuICAvLyBvbGQgc2Nob29sIHNoaW0gZm9yIG9sZCBicm93c2Vyc1xuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3Rvcikge1xuICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yXG4gICAgdmFyIFRlbXBDdG9yID0gZnVuY3Rpb24gKCkge31cbiAgICBUZW1wQ3Rvci5wcm90b3R5cGUgPSBzdXBlckN0b3IucHJvdG90eXBlXG4gICAgY3Rvci5wcm90b3R5cGUgPSBuZXcgVGVtcEN0b3IoKVxuICAgIGN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY3RvclxuICB9XG59XG4iLCIvKiFcbiAqIGV4cHJlc3NcbiAqIENvcHlyaWdodChjKSAyMDA5LTIwMTMgVEogSG9sb3dheWNodWtcbiAqIENvcHlyaWdodChjKSAyMDEzIFJvbWFuIFNodHlsbWFuXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvZXhwcmVzcycpO1xuIiwiLyohXG4gKiBleHByZXNzXG4gKiBDb3B5cmlnaHQoYykgMjAwOS0yMDEzIFRKIEhvbG93YXljaHVrXG4gKiBDb3B5cmlnaHQoYykgMjAxMyBSb21hbiBTaHR5bG1hblxuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxudmFyIGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xudmFyIG1peGluID0gcmVxdWlyZSgnbWVyZ2UtZGVzY3JpcHRvcnMnKTtcbnZhciBwcm90byA9IHJlcXVpcmUoJy4vYXBwbGljYXRpb24nKTtcbnZhciBSb3V0ZSA9IHJlcXVpcmUoJy4vcm91dGVyL3JvdXRlJyk7XG52YXIgUm91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXInKTtcbnZhciByZXEgPSByZXF1aXJlKCcuL3JlcXVlc3QnKTtcbnZhciByZXMgPSByZXF1aXJlKCcuL3Jlc3BvbnNlJyk7XG5cbi8qKlxuICogRXhwb3NlIGBjcmVhdGVBcHBsaWNhdGlvbigpYC5cbiAqL1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVBcHBsaWNhdGlvbjtcblxuLyoqXG4gKiBDcmVhdGUgYW4gZXhwcmVzcyBhcHBsaWNhdGlvbi5cbiAqXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlQXBwbGljYXRpb24oKSB7XG4gIHZhciBhcHAgPSBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICAgIGFwcC5oYW5kbGUocmVxLCByZXMsIG5leHQpO1xuICB9O1xuXG4gIG1peGluKGFwcCwgRXZlbnRFbWl0dGVyLnByb3RvdHlwZSwgZmFsc2UpO1xuICBtaXhpbihhcHAsIHByb3RvLCBmYWxzZSk7XG5cbiAgLy8gZXhwb3NlIHRoZSBwcm90b3R5cGUgdGhhdCB3aWxsIGdldCBzZXQgb24gcmVxdWVzdHNcbiAgYXBwLnJlcXVlc3QgPSBPYmplY3QuY3JlYXRlKHJlcSwge1xuICAgIGFwcDogeyBjb25maWd1cmFibGU6IHRydWUsIGVudW1lcmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZTogYXBwIH1cbiAgfSlcblxuICAvLyBleHBvc2UgdGhlIHByb3RvdHlwZSB0aGF0IHdpbGwgZ2V0IHNldCBvbiByZXNwb25zZXNcbiAgYXBwLnJlc3BvbnNlID0gT2JqZWN0LmNyZWF0ZShyZXMsIHtcbiAgICBhcHA6IHsgY29uZmlndXJhYmxlOiB0cnVlLCBlbnVtZXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWU6IGFwcCB9XG4gIH0pXG5cbiAgYXBwLmluaXQoKTtcbiAgcmV0dXJuIGFwcDtcbn1cblxuLyoqXG4gKiBFeHBvc2UgdGhlIHByb3RvdHlwZXMuXG4gKi9cblxuZXhwb3J0cy5hcHBsaWNhdGlvbiA9IHByb3RvO1xuZXhwb3J0cy5yZXF1ZXN0ID0gcmVxO1xuZXhwb3J0cy5yZXNwb25zZSA9IHJlcztcblxuLyoqXG4gKiBFeHBvc2UgY29uc3RydWN0b3JzLlxuICovXG5cbmV4cG9ydHMuUm91dGUgPSBSb3V0ZTtcbmV4cG9ydHMuUm91dGVyID0gUm91dGVyO1xuXG4vKipcbiAqIEV4cG9zZSBtaWRkbGV3YXJlXG4gKi9cblxuZXhwb3J0cy5qc29uID0gYm9keVBhcnNlci5qc29uXG5leHBvcnRzLnF1ZXJ5ID0gcmVxdWlyZSgnLi9taWRkbGV3YXJlL3F1ZXJ5Jyk7XG5leHBvcnRzLnN0YXRpYyA9IHJlcXVpcmUoJ3NlcnZlLXN0YXRpYycpO1xuZXhwb3J0cy51cmxlbmNvZGVkID0gYm9keVBhcnNlci51cmxlbmNvZGVkXG5cbi8qKlxuICogUmVwbGFjZSByZW1vdmVkIG1pZGRsZXdhcmUgd2l0aCBhbiBhcHByb3ByaWF0ZSBlcnJvciBtZXNzYWdlLlxuICovXG5cbnZhciByZW1vdmVkTWlkZGxld2FyZXMgPSBbXG4gICdib2R5UGFyc2VyJyxcbiAgJ2NvbXByZXNzJyxcbiAgJ2Nvb2tpZVNlc3Npb24nLFxuICAnc2Vzc2lvbicsXG4gICdsb2dnZXInLFxuICAnY29va2llUGFyc2VyJyxcbiAgJ2Zhdmljb24nLFxuICAncmVzcG9uc2VUaW1lJyxcbiAgJ2Vycm9ySGFuZGxlcicsXG4gICd0aW1lb3V0JyxcbiAgJ21ldGhvZE92ZXJyaWRlJyxcbiAgJ3Zob3N0JyxcbiAgJ2NzcmYnLFxuICAnZGlyZWN0b3J5JyxcbiAgJ2xpbWl0JyxcbiAgJ211bHRpcGFydCcsXG4gICdzdGF0aWNDYWNoZSdcbl1cblxucmVtb3ZlZE1pZGRsZXdhcmVzLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTW9zdCBtaWRkbGV3YXJlIChsaWtlICcgKyBuYW1lICsgJykgaXMgbm8gbG9uZ2VyIGJ1bmRsZWQgd2l0aCBFeHByZXNzIGFuZCBtdXN0IGJlIGluc3RhbGxlZCBzZXBhcmF0ZWx5LiBQbGVhc2Ugc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9zZW5jaGFsYWJzL2Nvbm5lY3QjbWlkZGxld2FyZS4nKTtcbiAgICB9LFxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICB9KTtcbn0pO1xuIiwiLyohXG4gKiBib2R5LXBhcnNlclxuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIGRlcHJlY2F0ZSA9IHJlcXVpcmUoJ2RlcGQnKSgnYm9keS1wYXJzZXInKVxuXG4vKipcbiAqIENhY2hlIG9mIGxvYWRlZCBwYXJzZXJzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgcGFyc2VycyA9IE9iamVjdC5jcmVhdGUobnVsbClcblxuLyoqXG4gKiBAdHlwZWRlZiBQYXJzZXJzXG4gKiBAdHlwZSB7ZnVuY3Rpb259XG4gKiBAcHJvcGVydHkge2Z1bmN0aW9ufSBqc29uXG4gKiBAcHJvcGVydHkge2Z1bmN0aW9ufSByYXdcbiAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb259IHRleHRcbiAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb259IHVybGVuY29kZWRcbiAqL1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHR5cGUge1BhcnNlcnN9XG4gKi9cblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZGVwcmVjYXRlLmZ1bmN0aW9uKGJvZHlQYXJzZXIsXG4gICdib2R5UGFyc2VyOiB1c2UgaW5kaXZpZHVhbCBqc29uL3VybGVuY29kZWQgbWlkZGxld2FyZXMnKVxuXG4vKipcbiAqIEpTT04gcGFyc2VyLlxuICogQHB1YmxpY1xuICovXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnanNvbicsIHtcbiAgY29uZmlndXJhYmxlOiB0cnVlLFxuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGNyZWF0ZVBhcnNlckdldHRlcignanNvbicpXG59KVxuXG4vKipcbiAqIFJhdyBwYXJzZXIuXG4gKiBAcHVibGljXG4gKi9cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdyYXcnLCB7XG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBjcmVhdGVQYXJzZXJHZXR0ZXIoJ3JhdycpXG59KVxuXG4vKipcbiAqIFRleHQgcGFyc2VyLlxuICogQHB1YmxpY1xuICovXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAndGV4dCcsIHtcbiAgY29uZmlndXJhYmxlOiB0cnVlLFxuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGNyZWF0ZVBhcnNlckdldHRlcigndGV4dCcpXG59KVxuXG4vKipcbiAqIFVSTC1lbmNvZGVkIHBhcnNlci5cbiAqIEBwdWJsaWNcbiAqL1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ3VybGVuY29kZWQnLCB7XG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBjcmVhdGVQYXJzZXJHZXR0ZXIoJ3VybGVuY29kZWQnKVxufSlcblxuLyoqXG4gKiBDcmVhdGUgYSBtaWRkbGV3YXJlIHRvIHBhcnNlIGpzb24gYW5kIHVybGVuY29kZWQgYm9kaWVzLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxuICogQGRlcHJlY2F0ZWRcbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBib2R5UGFyc2VyIChvcHRpb25zKSB7XG4gIHZhciBvcHRzID0ge31cblxuICAvLyBleGNsdWRlIHR5cGUgb3B0aW9uXG4gIGlmIChvcHRpb25zKSB7XG4gICAgZm9yICh2YXIgcHJvcCBpbiBvcHRpb25zKSB7XG4gICAgICBpZiAocHJvcCAhPT0gJ3R5cGUnKSB7XG4gICAgICAgIG9wdHNbcHJvcF0gPSBvcHRpb25zW3Byb3BdXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdmFyIF91cmxlbmNvZGVkID0gZXhwb3J0cy51cmxlbmNvZGVkKG9wdHMpXG4gIHZhciBfanNvbiA9IGV4cG9ydHMuanNvbihvcHRzKVxuXG4gIHJldHVybiBmdW5jdGlvbiBib2R5UGFyc2VyIChyZXEsIHJlcywgbmV4dCkge1xuICAgIF9qc29uKHJlcSwgcmVzLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICBpZiAoZXJyKSByZXR1cm4gbmV4dChlcnIpXG4gICAgICBfdXJsZW5jb2RlZChyZXEsIHJlcywgbmV4dClcbiAgICB9KVxuICB9XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgZ2V0dGVyIGZvciBsb2FkaW5nIGEgcGFyc2VyLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVQYXJzZXJHZXR0ZXIgKG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdldCAoKSB7XG4gICAgcmV0dXJuIGxvYWRQYXJzZXIobmFtZSlcbiAgfVxufVxuXG4vKipcbiAqIExvYWQgYSBwYXJzZXIgbW9kdWxlLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBsb2FkUGFyc2VyIChwYXJzZXJOYW1lKSB7XG4gIHZhciBwYXJzZXIgPSBwYXJzZXJzW3BhcnNlck5hbWVdXG5cbiAgaWYgKHBhcnNlciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIHBhcnNlclxuICB9XG5cbiAgLy8gdGhpcyB1c2VzIGEgc3dpdGNoIGZvciBzdGF0aWMgcmVxdWlyZSBhbmFseXNpc1xuICBzd2l0Y2ggKHBhcnNlck5hbWUpIHtcbiAgICBjYXNlICdqc29uJzpcbiAgICAgIHBhcnNlciA9IHJlcXVpcmUoJy4vbGliL3R5cGVzL2pzb24nKVxuICAgICAgYnJlYWtcbiAgICBjYXNlICdyYXcnOlxuICAgICAgcGFyc2VyID0gcmVxdWlyZSgnLi9saWIvdHlwZXMvcmF3JylcbiAgICAgIGJyZWFrXG4gICAgY2FzZSAndGV4dCc6XG4gICAgICBwYXJzZXIgPSByZXF1aXJlKCcuL2xpYi90eXBlcy90ZXh0JylcbiAgICAgIGJyZWFrXG4gICAgY2FzZSAndXJsZW5jb2RlZCc6XG4gICAgICBwYXJzZXIgPSByZXF1aXJlKCcuL2xpYi90eXBlcy91cmxlbmNvZGVkJylcbiAgICAgIGJyZWFrXG4gIH1cblxuICAvLyBzdG9yZSB0byBwcmV2ZW50IGludm9raW5nIHJlcXVpcmUoKVxuICByZXR1cm4gKHBhcnNlcnNbcGFyc2VyTmFtZV0gPSBwYXJzZXIpXG59XG4iLCIvKiFcbiAqIGJvZHktcGFyc2VyXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBieXRlcyA9IHJlcXVpcmUoJ2J5dGVzJylcbnZhciBjb250ZW50VHlwZSA9IHJlcXVpcmUoJ2NvbnRlbnQtdHlwZScpXG52YXIgY3JlYXRlRXJyb3IgPSByZXF1aXJlKCdodHRwLWVycm9ycycpXG52YXIgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdib2R5LXBhcnNlcjpqc29uJylcbnZhciByZWFkID0gcmVxdWlyZSgnLi4vcmVhZCcpXG52YXIgdHlwZWlzID0gcmVxdWlyZSgndHlwZS1pcycpXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBqc29uXG5cbi8qKlxuICogUmVnRXhwIHRvIG1hdGNoIHRoZSBmaXJzdCBub24tc3BhY2UgaW4gYSBzdHJpbmcuXG4gKlxuICogQWxsb3dlZCB3aGl0ZXNwYWNlIGlzIGRlZmluZWQgaW4gUkZDIDcxNTk6XG4gKlxuICogICAgd3MgPSAqKFxuICogICAgICAgICAgICAleDIwIC8gICAgICAgICAgICAgIDsgU3BhY2VcbiAqICAgICAgICAgICAgJXgwOSAvICAgICAgICAgICAgICA7IEhvcml6b250YWwgdGFiXG4gKiAgICAgICAgICAgICV4MEEgLyAgICAgICAgICAgICAgOyBMaW5lIGZlZWQgb3IgTmV3IGxpbmVcbiAqICAgICAgICAgICAgJXgwRCApICAgICAgICAgICAgICA7IENhcnJpYWdlIHJldHVyblxuICovXG5cbnZhciBGSVJTVF9DSEFSX1JFR0VYUCA9IC9eW1xceDIwXFx4MDlcXHgwYVxceDBkXSooLikvIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29udHJvbC1yZWdleFxuXG4vKipcbiAqIENyZWF0ZSBhIG1pZGRsZXdhcmUgdG8gcGFyc2UgSlNPTiBib2RpZXMuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICogQHJldHVybiB7ZnVuY3Rpb259XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24ganNvbiAob3B0aW9ucykge1xuICB2YXIgb3B0cyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgbGltaXQgPSB0eXBlb2Ygb3B0cy5saW1pdCAhPT0gJ251bWJlcidcbiAgICA/IGJ5dGVzLnBhcnNlKG9wdHMubGltaXQgfHwgJzEwMGtiJylcbiAgICA6IG9wdHMubGltaXRcbiAgdmFyIGluZmxhdGUgPSBvcHRzLmluZmxhdGUgIT09IGZhbHNlXG4gIHZhciByZXZpdmVyID0gb3B0cy5yZXZpdmVyXG4gIHZhciBzdHJpY3QgPSBvcHRzLnN0cmljdCAhPT0gZmFsc2VcbiAgdmFyIHR5cGUgPSBvcHRzLnR5cGUgfHwgJ2FwcGxpY2F0aW9uL2pzb24nXG4gIHZhciB2ZXJpZnkgPSBvcHRzLnZlcmlmeSB8fCBmYWxzZVxuXG4gIGlmICh2ZXJpZnkgIT09IGZhbHNlICYmIHR5cGVvZiB2ZXJpZnkgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gdmVyaWZ5IG11c3QgYmUgZnVuY3Rpb24nKVxuICB9XG5cbiAgLy8gY3JlYXRlIHRoZSBhcHByb3ByaWF0ZSB0eXBlIGNoZWNraW5nIGZ1bmN0aW9uXG4gIHZhciBzaG91bGRQYXJzZSA9IHR5cGVvZiB0eXBlICE9PSAnZnVuY3Rpb24nXG4gICAgPyB0eXBlQ2hlY2tlcih0eXBlKVxuICAgIDogdHlwZVxuXG4gIGZ1bmN0aW9uIHBhcnNlIChib2R5KSB7XG4gICAgaWYgKGJvZHkubGVuZ3RoID09PSAwKSB7XG4gICAgICAvLyBzcGVjaWFsLWNhc2UgZW1wdHkganNvbiBib2R5LCBhcyBpdCdzIGEgY29tbW9uIGNsaWVudC1zaWRlIG1pc3Rha2VcbiAgICAgIC8vIFRPRE86IG1heWJlIG1ha2UgdGhpcyBjb25maWd1cmFibGUgb3IgcGFydCBvZiBcInN0cmljdFwiIG9wdGlvblxuICAgICAgcmV0dXJuIHt9XG4gICAgfVxuXG4gICAgaWYgKHN0cmljdCkge1xuICAgICAgdmFyIGZpcnN0ID0gZmlyc3RjaGFyKGJvZHkpXG5cbiAgICAgIGlmIChmaXJzdCAhPT0gJ3snICYmIGZpcnN0ICE9PSAnWycpIHtcbiAgICAgICAgZGVidWcoJ3N0cmljdCB2aW9sYXRpb24nKVxuICAgICAgICB0aHJvdyBjcmVhdGVTdHJpY3RTeW50YXhFcnJvcihib2R5LCBmaXJzdClcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgZGVidWcoJ3BhcnNlIGpzb24nKVxuICAgICAgcmV0dXJuIEpTT04ucGFyc2UoYm9keSwgcmV2aXZlcilcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aHJvdyBub3JtYWxpemVKc29uU3ludGF4RXJyb3IoZSwge1xuICAgICAgICBtZXNzYWdlOiBlLm1lc3NhZ2UsXG4gICAgICAgIHN0YWNrOiBlLnN0YWNrXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiBqc29uUGFyc2VyIChyZXEsIHJlcywgbmV4dCkge1xuICAgIGlmIChyZXEuX2JvZHkpIHtcbiAgICAgIGRlYnVnKCdib2R5IGFscmVhZHkgcGFyc2VkJylcbiAgICAgIG5leHQoKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgcmVxLmJvZHkgPSByZXEuYm9keSB8fCB7fVxuXG4gICAgLy8gc2tpcCByZXF1ZXN0cyB3aXRob3V0IGJvZGllc1xuICAgIGlmICghdHlwZWlzLmhhc0JvZHkocmVxKSkge1xuICAgICAgZGVidWcoJ3NraXAgZW1wdHkgYm9keScpXG4gICAgICBuZXh0KClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGRlYnVnKCdjb250ZW50LXR5cGUgJWonLCByZXEuaGVhZGVyc1snY29udGVudC10eXBlJ10pXG5cbiAgICAvLyBkZXRlcm1pbmUgaWYgcmVxdWVzdCBzaG91bGQgYmUgcGFyc2VkXG4gICAgaWYgKCFzaG91bGRQYXJzZShyZXEpKSB7XG4gICAgICBkZWJ1Zygnc2tpcCBwYXJzaW5nJylcbiAgICAgIG5leHQoKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgLy8gYXNzZXJ0IGNoYXJzZXQgcGVyIFJGQyA3MTU5IHNlYyA4LjFcbiAgICB2YXIgY2hhcnNldCA9IGdldENoYXJzZXQocmVxKSB8fCAndXRmLTgnXG4gICAgaWYgKGNoYXJzZXQuc3Vic3RyKDAsIDQpICE9PSAndXRmLScpIHtcbiAgICAgIGRlYnVnKCdpbnZhbGlkIGNoYXJzZXQnKVxuICAgICAgbmV4dChjcmVhdGVFcnJvcig0MTUsICd1bnN1cHBvcnRlZCBjaGFyc2V0IFwiJyArIGNoYXJzZXQudG9VcHBlckNhc2UoKSArICdcIicsIHtcbiAgICAgICAgY2hhcnNldDogY2hhcnNldCxcbiAgICAgICAgdHlwZTogJ2NoYXJzZXQudW5zdXBwb3J0ZWQnXG4gICAgICB9KSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIHJlYWRcbiAgICByZWFkKHJlcSwgcmVzLCBuZXh0LCBwYXJzZSwgZGVidWcsIHtcbiAgICAgIGVuY29kaW5nOiBjaGFyc2V0LFxuICAgICAgaW5mbGF0ZTogaW5mbGF0ZSxcbiAgICAgIGxpbWl0OiBsaW1pdCxcbiAgICAgIHZlcmlmeTogdmVyaWZ5XG4gICAgfSlcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSBzdHJpY3QgdmlvbGF0aW9uIHN5bnRheCBlcnJvciBtYXRjaGluZyBuYXRpdmUgZXJyb3IuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxuICogQHBhcmFtIHtzdHJpbmd9IGNoYXJcbiAqIEByZXR1cm4ge0Vycm9yfVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVTdHJpY3RTeW50YXhFcnJvciAoc3RyLCBjaGFyKSB7XG4gIHZhciBpbmRleCA9IHN0ci5pbmRleE9mKGNoYXIpXG4gIHZhciBwYXJ0aWFsID0gc3RyLnN1YnN0cmluZygwLCBpbmRleCkgKyAnIydcblxuICB0cnkge1xuICAgIEpTT04ucGFyc2UocGFydGlhbCk7IC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovIHRocm93IG5ldyBTeW50YXhFcnJvcignc3RyaWN0IHZpb2xhdGlvbicpXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gbm9ybWFsaXplSnNvblN5bnRheEVycm9yKGUsIHtcbiAgICAgIG1lc3NhZ2U6IGUubWVzc2FnZS5yZXBsYWNlKCcjJywgY2hhciksXG4gICAgICBzdGFjazogZS5zdGFja1xuICAgIH0pXG4gIH1cbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZpcnN0IG5vbi13aGl0ZXNwYWNlIGNoYXJhY3RlciBpbiBhIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtmdW5jdGlvbn1cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZmlyc3RjaGFyIChzdHIpIHtcbiAgcmV0dXJuIEZJUlNUX0NIQVJfUkVHRVhQLmV4ZWMoc3RyKVsxXVxufVxuXG4vKipcbiAqIEdldCB0aGUgY2hhcnNldCBvZiBhIHJlcXVlc3QuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHJlcVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0Q2hhcnNldCAocmVxKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIChjb250ZW50VHlwZS5wYXJzZShyZXEpLnBhcmFtZXRlcnMuY2hhcnNldCB8fCAnJykudG9Mb3dlckNhc2UoKVxuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9XG59XG5cbi8qKlxuICogTm9ybWFsaXplIGEgU3ludGF4RXJyb3IgZm9yIEpTT04ucGFyc2UuXG4gKlxuICogQHBhcmFtIHtTeW50YXhFcnJvcn0gZXJyb3JcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge1N5bnRheEVycm9yfVxuICovXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZUpzb25TeW50YXhFcnJvciAoZXJyb3IsIG9iaikge1xuICB2YXIga2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGVycm9yKVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSBrZXlzW2ldXG4gICAgaWYgKGtleSAhPT0gJ3N0YWNrJyAmJiBrZXkgIT09ICdtZXNzYWdlJykge1xuICAgICAgZGVsZXRlIGVycm9yW2tleV1cbiAgICB9XG4gIH1cblxuICAvLyByZXBsYWNlIHN0YWNrIGJlZm9yZSBtZXNzYWdlIGZvciBOb2RlLmpzIDAuMTAgYW5kIGJlbG93XG4gIGVycm9yLnN0YWNrID0gb2JqLnN0YWNrLnJlcGxhY2UoZXJyb3IubWVzc2FnZSwgb2JqLm1lc3NhZ2UpXG4gIGVycm9yLm1lc3NhZ2UgPSBvYmoubWVzc2FnZVxuXG4gIHJldHVybiBlcnJvclxufVxuXG4vKipcbiAqIEdldCB0aGUgc2ltcGxlIHR5cGUgY2hlY2tlci5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICogQHJldHVybiB7ZnVuY3Rpb259XG4gKi9cblxuZnVuY3Rpb24gdHlwZUNoZWNrZXIgKHR5cGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGNoZWNrVHlwZSAocmVxKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odHlwZWlzKHJlcSwgdHlwZSkpXG4gIH1cbn1cbiIsIi8qKlxuICogVGhpcyBpcyB0aGUgd2ViIGJyb3dzZXIgaW1wbGVtZW50YXRpb24gb2YgYGRlYnVnKClgLlxuICpcbiAqIEV4cG9zZSBgZGVidWcoKWAgYXMgdGhlIG1vZHVsZS5cbiAqL1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2RlYnVnJyk7XG5leHBvcnRzLmxvZyA9IGxvZztcbmV4cG9ydHMuZm9ybWF0QXJncyA9IGZvcm1hdEFyZ3M7XG5leHBvcnRzLnNhdmUgPSBzYXZlO1xuZXhwb3J0cy5sb2FkID0gbG9hZDtcbmV4cG9ydHMudXNlQ29sb3JzID0gdXNlQ29sb3JzO1xuZXhwb3J0cy5zdG9yYWdlID0gJ3VuZGVmaW5lZCcgIT0gdHlwZW9mIGNocm9tZVxuICAgICAgICAgICAgICAgJiYgJ3VuZGVmaW5lZCcgIT0gdHlwZW9mIGNocm9tZS5zdG9yYWdlXG4gICAgICAgICAgICAgICAgICA/IGNocm9tZS5zdG9yYWdlLmxvY2FsXG4gICAgICAgICAgICAgICAgICA6IGxvY2Fsc3RvcmFnZSgpO1xuXG4vKipcbiAqIENvbG9ycy5cbiAqL1xuXG5leHBvcnRzLmNvbG9ycyA9IFtcbiAgJ2xpZ2h0c2VhZ3JlZW4nLFxuICAnZm9yZXN0Z3JlZW4nLFxuICAnZ29sZGVucm9kJyxcbiAgJ2RvZGdlcmJsdWUnLFxuICAnZGFya29yY2hpZCcsXG4gICdjcmltc29uJ1xuXTtcblxuLyoqXG4gKiBDdXJyZW50bHkgb25seSBXZWJLaXQtYmFzZWQgV2ViIEluc3BlY3RvcnMsIEZpcmVmb3ggPj0gdjMxLFxuICogYW5kIHRoZSBGaXJlYnVnIGV4dGVuc2lvbiAoYW55IEZpcmVmb3ggdmVyc2lvbikgYXJlIGtub3duXG4gKiB0byBzdXBwb3J0IFwiJWNcIiBDU1MgY3VzdG9taXphdGlvbnMuXG4gKlxuICogVE9ETzogYWRkIGEgYGxvY2FsU3RvcmFnZWAgdmFyaWFibGUgdG8gZXhwbGljaXRseSBlbmFibGUvZGlzYWJsZSBjb2xvcnNcbiAqL1xuXG5mdW5jdGlvbiB1c2VDb2xvcnMoKSB7XG4gIC8vIE5COiBJbiBhbiBFbGVjdHJvbiBwcmVsb2FkIHNjcmlwdCwgZG9jdW1lbnQgd2lsbCBiZSBkZWZpbmVkIGJ1dCBub3QgZnVsbHlcbiAgLy8gaW5pdGlhbGl6ZWQuIFNpbmNlIHdlIGtub3cgd2UncmUgaW4gQ2hyb21lLCB3ZSdsbCBqdXN0IGRldGVjdCB0aGlzIGNhc2VcbiAgLy8gZXhwbGljaXRseVxuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LnByb2Nlc3MgJiYgd2luZG93LnByb2Nlc3MudHlwZSA9PT0gJ3JlbmRlcmVyJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLy8gaXMgd2Via2l0PyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xNjQ1OTYwNi8zNzY3NzNcbiAgLy8gZG9jdW1lbnQgaXMgdW5kZWZpbmVkIGluIHJlYWN0LW5hdGl2ZTogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0LW5hdGl2ZS9wdWxsLzE2MzJcbiAgcmV0dXJuICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLldlYmtpdEFwcGVhcmFuY2UpIHx8XG4gICAgLy8gaXMgZmlyZWJ1Zz8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzk4MTIwLzM3Njc3M1xuICAgICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuY29uc29sZSAmJiAod2luZG93LmNvbnNvbGUuZmlyZWJ1ZyB8fCAod2luZG93LmNvbnNvbGUuZXhjZXB0aW9uICYmIHdpbmRvdy5jb25zb2xlLnRhYmxlKSkpIHx8XG4gICAgLy8gaXMgZmlyZWZveCA+PSB2MzE/XG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9Ub29scy9XZWJfQ29uc29sZSNTdHlsaW5nX21lc3NhZ2VzXG4gICAgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci51c2VyQWdlbnQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLm1hdGNoKC9maXJlZm94XFwvKFxcZCspLykgJiYgcGFyc2VJbnQoUmVnRXhwLiQxLCAxMCkgPj0gMzEpIHx8XG4gICAgLy8gZG91YmxlIGNoZWNrIHdlYmtpdCBpbiB1c2VyQWdlbnQganVzdCBpbiBjYXNlIHdlIGFyZSBpbiBhIHdvcmtlclxuICAgICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IudXNlckFnZW50ICYmIG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5tYXRjaCgvYXBwbGV3ZWJraXRcXC8oXFxkKykvKSk7XG59XG5cbi8qKlxuICogTWFwICVqIHRvIGBKU09OLnN0cmluZ2lmeSgpYCwgc2luY2Ugbm8gV2ViIEluc3BlY3RvcnMgZG8gdGhhdCBieSBkZWZhdWx0LlxuICovXG5cbmV4cG9ydHMuZm9ybWF0dGVycy5qID0gZnVuY3Rpb24odikge1xuICB0cnkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuICdbVW5leHBlY3RlZEpTT05QYXJzZUVycm9yXTogJyArIGVyci5tZXNzYWdlO1xuICB9XG59O1xuXG5cbi8qKlxuICogQ29sb3JpemUgbG9nIGFyZ3VtZW50cyBpZiBlbmFibGVkLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZm9ybWF0QXJncyhhcmdzKSB7XG4gIHZhciB1c2VDb2xvcnMgPSB0aGlzLnVzZUNvbG9ycztcblxuICBhcmdzWzBdID0gKHVzZUNvbG9ycyA/ICclYycgOiAnJylcbiAgICArIHRoaXMubmFtZXNwYWNlXG4gICAgKyAodXNlQ29sb3JzID8gJyAlYycgOiAnICcpXG4gICAgKyBhcmdzWzBdXG4gICAgKyAodXNlQ29sb3JzID8gJyVjICcgOiAnICcpXG4gICAgKyAnKycgKyBleHBvcnRzLmh1bWFuaXplKHRoaXMuZGlmZik7XG5cbiAgaWYgKCF1c2VDb2xvcnMpIHJldHVybjtcblxuICB2YXIgYyA9ICdjb2xvcjogJyArIHRoaXMuY29sb3I7XG4gIGFyZ3Muc3BsaWNlKDEsIDAsIGMsICdjb2xvcjogaW5oZXJpdCcpXG5cbiAgLy8gdGhlIGZpbmFsIFwiJWNcIiBpcyBzb21ld2hhdCB0cmlja3ksIGJlY2F1c2UgdGhlcmUgY291bGQgYmUgb3RoZXJcbiAgLy8gYXJndW1lbnRzIHBhc3NlZCBlaXRoZXIgYmVmb3JlIG9yIGFmdGVyIHRoZSAlYywgc28gd2UgbmVlZCB0b1xuICAvLyBmaWd1cmUgb3V0IHRoZSBjb3JyZWN0IGluZGV4IHRvIGluc2VydCB0aGUgQ1NTIGludG9cbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxhc3RDID0gMDtcbiAgYXJnc1swXS5yZXBsYWNlKC8lW2EtekEtWiVdL2csIGZ1bmN0aW9uKG1hdGNoKSB7XG4gICAgaWYgKCclJScgPT09IG1hdGNoKSByZXR1cm47XG4gICAgaW5kZXgrKztcbiAgICBpZiAoJyVjJyA9PT0gbWF0Y2gpIHtcbiAgICAgIC8vIHdlIG9ubHkgYXJlIGludGVyZXN0ZWQgaW4gdGhlICpsYXN0KiAlY1xuICAgICAgLy8gKHRoZSB1c2VyIG1heSBoYXZlIHByb3ZpZGVkIHRoZWlyIG93bilcbiAgICAgIGxhc3RDID0gaW5kZXg7XG4gICAgfVxuICB9KTtcblxuICBhcmdzLnNwbGljZShsYXN0QywgMCwgYyk7XG59XG5cbi8qKlxuICogSW52b2tlcyBgY29uc29sZS5sb2coKWAgd2hlbiBhdmFpbGFibGUuXG4gKiBOby1vcCB3aGVuIGBjb25zb2xlLmxvZ2AgaXMgbm90IGEgXCJmdW5jdGlvblwiLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gbG9nKCkge1xuICAvLyB0aGlzIGhhY2tlcnkgaXMgcmVxdWlyZWQgZm9yIElFOC85LCB3aGVyZVxuICAvLyB0aGUgYGNvbnNvbGUubG9nYCBmdW5jdGlvbiBkb2Vzbid0IGhhdmUgJ2FwcGx5J1xuICByZXR1cm4gJ29iamVjdCcgPT09IHR5cGVvZiBjb25zb2xlXG4gICAgJiYgY29uc29sZS5sb2dcbiAgICAmJiBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuY2FsbChjb25zb2xlLmxvZywgY29uc29sZSwgYXJndW1lbnRzKTtcbn1cblxuLyoqXG4gKiBTYXZlIGBuYW1lc3BhY2VzYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2F2ZShuYW1lc3BhY2VzKSB7XG4gIHRyeSB7XG4gICAgaWYgKG51bGwgPT0gbmFtZXNwYWNlcykge1xuICAgICAgZXhwb3J0cy5zdG9yYWdlLnJlbW92ZUl0ZW0oJ2RlYnVnJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV4cG9ydHMuc3RvcmFnZS5kZWJ1ZyA9IG5hbWVzcGFjZXM7XG4gICAgfVxuICB9IGNhdGNoKGUpIHt9XG59XG5cbi8qKlxuICogTG9hZCBgbmFtZXNwYWNlc2AuXG4gKlxuICogQHJldHVybiB7U3RyaW5nfSByZXR1cm5zIHRoZSBwcmV2aW91c2x5IHBlcnNpc3RlZCBkZWJ1ZyBtb2Rlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbG9hZCgpIHtcbiAgdmFyIHI7XG4gIHRyeSB7XG4gICAgciA9IGV4cG9ydHMuc3RvcmFnZS5kZWJ1ZztcbiAgfSBjYXRjaChlKSB7fVxuXG4gIC8vIElmIGRlYnVnIGlzbid0IHNldCBpbiBMUywgYW5kIHdlJ3JlIGluIEVsZWN0cm9uLCB0cnkgdG8gbG9hZCAkREVCVUdcbiAgaWYgKCFyICYmIHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiAnZW52JyBpbiBwcm9jZXNzKSB7XG4gICAgciA9IHByb2Nlc3MuZW52LkRFQlVHO1xuICB9XG5cbiAgcmV0dXJuIHI7XG59XG5cbi8qKlxuICogRW5hYmxlIG5hbWVzcGFjZXMgbGlzdGVkIGluIGBsb2NhbFN0b3JhZ2UuZGVidWdgIGluaXRpYWxseS5cbiAqL1xuXG5leHBvcnRzLmVuYWJsZShsb2FkKCkpO1xuXG4vKipcbiAqIExvY2Fsc3RvcmFnZSBhdHRlbXB0cyB0byByZXR1cm4gdGhlIGxvY2Fsc3RvcmFnZS5cbiAqXG4gKiBUaGlzIGlzIG5lY2Vzc2FyeSBiZWNhdXNlIHNhZmFyaSB0aHJvd3NcbiAqIHdoZW4gYSB1c2VyIGRpc2FibGVzIGNvb2tpZXMvbG9jYWxzdG9yYWdlXG4gKiBhbmQgeW91IGF0dGVtcHQgdG8gYWNjZXNzIGl0LlxuICpcbiAqIEByZXR1cm4ge0xvY2FsU3RvcmFnZX1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGxvY2Fsc3RvcmFnZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93LmxvY2FsU3RvcmFnZTtcbiAgfSBjYXRjaCAoZSkge31cbn1cbiIsIi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xuXG52YXIgdHR5ID0gcmVxdWlyZSgndHR5Jyk7XG52YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBOb2RlLmpzIGltcGxlbWVudGF0aW9uIG9mIGBkZWJ1ZygpYC5cbiAqXG4gKiBFeHBvc2UgYGRlYnVnKClgIGFzIHRoZSBtb2R1bGUuXG4gKi9cblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kZWJ1ZycpO1xuZXhwb3J0cy5pbml0ID0gaW5pdDtcbmV4cG9ydHMubG9nID0gbG9nO1xuZXhwb3J0cy5mb3JtYXRBcmdzID0gZm9ybWF0QXJncztcbmV4cG9ydHMuc2F2ZSA9IHNhdmU7XG5leHBvcnRzLmxvYWQgPSBsb2FkO1xuZXhwb3J0cy51c2VDb2xvcnMgPSB1c2VDb2xvcnM7XG5cbi8qKlxuICogQ29sb3JzLlxuICovXG5cbmV4cG9ydHMuY29sb3JzID0gWzYsIDIsIDMsIDQsIDUsIDFdO1xuXG4vKipcbiAqIEJ1aWxkIHVwIHRoZSBkZWZhdWx0IGBpbnNwZWN0T3B0c2Agb2JqZWN0IGZyb20gdGhlIGVudmlyb25tZW50IHZhcmlhYmxlcy5cbiAqXG4gKiAgICQgREVCVUdfQ09MT1JTPW5vIERFQlVHX0RFUFRIPTEwIERFQlVHX1NIT1dfSElEREVOPWVuYWJsZWQgbm9kZSBzY3JpcHQuanNcbiAqL1xuXG5leHBvcnRzLmluc3BlY3RPcHRzID0gT2JqZWN0LmtleXMocHJvY2Vzcy5lbnYpLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiAvXmRlYnVnXy9pLnRlc3Qoa2V5KTtcbn0pLnJlZHVjZShmdW5jdGlvbiAob2JqLCBrZXkpIHtcbiAgLy8gY2FtZWwtY2FzZVxuICB2YXIgcHJvcCA9IGtleVxuICAgIC5zdWJzdHJpbmcoNilcbiAgICAudG9Mb3dlckNhc2UoKVxuICAgIC5yZXBsYWNlKC9fKFthLXpdKS9nLCBmdW5jdGlvbiAoXywgaykgeyByZXR1cm4gay50b1VwcGVyQ2FzZSgpIH0pO1xuXG4gIC8vIGNvZXJjZSBzdHJpbmcgdmFsdWUgaW50byBKUyB2YWx1ZVxuICB2YXIgdmFsID0gcHJvY2Vzcy5lbnZba2V5XTtcbiAgaWYgKC9eKHllc3xvbnx0cnVlfGVuYWJsZWQpJC9pLnRlc3QodmFsKSkgdmFsID0gdHJ1ZTtcbiAgZWxzZSBpZiAoL14obm98b2ZmfGZhbHNlfGRpc2FibGVkKSQvaS50ZXN0KHZhbCkpIHZhbCA9IGZhbHNlO1xuICBlbHNlIGlmICh2YWwgPT09ICdudWxsJykgdmFsID0gbnVsbDtcbiAgZWxzZSB2YWwgPSBOdW1iZXIodmFsKTtcblxuICBvYmpbcHJvcF0gPSB2YWw7XG4gIHJldHVybiBvYmo7XG59LCB7fSk7XG5cbi8qKlxuICogVGhlIGZpbGUgZGVzY3JpcHRvciB0byB3cml0ZSB0aGUgYGRlYnVnKClgIGNhbGxzIHRvLlxuICogU2V0IHRoZSBgREVCVUdfRkRgIGVudiB2YXJpYWJsZSB0byBvdmVycmlkZSB3aXRoIGFub3RoZXIgdmFsdWUuIGkuZS46XG4gKlxuICogICAkIERFQlVHX0ZEPTMgbm9kZSBzY3JpcHQuanMgMz5kZWJ1Zy5sb2dcbiAqL1xuXG52YXIgZmQgPSBwYXJzZUludChwcm9jZXNzLmVudi5ERUJVR19GRCwgMTApIHx8IDI7XG5cbmlmICgxICE9PSBmZCAmJiAyICE9PSBmZCkge1xuICB1dGlsLmRlcHJlY2F0ZShmdW5jdGlvbigpe30sICdleGNlcHQgZm9yIHN0ZGVycigyKSBhbmQgc3Rkb3V0KDEpLCBhbnkgb3RoZXIgdXNhZ2Ugb2YgREVCVUdfRkQgaXMgZGVwcmVjYXRlZC4gT3ZlcnJpZGUgZGVidWcubG9nIGlmIHlvdSB3YW50IHRvIHVzZSBhIGRpZmZlcmVudCBsb2cgZnVuY3Rpb24gKGh0dHBzOi8vZ2l0LmlvL2RlYnVnX2ZkKScpKClcbn1cblxudmFyIHN0cmVhbSA9IDEgPT09IGZkID8gcHJvY2Vzcy5zdGRvdXQgOlxuICAgICAgICAgICAgIDIgPT09IGZkID8gcHJvY2Vzcy5zdGRlcnIgOlxuICAgICAgICAgICAgIGNyZWF0ZVdyaXRhYmxlU3RkaW9TdHJlYW0oZmQpO1xuXG4vKipcbiAqIElzIHN0ZG91dCBhIFRUWT8gQ29sb3JlZCBvdXRwdXQgaXMgZW5hYmxlZCB3aGVuIGB0cnVlYC5cbiAqL1xuXG5mdW5jdGlvbiB1c2VDb2xvcnMoKSB7XG4gIHJldHVybiAnY29sb3JzJyBpbiBleHBvcnRzLmluc3BlY3RPcHRzXG4gICAgPyBCb29sZWFuKGV4cG9ydHMuaW5zcGVjdE9wdHMuY29sb3JzKVxuICAgIDogdHR5LmlzYXR0eShmZCk7XG59XG5cbi8qKlxuICogTWFwICVvIHRvIGB1dGlsLmluc3BlY3QoKWAsIGFsbCBvbiBhIHNpbmdsZSBsaW5lLlxuICovXG5cbmV4cG9ydHMuZm9ybWF0dGVycy5vID0gZnVuY3Rpb24odikge1xuICB0aGlzLmluc3BlY3RPcHRzLmNvbG9ycyA9IHRoaXMudXNlQ29sb3JzO1xuICByZXR1cm4gdXRpbC5pbnNwZWN0KHYsIHRoaXMuaW5zcGVjdE9wdHMpXG4gICAgLnNwbGl0KCdcXG4nKS5tYXAoZnVuY3Rpb24oc3RyKSB7XG4gICAgICByZXR1cm4gc3RyLnRyaW0oKVxuICAgIH0pLmpvaW4oJyAnKTtcbn07XG5cbi8qKlxuICogTWFwICVvIHRvIGB1dGlsLmluc3BlY3QoKWAsIGFsbG93aW5nIG11bHRpcGxlIGxpbmVzIGlmIG5lZWRlZC5cbiAqL1xuXG5leHBvcnRzLmZvcm1hdHRlcnMuTyA9IGZ1bmN0aW9uKHYpIHtcbiAgdGhpcy5pbnNwZWN0T3B0cy5jb2xvcnMgPSB0aGlzLnVzZUNvbG9ycztcbiAgcmV0dXJuIHV0aWwuaW5zcGVjdCh2LCB0aGlzLmluc3BlY3RPcHRzKTtcbn07XG5cbi8qKlxuICogQWRkcyBBTlNJIGNvbG9yIGVzY2FwZSBjb2RlcyBpZiBlbmFibGVkLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZm9ybWF0QXJncyhhcmdzKSB7XG4gIHZhciBuYW1lID0gdGhpcy5uYW1lc3BhY2U7XG4gIHZhciB1c2VDb2xvcnMgPSB0aGlzLnVzZUNvbG9ycztcblxuICBpZiAodXNlQ29sb3JzKSB7XG4gICAgdmFyIGMgPSB0aGlzLmNvbG9yO1xuICAgIHZhciBwcmVmaXggPSAnICBcXHUwMDFiWzMnICsgYyArICc7MW0nICsgbmFtZSArICcgJyArICdcXHUwMDFiWzBtJztcblxuICAgIGFyZ3NbMF0gPSBwcmVmaXggKyBhcmdzWzBdLnNwbGl0KCdcXG4nKS5qb2luKCdcXG4nICsgcHJlZml4KTtcbiAgICBhcmdzLnB1c2goJ1xcdTAwMWJbMycgKyBjICsgJ20rJyArIGV4cG9ydHMuaHVtYW5pemUodGhpcy5kaWZmKSArICdcXHUwMDFiWzBtJyk7XG4gIH0gZWxzZSB7XG4gICAgYXJnc1swXSA9IG5ldyBEYXRlKCkudG9VVENTdHJpbmcoKVxuICAgICAgKyAnICcgKyBuYW1lICsgJyAnICsgYXJnc1swXTtcbiAgfVxufVxuXG4vKipcbiAqIEludm9rZXMgYHV0aWwuZm9ybWF0KClgIHdpdGggdGhlIHNwZWNpZmllZCBhcmd1bWVudHMgYW5kIHdyaXRlcyB0byBgc3RyZWFtYC5cbiAqL1xuXG5mdW5jdGlvbiBsb2coKSB7XG4gIHJldHVybiBzdHJlYW0ud3JpdGUodXRpbC5mb3JtYXQuYXBwbHkodXRpbCwgYXJndW1lbnRzKSArICdcXG4nKTtcbn1cblxuLyoqXG4gKiBTYXZlIGBuYW1lc3BhY2VzYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2F2ZShuYW1lc3BhY2VzKSB7XG4gIGlmIChudWxsID09IG5hbWVzcGFjZXMpIHtcbiAgICAvLyBJZiB5b3Ugc2V0IGEgcHJvY2Vzcy5lbnYgZmllbGQgdG8gbnVsbCBvciB1bmRlZmluZWQsIGl0IGdldHMgY2FzdCB0byB0aGVcbiAgICAvLyBzdHJpbmcgJ251bGwnIG9yICd1bmRlZmluZWQnLiBKdXN0IGRlbGV0ZSBpbnN0ZWFkLlxuICAgIGRlbGV0ZSBwcm9jZXNzLmVudi5ERUJVRztcbiAgfSBlbHNlIHtcbiAgICBwcm9jZXNzLmVudi5ERUJVRyA9IG5hbWVzcGFjZXM7XG4gIH1cbn1cblxuLyoqXG4gKiBMb2FkIGBuYW1lc3BhY2VzYC5cbiAqXG4gKiBAcmV0dXJuIHtTdHJpbmd9IHJldHVybnMgdGhlIHByZXZpb3VzbHkgcGVyc2lzdGVkIGRlYnVnIG1vZGVzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBsb2FkKCkge1xuICByZXR1cm4gcHJvY2Vzcy5lbnYuREVCVUc7XG59XG5cbi8qKlxuICogQ29waWVkIGZyb20gYG5vZGUvc3JjL25vZGUuanNgLlxuICpcbiAqIFhYWDogSXQncyBsYW1lIHRoYXQgbm9kZSBkb2Vzbid0IGV4cG9zZSB0aGlzIEFQSSBvdXQtb2YtdGhlLWJveC4gSXQgYWxzb1xuICogcmVsaWVzIG9uIHRoZSB1bmRvY3VtZW50ZWQgYHR0eV93cmFwLmd1ZXNzSGFuZGxlVHlwZSgpYCB3aGljaCBpcyBhbHNvIGxhbWUuXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlV3JpdGFibGVTdGRpb1N0cmVhbSAoZmQpIHtcbiAgdmFyIHN0cmVhbTtcbiAgdmFyIHR0eV93cmFwID0gcHJvY2Vzcy5iaW5kaW5nKCd0dHlfd3JhcCcpO1xuXG4gIC8vIE5vdGUgc3RyZWFtLl90eXBlIGlzIHVzZWQgZm9yIHRlc3QtbW9kdWxlLWxvYWQtbGlzdC5qc1xuXG4gIHN3aXRjaCAodHR5X3dyYXAuZ3Vlc3NIYW5kbGVUeXBlKGZkKSkge1xuICAgIGNhc2UgJ1RUWSc6XG4gICAgICBzdHJlYW0gPSBuZXcgdHR5LldyaXRlU3RyZWFtKGZkKTtcbiAgICAgIHN0cmVhbS5fdHlwZSA9ICd0dHknO1xuXG4gICAgICAvLyBIYWNrIHRvIGhhdmUgc3RyZWFtIG5vdCBrZWVwIHRoZSBldmVudCBsb29wIGFsaXZlLlxuICAgICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9qb3llbnQvbm9kZS9pc3N1ZXMvMTcyNlxuICAgICAgaWYgKHN0cmVhbS5faGFuZGxlICYmIHN0cmVhbS5faGFuZGxlLnVucmVmKSB7XG4gICAgICAgIHN0cmVhbS5faGFuZGxlLnVucmVmKCk7XG4gICAgICB9XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ0ZJTEUnOlxuICAgICAgdmFyIGZzID0gcmVxdWlyZSgnZnMnKTtcbiAgICAgIHN0cmVhbSA9IG5ldyBmcy5TeW5jV3JpdGVTdHJlYW0oZmQsIHsgYXV0b0Nsb3NlOiBmYWxzZSB9KTtcbiAgICAgIHN0cmVhbS5fdHlwZSA9ICdmcyc7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ1BJUEUnOlxuICAgIGNhc2UgJ1RDUCc6XG4gICAgICB2YXIgbmV0ID0gcmVxdWlyZSgnbmV0Jyk7XG4gICAgICBzdHJlYW0gPSBuZXcgbmV0LlNvY2tldCh7XG4gICAgICAgIGZkOiBmZCxcbiAgICAgICAgcmVhZGFibGU6IGZhbHNlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfSk7XG5cbiAgICAgIC8vIEZJWE1FIFNob3VsZCBwcm9iYWJseSBoYXZlIGFuIG9wdGlvbiBpbiBuZXQuU29ja2V0IHRvIGNyZWF0ZSBhXG4gICAgICAvLyBzdHJlYW0gZnJvbSBhbiBleGlzdGluZyBmZCB3aGljaCBpcyB3cml0YWJsZSBvbmx5LiBCdXQgZm9yIG5vd1xuICAgICAgLy8gd2UnbGwganVzdCBhZGQgdGhpcyBoYWNrIGFuZCBzZXQgdGhlIGByZWFkYWJsZWAgbWVtYmVyIHRvIGZhbHNlLlxuICAgICAgLy8gVGVzdDogLi9ub2RlIHRlc3QvZml4dHVyZXMvZWNoby5qcyA8IC9ldGMvcGFzc3dkXG4gICAgICBzdHJlYW0ucmVhZGFibGUgPSBmYWxzZTtcbiAgICAgIHN0cmVhbS5yZWFkID0gbnVsbDtcbiAgICAgIHN0cmVhbS5fdHlwZSA9ICdwaXBlJztcblxuICAgICAgLy8gRklYTUUgSGFjayB0byBoYXZlIHN0cmVhbSBub3Qga2VlcCB0aGUgZXZlbnQgbG9vcCBhbGl2ZS5cbiAgICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vam95ZW50L25vZGUvaXNzdWVzLzE3MjZcbiAgICAgIGlmIChzdHJlYW0uX2hhbmRsZSAmJiBzdHJlYW0uX2hhbmRsZS51bnJlZikge1xuICAgICAgICBzdHJlYW0uX2hhbmRsZS51bnJlZigpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgLy8gUHJvYmFibHkgYW4gZXJyb3Igb24gaW4gdXZfZ3Vlc3NfaGFuZGxlKClcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW1wbGVtZW50IG1lLiBVbmtub3duIHN0cmVhbSBmaWxlIHR5cGUhJyk7XG4gIH1cblxuICAvLyBGb3Igc3VwcG9ydGluZyBsZWdhY3kgQVBJIHdlIHB1dCB0aGUgRkQgaGVyZS5cbiAgc3RyZWFtLmZkID0gZmQ7XG5cbiAgc3RyZWFtLl9pc1N0ZGlvID0gdHJ1ZTtcblxuICByZXR1cm4gc3RyZWFtO1xufVxuXG4vKipcbiAqIEluaXQgbG9naWMgZm9yIGBkZWJ1Z2AgaW5zdGFuY2VzLlxuICpcbiAqIENyZWF0ZSBhIG5ldyBgaW5zcGVjdE9wdHNgIG9iamVjdCBpbiBjYXNlIGB1c2VDb2xvcnNgIGlzIHNldFxuICogZGlmZmVyZW50bHkgZm9yIGEgcGFydGljdWxhciBgZGVidWdgIGluc3RhbmNlLlxuICovXG5cbmZ1bmN0aW9uIGluaXQgKGRlYnVnKSB7XG4gIGRlYnVnLmluc3BlY3RPcHRzID0ge307XG5cbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhleHBvcnRzLmluc3BlY3RPcHRzKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgZGVidWcuaW5zcGVjdE9wdHNba2V5c1tpXV0gPSBleHBvcnRzLmluc3BlY3RPcHRzW2tleXNbaV1dO1xuICB9XG59XG5cbi8qKlxuICogRW5hYmxlIG5hbWVzcGFjZXMgbGlzdGVkIGluIGBwcm9jZXNzLmVudi5ERUJVR2AgaW5pdGlhbGx5LlxuICovXG5cbmV4cG9ydHMuZW5hYmxlKGxvYWQoKSk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJ0dHlcIik7IiwiLyohXG4gKiByYXctYm9keVxuICogQ29weXJpZ2h0KGMpIDIwMTMtMjAxNCBKb25hdGhhbiBPbmdcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBieXRlcyA9IHJlcXVpcmUoJ2J5dGVzJylcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJ2h0dHAtZXJyb3JzJylcbnZhciBpY29udiA9IHJlcXVpcmUoJ2ljb252LWxpdGUnKVxudmFyIHVucGlwZSA9IHJlcXVpcmUoJ3VucGlwZScpXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRSYXdCb2R5XG5cbi8qKlxuICogTW9kdWxlIHZhcmlhYmxlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIElDT05WX0VOQ09ESU5HX01FU1NBR0VfUkVHRVhQID0gL15FbmNvZGluZyBub3QgcmVjb2duaXplZDogL1xuXG4vKipcbiAqIEdldCB0aGUgZGVjb2RlciBmb3IgYSBnaXZlbiBlbmNvZGluZy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gZW5jb2RpbmdcbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0RGVjb2RlciAoZW5jb2RpbmcpIHtcbiAgaWYgKCFlbmNvZGluZykgcmV0dXJuIG51bGxcblxuICB0cnkge1xuICAgIHJldHVybiBpY29udi5nZXREZWNvZGVyKGVuY29kaW5nKVxuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gZXJyb3IgZ2V0dGluZyBkZWNvZGVyXG4gICAgaWYgKCFJQ09OVl9FTkNPRElOR19NRVNTQUdFX1JFR0VYUC50ZXN0KGUubWVzc2FnZSkpIHRocm93IGVcblxuICAgIC8vIHRoZSBlbmNvZGluZyB3YXMgbm90IGZvdW5kXG4gICAgdGhyb3cgY3JlYXRlRXJyb3IoNDE1LCAnc3BlY2lmaWVkIGVuY29kaW5nIHVuc3VwcG9ydGVkJywge1xuICAgICAgZW5jb2Rpbmc6IGVuY29kaW5nLFxuICAgICAgdHlwZTogJ2VuY29kaW5nLnVuc3VwcG9ydGVkJ1xuICAgIH0pXG4gIH1cbn1cblxuLyoqXG4gKiBHZXQgdGhlIHJhdyBib2R5IG9mIGEgc3RyZWFtICh0eXBpY2FsbHkgSFRUUCkuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHN0cmVhbVxuICogQHBhcmFtIHtvYmplY3R8c3RyaW5nfGZ1bmN0aW9ufSBbb3B0aW9uc11cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IFtjYWxsYmFja11cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBnZXRSYXdCb2R5IChzdHJlYW0sIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIHZhciBkb25lID0gY2FsbGJhY2tcbiAgdmFyIG9wdHMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKG9wdGlvbnMgPT09IHRydWUgfHwgdHlwZW9mIG9wdGlvbnMgPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gc2hvcnQgY3V0IGZvciBlbmNvZGluZ1xuICAgIG9wdHMgPSB7XG4gICAgICBlbmNvZGluZzogb3B0aW9uc1xuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGRvbmUgPSBvcHRpb25zXG4gICAgb3B0cyA9IHt9XG4gIH1cblxuICAvLyB2YWxpZGF0ZSBjYWxsYmFjayBpcyBhIGZ1bmN0aW9uLCBpZiBwcm92aWRlZFxuICBpZiAoZG9uZSAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBkb25lICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgY2FsbGJhY2sgbXVzdCBiZSBhIGZ1bmN0aW9uJylcbiAgfVxuXG4gIC8vIHJlcXVpcmUgdGhlIGNhbGxiYWNrIHdpdGhvdXQgcHJvbWlzZXNcbiAgaWYgKCFkb25lICYmICFnbG9iYWwuUHJvbWlzZSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IGNhbGxiYWNrIGlzIHJlcXVpcmVkJylcbiAgfVxuXG4gIC8vIGdldCBlbmNvZGluZ1xuICB2YXIgZW5jb2RpbmcgPSBvcHRzLmVuY29kaW5nICE9PSB0cnVlXG4gICAgPyBvcHRzLmVuY29kaW5nXG4gICAgOiAndXRmLTgnXG5cbiAgLy8gY29udmVydCB0aGUgbGltaXQgdG8gYW4gaW50ZWdlclxuICB2YXIgbGltaXQgPSBieXRlcy5wYXJzZShvcHRzLmxpbWl0KVxuXG4gIC8vIGNvbnZlcnQgdGhlIGV4cGVjdGVkIGxlbmd0aCB0byBhbiBpbnRlZ2VyXG4gIHZhciBsZW5ndGggPSBvcHRzLmxlbmd0aCAhPSBudWxsICYmICFpc05hTihvcHRzLmxlbmd0aClcbiAgICA/IHBhcnNlSW50KG9wdHMubGVuZ3RoLCAxMClcbiAgICA6IG51bGxcblxuICBpZiAoZG9uZSkge1xuICAgIC8vIGNsYXNzaWMgY2FsbGJhY2sgc3R5bGVcbiAgICByZXR1cm4gcmVhZFN0cmVhbShzdHJlYW0sIGVuY29kaW5nLCBsZW5ndGgsIGxpbWl0LCBkb25lKVxuICB9XG5cbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIGV4ZWN1dG9yIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICByZWFkU3RyZWFtKHN0cmVhbSwgZW5jb2RpbmcsIGxlbmd0aCwgbGltaXQsIGZ1bmN0aW9uIG9uUmVhZCAoZXJyLCBidWYpIHtcbiAgICAgIGlmIChlcnIpIHJldHVybiByZWplY3QoZXJyKVxuICAgICAgcmVzb2x2ZShidWYpXG4gICAgfSlcbiAgfSlcbn1cblxuLyoqXG4gKiBIYWx0IGEgc3RyZWFtLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBzdHJlYW1cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gaGFsdCAoc3RyZWFtKSB7XG4gIC8vIHVucGlwZSBldmVyeXRoaW5nIGZyb20gdGhlIHN0cmVhbVxuICB1bnBpcGUoc3RyZWFtKVxuXG4gIC8vIHBhdXNlIHN0cmVhbVxuICBpZiAodHlwZW9mIHN0cmVhbS5wYXVzZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHN0cmVhbS5wYXVzZSgpXG4gIH1cbn1cblxuLyoqXG4gKiBSZWFkIHRoZSBkYXRhIGZyb20gdGhlIHN0cmVhbS5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gc3RyZWFtXG4gKiBAcGFyYW0ge3N0cmluZ30gZW5jb2RpbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsaW1pdFxuICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiByZWFkU3RyZWFtIChzdHJlYW0sIGVuY29kaW5nLCBsZW5ndGgsIGxpbWl0LCBjYWxsYmFjaykge1xuICB2YXIgY29tcGxldGUgPSBmYWxzZVxuICB2YXIgc3luYyA9IHRydWVcblxuICAvLyBjaGVjayB0aGUgbGVuZ3RoIGFuZCBsaW1pdCBvcHRpb25zLlxuICAvLyBub3RlOiB3ZSBpbnRlbnRpb25hbGx5IGxlYXZlIHRoZSBzdHJlYW0gcGF1c2VkLFxuICAvLyBzbyB1c2VycyBzaG91bGQgaGFuZGxlIHRoZSBzdHJlYW0gdGhlbXNlbHZlcy5cbiAgaWYgKGxpbWl0ICE9PSBudWxsICYmIGxlbmd0aCAhPT0gbnVsbCAmJiBsZW5ndGggPiBsaW1pdCkge1xuICAgIHJldHVybiBkb25lKGNyZWF0ZUVycm9yKDQxMywgJ3JlcXVlc3QgZW50aXR5IHRvbyBsYXJnZScsIHtcbiAgICAgIGV4cGVjdGVkOiBsZW5ndGgsXG4gICAgICBsZW5ndGg6IGxlbmd0aCxcbiAgICAgIGxpbWl0OiBsaW1pdCxcbiAgICAgIHR5cGU6ICdlbnRpdHkudG9vLmxhcmdlJ1xuICAgIH0pKVxuICB9XG5cbiAgLy8gc3RyZWFtczE6IGFzc2VydCByZXF1ZXN0IGVuY29kaW5nIGlzIGJ1ZmZlci5cbiAgLy8gc3RyZWFtczIrOiBhc3NlcnQgdGhlIHN0cmVhbSBlbmNvZGluZyBpcyBidWZmZXIuXG4gIC8vICAgc3RyZWFtLl9kZWNvZGVyOiBzdHJlYW1zMVxuICAvLyAgIHN0YXRlLmVuY29kaW5nOiBzdHJlYW1zMlxuICAvLyAgIHN0YXRlLmRlY29kZXI6IHN0cmVhbXMyLCBzcGVjaWZpY2FsbHkgPCAwLjEwLjZcbiAgdmFyIHN0YXRlID0gc3RyZWFtLl9yZWFkYWJsZVN0YXRlXG4gIGlmIChzdHJlYW0uX2RlY29kZXIgfHwgKHN0YXRlICYmIChzdGF0ZS5lbmNvZGluZyB8fCBzdGF0ZS5kZWNvZGVyKSkpIHtcbiAgICAvLyBkZXZlbG9wZXIgZXJyb3JcbiAgICByZXR1cm4gZG9uZShjcmVhdGVFcnJvcig1MDAsICdzdHJlYW0gZW5jb2Rpbmcgc2hvdWxkIG5vdCBiZSBzZXQnLCB7XG4gICAgICB0eXBlOiAnc3RyZWFtLmVuY29kaW5nLnNldCdcbiAgICB9KSlcbiAgfVxuXG4gIHZhciByZWNlaXZlZCA9IDBcbiAgdmFyIGRlY29kZXJcblxuICB0cnkge1xuICAgIGRlY29kZXIgPSBnZXREZWNvZGVyKGVuY29kaW5nKVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICByZXR1cm4gZG9uZShlcnIpXG4gIH1cblxuICB2YXIgYnVmZmVyID0gZGVjb2RlclxuICAgID8gJydcbiAgICA6IFtdXG5cbiAgLy8gYXR0YWNoIGxpc3RlbmVyc1xuICBzdHJlYW0ub24oJ2Fib3J0ZWQnLCBvbkFib3J0ZWQpXG4gIHN0cmVhbS5vbignY2xvc2UnLCBjbGVhbnVwKVxuICBzdHJlYW0ub24oJ2RhdGEnLCBvbkRhdGEpXG4gIHN0cmVhbS5vbignZW5kJywgb25FbmQpXG4gIHN0cmVhbS5vbignZXJyb3InLCBvbkVuZClcblxuICAvLyBtYXJrIHN5bmMgc2VjdGlvbiBjb21wbGV0ZVxuICBzeW5jID0gZmFsc2VcblxuICBmdW5jdGlvbiBkb25lICgpIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKVxuXG4gICAgLy8gY29weSBhcmd1bWVudHNcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV1cbiAgICB9XG5cbiAgICAvLyBtYXJrIGNvbXBsZXRlXG4gICAgY29tcGxldGUgPSB0cnVlXG5cbiAgICBpZiAoc3luYykge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhpbnZva2VDYWxsYmFjaylcbiAgICB9IGVsc2Uge1xuICAgICAgaW52b2tlQ2FsbGJhY2soKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGludm9rZUNhbGxiYWNrICgpIHtcbiAgICAgIGNsZWFudXAoKVxuXG4gICAgICBpZiAoYXJnc1swXSkge1xuICAgICAgICAvLyBoYWx0IHRoZSBzdHJlYW0gb24gZXJyb3JcbiAgICAgICAgaGFsdChzdHJlYW0pXG4gICAgICB9XG5cbiAgICAgIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFyZ3MpXG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gb25BYm9ydGVkICgpIHtcbiAgICBpZiAoY29tcGxldGUpIHJldHVyblxuXG4gICAgZG9uZShjcmVhdGVFcnJvcig0MDAsICdyZXF1ZXN0IGFib3J0ZWQnLCB7XG4gICAgICBjb2RlOiAnRUNPTk5BQk9SVEVEJyxcbiAgICAgIGV4cGVjdGVkOiBsZW5ndGgsXG4gICAgICBsZW5ndGg6IGxlbmd0aCxcbiAgICAgIHJlY2VpdmVkOiByZWNlaXZlZCxcbiAgICAgIHR5cGU6ICdyZXF1ZXN0LmFib3J0ZWQnXG4gICAgfSkpXG4gIH1cblxuICBmdW5jdGlvbiBvbkRhdGEgKGNodW5rKSB7XG4gICAgaWYgKGNvbXBsZXRlKSByZXR1cm5cblxuICAgIHJlY2VpdmVkICs9IGNodW5rLmxlbmd0aFxuXG4gICAgaWYgKGxpbWl0ICE9PSBudWxsICYmIHJlY2VpdmVkID4gbGltaXQpIHtcbiAgICAgIGRvbmUoY3JlYXRlRXJyb3IoNDEzLCAncmVxdWVzdCBlbnRpdHkgdG9vIGxhcmdlJywge1xuICAgICAgICBsaW1pdDogbGltaXQsXG4gICAgICAgIHJlY2VpdmVkOiByZWNlaXZlZCxcbiAgICAgICAgdHlwZTogJ2VudGl0eS50b28ubGFyZ2UnXG4gICAgICB9KSlcbiAgICB9IGVsc2UgaWYgKGRlY29kZXIpIHtcbiAgICAgIGJ1ZmZlciArPSBkZWNvZGVyLndyaXRlKGNodW5rKVxuICAgIH0gZWxzZSB7XG4gICAgICBidWZmZXIucHVzaChjaHVuaylcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBvbkVuZCAoZXJyKSB7XG4gICAgaWYgKGNvbXBsZXRlKSByZXR1cm5cbiAgICBpZiAoZXJyKSByZXR1cm4gZG9uZShlcnIpXG5cbiAgICBpZiAobGVuZ3RoICE9PSBudWxsICYmIHJlY2VpdmVkICE9PSBsZW5ndGgpIHtcbiAgICAgIGRvbmUoY3JlYXRlRXJyb3IoNDAwLCAncmVxdWVzdCBzaXplIGRpZCBub3QgbWF0Y2ggY29udGVudCBsZW5ndGgnLCB7XG4gICAgICAgIGV4cGVjdGVkOiBsZW5ndGgsXG4gICAgICAgIGxlbmd0aDogbGVuZ3RoLFxuICAgICAgICByZWNlaXZlZDogcmVjZWl2ZWQsXG4gICAgICAgIHR5cGU6ICdyZXF1ZXN0LnNpemUuaW52YWxpZCdcbiAgICAgIH0pKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgc3RyaW5nID0gZGVjb2RlclxuICAgICAgICA/IGJ1ZmZlciArIChkZWNvZGVyLmVuZCgpIHx8ICcnKVxuICAgICAgICA6IEJ1ZmZlci5jb25jYXQoYnVmZmVyKVxuICAgICAgZG9uZShudWxsLCBzdHJpbmcpXG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY2xlYW51cCAoKSB7XG4gICAgYnVmZmVyID0gbnVsbFxuXG4gICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdhYm9ydGVkJywgb25BYm9ydGVkKVxuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZGF0YScsIG9uRGF0YSlcbiAgICBzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIG9uRW5kKVxuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBvbkVuZClcbiAgICBzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgY2xlYW51cClcbiAgfVxufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBCT01DaGFyID0gJ1xcdUZFRkYnO1xuXG5leHBvcnRzLlByZXBlbmRCT00gPSBQcmVwZW5kQk9NV3JhcHBlclxuZnVuY3Rpb24gUHJlcGVuZEJPTVdyYXBwZXIoZW5jb2Rlciwgb3B0aW9ucykge1xuICAgIHRoaXMuZW5jb2RlciA9IGVuY29kZXI7XG4gICAgdGhpcy5hZGRCT00gPSB0cnVlO1xufVxuXG5QcmVwZW5kQk9NV3JhcHBlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihzdHIpIHtcbiAgICBpZiAodGhpcy5hZGRCT00pIHtcbiAgICAgICAgc3RyID0gQk9NQ2hhciArIHN0cjtcbiAgICAgICAgdGhpcy5hZGRCT00gPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5lbmNvZGVyLndyaXRlKHN0cik7XG59XG5cblByZXBlbmRCT01XcmFwcGVyLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5lbmNvZGVyLmVuZCgpO1xufVxuXG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmV4cG9ydHMuU3RyaXBCT00gPSBTdHJpcEJPTVdyYXBwZXI7XG5mdW5jdGlvbiBTdHJpcEJPTVdyYXBwZXIoZGVjb2Rlciwgb3B0aW9ucykge1xuICAgIHRoaXMuZGVjb2RlciA9IGRlY29kZXI7XG4gICAgdGhpcy5wYXNzID0gZmFsc2U7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbn1cblxuU3RyaXBCT01XcmFwcGVyLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uKGJ1Zikge1xuICAgIHZhciByZXMgPSB0aGlzLmRlY29kZXIud3JpdGUoYnVmKTtcbiAgICBpZiAodGhpcy5wYXNzIHx8ICFyZXMpXG4gICAgICAgIHJldHVybiByZXM7XG5cbiAgICBpZiAocmVzWzBdID09PSBCT01DaGFyKSB7XG4gICAgICAgIHJlcyA9IHJlcy5zbGljZSgxKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMuc3RyaXBCT00gPT09ICdmdW5jdGlvbicpXG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMuc3RyaXBCT00oKTtcbiAgICB9XG5cbiAgICB0aGlzLnBhc3MgPSB0cnVlO1xuICAgIHJldHVybiByZXM7XG59XG5cblN0cmlwQk9NV3JhcHBlci5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZGVjb2Rlci5lbmQoKTtcbn1cblxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIFVwZGF0ZSB0aGlzIGFycmF5IGlmIHlvdSBhZGQvcmVuYW1lL3JlbW92ZSBmaWxlcyBpbiB0aGlzIGRpcmVjdG9yeS5cbi8vIFdlIHN1cHBvcnQgQnJvd3NlcmlmeSBieSBza2lwcGluZyBhdXRvbWF0aWMgbW9kdWxlIGRpc2NvdmVyeSBhbmQgcmVxdWlyaW5nIG1vZHVsZXMgZGlyZWN0bHkuXG52YXIgbW9kdWxlcyA9IFtcbiAgICByZXF1aXJlKFwiLi9pbnRlcm5hbFwiKSxcbiAgICByZXF1aXJlKFwiLi91dGYxNlwiKSxcbiAgICByZXF1aXJlKFwiLi91dGY3XCIpLFxuICAgIHJlcXVpcmUoXCIuL3NiY3MtY29kZWNcIiksXG4gICAgcmVxdWlyZShcIi4vc2Jjcy1kYXRhXCIpLFxuICAgIHJlcXVpcmUoXCIuL3NiY3MtZGF0YS1nZW5lcmF0ZWRcIiksXG4gICAgcmVxdWlyZShcIi4vZGJjcy1jb2RlY1wiKSxcbiAgICByZXF1aXJlKFwiLi9kYmNzLWRhdGFcIiksXG5dO1xuXG4vLyBQdXQgYWxsIGVuY29kaW5nL2FsaWFzL2NvZGVjIGRlZmluaXRpb25zIHRvIHNpbmdsZSBvYmplY3QgYW5kIGV4cG9ydCBpdC4gXG5mb3IgKHZhciBpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgbW9kdWxlID0gbW9kdWxlc1tpXTtcbiAgICBmb3IgKHZhciBlbmMgaW4gbW9kdWxlKVxuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZHVsZSwgZW5jKSlcbiAgICAgICAgICAgIGV4cG9ydHNbZW5jXSA9IG1vZHVsZVtlbmNdO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgQnVmZmVyID0gcmVxdWlyZShcInNhZmVyLWJ1ZmZlclwiKS5CdWZmZXI7XG5cbi8vIEV4cG9ydCBOb2RlLmpzIGludGVybmFsIGVuY29kaW5ncy5cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgLy8gRW5jb2RpbmdzXG4gICAgdXRmODogICB7IHR5cGU6IFwiX2ludGVybmFsXCIsIGJvbUF3YXJlOiB0cnVlfSxcbiAgICBjZXN1ODogIHsgdHlwZTogXCJfaW50ZXJuYWxcIiwgYm9tQXdhcmU6IHRydWV9LFxuICAgIHVuaWNvZGUxMXV0Zjg6IFwidXRmOFwiLFxuXG4gICAgdWNzMjogICB7IHR5cGU6IFwiX2ludGVybmFsXCIsIGJvbUF3YXJlOiB0cnVlfSxcbiAgICB1dGYxNmxlOiBcInVjczJcIixcblxuICAgIGJpbmFyeTogeyB0eXBlOiBcIl9pbnRlcm5hbFwiIH0sXG4gICAgYmFzZTY0OiB7IHR5cGU6IFwiX2ludGVybmFsXCIgfSxcbiAgICBoZXg6ICAgIHsgdHlwZTogXCJfaW50ZXJuYWxcIiB9LFxuXG4gICAgLy8gQ29kZWMuXG4gICAgX2ludGVybmFsOiBJbnRlcm5hbENvZGVjLFxufTtcblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gSW50ZXJuYWxDb2RlYyhjb2RlY09wdGlvbnMsIGljb252KSB7XG4gICAgdGhpcy5lbmMgPSBjb2RlY09wdGlvbnMuZW5jb2RpbmdOYW1lO1xuICAgIHRoaXMuYm9tQXdhcmUgPSBjb2RlY09wdGlvbnMuYm9tQXdhcmU7XG5cbiAgICBpZiAodGhpcy5lbmMgPT09IFwiYmFzZTY0XCIpXG4gICAgICAgIHRoaXMuZW5jb2RlciA9IEludGVybmFsRW5jb2RlckJhc2U2NDtcbiAgICBlbHNlIGlmICh0aGlzLmVuYyA9PT0gXCJjZXN1OFwiKSB7XG4gICAgICAgIHRoaXMuZW5jID0gXCJ1dGY4XCI7IC8vIFVzZSB1dGY4IGZvciBkZWNvZGluZy5cbiAgICAgICAgdGhpcy5lbmNvZGVyID0gSW50ZXJuYWxFbmNvZGVyQ2VzdTg7XG5cbiAgICAgICAgLy8gQWRkIGRlY29kZXIgZm9yIHZlcnNpb25zIG9mIE5vZGUgbm90IHN1cHBvcnRpbmcgQ0VTVS04XG4gICAgICAgIGlmIChCdWZmZXIuZnJvbSgnZWRhMGJkZWRiMmE5JywgJ2hleCcpLnRvU3RyaW5nKCkgIT09ICfwn5KpJykge1xuICAgICAgICAgICAgdGhpcy5kZWNvZGVyID0gSW50ZXJuYWxEZWNvZGVyQ2VzdTg7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHRDaGFyVW5pY29kZSA9IGljb252LmRlZmF1bHRDaGFyVW5pY29kZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuSW50ZXJuYWxDb2RlYy5wcm90b3R5cGUuZW5jb2RlciA9IEludGVybmFsRW5jb2RlcjtcbkludGVybmFsQ29kZWMucHJvdG90eXBlLmRlY29kZXIgPSBJbnRlcm5hbERlY29kZXI7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFdlIHVzZSBub2RlLmpzIGludGVybmFsIGRlY29kZXIuIEl0cyBzaWduYXR1cmUgaXMgdGhlIHNhbWUgYXMgb3Vycy5cbnZhciBTdHJpbmdEZWNvZGVyID0gcmVxdWlyZSgnc3RyaW5nX2RlY29kZXInKS5TdHJpbmdEZWNvZGVyO1xuXG5pZiAoIVN0cmluZ0RlY29kZXIucHJvdG90eXBlLmVuZCkgLy8gTm9kZSB2MC44IGRvZXNuJ3QgaGF2ZSB0aGlzIG1ldGhvZC5cbiAgICBTdHJpbmdEZWNvZGVyLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHt9O1xuXG5cbmZ1bmN0aW9uIEludGVybmFsRGVjb2RlcihvcHRpb25zLCBjb2RlYykge1xuICAgIFN0cmluZ0RlY29kZXIuY2FsbCh0aGlzLCBjb2RlYy5lbmMpO1xufVxuXG5JbnRlcm5hbERlY29kZXIucHJvdG90eXBlID0gU3RyaW5nRGVjb2Rlci5wcm90b3R5cGU7XG5cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEVuY29kZXIgaXMgbW9zdGx5IHRyaXZpYWxcblxuZnVuY3Rpb24gSW50ZXJuYWxFbmNvZGVyKG9wdGlvbnMsIGNvZGVjKSB7XG4gICAgdGhpcy5lbmMgPSBjb2RlYy5lbmM7XG59XG5cbkludGVybmFsRW5jb2Rlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihzdHIpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oc3RyLCB0aGlzLmVuYyk7XG59XG5cbkludGVybmFsRW5jb2Rlci5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24oKSB7XG59XG5cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEV4Y2VwdCBiYXNlNjQgZW5jb2Rlciwgd2hpY2ggbXVzdCBrZWVwIGl0cyBzdGF0ZS5cblxuZnVuY3Rpb24gSW50ZXJuYWxFbmNvZGVyQmFzZTY0KG9wdGlvbnMsIGNvZGVjKSB7XG4gICAgdGhpcy5wcmV2U3RyID0gJyc7XG59XG5cbkludGVybmFsRW5jb2RlckJhc2U2NC5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihzdHIpIHtcbiAgICBzdHIgPSB0aGlzLnByZXZTdHIgKyBzdHI7XG4gICAgdmFyIGNvbXBsZXRlUXVhZHMgPSBzdHIubGVuZ3RoIC0gKHN0ci5sZW5ndGggJSA0KTtcbiAgICB0aGlzLnByZXZTdHIgPSBzdHIuc2xpY2UoY29tcGxldGVRdWFkcyk7XG4gICAgc3RyID0gc3RyLnNsaWNlKDAsIGNvbXBsZXRlUXVhZHMpO1xuXG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHN0ciwgXCJiYXNlNjRcIik7XG59XG5cbkludGVybmFsRW5jb2RlckJhc2U2NC5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHRoaXMucHJldlN0ciwgXCJiYXNlNjRcIik7XG59XG5cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIENFU1UtOCBlbmNvZGVyIGlzIGFsc28gc3BlY2lhbC5cblxuZnVuY3Rpb24gSW50ZXJuYWxFbmNvZGVyQ2VzdTgob3B0aW9ucywgY29kZWMpIHtcbn1cblxuSW50ZXJuYWxFbmNvZGVyQ2VzdTgucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgdmFyIGJ1ZiA9IEJ1ZmZlci5hbGxvYyhzdHIubGVuZ3RoICogMyksIGJ1ZklkeCA9IDA7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGNoYXJDb2RlID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIC8vIE5haXZlIGltcGxlbWVudGF0aW9uLCBidXQgaXQgd29ya3MgYmVjYXVzZSBDRVNVLTggaXMgZXNwZWNpYWxseSBlYXN5XG4gICAgICAgIC8vIHRvIGNvbnZlcnQgZnJvbSBVVEYtMTYgKHdoaWNoIGFsbCBKUyBzdHJpbmdzIGFyZSBlbmNvZGVkIGluKS5cbiAgICAgICAgaWYgKGNoYXJDb2RlIDwgMHg4MClcbiAgICAgICAgICAgIGJ1ZltidWZJZHgrK10gPSBjaGFyQ29kZTtcbiAgICAgICAgZWxzZSBpZiAoY2hhckNvZGUgPCAweDgwMCkge1xuICAgICAgICAgICAgYnVmW2J1ZklkeCsrXSA9IDB4QzAgKyAoY2hhckNvZGUgPj4+IDYpO1xuICAgICAgICAgICAgYnVmW2J1ZklkeCsrXSA9IDB4ODAgKyAoY2hhckNvZGUgJiAweDNmKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHsgLy8gY2hhckNvZGUgd2lsbCBhbHdheXMgYmUgPCAweDEwMDAwIGluIGphdmFzY3JpcHQuXG4gICAgICAgICAgICBidWZbYnVmSWR4KytdID0gMHhFMCArIChjaGFyQ29kZSA+Pj4gMTIpO1xuICAgICAgICAgICAgYnVmW2J1ZklkeCsrXSA9IDB4ODAgKyAoKGNoYXJDb2RlID4+PiA2KSAmIDB4M2YpO1xuICAgICAgICAgICAgYnVmW2J1ZklkeCsrXSA9IDB4ODAgKyAoY2hhckNvZGUgJiAweDNmKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYnVmLnNsaWNlKDAsIGJ1ZklkeCk7XG59XG5cbkludGVybmFsRW5jb2RlckNlc3U4LnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHtcbn1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIENFU1UtOCBkZWNvZGVyIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiBOb2RlIHY0LjArXG5cbmZ1bmN0aW9uIEludGVybmFsRGVjb2RlckNlc3U4KG9wdGlvbnMsIGNvZGVjKSB7XG4gICAgdGhpcy5hY2MgPSAwO1xuICAgIHRoaXMuY29udEJ5dGVzID0gMDtcbiAgICB0aGlzLmFjY0J5dGVzID0gMDtcbiAgICB0aGlzLmRlZmF1bHRDaGFyVW5pY29kZSA9IGNvZGVjLmRlZmF1bHRDaGFyVW5pY29kZTtcbn1cblxuSW50ZXJuYWxEZWNvZGVyQ2VzdTgucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oYnVmKSB7XG4gICAgdmFyIGFjYyA9IHRoaXMuYWNjLCBjb250Qnl0ZXMgPSB0aGlzLmNvbnRCeXRlcywgYWNjQnl0ZXMgPSB0aGlzLmFjY0J5dGVzLCBcbiAgICAgICAgcmVzID0gJyc7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWYubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGN1ckJ5dGUgPSBidWZbaV07XG4gICAgICAgIGlmICgoY3VyQnl0ZSAmIDB4QzApICE9PSAweDgwKSB7IC8vIExlYWRpbmcgYnl0ZVxuICAgICAgICAgICAgaWYgKGNvbnRCeXRlcyA+IDApIHsgLy8gUHJldmlvdXMgY29kZSBpcyBpbnZhbGlkXG4gICAgICAgICAgICAgICAgcmVzICs9IHRoaXMuZGVmYXVsdENoYXJVbmljb2RlO1xuICAgICAgICAgICAgICAgIGNvbnRCeXRlcyA9IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjdXJCeXRlIDwgMHg4MCkgeyAvLyBTaW5nbGUtYnl0ZSBjb2RlXG4gICAgICAgICAgICAgICAgcmVzICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoY3VyQnl0ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGN1ckJ5dGUgPCAweEUwKSB7IC8vIFR3by1ieXRlIGNvZGVcbiAgICAgICAgICAgICAgICBhY2MgPSBjdXJCeXRlICYgMHgxRjtcbiAgICAgICAgICAgICAgICBjb250Qnl0ZXMgPSAxOyBhY2NCeXRlcyA9IDE7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGN1ckJ5dGUgPCAweEYwKSB7IC8vIFRocmVlLWJ5dGUgY29kZVxuICAgICAgICAgICAgICAgIGFjYyA9IGN1ckJ5dGUgJiAweDBGO1xuICAgICAgICAgICAgICAgIGNvbnRCeXRlcyA9IDI7IGFjY0J5dGVzID0gMTtcbiAgICAgICAgICAgIH0gZWxzZSB7IC8vIEZvdXIgb3IgbW9yZSBhcmUgbm90IHN1cHBvcnRlZCBmb3IgQ0VTVS04LlxuICAgICAgICAgICAgICAgIHJlcyArPSB0aGlzLmRlZmF1bHRDaGFyVW5pY29kZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHsgLy8gQ29udGludWF0aW9uIGJ5dGVcbiAgICAgICAgICAgIGlmIChjb250Qnl0ZXMgPiAwKSB7IC8vIFdlJ3JlIHdhaXRpbmcgZm9yIGl0LlxuICAgICAgICAgICAgICAgIGFjYyA9IChhY2MgPDwgNikgfCAoY3VyQnl0ZSAmIDB4M2YpO1xuICAgICAgICAgICAgICAgIGNvbnRCeXRlcy0tOyBhY2NCeXRlcysrO1xuICAgICAgICAgICAgICAgIGlmIChjb250Qnl0ZXMgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIG92ZXJsb25nIGVuY29kaW5nLCBidXQgc3VwcG9ydCBNb2RpZmllZCBVVEYtOCAoZW5jb2RpbmcgTlVMTCBhcyBDMCA4MClcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFjY0J5dGVzID09PSAyICYmIGFjYyA8IDB4ODAgJiYgYWNjID4gMClcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcyArPSB0aGlzLmRlZmF1bHRDaGFyVW5pY29kZTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoYWNjQnl0ZXMgPT09IDMgJiYgYWNjIDwgMHg4MDApXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMgKz0gdGhpcy5kZWZhdWx0Q2hhclVuaWNvZGU7XG4gICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFjdHVhbGx5IGFkZCBjaGFyYWN0ZXIuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShhY2MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7IC8vIFVuZXhwZWN0ZWQgY29udGludWF0aW9uIGJ5dGVcbiAgICAgICAgICAgICAgICByZXMgKz0gdGhpcy5kZWZhdWx0Q2hhclVuaWNvZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5hY2MgPSBhY2M7IHRoaXMuY29udEJ5dGVzID0gY29udEJ5dGVzOyB0aGlzLmFjY0J5dGVzID0gYWNjQnl0ZXM7XG4gICAgcmV0dXJuIHJlcztcbn1cblxuSW50ZXJuYWxEZWNvZGVyQ2VzdTgucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciByZXMgPSAwO1xuICAgIGlmICh0aGlzLmNvbnRCeXRlcyA+IDApXG4gICAgICAgIHJlcyArPSB0aGlzLmRlZmF1bHRDaGFyVW5pY29kZTtcbiAgICByZXR1cm4gcmVzO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgQnVmZmVyID0gcmVxdWlyZShcInNhZmVyLWJ1ZmZlclwiKS5CdWZmZXI7XG5cbi8vIE5vdGU6IFVURjE2LUxFIChvciBVQ1MyKSBjb2RlYyBpcyBOb2RlLmpzIG5hdGl2ZS4gU2VlIGVuY29kaW5ncy9pbnRlcm5hbC5qc1xuXG4vLyA9PSBVVEYxNi1CRSBjb2RlYy4gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5leHBvcnRzLnV0ZjE2YmUgPSBVdGYxNkJFQ29kZWM7XG5mdW5jdGlvbiBVdGYxNkJFQ29kZWMoKSB7XG59XG5cblV0ZjE2QkVDb2RlYy5wcm90b3R5cGUuZW5jb2RlciA9IFV0ZjE2QkVFbmNvZGVyO1xuVXRmMTZCRUNvZGVjLnByb3RvdHlwZS5kZWNvZGVyID0gVXRmMTZCRURlY29kZXI7XG5VdGYxNkJFQ29kZWMucHJvdG90eXBlLmJvbUF3YXJlID0gdHJ1ZTtcblxuXG4vLyAtLSBFbmNvZGluZ1xuXG5mdW5jdGlvbiBVdGYxNkJFRW5jb2RlcigpIHtcbn1cblxuVXRmMTZCRUVuY29kZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgdmFyIGJ1ZiA9IEJ1ZmZlci5mcm9tKHN0ciwgJ3VjczInKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJ1Zi5sZW5ndGg7IGkgKz0gMikge1xuICAgICAgICB2YXIgdG1wID0gYnVmW2ldOyBidWZbaV0gPSBidWZbaSsxXTsgYnVmW2krMV0gPSB0bXA7XG4gICAgfVxuICAgIHJldHVybiBidWY7XG59XG5cblV0ZjE2QkVFbmNvZGVyLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHtcbn1cblxuXG4vLyAtLSBEZWNvZGluZ1xuXG5mdW5jdGlvbiBVdGYxNkJFRGVjb2RlcigpIHtcbiAgICB0aGlzLm92ZXJmbG93Qnl0ZSA9IC0xO1xufVxuXG5VdGYxNkJFRGVjb2Rlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihidWYpIHtcbiAgICBpZiAoYnVmLmxlbmd0aCA9PSAwKVxuICAgICAgICByZXR1cm4gJyc7XG5cbiAgICB2YXIgYnVmMiA9IEJ1ZmZlci5hbGxvYyhidWYubGVuZ3RoICsgMSksXG4gICAgICAgIGkgPSAwLCBqID0gMDtcblxuICAgIGlmICh0aGlzLm92ZXJmbG93Qnl0ZSAhPT0gLTEpIHtcbiAgICAgICAgYnVmMlswXSA9IGJ1ZlswXTtcbiAgICAgICAgYnVmMlsxXSA9IHRoaXMub3ZlcmZsb3dCeXRlO1xuICAgICAgICBpID0gMTsgaiA9IDI7XG4gICAgfVxuXG4gICAgZm9yICg7IGkgPCBidWYubGVuZ3RoLTE7IGkgKz0gMiwgais9IDIpIHtcbiAgICAgICAgYnVmMltqXSA9IGJ1ZltpKzFdO1xuICAgICAgICBidWYyW2orMV0gPSBidWZbaV07XG4gICAgfVxuXG4gICAgdGhpcy5vdmVyZmxvd0J5dGUgPSAoaSA9PSBidWYubGVuZ3RoLTEpID8gYnVmW2J1Zi5sZW5ndGgtMV0gOiAtMTtcblxuICAgIHJldHVybiBidWYyLnNsaWNlKDAsIGopLnRvU3RyaW5nKCd1Y3MyJyk7XG59XG5cblV0ZjE2QkVEZWNvZGVyLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHtcbn1cblxuXG4vLyA9PSBVVEYtMTYgY29kZWMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRGVjb2RlciBjaG9vc2VzIGF1dG9tYXRpY2FsbHkgZnJvbSBVVEYtMTZMRSBhbmQgVVRGLTE2QkUgdXNpbmcgQk9NIGFuZCBzcGFjZS1iYXNlZCBoZXVyaXN0aWMuXG4vLyBEZWZhdWx0cyB0byBVVEYtMTZMRSwgYXMgaXQncyBwcmV2YWxlbnQgYW5kIGRlZmF1bHQgaW4gTm9kZS5cbi8vIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVVRGLTE2IGFuZCBodHRwOi8vZW5jb2Rpbmcuc3BlYy53aGF0d2cub3JnLyN1dGYtMTZsZVxuLy8gRGVjb2RlciBkZWZhdWx0IGNhbiBiZSBjaGFuZ2VkOiBpY29udi5kZWNvZGUoYnVmLCAndXRmMTYnLCB7ZGVmYXVsdEVuY29kaW5nOiAndXRmLTE2YmUnfSk7XG5cbi8vIEVuY29kZXIgdXNlcyBVVEYtMTZMRSBhbmQgcHJlcGVuZHMgQk9NICh3aGljaCBjYW4gYmUgb3ZlcnJpZGRlbiB3aXRoIGFkZEJPTTogZmFsc2UpLlxuXG5leHBvcnRzLnV0ZjE2ID0gVXRmMTZDb2RlYztcbmZ1bmN0aW9uIFV0ZjE2Q29kZWMoY29kZWNPcHRpb25zLCBpY29udikge1xuICAgIHRoaXMuaWNvbnYgPSBpY29udjtcbn1cblxuVXRmMTZDb2RlYy5wcm90b3R5cGUuZW5jb2RlciA9IFV0ZjE2RW5jb2RlcjtcblV0ZjE2Q29kZWMucHJvdG90eXBlLmRlY29kZXIgPSBVdGYxNkRlY29kZXI7XG5cblxuLy8gLS0gRW5jb2RpbmcgKHBhc3MtdGhyb3VnaClcblxuZnVuY3Rpb24gVXRmMTZFbmNvZGVyKG9wdGlvbnMsIGNvZGVjKSB7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgaWYgKG9wdGlvbnMuYWRkQk9NID09PSB1bmRlZmluZWQpXG4gICAgICAgIG9wdGlvbnMuYWRkQk9NID0gdHJ1ZTtcbiAgICB0aGlzLmVuY29kZXIgPSBjb2RlYy5pY29udi5nZXRFbmNvZGVyKCd1dGYtMTZsZScsIG9wdGlvbnMpO1xufVxuXG5VdGYxNkVuY29kZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgcmV0dXJuIHRoaXMuZW5jb2Rlci53cml0ZShzdHIpO1xufVxuXG5VdGYxNkVuY29kZXIucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmVuY29kZXIuZW5kKCk7XG59XG5cblxuLy8gLS0gRGVjb2RpbmdcblxuZnVuY3Rpb24gVXRmMTZEZWNvZGVyKG9wdGlvbnMsIGNvZGVjKSB7XG4gICAgdGhpcy5kZWNvZGVyID0gbnVsbDtcbiAgICB0aGlzLmluaXRpYWxCeXRlcyA9IFtdO1xuICAgIHRoaXMuaW5pdGlhbEJ5dGVzTGVuID0gMDtcblxuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgdGhpcy5pY29udiA9IGNvZGVjLmljb252O1xufVxuXG5VdGYxNkRlY29kZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oYnVmKSB7XG4gICAgaWYgKCF0aGlzLmRlY29kZXIpIHtcbiAgICAgICAgLy8gQ29kZWMgaXMgbm90IGNob3NlbiB5ZXQuIEFjY3VtdWxhdGUgaW5pdGlhbCBieXRlcy5cbiAgICAgICAgdGhpcy5pbml0aWFsQnl0ZXMucHVzaChidWYpO1xuICAgICAgICB0aGlzLmluaXRpYWxCeXRlc0xlbiArPSBidWYubGVuZ3RoO1xuICAgICAgICBcbiAgICAgICAgaWYgKHRoaXMuaW5pdGlhbEJ5dGVzTGVuIDwgMTYpIC8vIFdlIG5lZWQgbW9yZSBieXRlcyB0byB1c2Ugc3BhY2UgaGV1cmlzdGljIChzZWUgYmVsb3cpXG4gICAgICAgICAgICByZXR1cm4gJyc7XG5cbiAgICAgICAgLy8gV2UgaGF2ZSBlbm91Z2ggYnl0ZXMgLT4gZGV0ZWN0IGVuZGlhbm5lc3MuXG4gICAgICAgIHZhciBidWYgPSBCdWZmZXIuY29uY2F0KHRoaXMuaW5pdGlhbEJ5dGVzKSxcbiAgICAgICAgICAgIGVuY29kaW5nID0gZGV0ZWN0RW5jb2RpbmcoYnVmLCB0aGlzLm9wdGlvbnMuZGVmYXVsdEVuY29kaW5nKTtcbiAgICAgICAgdGhpcy5kZWNvZGVyID0gdGhpcy5pY29udi5nZXREZWNvZGVyKGVuY29kaW5nLCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICB0aGlzLmluaXRpYWxCeXRlcy5sZW5ndGggPSB0aGlzLmluaXRpYWxCeXRlc0xlbiA9IDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuZGVjb2Rlci53cml0ZShidWYpO1xufVxuXG5VdGYxNkRlY29kZXIucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICghdGhpcy5kZWNvZGVyKSB7XG4gICAgICAgIHZhciBidWYgPSBCdWZmZXIuY29uY2F0KHRoaXMuaW5pdGlhbEJ5dGVzKSxcbiAgICAgICAgICAgIGVuY29kaW5nID0gZGV0ZWN0RW5jb2RpbmcoYnVmLCB0aGlzLm9wdGlvbnMuZGVmYXVsdEVuY29kaW5nKTtcbiAgICAgICAgdGhpcy5kZWNvZGVyID0gdGhpcy5pY29udi5nZXREZWNvZGVyKGVuY29kaW5nLCB0aGlzLm9wdGlvbnMpO1xuXG4gICAgICAgIHZhciByZXMgPSB0aGlzLmRlY29kZXIud3JpdGUoYnVmKSxcbiAgICAgICAgICAgIHRyYWlsID0gdGhpcy5kZWNvZGVyLmVuZCgpO1xuXG4gICAgICAgIHJldHVybiB0cmFpbCA/IChyZXMgKyB0cmFpbCkgOiByZXM7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmRlY29kZXIuZW5kKCk7XG59XG5cbmZ1bmN0aW9uIGRldGVjdEVuY29kaW5nKGJ1ZiwgZGVmYXVsdEVuY29kaW5nKSB7XG4gICAgdmFyIGVuYyA9IGRlZmF1bHRFbmNvZGluZyB8fCAndXRmLTE2bGUnO1xuXG4gICAgaWYgKGJ1Zi5sZW5ndGggPj0gMikge1xuICAgICAgICAvLyBDaGVjayBCT00uXG4gICAgICAgIGlmIChidWZbMF0gPT0gMHhGRSAmJiBidWZbMV0gPT0gMHhGRikgLy8gVVRGLTE2QkUgQk9NXG4gICAgICAgICAgICBlbmMgPSAndXRmLTE2YmUnO1xuICAgICAgICBlbHNlIGlmIChidWZbMF0gPT0gMHhGRiAmJiBidWZbMV0gPT0gMHhGRSkgLy8gVVRGLTE2TEUgQk9NXG4gICAgICAgICAgICBlbmMgPSAndXRmLTE2bGUnO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIE5vIEJPTSBmb3VuZC4gVHJ5IHRvIGRlZHVjZSBlbmNvZGluZyBmcm9tIGluaXRpYWwgY29udGVudC5cbiAgICAgICAgICAgIC8vIE1vc3Qgb2YgdGhlIHRpbWUsIHRoZSBjb250ZW50IGhhcyBBU0NJSSBjaGFycyAoVSswMCoqKSwgYnV0IHRoZSBvcHBvc2l0ZSAoVSsqKjAwKSBpcyB1bmNvbW1vbi5cbiAgICAgICAgICAgIC8vIFNvLCB3ZSBjb3VudCBBU0NJSSBhcyBpZiBpdCB3YXMgTEUgb3IgQkUsIGFuZCBkZWNpZGUgZnJvbSB0aGF0LlxuICAgICAgICAgICAgdmFyIGFzY2lpQ2hhcnNMRSA9IDAsIGFzY2lpQ2hhcnNCRSA9IDAsIC8vIENvdW50cyBvZiBjaGFycyBpbiBib3RoIHBvc2l0aW9uc1xuICAgICAgICAgICAgICAgIF9sZW4gPSBNYXRoLm1pbihidWYubGVuZ3RoIC0gKGJ1Zi5sZW5ndGggJSAyKSwgNjQpOyAvLyBMZW4gaXMgYWx3YXlzIGV2ZW4uXG5cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX2xlbjsgaSArPSAyKSB7XG4gICAgICAgICAgICAgICAgaWYgKGJ1ZltpXSA9PT0gMCAmJiBidWZbaSsxXSAhPT0gMCkgYXNjaWlDaGFyc0JFKys7XG4gICAgICAgICAgICAgICAgaWYgKGJ1ZltpXSAhPT0gMCAmJiBidWZbaSsxXSA9PT0gMCkgYXNjaWlDaGFyc0xFKys7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChhc2NpaUNoYXJzQkUgPiBhc2NpaUNoYXJzTEUpXG4gICAgICAgICAgICAgICAgZW5jID0gJ3V0Zi0xNmJlJztcbiAgICAgICAgICAgIGVsc2UgaWYgKGFzY2lpQ2hhcnNCRSA8IGFzY2lpQ2hhcnNMRSlcbiAgICAgICAgICAgICAgICBlbmMgPSAndXRmLTE2bGUnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGVuYztcbn1cblxuXG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBCdWZmZXIgPSByZXF1aXJlKFwic2FmZXItYnVmZmVyXCIpLkJ1ZmZlcjtcblxuLy8gVVRGLTcgY29kZWMsIGFjY29yZGluZyB0byBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMjE1MlxuLy8gU2VlIGFsc28gYmVsb3cgYSBVVEYtNy1JTUFQIGNvZGVjLCBhY2NvcmRpbmcgdG8gaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzUwMSNzZWN0aW9uLTUuMS4zXG5cbmV4cG9ydHMudXRmNyA9IFV0ZjdDb2RlYztcbmV4cG9ydHMudW5pY29kZTExdXRmNyA9ICd1dGY3JzsgLy8gQWxpYXMgVU5JQ09ERS0xLTEtVVRGLTdcbmZ1bmN0aW9uIFV0ZjdDb2RlYyhjb2RlY09wdGlvbnMsIGljb252KSB7XG4gICAgdGhpcy5pY29udiA9IGljb252O1xufTtcblxuVXRmN0NvZGVjLnByb3RvdHlwZS5lbmNvZGVyID0gVXRmN0VuY29kZXI7XG5VdGY3Q29kZWMucHJvdG90eXBlLmRlY29kZXIgPSBVdGY3RGVjb2RlcjtcblV0ZjdDb2RlYy5wcm90b3R5cGUuYm9tQXdhcmUgPSB0cnVlO1xuXG5cbi8vIC0tIEVuY29kaW5nXG5cbnZhciBub25EaXJlY3RDaGFycyA9IC9bXkEtWmEtejAtOSdcXChcXCksLVxcLlxcLzpcXD8gXFxuXFxyXFx0XSsvZztcblxuZnVuY3Rpb24gVXRmN0VuY29kZXIob3B0aW9ucywgY29kZWMpIHtcbiAgICB0aGlzLmljb252ID0gY29kZWMuaWNvbnY7XG59XG5cblV0ZjdFbmNvZGVyLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIC8vIE5haXZlIGltcGxlbWVudGF0aW9uLlxuICAgIC8vIE5vbi1kaXJlY3QgY2hhcnMgYXJlIGVuY29kZWQgYXMgXCIrPGJhc2U2ND4tXCI7IHNpbmdsZSBcIitcIiBjaGFyIGlzIGVuY29kZWQgYXMgXCIrLVwiLlxuICAgIHJldHVybiBCdWZmZXIuZnJvbShzdHIucmVwbGFjZShub25EaXJlY3RDaGFycywgZnVuY3Rpb24oY2h1bmspIHtcbiAgICAgICAgcmV0dXJuIFwiK1wiICsgKGNodW5rID09PSAnKycgPyAnJyA6IFxuICAgICAgICAgICAgdGhpcy5pY29udi5lbmNvZGUoY2h1bmssICd1dGYxNi1iZScpLnRvU3RyaW5nKCdiYXNlNjQnKS5yZXBsYWNlKC89KyQvLCAnJykpIFxuICAgICAgICAgICAgKyBcIi1cIjtcbiAgICB9LmJpbmQodGhpcykpKTtcbn1cblxuVXRmN0VuY29kZXIucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKCkge1xufVxuXG5cbi8vIC0tIERlY29kaW5nXG5cbmZ1bmN0aW9uIFV0ZjdEZWNvZGVyKG9wdGlvbnMsIGNvZGVjKSB7XG4gICAgdGhpcy5pY29udiA9IGNvZGVjLmljb252O1xuICAgIHRoaXMuaW5CYXNlNjQgPSBmYWxzZTtcbiAgICB0aGlzLmJhc2U2NEFjY3VtID0gJyc7XG59XG5cbnZhciBiYXNlNjRSZWdleCA9IC9bQS1aYS16MC05XFwvK10vO1xudmFyIGJhc2U2NENoYXJzID0gW107XG5mb3IgKHZhciBpID0gMDsgaSA8IDI1NjsgaSsrKVxuICAgIGJhc2U2NENoYXJzW2ldID0gYmFzZTY0UmVnZXgudGVzdChTdHJpbmcuZnJvbUNoYXJDb2RlKGkpKTtcblxudmFyIHBsdXNDaGFyID0gJysnLmNoYXJDb2RlQXQoMCksIFxuICAgIG1pbnVzQ2hhciA9ICctJy5jaGFyQ29kZUF0KDApLFxuICAgIGFuZENoYXIgPSAnJicuY2hhckNvZGVBdCgwKTtcblxuVXRmN0RlY29kZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oYnVmKSB7XG4gICAgdmFyIHJlcyA9IFwiXCIsIGxhc3RJID0gMCxcbiAgICAgICAgaW5CYXNlNjQgPSB0aGlzLmluQmFzZTY0LFxuICAgICAgICBiYXNlNjRBY2N1bSA9IHRoaXMuYmFzZTY0QWNjdW07XG5cbiAgICAvLyBUaGUgZGVjb2RlciBpcyBtb3JlIGludm9sdmVkIGFzIHdlIG11c3QgaGFuZGxlIGNodW5rcyBpbiBzdHJlYW0uXG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJ1Zi5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoIWluQmFzZTY0KSB7IC8vIFdlJ3JlIGluIGRpcmVjdCBtb2RlLlxuICAgICAgICAgICAgLy8gV3JpdGUgZGlyZWN0IGNoYXJzIHVudGlsICcrJ1xuICAgICAgICAgICAgaWYgKGJ1ZltpXSA9PSBwbHVzQ2hhcikge1xuICAgICAgICAgICAgICAgIHJlcyArPSB0aGlzLmljb252LmRlY29kZShidWYuc2xpY2UobGFzdEksIGkpLCBcImFzY2lpXCIpOyAvLyBXcml0ZSBkaXJlY3QgY2hhcnMuXG4gICAgICAgICAgICAgICAgbGFzdEkgPSBpKzE7XG4gICAgICAgICAgICAgICAgaW5CYXNlNjQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgeyAvLyBXZSBkZWNvZGUgYmFzZTY0LlxuICAgICAgICAgICAgaWYgKCFiYXNlNjRDaGFyc1tidWZbaV1dKSB7IC8vIEJhc2U2NCBlbmRlZC5cbiAgICAgICAgICAgICAgICBpZiAoaSA9PSBsYXN0SSAmJiBidWZbaV0gPT0gbWludXNDaGFyKSB7Ly8gXCIrLVwiIC0+IFwiK1wiXG4gICAgICAgICAgICAgICAgICAgIHJlcyArPSBcIitcIjtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYjY0c3RyID0gYmFzZTY0QWNjdW0gKyBidWYuc2xpY2UobGFzdEksIGkpLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgIHJlcyArPSB0aGlzLmljb252LmRlY29kZShCdWZmZXIuZnJvbShiNjRzdHIsICdiYXNlNjQnKSwgXCJ1dGYxNi1iZVwiKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoYnVmW2ldICE9IG1pbnVzQ2hhcikgLy8gTWludXMgaXMgYWJzb3JiZWQgYWZ0ZXIgYmFzZTY0LlxuICAgICAgICAgICAgICAgICAgICBpLS07XG5cbiAgICAgICAgICAgICAgICBsYXN0SSA9IGkrMTtcbiAgICAgICAgICAgICAgICBpbkJhc2U2NCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGJhc2U2NEFjY3VtID0gJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIWluQmFzZTY0KSB7XG4gICAgICAgIHJlcyArPSB0aGlzLmljb252LmRlY29kZShidWYuc2xpY2UobGFzdEkpLCBcImFzY2lpXCIpOyAvLyBXcml0ZSBkaXJlY3QgY2hhcnMuXG4gICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIGI2NHN0ciA9IGJhc2U2NEFjY3VtICsgYnVmLnNsaWNlKGxhc3RJKS50b1N0cmluZygpO1xuXG4gICAgICAgIHZhciBjYW5CZURlY29kZWQgPSBiNjRzdHIubGVuZ3RoIC0gKGI2NHN0ci5sZW5ndGggJSA4KTsgLy8gTWluaW1hbCBjaHVuazogMiBxdWFkcyAtPiAyeDMgYnl0ZXMgLT4gMyBjaGFycy5cbiAgICAgICAgYmFzZTY0QWNjdW0gPSBiNjRzdHIuc2xpY2UoY2FuQmVEZWNvZGVkKTsgLy8gVGhlIHJlc3Qgd2lsbCBiZSBkZWNvZGVkIGluIGZ1dHVyZS5cbiAgICAgICAgYjY0c3RyID0gYjY0c3RyLnNsaWNlKDAsIGNhbkJlRGVjb2RlZCk7XG5cbiAgICAgICAgcmVzICs9IHRoaXMuaWNvbnYuZGVjb2RlKEJ1ZmZlci5mcm9tKGI2NHN0ciwgJ2Jhc2U2NCcpLCBcInV0ZjE2LWJlXCIpO1xuICAgIH1cblxuICAgIHRoaXMuaW5CYXNlNjQgPSBpbkJhc2U2NDtcbiAgICB0aGlzLmJhc2U2NEFjY3VtID0gYmFzZTY0QWNjdW07XG5cbiAgICByZXR1cm4gcmVzO1xufVxuXG5VdGY3RGVjb2Rlci5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHJlcyA9IFwiXCI7XG4gICAgaWYgKHRoaXMuaW5CYXNlNjQgJiYgdGhpcy5iYXNlNjRBY2N1bS5sZW5ndGggPiAwKVxuICAgICAgICByZXMgPSB0aGlzLmljb252LmRlY29kZShCdWZmZXIuZnJvbSh0aGlzLmJhc2U2NEFjY3VtLCAnYmFzZTY0JyksIFwidXRmMTYtYmVcIik7XG5cbiAgICB0aGlzLmluQmFzZTY0ID0gZmFsc2U7XG4gICAgdGhpcy5iYXNlNjRBY2N1bSA9ICcnO1xuICAgIHJldHVybiByZXM7XG59XG5cblxuLy8gVVRGLTctSU1BUCBjb2RlYy5cbi8vIFJGQzM1MDEgU2VjLiA1LjEuMyBNb2RpZmllZCBVVEYtNyAoaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzUwMSNzZWN0aW9uLTUuMS4zKVxuLy8gRGlmZmVyZW5jZXM6XG4vLyAgKiBCYXNlNjQgcGFydCBpcyBzdGFydGVkIGJ5IFwiJlwiIGluc3RlYWQgb2YgXCIrXCJcbi8vICAqIERpcmVjdCBjaGFyYWN0ZXJzIGFyZSAweDIwLTB4N0UsIGV4Y2VwdCBcIiZcIiAoMHgyNilcbi8vICAqIEluIEJhc2U2NCwgXCIsXCIgaXMgdXNlZCBpbnN0ZWFkIG9mIFwiL1wiXG4vLyAgKiBCYXNlNjQgbXVzdCBub3QgYmUgdXNlZCB0byByZXByZXNlbnQgZGlyZWN0IGNoYXJhY3RlcnMuXG4vLyAgKiBObyBpbXBsaWNpdCBzaGlmdCBiYWNrIGZyb20gQmFzZTY0IChzaG91bGQgYWx3YXlzIGVuZCB3aXRoICctJylcbi8vICAqIFN0cmluZyBtdXN0IGVuZCBpbiBub24tc2hpZnRlZCBwb3NpdGlvbi5cbi8vICAqIFwiLSZcIiB3aGlsZSBpbiBiYXNlNjQgaXMgbm90IGFsbG93ZWQuXG5cblxuZXhwb3J0cy51dGY3aW1hcCA9IFV0ZjdJTUFQQ29kZWM7XG5mdW5jdGlvbiBVdGY3SU1BUENvZGVjKGNvZGVjT3B0aW9ucywgaWNvbnYpIHtcbiAgICB0aGlzLmljb252ID0gaWNvbnY7XG59O1xuXG5VdGY3SU1BUENvZGVjLnByb3RvdHlwZS5lbmNvZGVyID0gVXRmN0lNQVBFbmNvZGVyO1xuVXRmN0lNQVBDb2RlYy5wcm90b3R5cGUuZGVjb2RlciA9IFV0ZjdJTUFQRGVjb2RlcjtcblV0ZjdJTUFQQ29kZWMucHJvdG90eXBlLmJvbUF3YXJlID0gdHJ1ZTtcblxuXG4vLyAtLSBFbmNvZGluZ1xuXG5mdW5jdGlvbiBVdGY3SU1BUEVuY29kZXIob3B0aW9ucywgY29kZWMpIHtcbiAgICB0aGlzLmljb252ID0gY29kZWMuaWNvbnY7XG4gICAgdGhpcy5pbkJhc2U2NCA9IGZhbHNlO1xuICAgIHRoaXMuYmFzZTY0QWNjdW0gPSBCdWZmZXIuYWxsb2MoNik7XG4gICAgdGhpcy5iYXNlNjRBY2N1bUlkeCA9IDA7XG59XG5cblV0ZjdJTUFQRW5jb2Rlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihzdHIpIHtcbiAgICB2YXIgaW5CYXNlNjQgPSB0aGlzLmluQmFzZTY0LFxuICAgICAgICBiYXNlNjRBY2N1bSA9IHRoaXMuYmFzZTY0QWNjdW0sXG4gICAgICAgIGJhc2U2NEFjY3VtSWR4ID0gdGhpcy5iYXNlNjRBY2N1bUlkeCxcbiAgICAgICAgYnVmID0gQnVmZmVyLmFsbG9jKHN0ci5sZW5ndGgqNSArIDEwKSwgYnVmSWR4ID0gMDtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciB1Q2hhciA9IHN0ci5jaGFyQ29kZUF0KGkpO1xuICAgICAgICBpZiAoMHgyMCA8PSB1Q2hhciAmJiB1Q2hhciA8PSAweDdFKSB7IC8vIERpcmVjdCBjaGFyYWN0ZXIgb3IgJyYnLlxuICAgICAgICAgICAgaWYgKGluQmFzZTY0KSB7XG4gICAgICAgICAgICAgICAgaWYgKGJhc2U2NEFjY3VtSWR4ID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBidWZJZHggKz0gYnVmLndyaXRlKGJhc2U2NEFjY3VtLnNsaWNlKDAsIGJhc2U2NEFjY3VtSWR4KS50b1N0cmluZygnYmFzZTY0JykucmVwbGFjZSgvXFwvL2csICcsJykucmVwbGFjZSgvPSskLywgJycpLCBidWZJZHgpO1xuICAgICAgICAgICAgICAgICAgICBiYXNlNjRBY2N1bUlkeCA9IDA7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgYnVmW2J1ZklkeCsrXSA9IG1pbnVzQ2hhcjsgLy8gV3JpdGUgJy0nLCB0aGVuIGdvIHRvIGRpcmVjdCBtb2RlLlxuICAgICAgICAgICAgICAgIGluQmFzZTY0ID0gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghaW5CYXNlNjQpIHtcbiAgICAgICAgICAgICAgICBidWZbYnVmSWR4KytdID0gdUNoYXI7IC8vIFdyaXRlIGRpcmVjdCBjaGFyYWN0ZXJcblxuICAgICAgICAgICAgICAgIGlmICh1Q2hhciA9PT0gYW5kQ2hhcikgIC8vIEFtcGVyc2FuZCAtPiAnJi0nXG4gICAgICAgICAgICAgICAgICAgIGJ1ZltidWZJZHgrK10gPSBtaW51c0NoYXI7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSBlbHNlIHsgLy8gTm9uLWRpcmVjdCBjaGFyYWN0ZXJcbiAgICAgICAgICAgIGlmICghaW5CYXNlNjQpIHtcbiAgICAgICAgICAgICAgICBidWZbYnVmSWR4KytdID0gYW5kQ2hhcjsgLy8gV3JpdGUgJyYnLCB0aGVuIGdvIHRvIGJhc2U2NCBtb2RlLlxuICAgICAgICAgICAgICAgIGluQmFzZTY0ID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbkJhc2U2NCkge1xuICAgICAgICAgICAgICAgIGJhc2U2NEFjY3VtW2Jhc2U2NEFjY3VtSWR4KytdID0gdUNoYXIgPj4gODtcbiAgICAgICAgICAgICAgICBiYXNlNjRBY2N1bVtiYXNlNjRBY2N1bUlkeCsrXSA9IHVDaGFyICYgMHhGRjtcblxuICAgICAgICAgICAgICAgIGlmIChiYXNlNjRBY2N1bUlkeCA9PSBiYXNlNjRBY2N1bS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgYnVmSWR4ICs9IGJ1Zi53cml0ZShiYXNlNjRBY2N1bS50b1N0cmluZygnYmFzZTY0JykucmVwbGFjZSgvXFwvL2csICcsJyksIGJ1ZklkeCk7XG4gICAgICAgICAgICAgICAgICAgIGJhc2U2NEFjY3VtSWR4ID0gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmluQmFzZTY0ID0gaW5CYXNlNjQ7XG4gICAgdGhpcy5iYXNlNjRBY2N1bUlkeCA9IGJhc2U2NEFjY3VtSWR4O1xuXG4gICAgcmV0dXJuIGJ1Zi5zbGljZSgwLCBidWZJZHgpO1xufVxuXG5VdGY3SU1BUEVuY29kZXIucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBidWYgPSBCdWZmZXIuYWxsb2MoMTApLCBidWZJZHggPSAwO1xuICAgIGlmICh0aGlzLmluQmFzZTY0KSB7XG4gICAgICAgIGlmICh0aGlzLmJhc2U2NEFjY3VtSWR4ID4gMCkge1xuICAgICAgICAgICAgYnVmSWR4ICs9IGJ1Zi53cml0ZSh0aGlzLmJhc2U2NEFjY3VtLnNsaWNlKDAsIHRoaXMuYmFzZTY0QWNjdW1JZHgpLnRvU3RyaW5nKCdiYXNlNjQnKS5yZXBsYWNlKC9cXC8vZywgJywnKS5yZXBsYWNlKC89KyQvLCAnJyksIGJ1ZklkeCk7XG4gICAgICAgICAgICB0aGlzLmJhc2U2NEFjY3VtSWR4ID0gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIGJ1ZltidWZJZHgrK10gPSBtaW51c0NoYXI7IC8vIFdyaXRlICctJywgdGhlbiBnbyB0byBkaXJlY3QgbW9kZS5cbiAgICAgICAgdGhpcy5pbkJhc2U2NCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiBidWYuc2xpY2UoMCwgYnVmSWR4KTtcbn1cblxuXG4vLyAtLSBEZWNvZGluZ1xuXG5mdW5jdGlvbiBVdGY3SU1BUERlY29kZXIob3B0aW9ucywgY29kZWMpIHtcbiAgICB0aGlzLmljb252ID0gY29kZWMuaWNvbnY7XG4gICAgdGhpcy5pbkJhc2U2NCA9IGZhbHNlO1xuICAgIHRoaXMuYmFzZTY0QWNjdW0gPSAnJztcbn1cblxudmFyIGJhc2U2NElNQVBDaGFycyA9IGJhc2U2NENoYXJzLnNsaWNlKCk7XG5iYXNlNjRJTUFQQ2hhcnNbJywnLmNoYXJDb2RlQXQoMCldID0gdHJ1ZTtcblxuVXRmN0lNQVBEZWNvZGVyLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uKGJ1Zikge1xuICAgIHZhciByZXMgPSBcIlwiLCBsYXN0SSA9IDAsXG4gICAgICAgIGluQmFzZTY0ID0gdGhpcy5pbkJhc2U2NCxcbiAgICAgICAgYmFzZTY0QWNjdW0gPSB0aGlzLmJhc2U2NEFjY3VtO1xuXG4gICAgLy8gVGhlIGRlY29kZXIgaXMgbW9yZSBpbnZvbHZlZCBhcyB3ZSBtdXN0IGhhbmRsZSBjaHVua3MgaW4gc3RyZWFtLlxuICAgIC8vIEl0IGlzIGZvcmdpdmluZywgY2xvc2VyIHRvIHN0YW5kYXJkIFVURi03IChmb3IgZXhhbXBsZSwgJy0nIGlzIG9wdGlvbmFsIGF0IHRoZSBlbmQpLlxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWYubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKCFpbkJhc2U2NCkgeyAvLyBXZSdyZSBpbiBkaXJlY3QgbW9kZS5cbiAgICAgICAgICAgIC8vIFdyaXRlIGRpcmVjdCBjaGFycyB1bnRpbCAnJidcbiAgICAgICAgICAgIGlmIChidWZbaV0gPT0gYW5kQ2hhcikge1xuICAgICAgICAgICAgICAgIHJlcyArPSB0aGlzLmljb252LmRlY29kZShidWYuc2xpY2UobGFzdEksIGkpLCBcImFzY2lpXCIpOyAvLyBXcml0ZSBkaXJlY3QgY2hhcnMuXG4gICAgICAgICAgICAgICAgbGFzdEkgPSBpKzE7XG4gICAgICAgICAgICAgICAgaW5CYXNlNjQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgeyAvLyBXZSBkZWNvZGUgYmFzZTY0LlxuICAgICAgICAgICAgaWYgKCFiYXNlNjRJTUFQQ2hhcnNbYnVmW2ldXSkgeyAvLyBCYXNlNjQgZW5kZWQuXG4gICAgICAgICAgICAgICAgaWYgKGkgPT0gbGFzdEkgJiYgYnVmW2ldID09IG1pbnVzQ2hhcikgeyAvLyBcIiYtXCIgLT4gXCImXCJcbiAgICAgICAgICAgICAgICAgICAgcmVzICs9IFwiJlwiO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBiNjRzdHIgPSBiYXNlNjRBY2N1bSArIGJ1Zi5zbGljZShsYXN0SSwgaSkudG9TdHJpbmcoKS5yZXBsYWNlKC8sL2csICcvJyk7XG4gICAgICAgICAgICAgICAgICAgIHJlcyArPSB0aGlzLmljb252LmRlY29kZShCdWZmZXIuZnJvbShiNjRzdHIsICdiYXNlNjQnKSwgXCJ1dGYxNi1iZVwiKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoYnVmW2ldICE9IG1pbnVzQ2hhcikgLy8gTWludXMgbWF5IGJlIGFic29yYmVkIGFmdGVyIGJhc2U2NC5cbiAgICAgICAgICAgICAgICAgICAgaS0tO1xuXG4gICAgICAgICAgICAgICAgbGFzdEkgPSBpKzE7XG4gICAgICAgICAgICAgICAgaW5CYXNlNjQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBiYXNlNjRBY2N1bSA9ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFpbkJhc2U2NCkge1xuICAgICAgICByZXMgKz0gdGhpcy5pY29udi5kZWNvZGUoYnVmLnNsaWNlKGxhc3RJKSwgXCJhc2NpaVwiKTsgLy8gV3JpdGUgZGlyZWN0IGNoYXJzLlxuICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBiNjRzdHIgPSBiYXNlNjRBY2N1bSArIGJ1Zi5zbGljZShsYXN0SSkudG9TdHJpbmcoKS5yZXBsYWNlKC8sL2csICcvJyk7XG5cbiAgICAgICAgdmFyIGNhbkJlRGVjb2RlZCA9IGI2NHN0ci5sZW5ndGggLSAoYjY0c3RyLmxlbmd0aCAlIDgpOyAvLyBNaW5pbWFsIGNodW5rOiAyIHF1YWRzIC0+IDJ4MyBieXRlcyAtPiAzIGNoYXJzLlxuICAgICAgICBiYXNlNjRBY2N1bSA9IGI2NHN0ci5zbGljZShjYW5CZURlY29kZWQpOyAvLyBUaGUgcmVzdCB3aWxsIGJlIGRlY29kZWQgaW4gZnV0dXJlLlxuICAgICAgICBiNjRzdHIgPSBiNjRzdHIuc2xpY2UoMCwgY2FuQmVEZWNvZGVkKTtcblxuICAgICAgICByZXMgKz0gdGhpcy5pY29udi5kZWNvZGUoQnVmZmVyLmZyb20oYjY0c3RyLCAnYmFzZTY0JyksIFwidXRmMTYtYmVcIik7XG4gICAgfVxuXG4gICAgdGhpcy5pbkJhc2U2NCA9IGluQmFzZTY0O1xuICAgIHRoaXMuYmFzZTY0QWNjdW0gPSBiYXNlNjRBY2N1bTtcblxuICAgIHJldHVybiByZXM7XG59XG5cblV0ZjdJTUFQRGVjb2Rlci5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHJlcyA9IFwiXCI7XG4gICAgaWYgKHRoaXMuaW5CYXNlNjQgJiYgdGhpcy5iYXNlNjRBY2N1bS5sZW5ndGggPiAwKVxuICAgICAgICByZXMgPSB0aGlzLmljb252LmRlY29kZShCdWZmZXIuZnJvbSh0aGlzLmJhc2U2NEFjY3VtLCAnYmFzZTY0JyksIFwidXRmMTYtYmVcIik7XG5cbiAgICB0aGlzLmluQmFzZTY0ID0gZmFsc2U7XG4gICAgdGhpcy5iYXNlNjRBY2N1bSA9ICcnO1xuICAgIHJldHVybiByZXM7XG59XG5cblxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgQnVmZmVyID0gcmVxdWlyZShcInNhZmVyLWJ1ZmZlclwiKS5CdWZmZXI7XG5cbi8vIFNpbmdsZS1ieXRlIGNvZGVjLiBOZWVkcyBhICdjaGFycycgc3RyaW5nIHBhcmFtZXRlciB0aGF0IGNvbnRhaW5zIDI1NiBvciAxMjggY2hhcnMgdGhhdFxuLy8gY29ycmVzcG9uZCB0byBlbmNvZGVkIGJ5dGVzIChpZiAxMjggLSB0aGVuIGxvd2VyIGhhbGYgaXMgQVNDSUkpLiBcblxuZXhwb3J0cy5fc2JjcyA9IFNCQ1NDb2RlYztcbmZ1bmN0aW9uIFNCQ1NDb2RlYyhjb2RlY09wdGlvbnMsIGljb252KSB7XG4gICAgaWYgKCFjb2RlY09wdGlvbnMpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNCQ1MgY29kZWMgaXMgY2FsbGVkIHdpdGhvdXQgdGhlIGRhdGEuXCIpXG4gICAgXG4gICAgLy8gUHJlcGFyZSBjaGFyIGJ1ZmZlciBmb3IgZGVjb2RpbmcuXG4gICAgaWYgKCFjb2RlY09wdGlvbnMuY2hhcnMgfHwgKGNvZGVjT3B0aW9ucy5jaGFycy5sZW5ndGggIT09IDEyOCAmJiBjb2RlY09wdGlvbnMuY2hhcnMubGVuZ3RoICE9PSAyNTYpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFbmNvZGluZyAnXCIrY29kZWNPcHRpb25zLnR5cGUrXCInIGhhcyBpbmNvcnJlY3QgJ2NoYXJzJyAobXVzdCBiZSBvZiBsZW4gMTI4IG9yIDI1NilcIik7XG4gICAgXG4gICAgaWYgKGNvZGVjT3B0aW9ucy5jaGFycy5sZW5ndGggPT09IDEyOCkge1xuICAgICAgICB2YXIgYXNjaWlTdHJpbmcgPSBcIlwiO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDEyODsgaSsrKVxuICAgICAgICAgICAgYXNjaWlTdHJpbmcgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShpKTtcbiAgICAgICAgY29kZWNPcHRpb25zLmNoYXJzID0gYXNjaWlTdHJpbmcgKyBjb2RlY09wdGlvbnMuY2hhcnM7XG4gICAgfVxuXG4gICAgdGhpcy5kZWNvZGVCdWYgPSBuZXcgQnVmZmVyLmZyb20oY29kZWNPcHRpb25zLmNoYXJzLCAndWNzMicpO1xuICAgIFxuICAgIC8vIEVuY29kaW5nIGJ1ZmZlci5cbiAgICB2YXIgZW5jb2RlQnVmID0gbmV3IEJ1ZmZlci5hbGxvYyg2NTUzNiwgaWNvbnYuZGVmYXVsdENoYXJTaW5nbGVCeXRlLmNoYXJDb2RlQXQoMCkpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb2RlY09wdGlvbnMuY2hhcnMubGVuZ3RoOyBpKyspXG4gICAgICAgIGVuY29kZUJ1Zltjb2RlY09wdGlvbnMuY2hhcnMuY2hhckNvZGVBdChpKV0gPSBpO1xuXG4gICAgdGhpcy5lbmNvZGVCdWYgPSBlbmNvZGVCdWY7XG59XG5cblNCQ1NDb2RlYy5wcm90b3R5cGUuZW5jb2RlciA9IFNCQ1NFbmNvZGVyO1xuU0JDU0NvZGVjLnByb3RvdHlwZS5kZWNvZGVyID0gU0JDU0RlY29kZXI7XG5cblxuZnVuY3Rpb24gU0JDU0VuY29kZXIob3B0aW9ucywgY29kZWMpIHtcbiAgICB0aGlzLmVuY29kZUJ1ZiA9IGNvZGVjLmVuY29kZUJ1Zjtcbn1cblxuU0JDU0VuY29kZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgdmFyIGJ1ZiA9IEJ1ZmZlci5hbGxvYyhzdHIubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKylcbiAgICAgICAgYnVmW2ldID0gdGhpcy5lbmNvZGVCdWZbc3RyLmNoYXJDb2RlQXQoaSldO1xuICAgIFxuICAgIHJldHVybiBidWY7XG59XG5cblNCQ1NFbmNvZGVyLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHtcbn1cblxuXG5mdW5jdGlvbiBTQkNTRGVjb2RlcihvcHRpb25zLCBjb2RlYykge1xuICAgIHRoaXMuZGVjb2RlQnVmID0gY29kZWMuZGVjb2RlQnVmO1xufVxuXG5TQkNTRGVjb2Rlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihidWYpIHtcbiAgICAvLyBTdHJpbmdzIGFyZSBpbW11dGFibGUgaW4gSlMgLT4gd2UgdXNlIHVjczIgYnVmZmVyIHRvIHNwZWVkIHVwIGNvbXB1dGF0aW9ucy5cbiAgICB2YXIgZGVjb2RlQnVmID0gdGhpcy5kZWNvZGVCdWY7XG4gICAgdmFyIG5ld0J1ZiA9IEJ1ZmZlci5hbGxvYyhidWYubGVuZ3RoKjIpO1xuICAgIHZhciBpZHgxID0gMCwgaWR4MiA9IDA7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBidWYubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWR4MSA9IGJ1ZltpXSoyOyBpZHgyID0gaSoyO1xuICAgICAgICBuZXdCdWZbaWR4Ml0gPSBkZWNvZGVCdWZbaWR4MV07XG4gICAgICAgIG5ld0J1ZltpZHgyKzFdID0gZGVjb2RlQnVmW2lkeDErMV07XG4gICAgfVxuICAgIHJldHVybiBuZXdCdWYudG9TdHJpbmcoJ3VjczInKTtcbn1cblxuU0JDU0RlY29kZXIucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKCkge1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIE1hbnVhbGx5IGFkZGVkIGRhdGEgdG8gYmUgdXNlZCBieSBzYmNzIGNvZGVjIGluIGFkZGl0aW9uIHRvIGdlbmVyYXRlZCBvbmUuXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIC8vIE5vdCBzdXBwb3J0ZWQgYnkgaWNvbnYsIG5vdCBzdXJlIHdoeS5cbiAgICBcIjEwMDI5XCI6IFwibWFjY2VudGV1cm9cIixcbiAgICBcIm1hY2NlbnRldXJvXCI6IHtcbiAgICAgICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICAgICAgXCJjaGFyc1wiOiBcIsOExIDEgcOJxITDlsOcw6HEhcSMw6TEjcSGxIfDqcW5xbrEjsOtxI/EksSTxJbDs8SXw7TDtsO1w7rEmsSbw7zigKDCsMSYwqPCp+KAosK2w5/CrsKp4oSixJnCqOKJoMSjxK7Er8Sq4omk4omlxKvEtuKIguKIkcWCxLvEvMS9xL7EucS6xYXFhsWDwqziiJrFhMWH4oiGwqvCu+KApsKgxYjFkMOVxZHFjOKAk+KAlOKAnOKAneKAmOKAmcO34peKxY3FlMWVxZjigLnigLrFmcWWxZfFoOKAmuKAnsWhxZrFm8OBxaTFpcONxb3FvsWqw5PDlMWrxa7DmsWvxbDFscWyxbPDncO9xLfFu8WBxbzEosuHXCJcbiAgICB9LFxuXG4gICAgXCI4MDhcIjogXCJjcDgwOFwiLFxuICAgIFwiaWJtODA4XCI6IFwiY3A4MDhcIixcbiAgICBcImNwODA4XCI6IHtcbiAgICAgICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICAgICAgXCJjaGFyc1wiOiBcItCQ0JHQktCT0JTQldCW0JfQmNCZ0JrQm9Cc0J3QntCf0KDQodCi0KPQpNCl0KbQp9Co0KnQqtCr0KzQrdCu0K/QsNCx0LLQs9C00LXQttC30LjQudC60LvQvNC90L7Qv+KWkeKWkuKWk+KUguKUpOKVoeKVouKVluKVleKVo+KVkeKVl+KVneKVnOKVm+KUkOKUlOKUtOKUrOKUnOKUgOKUvOKVnuKVn+KVmuKVlOKVqeKVpuKVoOKVkOKVrOKVp+KVqOKVpOKVpeKVmeKVmOKVkuKVk+KVq+KVquKUmOKUjOKWiOKWhOKWjOKWkOKWgNGA0YHRgtGD0YTRhdGG0YfRiNGJ0YrRi9GM0Y3RjtGP0IHRkdCE0ZTQh9GX0I7RnsKw4oiZwrfiiJrihJbigqzilqDCoFwiXG4gICAgfSxcblxuICAgIC8vIEFsaWFzZXMgb2YgZ2VuZXJhdGVkIGVuY29kaW5ncy5cbiAgICBcImFzY2lpOGJpdFwiOiBcImFzY2lpXCIsXG4gICAgXCJ1c2FzY2lpXCI6IFwiYXNjaWlcIixcbiAgICBcImFuc2l4MzRcIjogXCJhc2NpaVwiLFxuICAgIFwiYW5zaXgzNDE5NjhcIjogXCJhc2NpaVwiLFxuICAgIFwiYW5zaXgzNDE5ODZcIjogXCJhc2NpaVwiLFxuICAgIFwiY3Nhc2NpaVwiOiBcImFzY2lpXCIsXG4gICAgXCJjcDM2N1wiOiBcImFzY2lpXCIsXG4gICAgXCJpYm0zNjdcIjogXCJhc2NpaVwiLFxuICAgIFwiaXNvaXI2XCI6IFwiYXNjaWlcIixcbiAgICBcImlzbzY0NnVzXCI6IFwiYXNjaWlcIixcbiAgICBcImlzbzY0NmlydlwiOiBcImFzY2lpXCIsXG4gICAgXCJ1c1wiOiBcImFzY2lpXCIsXG5cbiAgICBcImxhdGluMVwiOiBcImlzbzg4NTkxXCIsXG4gICAgXCJsYXRpbjJcIjogXCJpc284ODU5MlwiLFxuICAgIFwibGF0aW4zXCI6IFwiaXNvODg1OTNcIixcbiAgICBcImxhdGluNFwiOiBcImlzbzg4NTk0XCIsXG4gICAgXCJsYXRpbjVcIjogXCJpc284ODU5OVwiLFxuICAgIFwibGF0aW42XCI6IFwiaXNvODg1OTEwXCIsXG4gICAgXCJsYXRpbjdcIjogXCJpc284ODU5MTNcIixcbiAgICBcImxhdGluOFwiOiBcImlzbzg4NTkxNFwiLFxuICAgIFwibGF0aW45XCI6IFwiaXNvODg1OTE1XCIsXG4gICAgXCJsYXRpbjEwXCI6IFwiaXNvODg1OTE2XCIsXG5cbiAgICBcImNzaXNvbGF0aW4xXCI6IFwiaXNvODg1OTFcIixcbiAgICBcImNzaXNvbGF0aW4yXCI6IFwiaXNvODg1OTJcIixcbiAgICBcImNzaXNvbGF0aW4zXCI6IFwiaXNvODg1OTNcIixcbiAgICBcImNzaXNvbGF0aW40XCI6IFwiaXNvODg1OTRcIixcbiAgICBcImNzaXNvbGF0aW5jeXJpbGxpY1wiOiBcImlzbzg4NTk1XCIsXG4gICAgXCJjc2lzb2xhdGluYXJhYmljXCI6IFwiaXNvODg1OTZcIixcbiAgICBcImNzaXNvbGF0aW5ncmVla1wiIDogXCJpc284ODU5N1wiLFxuICAgIFwiY3Npc29sYXRpbmhlYnJld1wiOiBcImlzbzg4NTk4XCIsXG4gICAgXCJjc2lzb2xhdGluNVwiOiBcImlzbzg4NTk5XCIsXG4gICAgXCJjc2lzb2xhdGluNlwiOiBcImlzbzg4NTkxMFwiLFxuXG4gICAgXCJsMVwiOiBcImlzbzg4NTkxXCIsXG4gICAgXCJsMlwiOiBcImlzbzg4NTkyXCIsXG4gICAgXCJsM1wiOiBcImlzbzg4NTkzXCIsXG4gICAgXCJsNFwiOiBcImlzbzg4NTk0XCIsXG4gICAgXCJsNVwiOiBcImlzbzg4NTk5XCIsXG4gICAgXCJsNlwiOiBcImlzbzg4NTkxMFwiLFxuICAgIFwibDdcIjogXCJpc284ODU5MTNcIixcbiAgICBcImw4XCI6IFwiaXNvODg1OTE0XCIsXG4gICAgXCJsOVwiOiBcImlzbzg4NTkxNVwiLFxuICAgIFwibDEwXCI6IFwiaXNvODg1OTE2XCIsXG5cbiAgICBcImlzb2lyMTRcIjogXCJpc282NDZqcFwiLFxuICAgIFwiaXNvaXI1N1wiOiBcImlzbzY0NmNuXCIsXG4gICAgXCJpc29pcjEwMFwiOiBcImlzbzg4NTkxXCIsXG4gICAgXCJpc29pcjEwMVwiOiBcImlzbzg4NTkyXCIsXG4gICAgXCJpc29pcjEwOVwiOiBcImlzbzg4NTkzXCIsXG4gICAgXCJpc29pcjExMFwiOiBcImlzbzg4NTk0XCIsXG4gICAgXCJpc29pcjE0NFwiOiBcImlzbzg4NTk1XCIsXG4gICAgXCJpc29pcjEyN1wiOiBcImlzbzg4NTk2XCIsXG4gICAgXCJpc29pcjEyNlwiOiBcImlzbzg4NTk3XCIsXG4gICAgXCJpc29pcjEzOFwiOiBcImlzbzg4NTk4XCIsXG4gICAgXCJpc29pcjE0OFwiOiBcImlzbzg4NTk5XCIsXG4gICAgXCJpc29pcjE1N1wiOiBcImlzbzg4NTkxMFwiLFxuICAgIFwiaXNvaXIxNjZcIjogXCJ0aXM2MjBcIixcbiAgICBcImlzb2lyMTc5XCI6IFwiaXNvODg1OTEzXCIsXG4gICAgXCJpc29pcjE5OVwiOiBcImlzbzg4NTkxNFwiLFxuICAgIFwiaXNvaXIyMDNcIjogXCJpc284ODU5MTVcIixcbiAgICBcImlzb2lyMjI2XCI6IFwiaXNvODg1OTE2XCIsXG5cbiAgICBcImNwODE5XCI6IFwiaXNvODg1OTFcIixcbiAgICBcImlibTgxOVwiOiBcImlzbzg4NTkxXCIsXG5cbiAgICBcImN5cmlsbGljXCI6IFwiaXNvODg1OTVcIixcblxuICAgIFwiYXJhYmljXCI6IFwiaXNvODg1OTZcIixcbiAgICBcImFyYWJpYzhcIjogXCJpc284ODU5NlwiLFxuICAgIFwiZWNtYTExNFwiOiBcImlzbzg4NTk2XCIsXG4gICAgXCJhc21vNzA4XCI6IFwiaXNvODg1OTZcIixcblxuICAgIFwiZ3JlZWtcIiA6IFwiaXNvODg1OTdcIixcbiAgICBcImdyZWVrOFwiIDogXCJpc284ODU5N1wiLFxuICAgIFwiZWNtYTExOFwiIDogXCJpc284ODU5N1wiLFxuICAgIFwiZWxvdDkyOFwiIDogXCJpc284ODU5N1wiLFxuXG4gICAgXCJoZWJyZXdcIjogXCJpc284ODU5OFwiLFxuICAgIFwiaGVicmV3OFwiOiBcImlzbzg4NTk4XCIsXG5cbiAgICBcInR1cmtpc2hcIjogXCJpc284ODU5OVwiLFxuICAgIFwidHVya2lzaDhcIjogXCJpc284ODU5OVwiLFxuXG4gICAgXCJ0aGFpXCI6IFwiaXNvODg1OTExXCIsXG4gICAgXCJ0aGFpOFwiOiBcImlzbzg4NTkxMVwiLFxuXG4gICAgXCJjZWx0aWNcIjogXCJpc284ODU5MTRcIixcbiAgICBcImNlbHRpYzhcIjogXCJpc284ODU5MTRcIixcbiAgICBcImlzb2NlbHRpY1wiOiBcImlzbzg4NTkxNFwiLFxuXG4gICAgXCJ0aXM2MjAwXCI6IFwidGlzNjIwXCIsXG4gICAgXCJ0aXM2MjAyNTI5MVwiOiBcInRpczYyMFwiLFxuICAgIFwidGlzNjIwMjUzMzBcIjogXCJ0aXM2MjBcIixcblxuICAgIFwiMTAwMDBcIjogXCJtYWNyb21hblwiLFxuICAgIFwiMTAwMDZcIjogXCJtYWNncmVla1wiLFxuICAgIFwiMTAwMDdcIjogXCJtYWNjeXJpbGxpY1wiLFxuICAgIFwiMTAwNzlcIjogXCJtYWNpY2VsYW5kXCIsXG4gICAgXCIxMDA4MVwiOiBcIm1hY3R1cmtpc2hcIixcblxuICAgIFwiY3NwYzhjb2RlcGFnZTQzN1wiOiBcImNwNDM3XCIsXG4gICAgXCJjc3BjNzc1YmFsdGljXCI6IFwiY3A3NzVcIixcbiAgICBcImNzcGM4NTBtdWx0aWxpbmd1YWxcIjogXCJjcDg1MFwiLFxuICAgIFwiY3NwY3A4NTJcIjogXCJjcDg1MlwiLFxuICAgIFwiY3NwYzg2MmxhdGluaGVicmV3XCI6IFwiY3A4NjJcIixcbiAgICBcImNwZ3JcIjogXCJjcDg2OVwiLFxuXG4gICAgXCJtc2VlXCI6IFwiY3AxMjUwXCIsXG4gICAgXCJtc2N5cmxcIjogXCJjcDEyNTFcIixcbiAgICBcIm1zYW5zaVwiOiBcImNwMTI1MlwiLFxuICAgIFwibXNncmVla1wiOiBcImNwMTI1M1wiLFxuICAgIFwibXN0dXJrXCI6IFwiY3AxMjU0XCIsXG4gICAgXCJtc2hlYnJcIjogXCJjcDEyNTVcIixcbiAgICBcIm1zYXJhYlwiOiBcImNwMTI1NlwiLFxuICAgIFwid2luYmFsdHJpbVwiOiBcImNwMTI1N1wiLFxuXG4gICAgXCJjcDIwODY2XCI6IFwia29pOHJcIixcbiAgICBcIjIwODY2XCI6IFwia29pOHJcIixcbiAgICBcImlibTg3OFwiOiBcImtvaThyXCIsXG4gICAgXCJjc2tvaThyXCI6IFwia29pOHJcIixcblxuICAgIFwiY3AyMTg2NlwiOiBcImtvaTh1XCIsXG4gICAgXCIyMTg2NlwiOiBcImtvaTh1XCIsXG4gICAgXCJpYm0xMTY4XCI6IFwia29pOHVcIixcblxuICAgIFwic3RyazEwNDgyMDAyXCI6IFwicmsxMDQ4XCIsXG5cbiAgICBcInRjdm41NzEyXCI6IFwidGN2blwiLFxuICAgIFwidGN2bjU3MTIxXCI6IFwidGN2blwiLFxuXG4gICAgXCJnYjE5ODg4MFwiOiBcImlzbzY0NmNuXCIsXG4gICAgXCJjblwiOiBcImlzbzY0NmNuXCIsXG5cbiAgICBcImNzaXNvMTRqaXNjNjIyMHJvXCI6IFwiaXNvNjQ2anBcIixcbiAgICBcImppc2M2MjIwMTk2OXJvXCI6IFwiaXNvNjQ2anBcIixcbiAgICBcImpwXCI6IFwiaXNvNjQ2anBcIixcblxuICAgIFwiY3NocHJvbWFuOFwiOiBcImhwcm9tYW44XCIsXG4gICAgXCJyOFwiOiBcImhwcm9tYW44XCIsXG4gICAgXCJyb21hbjhcIjogXCJocHJvbWFuOFwiLFxuICAgIFwieHJvbWFuOFwiOiBcImhwcm9tYW44XCIsXG4gICAgXCJpYm0xMDUxXCI6IFwiaHByb21hbjhcIixcblxuICAgIFwibWFjXCI6IFwibWFjaW50b3NoXCIsXG4gICAgXCJjc21hY2ludG9zaFwiOiBcIm1hY2ludG9zaFwiLFxufTtcblxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIEdlbmVyYXRlZCBkYXRhIGZvciBzYmNzIGNvZGVjLiBEb24ndCBlZGl0IG1hbnVhbGx5LiBSZWdlbmVyYXRlIHVzaW5nIGdlbmVyYXRpb24vZ2VuLXNiY3MuanMgc2NyaXB0LlxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFwiNDM3XCI6IFwiY3A0MzdcIixcbiAgXCI3MzdcIjogXCJjcDczN1wiLFxuICBcIjc3NVwiOiBcImNwNzc1XCIsXG4gIFwiODUwXCI6IFwiY3A4NTBcIixcbiAgXCI4NTJcIjogXCJjcDg1MlwiLFxuICBcIjg1NVwiOiBcImNwODU1XCIsXG4gIFwiODU2XCI6IFwiY3A4NTZcIixcbiAgXCI4NTdcIjogXCJjcDg1N1wiLFxuICBcIjg1OFwiOiBcImNwODU4XCIsXG4gIFwiODYwXCI6IFwiY3A4NjBcIixcbiAgXCI4NjFcIjogXCJjcDg2MVwiLFxuICBcIjg2MlwiOiBcImNwODYyXCIsXG4gIFwiODYzXCI6IFwiY3A4NjNcIixcbiAgXCI4NjRcIjogXCJjcDg2NFwiLFxuICBcIjg2NVwiOiBcImNwODY1XCIsXG4gIFwiODY2XCI6IFwiY3A4NjZcIixcbiAgXCI4NjlcIjogXCJjcDg2OVwiLFxuICBcIjg3NFwiOiBcIndpbmRvd3M4NzRcIixcbiAgXCI5MjJcIjogXCJjcDkyMlwiLFxuICBcIjEwNDZcIjogXCJjcDEwNDZcIixcbiAgXCIxMTI0XCI6IFwiY3AxMTI0XCIsXG4gIFwiMTEyNVwiOiBcImNwMTEyNVwiLFxuICBcIjExMjlcIjogXCJjcDExMjlcIixcbiAgXCIxMTMzXCI6IFwiY3AxMTMzXCIsXG4gIFwiMTE2MVwiOiBcImNwMTE2MVwiLFxuICBcIjExNjJcIjogXCJjcDExNjJcIixcbiAgXCIxMTYzXCI6IFwiY3AxMTYzXCIsXG4gIFwiMTI1MFwiOiBcIndpbmRvd3MxMjUwXCIsXG4gIFwiMTI1MVwiOiBcIndpbmRvd3MxMjUxXCIsXG4gIFwiMTI1MlwiOiBcIndpbmRvd3MxMjUyXCIsXG4gIFwiMTI1M1wiOiBcIndpbmRvd3MxMjUzXCIsXG4gIFwiMTI1NFwiOiBcIndpbmRvd3MxMjU0XCIsXG4gIFwiMTI1NVwiOiBcIndpbmRvd3MxMjU1XCIsXG4gIFwiMTI1NlwiOiBcIndpbmRvd3MxMjU2XCIsXG4gIFwiMTI1N1wiOiBcIndpbmRvd3MxMjU3XCIsXG4gIFwiMTI1OFwiOiBcIndpbmRvd3MxMjU4XCIsXG4gIFwiMjg1OTFcIjogXCJpc284ODU5MVwiLFxuICBcIjI4NTkyXCI6IFwiaXNvODg1OTJcIixcbiAgXCIyODU5M1wiOiBcImlzbzg4NTkzXCIsXG4gIFwiMjg1OTRcIjogXCJpc284ODU5NFwiLFxuICBcIjI4NTk1XCI6IFwiaXNvODg1OTVcIixcbiAgXCIyODU5NlwiOiBcImlzbzg4NTk2XCIsXG4gIFwiMjg1OTdcIjogXCJpc284ODU5N1wiLFxuICBcIjI4NTk4XCI6IFwiaXNvODg1OThcIixcbiAgXCIyODU5OVwiOiBcImlzbzg4NTk5XCIsXG4gIFwiMjg2MDBcIjogXCJpc284ODU5MTBcIixcbiAgXCIyODYwMVwiOiBcImlzbzg4NTkxMVwiLFxuICBcIjI4NjAzXCI6IFwiaXNvODg1OTEzXCIsXG4gIFwiMjg2MDRcIjogXCJpc284ODU5MTRcIixcbiAgXCIyODYwNVwiOiBcImlzbzg4NTkxNVwiLFxuICBcIjI4NjA2XCI6IFwiaXNvODg1OTE2XCIsXG4gIFwid2luZG93czg3NFwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwi4oKs77+977+977+977+94oCm77+977+977+977+977+977+977+977+977+977+977+94oCY4oCZ4oCc4oCd4oCi4oCT4oCU77+977+977+977+977+977+977+977+9wqDguIHguILguIPguITguIXguIbguIfguIjguInguIrguIvguIzguI3guI7guI/guJDguJHguJLguJPguJTguJXguJbguJfguJjguJnguJrguJvguJzguJ3guJ7guJ/guKDguKHguKLguKPguKTguKXguKbguKfguKjguKnguKrguKvguKzguK3guK7guK/guLDguLHguLLguLPguLTguLXguLbguLfguLjguLnguLrvv73vv73vv73vv73guL/guYDguYHguYLguYPguYTguYXguYbguYfguYjguYnguYrguYvguYzguY3guY7guY/guZDguZHguZLguZPguZTguZXguZbguZfguZjguZnguZrguZvvv73vv73vv73vv71cIlxuICB9LFxuICBcIndpbjg3NFwiOiBcIndpbmRvd3M4NzRcIixcbiAgXCJjcDg3NFwiOiBcIndpbmRvd3M4NzRcIixcbiAgXCJ3aW5kb3dzMTI1MFwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwi4oKs77+94oCa77+94oCe4oCm4oCg4oCh77+94oCwxaDigLnFmsWkxb3Fue+/veKAmOKAmeKAnOKAneKAouKAk+KAlO+/veKEosWh4oC6xZvFpcW+xbrCoMuHy5jFgcKkxITCpsKnwqjCqcWewqvCrMKtwq7Fu8KwwrHLm8WCwrTCtcK2wrfCuMSFxZ/Cu8S9y53EvsW8xZTDgcOCxILDhMS5xIbDh8SMw4nEmMOLxJrDjcOOxI7EkMWDxYfDk8OUxZDDlsOXxZjFrsOaxbDDnMOdxaLDn8WVw6HDosSDw6TEusSHw6fEjcOpxJnDq8Sbw63DrsSPxJHFhMWIw7PDtMWRw7bDt8WZxa/DusWxw7zDvcWjy5lcIlxuICB9LFxuICBcIndpbjEyNTBcIjogXCJ3aW5kb3dzMTI1MFwiLFxuICBcImNwMTI1MFwiOiBcIndpbmRvd3MxMjUwXCIsXG4gIFwid2luZG93czEyNTFcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcItCC0IPigJrRk+KAnuKApuKAoOKAoeKCrOKAsNCJ4oC50IrQjNCL0I/RkuKAmOKAmeKAnOKAneKAouKAk+KAlO+/veKEotGZ4oC60ZrRnNGb0Z/CoNCO0Z7QiMKk0pDCpsKn0IHCqdCEwqvCrMKtwq7Qh8KwwrHQhtGW0pHCtcK2wrfRkeKEltGUwrvRmNCF0ZXRl9CQ0JHQktCT0JTQldCW0JfQmNCZ0JrQm9Cc0J3QntCf0KDQodCi0KPQpNCl0KbQp9Co0KnQqtCr0KzQrdCu0K/QsNCx0LLQs9C00LXQttC30LjQudC60LvQvNC90L7Qv9GA0YHRgtGD0YTRhdGG0YfRiNGJ0YrRi9GM0Y3RjtGPXCJcbiAgfSxcbiAgXCJ3aW4xMjUxXCI6IFwid2luZG93czEyNTFcIixcbiAgXCJjcDEyNTFcIjogXCJ3aW5kb3dzMTI1MVwiLFxuICBcIndpbmRvd3MxMjUyXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLigqzvv73igJrGkuKAnuKApuKAoOKAocuG4oCwxaDigLnFku+/vcW977+977+94oCY4oCZ4oCc4oCd4oCi4oCT4oCUy5zihKLFoeKAusWT77+9xb7FuMKgwqHCosKjwqTCpcKmwqfCqMKpwqrCq8Kswq3CrsKvwrDCscKywrPCtMK1wrbCt8K4wrnCusK7wrzCvcK+wr/DgMOBw4LDg8OEw4XDhsOHw4jDicOKw4vDjMONw47Dj8OQw5HDksOTw5TDlcOWw5fDmMOZw5rDm8Ocw53DnsOfw6DDocOiw6PDpMOlw6bDp8Oow6nDqsOrw6zDrcOuw6/DsMOxw7LDs8O0w7XDtsO3w7jDucO6w7vDvMO9w77Dv1wiXG4gIH0sXG4gIFwid2luMTI1MlwiOiBcIndpbmRvd3MxMjUyXCIsXG4gIFwiY3AxMjUyXCI6IFwid2luZG93czEyNTJcIixcbiAgXCJ3aW5kb3dzMTI1M1wiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwi4oKs77+94oCaxpLigJ7igKbigKDigKHvv73igLDvv73igLnvv73vv73vv73vv73vv73igJjigJnigJzigJ3igKLigJPigJTvv73ihKLvv73igLrvv73vv73vv73vv73CoM6FzobCo8KkwqXCpsKnwqjCqe+/vcKrwqzCrcKu4oCVwrDCscKywrPOhMK1wrbCt86IzonOisK7zozCvc6Ozo/OkM6RzpLOk86UzpXOls6XzpjOmc6azpvOnM6dzp7On86gzqHvv73Oo86kzqXOps6nzqjOqc6qzqvOrM6tzq7Or86wzrHOss6zzrTOtc62zrfOuM65zrrOu868zr3Ovs6/z4DPgc+Cz4PPhM+Fz4bPh8+Iz4nPis+Lz4zPjc+O77+9XCJcbiAgfSxcbiAgXCJ3aW4xMjUzXCI6IFwid2luZG93czEyNTNcIixcbiAgXCJjcDEyNTNcIjogXCJ3aW5kb3dzMTI1M1wiLFxuICBcIndpbmRvd3MxMjU0XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLigqzvv73igJrGkuKAnuKApuKAoOKAocuG4oCwxaDigLnFku+/ve+/ve+/ve+/veKAmOKAmeKAnOKAneKAouKAk+KAlMuc4oSixaHigLrFk++/ve+/vcW4wqDCocKiwqPCpMKlwqbCp8KowqnCqsKrwqzCrcKuwq/CsMKxwrLCs8K0wrXCtsK3wrjCucK6wrvCvMK9wr7Cv8OAw4HDgsODw4TDhcOGw4fDiMOJw4rDi8OMw43DjsOPxJ7DkcOSw5PDlMOVw5bDl8OYw5nDmsObw5zEsMWew5/DoMOhw6LDo8Okw6XDpsOnw6jDqcOqw6vDrMOtw67Dr8Sfw7HDssOzw7TDtcO2w7fDuMO5w7rDu8O8xLHFn8O/XCJcbiAgfSxcbiAgXCJ3aW4xMjU0XCI6IFwid2luZG93czEyNTRcIixcbiAgXCJjcDEyNTRcIjogXCJ3aW5kb3dzMTI1NFwiLFxuICBcIndpbmRvd3MxMjU1XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLigqzvv73igJrGkuKAnuKApuKAoOKAocuG4oCw77+94oC577+977+977+977+977+94oCY4oCZ4oCc4oCd4oCi4oCT4oCUy5zihKLvv73igLrvv73vv73vv73vv73CoMKhwqLCo+KCqsKlwqbCp8KowqnDl8KrwqzCrcKuwq/CsMKxwrLCs8K0wrXCtsK3wrjCucO3wrvCvMK9wr7Cv9aw1rHWstaz1rTWtda21rfWuNa51rrWu9a81r3Wvta/14DXgdeC14PXsNex17LXs9e077+977+977+977+977+977+977+915DXkdeS15PXlNeV15bXl9eY15nXmteb15zXndee15/XoNeh16LXo9ek16XXpten16jXqdeq77+977+94oCO4oCP77+9XCJcbiAgfSxcbiAgXCJ3aW4xMjU1XCI6IFwid2luZG93czEyNTVcIixcbiAgXCJjcDEyNTVcIjogXCJ3aW5kb3dzMTI1NVwiLFxuICBcIndpbmRvd3MxMjU2XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLigqzZvuKAmsaS4oCe4oCm4oCg4oChy4bigLDZueKAucWS2obamNqI2q/igJjigJnigJzigJ3igKLigJPigJTaqeKEotqR4oC6xZPigIzigI3ausKg2IzCosKjwqTCpcKmwqfCqMKp2r7Cq8Kswq3CrsKvwrDCscKywrPCtMK1wrbCt8K4wrnYm8K7wrzCvcK+2J/bgdih2KLYo9ik2KXYptin2KjYqdiq2KvYrNit2K7Yr9iw2LHYstiz2LTYtdi2w5fYt9i42LnYutmA2YHZgtmDw6DZhMOi2YXZhtmH2YjDp8Oow6nDqsOr2YnZisOuw6/Zi9mM2Y3ZjsO02Y/ZkMO32ZHDudmSw7vDvOKAjuKAj9uSXCJcbiAgfSxcbiAgXCJ3aW4xMjU2XCI6IFwid2luZG93czEyNTZcIixcbiAgXCJjcDEyNTZcIjogXCJ3aW5kb3dzMTI1NlwiLFxuICBcIndpbmRvd3MxMjU3XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLigqzvv73igJrvv73igJ7igKbigKDigKHvv73igLDvv73igLnvv73CqMuHwrjvv73igJjigJnigJzigJ3igKLigJPigJTvv73ihKLvv73igLrvv73Cr8ub77+9wqDvv73CosKjwqTvv73CpsKnw5jCqcWWwqvCrMKtwq7DhsKwwrHCssKzwrTCtcK2wrfDuMK5xZfCu8K8wr3CvsOmxITErsSAxIbDhMOFxJjEksSMw4nFucSWxKLEtsSqxLvFoMWDxYXDk8WMw5XDlsOXxbLFgcWaxarDnMW7xb3Dn8SFxK/EgcSHw6TDpcSZxJPEjcOpxbrEl8SjxLfEq8S8xaHFhMWGw7PFjcO1w7bDt8WzxYLFm8Wrw7zFvMW+y5lcIlxuICB9LFxuICBcIndpbjEyNTdcIjogXCJ3aW5kb3dzMTI1N1wiLFxuICBcImNwMTI1N1wiOiBcIndpbmRvd3MxMjU3XCIsXG4gIFwid2luZG93czEyNThcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIuKCrO+/veKAmsaS4oCe4oCm4oCg4oChy4bigLDvv73igLnFku+/ve+/ve+/ve+/veKAmOKAmeKAnOKAneKAouKAk+KAlMuc4oSi77+94oC6xZPvv73vv73FuMKgwqHCosKjwqTCpcKmwqfCqMKpwqrCq8Kswq3CrsKvwrDCscKywrPCtMK1wrbCt8K4wrnCusK7wrzCvcK+wr/DgMOBw4LEgsOEw4XDhsOHw4jDicOKw4vMgMONw47Dj8SQw5HMicOTw5TGoMOWw5fDmMOZw5rDm8Ocxq/Mg8Ofw6DDocOixIPDpMOlw6bDp8Oow6nDqsOrzIHDrcOuw6/EkcOxzKPDs8O0xqHDtsO3w7jDucO6w7vDvMaw4oKrw79cIlxuICB9LFxuICBcIndpbjEyNThcIjogXCJ3aW5kb3dzMTI1OFwiLFxuICBcImNwMTI1OFwiOiBcIndpbmRvd3MxMjU4XCIsXG4gIFwiaXNvODg1OTFcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoMKhwqLCo8KkwqXCpsKnwqjCqcKqwqvCrMKtwq7Cr8KwwrHCssKzwrTCtcK2wrfCuMK5wrrCu8K8wr3CvsK/w4DDgcOCw4PDhMOFw4bDh8OIw4nDisOLw4zDjcOOw4/DkMORw5LDk8OUw5XDlsOXw5jDmcOaw5vDnMOdw57Dn8Ogw6HDosOjw6TDpcOmw6fDqMOpw6rDq8Osw63DrsOvw7DDscOyw7PDtMO1w7bDt8O4w7nDusO7w7zDvcO+w79cIlxuICB9LFxuICBcImNwMjg1OTFcIjogXCJpc284ODU5MVwiLFxuICBcImlzbzg4NTkyXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDEhMuYxYHCpMS9xZrCp8KoxaDFnsWkxbnCrcW9xbvCsMSFy5vFgsK0xL7Fm8uHwrjFocWfxaXFusudxb7FvMWUw4HDgsSCw4TEucSGw4fEjMOJxJjDi8Saw43DjsSOxJDFg8WHw5PDlMWQw5bDl8WYxa7DmsWww5zDncWiw5/FlcOhw6LEg8OkxLrEh8OnxI3DqcSZw6vEm8Otw67Ej8SRxYTFiMOzw7TFkcO2w7fFmcWvw7rFscO8w73Fo8uZXCJcbiAgfSxcbiAgXCJjcDI4NTkyXCI6IFwiaXNvODg1OTJcIixcbiAgXCJpc284ODU5M1wiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8KgxKbLmMKjwqTvv73EpMKnwqjEsMWexJ7EtMKt77+9xbvCsMSnwrLCs8K0wrXEpcK3wrjEscWfxJ/EtcK977+9xbzDgMOBw4Lvv73DhMSKxIjDh8OIw4nDisOLw4zDjcOOw4/vv73DkcOSw5PDlMSgw5bDl8Scw5nDmsObw5zFrMWcw5/DoMOhw6Lvv73DpMSLxInDp8Oow6nDqsOrw6zDrcOuw6/vv73DscOyw7PDtMShw7bDt8Sdw7nDusO7w7zFrcWdy5lcIlxuICB9LFxuICBcImNwMjg1OTNcIjogXCJpc284ODU5M1wiLFxuICBcImlzbzg4NTk0XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDEhMS4xZbCpMSoxLvCp8KoxaDEksSixabCrcW9wq/CsMSFy5vFl8K0xKnEvMuHwrjFocSTxKPFp8WKxb7Fi8SAw4HDgsODw4TDhcOGxK7EjMOJxJjDi8SWw43DjsSqxJDFhcWMxLbDlMOVw5bDl8OYxbLDmsObw5zFqMWqw5/EgcOhw6LDo8Okw6XDpsSvxI3DqcSZw6vEl8Otw67Eq8SRxYbFjcS3w7TDtcO2w7fDuMWzw7rDu8O8xanFq8uZXCJcbiAgfSxcbiAgXCJjcDI4NTk0XCI6IFwiaXNvODg1OTRcIixcbiAgXCJpc284ODU5NVwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8Kg0IHQgtCD0ITQhdCG0IfQiNCJ0IrQi9CMwq3QjtCP0JDQkdCS0JPQlNCV0JbQl9CY0JnQmtCb0JzQndCe0J/QoNCh0KLQo9Ck0KXQptCn0KjQqdCq0KvQrNCt0K7Qr9Cw0LHQstCz0LTQtdC20LfQuNC50LrQu9C80L3QvtC/0YDRgdGC0YPRhNGF0YbRh9GI0YnRitGL0YzRjdGO0Y/ihJbRkdGS0ZPRlNGV0ZbRl9GY0ZnRmtGb0ZzCp9Ge0Z9cIlxuICB9LFxuICBcImNwMjg1OTVcIjogXCJpc284ODU5NVwiLFxuICBcImlzbzg4NTk2XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDvv73vv73vv73CpO+/ve+/ve+/ve+/ve+/ve+/ve+/vdiMwq3vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73Ym++/ve+/ve+/vdif77+92KHYotij2KTYpdim2KfYqNip2KrYq9is2K3Yrtiv2LDYsdiy2LPYtNi12LbYt9i42LnYuu+/ve+/ve+/ve+/ve+/vdmA2YHZgtmD2YTZhdmG2YfZiNmJ2YrZi9mM2Y3ZjtmP2ZDZkdmS77+977+977+977+977+977+977+977+977+977+977+977+977+9XCJcbiAgfSxcbiAgXCJjcDI4NTk2XCI6IFwiaXNvODg1OTZcIixcbiAgXCJpc284ODU5N1wiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8Kg4oCY4oCZwqPigqzigq/CpsKnwqjCqc26wqvCrMKt77+94oCVwrDCscKywrPOhM6FzobCt86IzonOisK7zozCvc6Ozo/OkM6RzpLOk86UzpXOls6XzpjOmc6azpvOnM6dzp7On86gzqHvv73Oo86kzqXOps6nzqjOqc6qzqvOrM6tzq7Or86wzrHOss6zzrTOtc62zrfOuM65zrrOu868zr3Ovs6/z4DPgc+Cz4PPhM+Fz4bPh8+Iz4nPis+Lz4zPjc+O77+9XCJcbiAgfSxcbiAgXCJjcDI4NTk3XCI6IFwiaXNvODg1OTdcIixcbiAgXCJpc284ODU5OFwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8Kg77+9wqLCo8KkwqXCpsKnwqjCqcOXwqvCrMKtwq7Cr8KwwrHCssKzwrTCtcK2wrfCuMK5w7fCu8K8wr3Cvu+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/veKAl9eQ15HXkteT15TXldeW15fXmNeZ15rXm9ec153Xntef16DXodei16PXpNel16bXp9eo16nXqu+/ve+/veKAjuKAj++/vVwiXG4gIH0sXG4gIFwiY3AyODU5OFwiOiBcImlzbzg4NTk4XCIsXG4gIFwiaXNvODg1OTlcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoMKhwqLCo8KkwqXCpsKnwqjCqcKqwqvCrMKtwq7Cr8KwwrHCssKzwrTCtcK2wrfCuMK5wrrCu8K8wr3CvsK/w4DDgcOCw4PDhMOFw4bDh8OIw4nDisOLw4zDjcOOw4/EnsORw5LDk8OUw5XDlsOXw5jDmcOaw5vDnMSwxZ7Dn8Ogw6HDosOjw6TDpcOmw6fDqMOpw6rDq8Osw63DrsOvxJ/DscOyw7PDtMO1w7bDt8O4w7nDusO7w7zEscWfw79cIlxuICB9LFxuICBcImNwMjg1OTlcIjogXCJpc284ODU5OVwiLFxuICBcImlzbzg4NTkxMFwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8KgxITEksSixKrEqMS2wqfEu8SQxaDFpsW9wq3FqsWKwrDEhcSTxKPEq8SpxLfCt8S8xJHFocWnxb7igJXFq8WLxIDDgcOCw4PDhMOFw4bErsSMw4nEmMOLxJbDjcOOw4/DkMWFxYzDk8OUw5XDlsWow5jFssOaw5vDnMOdw57Dn8SBw6HDosOjw6TDpcOmxK/EjcOpxJnDq8SXw63DrsOvw7DFhsWNw7PDtMO1w7bFqcO4xbPDusO7w7zDvcO+xLhcIlxuICB9LFxuICBcImNwMjg2MDBcIjogXCJpc284ODU5MTBcIixcbiAgXCJpc284ODU5MTFcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoOC4geC4guC4g+C4hOC4heC4huC4h+C4iOC4ieC4iuC4i+C4jOC4jeC4juC4j+C4kOC4keC4kuC4k+C4lOC4leC4luC4l+C4mOC4meC4muC4m+C4nOC4neC4nuC4n+C4oOC4oeC4ouC4o+C4pOC4peC4puC4p+C4qOC4qeC4quC4q+C4rOC4reC4ruC4r+C4sOC4seC4suC4s+C4tOC4teC4tuC4t+C4uOC4ueC4uu+/ve+/ve+/ve+/veC4v+C5gOC5geC5guC5g+C5hOC5heC5huC5h+C5iOC5ieC5iuC5i+C5jOC5jeC5juC5j+C5kOC5keC5kuC5k+C5lOC5leC5luC5l+C5mOC5meC5muC5m++/ve+/ve+/ve+/vVwiXG4gIH0sXG4gIFwiY3AyODYwMVwiOiBcImlzbzg4NTkxMVwiLFxuICBcImlzbzg4NTkxM1wiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8Kg4oCdwqLCo8Kk4oCewqbCp8OYwqnFlsKrwqzCrcKuw4bCsMKxwrLCs+KAnMK1wrbCt8O4wrnFl8K7wrzCvcK+w6bEhMSuxIDEhsOEw4XEmMSSxIzDicW5xJbEosS2xKrEu8WgxYPFhcOTxYzDlcOWw5fFssWBxZrFqsOcxbvFvcOfxIXEr8SBxIfDpMOlxJnEk8SNw6nFusSXxKPEt8SrxLzFocWExYbDs8WNw7XDtsO3xbPFgsWbxavDvMW8xb7igJlcIlxuICB9LFxuICBcImNwMjg2MDNcIjogXCJpc284ODU5MTNcIixcbiAgXCJpc284ODU5MTRcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoOG4guG4g8KjxIrEi+G4isKn4bqAwqnhuoLhuIvhu7LCrcKuxbjhuJ7huJ/EoMSh4bmA4bmBwrbhuZbhuoHhuZfhuoPhuaDhu7PhuoThuoXhuaHDgMOBw4LDg8OEw4XDhsOHw4jDicOKw4vDjMONw47Dj8W0w5HDksOTw5TDlcOW4bmqw5jDmcOaw5vDnMOdxbbDn8Ogw6HDosOjw6TDpcOmw6fDqMOpw6rDq8Osw63DrsOvxbXDscOyw7PDtMO1w7bhuavDuMO5w7rDu8O8w73Ft8O/XCJcbiAgfSxcbiAgXCJjcDI4NjA0XCI6IFwiaXNvODg1OTE0XCIsXG4gIFwiaXNvODg1OTE1XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDCocKiwqPigqzCpcWgwqfFocKpwqrCq8Kswq3CrsKvwrDCscKywrPFvcK1wrbCt8W+wrnCusK7xZLFk8W4wr/DgMOBw4LDg8OEw4XDhsOHw4jDicOKw4vDjMONw47Dj8OQw5HDksOTw5TDlcOWw5fDmMOZw5rDm8Ocw53DnsOfw6DDocOiw6PDpMOlw6bDp8Oow6nDqsOrw6zDrcOuw6/DsMOxw7LDs8O0w7XDtsO3w7jDucO6w7vDvMO9w77Dv1wiXG4gIH0sXG4gIFwiY3AyODYwNVwiOiBcImlzbzg4NTkxNVwiLFxuICBcImlzbzg4NTkxNlwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8KgxITEhcWB4oKs4oCexaDCp8WhwqnImMKrxbnCrcW6xbvCsMKxxIzFgsW94oCdwrbCt8W+xI3ImcK7xZLFk8W4xbzDgMOBw4LEgsOExIbDhsOHw4jDicOKw4vDjMONw47Dj8SQxYPDksOTw5TFkMOWxZrFsMOZw5rDm8OcxJjImsOfw6DDocOixIPDpMSHw6bDp8Oow6nDqsOrw6zDrcOuw6/EkcWEw7LDs8O0xZHDtsWbxbHDucO6w7vDvMSZyJvDv1wiXG4gIH0sXG4gIFwiY3AyODYwNlwiOiBcImlzbzg4NTkxNlwiLFxuICBcImNwNDM3XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLDh8O8w6nDosOkw6DDpcOnw6rDq8Oow6/DrsOsw4TDhcOJw6bDhsO0w7bDssO7w7nDv8OWw5zCosKjwqXigqfGksOhw63Ds8O6w7HDkcKqwrrCv+KMkMKswr3CvMKhwqvCu+KWkeKWkuKWk+KUguKUpOKVoeKVouKVluKVleKVo+KVkeKVl+KVneKVnOKVm+KUkOKUlOKUtOKUrOKUnOKUgOKUvOKVnuKVn+KVmuKVlOKVqeKVpuKVoOKVkOKVrOKVp+KVqOKVpOKVpeKVmeKVmOKVkuKVk+KVq+KVquKUmOKUjOKWiOKWhOKWjOKWkOKWgM6xw5/Ok8+AzqPPg8K1z4TOps6YzqnOtOKIns+GzrXiiKniiaHCseKJpeKJpOKMoOKMocO34omIwrDiiJnCt+KImuKBv8Ky4pagwqBcIlxuICB9LFxuICBcImlibTQzN1wiOiBcImNwNDM3XCIsXG4gIFwiY3NpYm00MzdcIjogXCJjcDQzN1wiLFxuICBcImNwNzM3XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLOkc6SzpPOlM6VzpbOl86YzpnOms6bzpzOnc6ezp/OoM6hzqPOpM6lzqbOp86ozqnOsc6yzrPOtM61zrbOt864zrnOus67zrzOvc6+zr/PgM+Bz4PPgs+Ez4XPhs+Hz4jilpHilpLilpPilILilKTilaHilaLilZbilZXilaPilZHilZfilZ3ilZzilZvilJDilJTilLTilKzilJzilIDilLzilZ7ilZ/ilZrilZTilanilabilaDilZDilazilafilajilaTilaXilZnilZjilZLilZPilavilarilJjilIzilojiloTilozilpDiloDPic6szq3Ors+Kzq/PjM+Nz4vPjs6GzojOic6KzozOjs6PwrHiiaXiiaTOqs6rw7fiiYjCsOKImcK34oia4oG/wrLilqDCoFwiXG4gIH0sXG4gIFwiaWJtNzM3XCI6IFwiY3A3MzdcIixcbiAgXCJjc2libTczN1wiOiBcImNwNzM3XCIsXG4gIFwiY3A3NzVcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIsSGw7zDqcSBw6TEo8OlxIfFgsSTxZbFl8SrxbnDhMOFw4nDpsOGxY3DtsSiwqLFmsWbw5bDnMO4wqPDmMOXwqTEgMSqw7PFu8W8xbrigJ3CpsKpwq7CrMK9wrzFgcKrwrvilpHilpLilpPilILilKTEhMSMxJjEluKVo+KVkeKVl+KVncSuxaDilJDilJTilLTilKzilJzilIDilLzFssWq4pWa4pWU4pWp4pWm4pWg4pWQ4pWsxb3EhcSNxJnEl8SvxaHFs8Wrxb7ilJjilIzilojiloTilozilpDiloDDk8OfxYzFg8O1w5XCtcWExLbEt8S7xLzFhsSSxYXigJnCrcKx4oCcwr7CtsKnw7figJ7CsOKImcK3wrnCs8Ky4pagwqBcIlxuICB9LFxuICBcImlibTc3NVwiOiBcImNwNzc1XCIsXG4gIFwiY3NpYm03NzVcIjogXCJjcDc3NVwiLFxuICBcImNwODUwXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLDh8O8w6nDosOkw6DDpcOnw6rDq8Oow6/DrsOsw4TDhcOJw6bDhsO0w7bDssO7w7nDv8OWw5zDuMKjw5jDl8aSw6HDrcOzw7rDscORwqrCusK/wq7CrMK9wrzCocKrwrvilpHilpLilpPilILilKTDgcOCw4DCqeKVo+KVkeKVl+KVncKiwqXilJDilJTilLTilKzilJzilIDilLzDo8OD4pWa4pWU4pWp4pWm4pWg4pWQ4pWswqTDsMOQw4rDi8OIxLHDjcOOw4/ilJjilIzilojiloTCpsOM4paAw5PDn8OUw5LDtcOVwrXDvsOew5rDm8OZw73DncKvwrTCrcKx4oCXwr7CtsKnw7fCuMKwwqjCt8K5wrPCsuKWoMKgXCJcbiAgfSxcbiAgXCJpYm04NTBcIjogXCJjcDg1MFwiLFxuICBcImNzaWJtODUwXCI6IFwiY3A4NTBcIixcbiAgXCJjcDg1MlwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiw4fDvMOpw6LDpMWvxIfDp8WCw6vFkMWRw67FucOExIbDicS5xLrDtMO2xL3EvsWaxZvDlsOcxaTFpcWBw5fEjcOhw63Ds8O6xITEhcW9xb7EmMSZwqzFusSMxZ/Cq8K74paR4paS4paT4pSC4pSkw4HDgsSaxZ7ilaPilZHilZfilZ3Fu8W84pSQ4pSU4pS04pSs4pSc4pSA4pS8xILEg+KVmuKVlOKVqeKVpuKVoOKVkOKVrMKkxJHEkMSOw4vEj8WHw43DjsSb4pSY4pSM4paI4paExaLFruKWgMOTw5/DlMWDxYTFiMWgxaHFlMOaxZXFsMO9w53Fo8K0wq3Lncuby4fLmMKnw7fCuMKwwqjLmcWxxZjFmeKWoMKgXCJcbiAgfSxcbiAgXCJpYm04NTJcIjogXCJjcDg1MlwiLFxuICBcImNzaWJtODUyXCI6IFwiY3A4NTJcIixcbiAgXCJjcDg1NVwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwi0ZLQgtGT0IPRkdCB0ZTQhNGV0IXRltCG0ZfQh9GY0IjRmdCJ0ZrQitGb0IvRnNCM0Z7QjtGf0I/RjtCu0YrQqtCw0JDQsdCR0YbQptC00JTQtdCV0YTQpNCz0JPCq8K74paR4paS4paT4pSC4pSk0YXQpdC40JjilaPilZHilZfilZ3QudCZ4pSQ4pSU4pS04pSs4pSc4pSA4pS80LrQmuKVmuKVlOKVqeKVpuKVoOKVkOKVrMKk0LvQm9C80JzQvdCd0L7QntC/4pSY4pSM4paI4paE0J/Rj+KWgNCv0YDQoNGB0KHRgtCi0YPQo9C20JbQstCS0YzQrOKElsKt0YvQq9C30JfRiNCo0Y3QrdGJ0KnRh9CnwqfilqDCoFwiXG4gIH0sXG4gIFwiaWJtODU1XCI6IFwiY3A4NTVcIixcbiAgXCJjc2libTg1NVwiOiBcImNwODU1XCIsXG4gIFwiY3A4NTZcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIteQ15HXkteT15TXldeW15fXmNeZ15rXm9ec153Xntef16DXodei16PXpNel16bXp9eo16nXqu+/vcKj77+9w5fvv73vv73vv73vv73vv73vv73vv73vv73vv73vv73CrsKswr3CvO+/vcKrwrvilpHilpLilpPilILilKTvv73vv73vv73CqeKVo+KVkeKVl+KVncKiwqXilJDilJTilLTilKzilJzilIDilLzvv73vv73ilZrilZTilanilabilaDilZDilazCpO+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/veKUmOKUjOKWiOKWhMKm77+94paA77+977+977+977+977+977+9wrXvv73vv73vv73vv73vv73vv73vv73Cr8K0wq3CseKAl8K+wrbCp8O3wrjCsMKowrfCucKzwrLilqDCoFwiXG4gIH0sXG4gIFwiaWJtODU2XCI6IFwiY3A4NTZcIixcbiAgXCJjc2libTg1NlwiOiBcImNwODU2XCIsXG4gIFwiY3A4NTdcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIsOHw7zDqcOiw6TDoMOlw6fDqsOrw6jDr8OuxLHDhMOFw4nDpsOGw7TDtsOyw7vDucSww5bDnMO4wqPDmMWexZ/DocOtw7PDusOxw5HEnsSfwr/CrsKswr3CvMKhwqvCu+KWkeKWkuKWk+KUguKUpMOBw4LDgMKp4pWj4pWR4pWX4pWdwqLCpeKUkOKUlOKUtOKUrOKUnOKUgOKUvMOjw4PilZrilZTilanilabilaDilZDilazCpMK6wqrDisOLw4jvv73DjcOOw4/ilJjilIzilojiloTCpsOM4paAw5PDn8OUw5LDtcOVwrXvv73Dl8Oaw5vDmcOsw7/Cr8K0wq3Cse+/vcK+wrbCp8O3wrjCsMKowrfCucKzwrLilqDCoFwiXG4gIH0sXG4gIFwiaWJtODU3XCI6IFwiY3A4NTdcIixcbiAgXCJjc2libTg1N1wiOiBcImNwODU3XCIsXG4gIFwiY3A4NThcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIsOHw7zDqcOiw6TDoMOlw6fDqsOrw6jDr8Ouw6zDhMOFw4nDpsOGw7TDtsOyw7vDucO/w5bDnMO4wqPDmMOXxpLDocOtw7PDusOxw5HCqsK6wr/CrsKswr3CvMKhwqvCu+KWkeKWkuKWk+KUguKUpMOBw4LDgMKp4pWj4pWR4pWX4pWdwqLCpeKUkOKUlOKUtOKUrOKUnOKUgOKUvMOjw4PilZrilZTilanilabilaDilZDilazCpMOww5DDisOLw4jigqzDjcOOw4/ilJjilIzilojiloTCpsOM4paAw5PDn8OUw5LDtcOVwrXDvsOew5rDm8OZw73DncKvwrTCrcKx4oCXwr7CtsKnw7fCuMKwwqjCt8K5wrPCsuKWoMKgXCJcbiAgfSxcbiAgXCJpYm04NThcIjogXCJjcDg1OFwiLFxuICBcImNzaWJtODU4XCI6IFwiY3A4NThcIixcbiAgXCJjcDg2MFwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiw4fDvMOpw6LDo8Ogw4HDp8Oqw4rDqMONw5TDrMODw4LDicOAw4jDtMO1w7LDmsO5w4zDlcOcwqLCo8OZ4oKnw5PDocOtw7PDusOxw5HCqsK6wr/DksKswr3CvMKhwqvCu+KWkeKWkuKWk+KUguKUpOKVoeKVouKVluKVleKVo+KVkeKVl+KVneKVnOKVm+KUkOKUlOKUtOKUrOKUnOKUgOKUvOKVnuKVn+KVmuKVlOKVqeKVpuKVoOKVkOKVrOKVp+KVqOKVpOKVpeKVmeKVmOKVkuKVk+KVq+KVquKUmOKUjOKWiOKWhOKWjOKWkOKWgM6xw5/Ok8+AzqPPg8K1z4TOps6YzqnOtOKIns+GzrXiiKniiaHCseKJpeKJpOKMoOKMocO34omIwrDiiJnCt+KImuKBv8Ky4pagwqBcIlxuICB9LFxuICBcImlibTg2MFwiOiBcImNwODYwXCIsXG4gIFwiY3NpYm04NjBcIjogXCJjcDg2MFwiLFxuICBcImNwODYxXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLDh8O8w6nDosOkw6DDpcOnw6rDq8Oow5DDsMOew4TDhcOJw6bDhsO0w7bDvsO7w53DvcOWw5zDuMKjw5jigqfGksOhw63Ds8O6w4HDjcOTw5rCv+KMkMKswr3CvMKhwqvCu+KWkeKWkuKWk+KUguKUpOKVoeKVouKVluKVleKVo+KVkeKVl+KVneKVnOKVm+KUkOKUlOKUtOKUrOKUnOKUgOKUvOKVnuKVn+KVmuKVlOKVqeKVpuKVoOKVkOKVrOKVp+KVqOKVpOKVpeKVmeKVmOKVkuKVk+KVq+KVquKUmOKUjOKWiOKWhOKWjOKWkOKWgM6xw5/Ok8+AzqPPg8K1z4TOps6YzqnOtOKIns+GzrXiiKniiaHCseKJpeKJpOKMoOKMocO34omIwrDiiJnCt+KImuKBv8Ky4pagwqBcIlxuICB9LFxuICBcImlibTg2MVwiOiBcImNwODYxXCIsXG4gIFwiY3NpYm04NjFcIjogXCJjcDg2MVwiLFxuICBcImNwODYyXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLXkNeR15LXk9eU15XXlteX15jXmdea15vXnNed157Xn9eg16HXotej16TXpdem16fXqNep16rCosKjwqXigqfGksOhw63Ds8O6w7HDkcKqwrrCv+KMkMKswr3CvMKhwqvCu+KWkeKWkuKWk+KUguKUpOKVoeKVouKVluKVleKVo+KVkeKVl+KVneKVnOKVm+KUkOKUlOKUtOKUrOKUnOKUgOKUvOKVnuKVn+KVmuKVlOKVqeKVpuKVoOKVkOKVrOKVp+KVqOKVpOKVpeKVmeKVmOKVkuKVk+KVq+KVquKUmOKUjOKWiOKWhOKWjOKWkOKWgM6xw5/Ok8+AzqPPg8K1z4TOps6YzqnOtOKIns+GzrXiiKniiaHCseKJpeKJpOKMoOKMocO34omIwrDiiJnCt+KImuKBv8Ky4pagwqBcIlxuICB9LFxuICBcImlibTg2MlwiOiBcImNwODYyXCIsXG4gIFwiY3NpYm04NjJcIjogXCJjcDg2MlwiLFxuICBcImNwODYzXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLDh8O8w6nDosOCw6DCtsOnw6rDq8Oow6/DruKAl8OAwqfDicOIw4rDtMOLw4/Du8O5wqTDlMOcwqLCo8OZw5vGksKmwrTDs8O6wqjCuMKzwq/DjuKMkMKswr3CvMK+wqvCu+KWkeKWkuKWk+KUguKUpOKVoeKVouKVluKVleKVo+KVkeKVl+KVneKVnOKVm+KUkOKUlOKUtOKUrOKUnOKUgOKUvOKVnuKVn+KVmuKVlOKVqeKVpuKVoOKVkOKVrOKVp+KVqOKVpOKVpeKVmeKVmOKVkuKVk+KVq+KVquKUmOKUjOKWiOKWhOKWjOKWkOKWgM6xw5/Ok8+AzqPPg8K1z4TOps6YzqnOtOKIns+GzrXiiKniiaHCseKJpeKJpOKMoOKMocO34omIwrDiiJnCt+KImuKBv8Ky4pagwqBcIlxuICB9LFxuICBcImlibTg2M1wiOiBcImNwODYzXCIsXG4gIFwiY3NpYm04NjNcIjogXCJjcDg2M1wiLFxuICBcImNwODY0XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCJcXHUwMDAwXFx1MDAwMVxcdTAwMDJcXHUwMDAzXFx1MDAwNFxcdTAwMDVcXHUwMDA2XFx1MDAwN1xcYlxcdFxcblxcdTAwMGJcXGZcXHJcXHUwMDBlXFx1MDAwZlxcdTAwMTBcXHUwMDExXFx1MDAxMlxcdTAwMTNcXHUwMDE0XFx1MDAxNVxcdTAwMTZcXHUwMDE3XFx1MDAxOFxcdTAwMTlcXHUwMDFhXFx1MDAxYlxcdTAwMWNcXHUwMDFkXFx1MDAxZVxcdTAwMWYgIVxcXCIjJNmqJicoKSorLC0uLzAxMjM0NTY3ODk6Ozw9Pj9AQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpbXFxcXF1eX2BhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ent8fX5/wrDCt+KImeKImuKWkuKUgOKUguKUvOKUpOKUrOKUnOKUtOKUkOKUjOKUlOKUmM6y4oiez4bCscK9wrziiYjCq8K777u377u477+977+977u777u877+9wqDCre+6gsKjwqTvuoTvv73vv73vuo7vuo/vupXvupnYjO+6ne+6oe+6pdmg2aHZotmj2aTZpdmm2afZqNmp77uR2JvvurHvurXvurnYn8Ki77qA77qB77qD77qF77uK77qL77qN77qR77qT77qX77qb77qf77qj77qn77qp77qr77qt77qv77qz77q377q777q/77uB77uF77uL77uPwqbCrMO3w5fvu4nZgO+7k++7l++7m++7n++7o++7p++7q++7re+7r++7s++6ve+7jO+7ju+7je+7oe+5vdmR77ul77up77us77uw77uy77uQ77uV77u177u277ud77uZ77ux4pag77+9XCJcbiAgfSxcbiAgXCJpYm04NjRcIjogXCJjcDg2NFwiLFxuICBcImNzaWJtODY0XCI6IFwiY3A4NjRcIixcbiAgXCJjcDg2NVwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiw4fDvMOpw6LDpMOgw6XDp8Oqw6vDqMOvw67DrMOEw4XDicOmw4bDtMO2w7LDu8O5w7/DlsOcw7jCo8OY4oKnxpLDocOtw7PDusOxw5HCqsK6wr/ijJDCrMK9wrzCocKrwqTilpHilpLilpPilILilKTilaHilaLilZbilZXilaPilZHilZfilZ3ilZzilZvilJDilJTilLTilKzilJzilIDilLzilZ7ilZ/ilZrilZTilanilabilaDilZDilazilafilajilaTilaXilZnilZjilZLilZPilavilarilJjilIzilojiloTilozilpDiloDOscOfzpPPgM6jz4PCtc+EzqbOmM6pzrTiiJ7Phs614oip4omhwrHiiaXiiaTijKDijKHDt+KJiMKw4oiZwrfiiJrigb/CsuKWoMKgXCJcbiAgfSxcbiAgXCJpYm04NjVcIjogXCJjcDg2NVwiLFxuICBcImNzaWJtODY1XCI6IFwiY3A4NjVcIixcbiAgXCJjcDg2NlwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwi0JDQkdCS0JPQlNCV0JbQl9CY0JnQmtCb0JzQndCe0J/QoNCh0KLQo9Ck0KXQptCn0KjQqdCq0KvQrNCt0K7Qr9Cw0LHQstCz0LTQtdC20LfQuNC50LrQu9C80L3QvtC/4paR4paS4paT4pSC4pSk4pWh4pWi4pWW4pWV4pWj4pWR4pWX4pWd4pWc4pWb4pSQ4pSU4pS04pSs4pSc4pSA4pS84pWe4pWf4pWa4pWU4pWp4pWm4pWg4pWQ4pWs4pWn4pWo4pWk4pWl4pWZ4pWY4pWS4pWT4pWr4pWq4pSY4pSM4paI4paE4paM4paQ4paA0YDRgdGC0YPRhNGF0YbRh9GI0YnRitGL0YzRjdGO0Y/QgdGR0ITRlNCH0ZfQjtGewrDiiJnCt+KImuKElsKk4pagwqBcIlxuICB9LFxuICBcImlibTg2NlwiOiBcImNwODY2XCIsXG4gIFwiY3NpYm04NjZcIjogXCJjcDg2NlwiLFxuICBcImNwODY5XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLvv73vv73vv73vv73vv73vv73Ohu+/vcK3wqzCpuKAmOKAmc6I4oCVzonOis6qzozvv73vv73Ojs6rwqnOj8KywrPOrMKjzq3Ors6vz4rOkM+Mz43Okc6SzpPOlM6VzpbOl8K9zpjOmcKrwrvilpHilpLilpPilILilKTOms6bzpzOneKVo+KVkeKVl+KVnc6ezp/ilJDilJTilLTilKzilJzilIDilLzOoM6h4pWa4pWU4pWp4pWm4pWg4pWQ4pWszqPOpM6lzqbOp86ozqnOsc6yzrPilJjilIzilojiloTOtM614paAzrbOt864zrnOus67zrzOvc6+zr/PgM+Bz4PPgs+EzoTCrcKxz4XPhs+HwqfPiM6FwrDCqM+Jz4vOsM+O4pagwqBcIlxuICB9LFxuICBcImlibTg2OVwiOiBcImNwODY5XCIsXG4gIFwiY3NpYm04NjlcIjogXCJjcDg2OVwiLFxuICBcImNwOTIyXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDCocKiwqPCpMKlwqbCp8KowqnCqsKrwqzCrcKu4oC+wrDCscKywrPCtMK1wrbCt8K4wrnCusK7wrzCvcK+wr/DgMOBw4LDg8OEw4XDhsOHw4jDicOKw4vDjMONw47Dj8Wgw5HDksOTw5TDlcOWw5fDmMOZw5rDm8Ocw53FvcOfw6DDocOiw6PDpMOlw6bDp8Oow6nDqsOrw6zDrcOuw6/FocOxw7LDs8O0w7XDtsO3w7jDucO6w7vDvMO9xb7Dv1wiXG4gIH0sXG4gIFwiaWJtOTIyXCI6IFwiY3A5MjJcIixcbiAgXCJjc2libTkyMlwiOiBcImNwOTIyXCIsXG4gIFwiY3AxMDQ2XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLvuojDl8O376O276O176O076O377mxwojilqDilILilIDilJDilIzilJTilJjvubnvubvvub3vub/vubfvuorvu7Dvu7Pvu7Lvu47vu4/vu5Dvu7bvu7jvu7rvu7zCoO+juu+jue+juMKk76O777qL77qR77qX77qb77qf77qj2IzCre+6p++6s9mg2aHZotmj2aTZpdmm2afZqNmp77q32Jvvurvvur/vu4rYn++7i9ih2KLYo9ik2KXYptin2KjYqdiq2KvYrNit2K7Yr9iw2LHYstiz2LTYtdi22Lfvu4fYudi677uM77qC77qE77qO77uT2YDZgdmC2YPZhNmF2YbZh9mI2YnZitmL2YzZjdmO2Y/ZkNmR2ZLvu5fvu5vvu5/vo7zvu7Xvu7fvu7nvu7vvu6Pvu6fvu6zvu6nvv71cIlxuICB9LFxuICBcImlibTEwNDZcIjogXCJjcDEwNDZcIixcbiAgXCJjc2libTEwNDZcIjogXCJjcDEwNDZcIixcbiAgXCJjcDExMjRcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoNCB0ILSkNCE0IXQhtCH0IjQidCK0IvQjMKt0I7Qj9CQ0JHQktCT0JTQldCW0JfQmNCZ0JrQm9Cc0J3QntCf0KDQodCi0KPQpNCl0KbQp9Co0KnQqtCr0KzQrdCu0K/QsNCx0LLQs9C00LXQttC30LjQudC60LvQvNC90L7Qv9GA0YHRgtGD0YTRhdGG0YfRiNGJ0YrRi9GM0Y3RjtGP4oSW0ZHRktKR0ZTRldGW0ZfRmNGZ0ZrRm9GcwqfRntGfXCJcbiAgfSxcbiAgXCJpYm0xMTI0XCI6IFwiY3AxMTI0XCIsXG4gIFwiY3NpYm0xMTI0XCI6IFwiY3AxMTI0XCIsXG4gIFwiY3AxMTI1XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLQkNCR0JLQk9CU0JXQltCX0JjQmdCa0JvQnNCd0J7Qn9Cg0KHQotCj0KTQpdCm0KfQqNCp0KrQq9Cs0K3QrtCv0LDQsdCy0LPQtNC10LbQt9C40LnQutC70LzQvdC+0L/ilpHilpLilpPilILilKTilaHilaLilZbilZXilaPilZHilZfilZ3ilZzilZvilJDilJTilLTilKzilJzilIDilLzilZ7ilZ/ilZrilZTilanilabilaDilZDilazilafilajilaTilaXilZnilZjilZLilZPilavilarilJjilIzilojiloTilozilpDiloDRgNGB0YLRg9GE0YXRhtGH0YjRidGK0YvRjNGN0Y7Rj9CB0ZHSkNKR0ITRlNCG0ZbQh9GXwrfiiJrihJbCpOKWoMKgXCJcbiAgfSxcbiAgXCJpYm0xMTI1XCI6IFwiY3AxMTI1XCIsXG4gIFwiY3NpYm0xMTI1XCI6IFwiY3AxMTI1XCIsXG4gIFwiY3AxMTI5XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDCocKiwqPCpMKlwqbCp8WTwqnCqsKrwqzCrcKuwq/CsMKxwrLCs8W4wrXCtsK3xZLCucK6wrvCvMK9wr7Cv8OAw4HDgsSCw4TDhcOGw4fDiMOJw4rDi8yAw43DjsOPxJDDkcyJw5PDlMagw5bDl8OYw5nDmsObw5zGr8yDw5/DoMOhw6LEg8Okw6XDpsOnw6jDqcOqw6vMgcOtw67Dr8SRw7HMo8Ozw7TGocO2w7fDuMO5w7rDu8O8xrDigqvDv1wiXG4gIH0sXG4gIFwiaWJtMTEyOVwiOiBcImNwMTEyOVwiLFxuICBcImNzaWJtMTEyOVwiOiBcImNwMTEyOVwiLFxuICBcImNwMTEzM1wiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiwoDCgcKCwoPChMKFwobCh8KIwonCisKLwozCjcKOwo/CkMKRwpLCk8KUwpXClsKXwpjCmcKawpvCnMKdwp7Cn8Kg4LqB4LqC4LqE4LqH4LqI4Lqq4LqK4LqN4LqU4LqV4LqW4LqX4LqZ4Lqa4Lqb4Lqc4Lqd4Lqe4Lqf4Lqh4Lqi4Lqj4Lql4Lqn4Lqr4Lqt4Lqu77+977+977+94Lqv4Lqw4Lqy4Lqz4Lq04Lq14Lq24Lq34Lq44Lq54Lq84Lqx4Lq74Lq977+977+977+94LuA4LuB4LuC4LuD4LuE4LuI4LuJ4LuK4LuL4LuM4LuN4LuG77+94Luc4Lud4oKt77+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+94LuQ4LuR4LuS4LuT4LuU4LuV4LuW4LuX4LuY4LuZ77+977+9wqLCrMKm77+9XCJcbiAgfSxcbiAgXCJpYm0xMTMzXCI6IFwiY3AxMTMzXCIsXG4gIFwiY3NpYm0xMTMzXCI6IFwiY3AxMTMzXCIsXG4gIFwiY3AxMTYxXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLvv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73guYjguIHguILguIPguITguIXguIbguIfguIjguInguIrguIvguIzguI3guI7guI/guJDguJHguJLguJPguJTguJXguJbguJfguJjguJnguJrguJvguJzguJ3guJ7guJ/guKDguKHguKLguKPguKTguKXguKbguKfguKjguKnguKrguKvguKzguK3guK7guK/guLDguLHguLLguLPguLTguLXguLbguLfguLjguLnguLrguYnguYrguYvigqzguL/guYDguYHguYLguYPguYTguYXguYbguYfguYjguYnguYrguYvguYzguY3guY7guY/guZDguZHguZLguZPguZTguZXguZbguZfguZjguZnguZrguZvCosKswqbCoFwiXG4gIH0sXG4gIFwiaWJtMTE2MVwiOiBcImNwMTE2MVwiLFxuICBcImNzaWJtMTE2MVwiOiBcImNwMTE2MVwiLFxuICBcImNwMTE2MlwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwi4oKswoHCgsKDwoTigKbChsKHwojCicKKwovCjMKNwo7Cj8KQ4oCY4oCZ4oCc4oCd4oCi4oCT4oCUwpjCmcKawpvCnMKdwp7Cn8Kg4LiB4LiC4LiD4LiE4LiF4LiG4LiH4LiI4LiJ4LiK4LiL4LiM4LiN4LiO4LiP4LiQ4LiR4LiS4LiT4LiU4LiV4LiW4LiX4LiY4LiZ4Lia4Lib4Lic4Lid4Lie4Lif4Lig4Lih4Lii4Lij4Lik4Lil4Lim4Lin4Lio4Lip4Liq4Lir4Lis4Lit4Liu4Liv4Liw4Lix4Liy4Liz4Li04Li14Li24Li34Li44Li54Li677+977+977+977+94Li/4LmA4LmB4LmC4LmD4LmE4LmF4LmG4LmH4LmI4LmJ4LmK4LmL4LmM4LmN4LmO4LmP4LmQ4LmR4LmS4LmT4LmU4LmV4LmW4LmX4LmY4LmZ4Lma4Lmb77+977+977+977+9XCJcbiAgfSxcbiAgXCJpYm0xMTYyXCI6IFwiY3AxMTYyXCIsXG4gIFwiY3NpYm0xMTYyXCI6IFwiY3AxMTYyXCIsXG4gIFwiY3AxMTYzXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDCocKiwqPigqzCpcKmwqfFk8KpwqrCq8Kswq3CrsKvwrDCscKywrPFuMK1wrbCt8WSwrnCusK7wrzCvcK+wr/DgMOBw4LEgsOEw4XDhsOHw4jDicOKw4vMgMONw47Dj8SQw5HMicOTw5TGoMOWw5fDmMOZw5rDm8Ocxq/Mg8Ofw6DDocOixIPDpMOlw6bDp8Oow6nDqsOrzIHDrcOuw6/EkcOxzKPDs8O0xqHDtsO3w7jDucO6w7vDvMaw4oKrw79cIlxuICB9LFxuICBcImlibTExNjNcIjogXCJjcDExNjNcIixcbiAgXCJjc2libTExNjNcIjogXCJjcDExNjNcIixcbiAgXCJtYWNjcm9hdGlhblwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiw4TDhcOHw4nDkcOWw5zDocOgw6LDpMOjw6XDp8Opw6jDqsOrw63DrMOuw6/DscOzw7LDtMO2w7XDusO5w7vDvOKAoMKwwqLCo8Kn4oCiwrbDn8KuxaDihKLCtMKo4omgxb3DmOKInsKx4omk4oml4oiGwrXiiILiiJHiiI/FoeKIq8KqwrrihKbFvsO4wr/CocKs4oiaxpLiiYjEhsKrxIzigKbCoMOAw4PDlcWSxZPEkOKAlOKAnOKAneKAmOKAmcO34peK77+9wqnigYTCpOKAueKAusOGwrvigJPCt+KAmuKAnuKAsMOCxIfDgcSNw4jDjcOOw4/DjMOTw5TEkcOSw5rDm8OZxLHLhsucwq/PgMOLy5rCuMOKw6bLh1wiXG4gIH0sXG4gIFwibWFjY3lyaWxsaWNcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcItCQ0JHQktCT0JTQldCW0JfQmNCZ0JrQm9Cc0J3QntCf0KDQodCi0KPQpNCl0KbQp9Co0KnQqtCr0KzQrdCu0K/igKDCsMKiwqPCp+KAosK20IbCrsKp4oSi0ILRkuKJoNCD0ZPiiJ7CseKJpOKJpdGWwrXiiILQiNCE0ZTQh9GX0InRmdCK0ZrRmNCFwqziiJrGkuKJiOKIhsKrwrvigKbCoNCL0ZvQjNGc0ZXigJPigJTigJzigJ3igJjigJnDt+KAntCO0Z7Qj9Gf4oSW0IHRkdGP0LDQsdCy0LPQtNC10LbQt9C40LnQutC70LzQvdC+0L/RgNGB0YLRg9GE0YXRhtGH0YjRidGK0YvRjNGN0Y7CpFwiXG4gIH0sXG4gIFwibWFjZ3JlZWtcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIsOEwrnCssOJwrPDlsOczoXDoMOiw6TOhMKow6fDqcOow6rDq8Kj4oSiw67Dr+KAosK94oCww7TDtsKmwq3DucO7w7zigKDOk86UzpjOm86ezqDDn8KuwqnOo86qwqfiiaDCsM6HzpHCseKJpOKJpcKlzpLOlc6WzpfOmc6azpzOps6rzqjOqc6szp3CrM6fzqHiiYjOpMKrwrvigKbCoM6lzqfOhs6IxZPigJPigJXigJzigJ3igJjigJnDt86JzorOjM6Ozq3Ors6vz4zOj8+NzrHOss+IzrTOtc+GzrPOt865zr7Ous67zrzOvc6/z4DPjs+Bz4PPhM64z4nPgs+Hz4XOts+Kz4vOkM6w77+9XCJcbiAgfSxcbiAgXCJtYWNpY2VsYW5kXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLDhMOFw4fDicORw5bDnMOhw6DDosOkw6PDpcOnw6nDqMOqw6vDrcOsw67Dr8Oxw7PDssO0w7bDtcO6w7nDu8O8w53CsMKiwqPCp+KAosK2w5/CrsKp4oSiwrTCqOKJoMOGw5jiiJ7CseKJpOKJpcKlwrXiiILiiJHiiI/PgOKIq8KqwrrihKbDpsO4wr/CocKs4oiaxpLiiYjiiIbCq8K74oCmwqDDgMODw5XFksWT4oCT4oCU4oCc4oCd4oCY4oCZw7fil4rDv8W44oGEwqTDkMOww57DvsO9wrfigJrigJ7igLDDgsOKw4HDi8OIw43DjsOPw4zDk8OU77+9w5LDmsObw5nEscuGy5zCr8uYy5nLmsK4y53Lm8uHXCJcbiAgfSxcbiAgXCJtYWNyb21hblwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiw4TDhcOHw4nDkcOWw5zDocOgw6LDpMOjw6XDp8Opw6jDqsOrw63DrMOuw6/DscOzw7LDtMO2w7XDusO5w7vDvOKAoMKwwqLCo8Kn4oCiwrbDn8KuwqnihKLCtMKo4omgw4bDmOKInsKx4omk4omlwqXCteKIguKIkeKIj8+A4oirwqrCuuKEpsOmw7jCv8KhwqziiJrGkuKJiOKIhsKrwrvigKbCoMOAw4PDlcWSxZPigJPigJTigJzigJ3igJjigJnDt+KXisO/xbjigYTCpOKAueKAuu+sge+sguKAocK34oCa4oCe4oCww4LDisOBw4vDiMONw47Dj8OMw5PDlO+/vcOSw5rDm8OZxLHLhsucwq/LmMuZy5rCuMudy5vLh1wiXG4gIH0sXG4gIFwibWFjcm9tYW5pYVwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiw4TDhcOHw4nDkcOWw5zDocOgw6LDpMOjw6XDp8Opw6jDqsOrw63DrMOuw6/DscOzw7LDtMO2w7XDusO5w7vDvOKAoMKwwqLCo8Kn4oCiwrbDn8KuwqnihKLCtMKo4omgxILFnuKInsKx4omk4omlwqXCteKIguKIkeKIj8+A4oirwqrCuuKEpsSDxZ/Cv8KhwqziiJrGkuKJiOKIhsKrwrvigKbCoMOAw4PDlcWSxZPigJPigJTigJzigJ3igJjigJnDt+KXisO/xbjigYTCpOKAueKAusWixaPigKHCt+KAmuKAnuKAsMOCw4rDgcOLw4jDjcOOw4/DjMOTw5Tvv73DksOaw5vDmcSxy4bLnMKvy5jLmcuawrjLncuby4dcIlxuICB9LFxuICBcIm1hY3RoYWlcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIsKrwrvigKbvoozvoo/vopLvopXvopjvoovvoo7vopHvopTvopfigJzigJ3vopnvv73igKLvooTvoonvooXvoobvoofvoojvoorvoo3vopDvopPvopbigJjigJnvv73CoOC4geC4guC4g+C4hOC4heC4huC4h+C4iOC4ieC4iuC4i+C4jOC4jeC4juC4j+C4kOC4keC4kuC4k+C4lOC4leC4luC4l+C4mOC4meC4muC4m+C4nOC4neC4nuC4n+C4oOC4oeC4ouC4o+C4pOC4peC4puC4p+C4qOC4qeC4quC4q+C4rOC4reC4ruC4r+C4sOC4seC4suC4s+C4tOC4teC4tuC4t+C4uOC4ueC4uu+7v+KAi+KAk+KAlOC4v+C5gOC5geC5guC5g+C5hOC5heC5huC5h+C5iOC5ieC5iuC5i+C5jOC5jeKEouC5j+C5kOC5keC5kuC5k+C5lOC5leC5luC5l+C5mOC5mcKuwqnvv73vv73vv73vv71cIlxuICB9LFxuICBcIm1hY3R1cmtpc2hcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIsOEw4XDh8OJw5HDlsOcw6HDoMOiw6TDo8Olw6fDqcOow6rDq8Otw6zDrsOvw7HDs8Oyw7TDtsO1w7rDucO7w7zigKDCsMKiwqPCp+KAosK2w5/CrsKp4oSiwrTCqOKJoMOGw5jiiJ7CseKJpOKJpcKlwrXiiILiiJHiiI/PgOKIq8KqwrrihKbDpsO4wr/CocKs4oiaxpLiiYjiiIbCq8K74oCmwqDDgMODw5XFksWT4oCT4oCU4oCc4oCd4oCY4oCZw7fil4rDv8W4xJ7En8SwxLHFnsWf4oChwrfigJrigJ7igLDDgsOKw4HDi8OIw43DjsOPw4zDk8OU77+9w5LDmsObw5nvv73Lhsucwq/LmMuZy5rCuMudy5vLh1wiXG4gIH0sXG4gIFwibWFjdWtyYWluZVwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwi0JDQkdCS0JPQlNCV0JbQl9CY0JnQmtCb0JzQndCe0J/QoNCh0KLQo9Ck0KXQptCn0KjQqdCq0KvQrNCt0K7Qr+KAoMKw0pDCo8Kn4oCiwrbQhsKuwqnihKLQgtGS4omg0IPRk+KInsKx4omk4oml0ZbCtdKR0IjQhNGU0IfRl9CJ0ZnQitGa0ZjQhcKs4oiaxpLiiYjiiIbCq8K74oCmwqDQi9Gb0IzRnNGV4oCT4oCU4oCc4oCd4oCY4oCZw7figJ7QjtGe0I/Rn+KEltCB0ZHRj9Cw0LHQstCz0LTQtdC20LfQuNC50LrQu9C80L3QvtC/0YDRgdGC0YPRhNGF0YbRh9GI0YnRitGL0YzRjdGOwqRcIlxuICB9LFxuICBcImtvaThyXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLilIDilILilIzilJDilJTilJjilJzilKTilKzilLTilLziloDiloTilojilozilpDilpHilpLilpPijKDilqDiiJniiJriiYjiiaTiiaXCoOKMocKwwrLCt8O34pWQ4pWR4pWS0ZHilZPilZTilZXilZbilZfilZjilZnilZrilZvilZzilZ3ilZ7ilZ/ilaDilaHQgeKVouKVo+KVpOKVpeKVpuKVp+KVqOKVqeKVquKVq+KVrMKp0Y7QsNCx0YbQtNC10YTQs9GF0LjQudC60LvQvNC90L7Qv9GP0YDRgdGC0YPQttCy0YzRi9C30YjRjdGJ0YfRitCu0JDQkdCm0JTQldCk0JPQpdCY0JnQmtCb0JzQndCe0J/Qr9Cg0KHQotCj0JbQktCs0KvQl9Co0K3QqdCn0KpcIlxuICB9LFxuICBcImtvaTh1XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLilIDilILilIzilJDilJTilJjilJzilKTilKzilLTilLziloDiloTilojilozilpDilpHilpLilpPijKDilqDiiJniiJriiYjiiaTiiaXCoOKMocKwwrLCt8O34pWQ4pWR4pWS0ZHRlOKVlNGW0ZfilZfilZjilZnilZrilZvSkeKVneKVnuKVn+KVoOKVodCB0ITilaPQhtCH4pWm4pWn4pWo4pWp4pWq0pDilazCqdGO0LDQsdGG0LTQtdGE0LPRhdC40LnQutC70LzQvdC+0L/Rj9GA0YHRgtGD0LbQstGM0YvQt9GI0Y3RidGH0YrQrtCQ0JHQptCU0JXQpNCT0KXQmNCZ0JrQm9Cc0J3QntCf0K/QoNCh0KLQo9CW0JLQrNCr0JfQqNCt0KnQp9CqXCJcbiAgfSxcbiAgXCJrb2k4cnVcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIuKUgOKUguKUjOKUkOKUlOKUmOKUnOKUpOKUrOKUtOKUvOKWgOKWhOKWiOKWjOKWkOKWkeKWkuKWk+KMoOKWoOKImeKImuKJiOKJpOKJpcKg4oyhwrDCssK3w7filZDilZHilZLRkdGU4pWU0ZbRl+KVl+KVmOKVmeKVmuKVm9KR0Z7ilZ7ilZ/ilaDilaHQgdCE4pWj0IbQh+KVpuKVp+KVqOKVqeKVqtKQ0I7CqdGO0LDQsdGG0LTQtdGE0LPRhdC40LnQutC70LzQvdC+0L/Rj9GA0YHRgtGD0LbQstGM0YvQt9GI0Y3RidGH0YrQrtCQ0JHQptCU0JXQpNCT0KXQmNCZ0JrQm9Cc0J3QntCf0K/QoNCh0KLQo9CW0JLQrNCr0JfQqNCt0KnQp9CqXCJcbiAgfSxcbiAgXCJrb2k4dFwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwi0pvSk+KAmtKS4oCe4oCm4oCg4oCh77+94oCw0rPigLnSstK30rbvv73SmuKAmOKAmeKAnOKAneKAouKAk+KAlO+/veKEou+/veKAuu+/ve+/ve+/ve+/ve+/vdOv067RkcKk06PCpsKn77+977+977+9wqvCrMKtwq7vv73CsMKxwrLQge+/vdOiwrbCt++/veKElu+/vcK777+977+977+9wqnRjtCw0LHRhtC00LXRhNCz0YXQuNC50LrQu9C80L3QvtC/0Y/RgNGB0YLRg9C20LLRjNGL0LfRiNGN0YnRh9GK0K7QkNCR0KbQlNCV0KTQk9Cl0JjQmdCa0JvQnNCd0J7Qn9Cv0KDQodCi0KPQltCS0KzQq9CX0KjQrdCp0KfQqlwiXG4gIH0sXG4gIFwiYXJtc2NpaThcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIsKAwoHCgsKDwoTChcKGwofCiMKJworCi8KMwo3CjsKPwpDCkcKSwpPClMKVwpbCl8KYwpnCmsKbwpzCncKewp/CoO+/vdaH1okpKMK7wqvigJQu1Z0sLdaK4oCm1ZzVm9We1LHVodSy1aLUs9Wj1LTVpNS11aXUttWm1LfVp9S41ajUudWp1LrVqtS71avUvNWs1L3VrdS+1a7Uv9Wv1YDVsNWB1bHVgtWy1YPVs9WE1bTVhdW11YbVttWH1bfViNW41YnVudWK1brVi9W71YzVvNWN1b3VjtW+1Y/Vv9WQ1oDVkdaB1ZLWgtWT1oPVlNaE1ZXWhdWW1obVmu+/vVwiXG4gIH0sXG4gIFwicmsxMDQ4XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLQgtCD4oCa0ZPigJ7igKbigKDigKHigqzigLDQieKAudCK0prSutCP0ZLigJjigJnigJzigJ3igKLigJPigJTvv73ihKLRmeKAutGa0pvSu9GfwqDSsNKx05jCpNOowqbCp9CBwqnSksKrwqzCrcKu0q7CsMKx0IbRltOpwrXCtsK30ZHihJbSk8K705nSotKj0q/QkNCR0JLQk9CU0JXQltCX0JjQmdCa0JvQnNCd0J7Qn9Cg0KHQotCj0KTQpdCm0KfQqNCp0KrQq9Cs0K3QrtCv0LDQsdCy0LPQtNC10LbQt9C40LnQutC70LzQvdC+0L/RgNGB0YLRg9GE0YXRhtGH0YjRidGK0YvRjNGN0Y7Rj1wiXG4gIH0sXG4gIFwidGN2blwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiXFx1MDAwMMOa4bukXFx1MDAwM+G7quG7rOG7rlxcdTAwMDdcXGJcXHRcXG5cXHUwMDBiXFxmXFxyXFx1MDAwZVxcdTAwMGZcXHUwMDEw4buo4buw4buy4bu24bu4w53hu7RcXHUwMDE4XFx1MDAxOVxcdTAwMWFcXHUwMDFiXFx1MDAxY1xcdTAwMWRcXHUwMDFlXFx1MDAxZiAhXFxcIiMkJSYnKCkqKywtLi8wMTIzNDU2Nzg5Ojs8PT4/QEFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaW1xcXFxdXl9gYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXp7fH1+f8OA4bqiw4PDgeG6oOG6tuG6rMOI4bq64bq8w4nhurjhu4bDjOG7iMSow43hu4rDkuG7jsOVw5Phu4zhu5jhu5zhu57hu6Dhu5rhu6LDmeG7psWowqDEgsOCw4rDlMagxq/EkMSDw6LDqsO0xqHGsMSR4bqwzIDMicyDzIHMo8Og4bqjw6PDoeG6oeG6suG6seG6s+G6teG6r+G6tOG6ruG6puG6qOG6quG6pOG7gOG6t+G6p+G6qeG6q+G6peG6rcOo4buC4bq74bq9w6nhurnhu4Hhu4Phu4Xhur/hu4fDrOG7ieG7hOG6vuG7ksSpw63hu4vDsuG7lOG7j8O1w7Phu43hu5Phu5Xhu5fhu5Hhu5nhu53hu5/hu6Hhu5vhu6PDueG7luG7p8Wpw7rhu6Xhu6vhu63hu6/hu6nhu7Hhu7Phu7fhu7nDveG7teG7kFwiXG4gIH0sXG4gIFwiZ2VvcmdpYW5hY2FkZW15XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLCgMKB4oCaxpLigJ7igKbigKDigKHLhuKAsMWg4oC5xZLCjcKOwo/CkOKAmOKAmeKAnOKAneKAouKAk+KAlMuc4oSixaHigLrFk8Kdwp7FuMKgwqHCosKjwqTCpcKmwqfCqMKpwqrCq8Kswq3CrsKvwrDCscKywrPCtMK1wrbCt8K4wrnCusK7wrzCvcK+wr/hg5Dhg5Hhg5Lhg5Phg5Thg5Xhg5bhg5fhg5jhg5nhg5rhg5vhg5zhg53hg57hg5/hg6Dhg6Hhg6Lhg6Phg6Thg6Xhg6bhg6fhg6jhg6nhg6rhg6vhg6zhg63hg67hg6/hg7Dhg7Hhg7Lhg7Phg7Thg7Xhg7bDp8Oow6nDqsOrw6zDrcOuw6/DsMOxw7LDs8O0w7XDtsO3w7jDucO6w7vDvMO9w77Dv1wiXG4gIH0sXG4gIFwiZ2VvcmdpYW5wc1wiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwiwoDCgeKAmsaS4oCe4oCm4oCg4oChy4bigLDFoOKAucWSwo3CjsKPwpDigJjigJnigJzigJ3igKLigJPigJTLnOKEosWh4oC6xZPCncKexbjCoMKhwqLCo8KkwqXCpsKnwqjCqcKqwqvCrMKtwq7Cr8KwwrHCssKzwrTCtcK2wrfCuMK5wrrCu8K8wr3CvsK/4YOQ4YOR4YOS4YOT4YOU4YOV4YOW4YOx4YOX4YOY4YOZ4YOa4YOb4YOc4YOy4YOd4YOe4YOf4YOg4YOh4YOi4YOz4YOj4YOk4YOl4YOm4YOn4YOo4YOp4YOq4YOr4YOs4YOt4YOu4YO04YOv4YOw4YO1w6bDp8Oow6nDqsOrw6zDrcOuw6/DsMOxw7LDs8O0w7XDtsO3w7jDucO6w7vDvMO9w77Dv1wiXG4gIH0sXG4gIFwicHQxNTRcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcItKW0pLTrtKT4oCe4oCm0rbSrtKy0q/SoNOi0qLSmtK60rjSl+KAmOKAmeKAnOKAneKAouKAk+KAlNKz0rfSodOj0qPSm9K70rnCoNCO0Z7QiNOo0pjSsMKn0IHCqdOYwqvCrNOvwq7SnMKw0rHQhtGW0pnTqcK2wrfRkeKEltOZwrvRmNKq0qvSndCQ0JHQktCT0JTQldCW0JfQmNCZ0JrQm9Cc0J3QntCf0KDQodCi0KPQpNCl0KbQp9Co0KnQqtCr0KzQrdCu0K/QsNCx0LLQs9C00LXQttC30LjQudC60LvQvNC90L7Qv9GA0YHRgtGD0YTRhdGG0YfRiNGJ0YrRi9GM0Y3RjtGPXCJcbiAgfSxcbiAgXCJ2aXNjaWlcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIlxcdTAwMDBcXHUwMDAx4bqyXFx1MDAwM1xcdTAwMDThurThuqpcXHUwMDA3XFxiXFx0XFxuXFx1MDAwYlxcZlxcclxcdTAwMGVcXHUwMDBmXFx1MDAxMFxcdTAwMTFcXHUwMDEyXFx1MDAxM+G7tlxcdTAwMTVcXHUwMDE2XFx1MDAxN1xcdTAwMTjhu7hcXHUwMDFhXFx1MDAxYlxcdTAwMWNcXHUwMDFk4bu0XFx1MDAxZiAhXFxcIiMkJSYnKCkqKywtLi8wMTIzNDU2Nzg5Ojs8PT4/QEFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaW1xcXFxdXl9gYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXp7fH1+f+G6oOG6ruG6sOG6tuG6pOG6puG6qOG6rOG6vOG6uOG6vuG7gOG7guG7hOG7huG7kOG7kuG7lOG7luG7mOG7ouG7muG7nOG7nuG7iuG7juG7jOG7iOG7psWo4buk4buyw5Xhuq/hurHhurfhuqXhuqfhuqnhuq3hur3hurnhur/hu4Hhu4Phu4Xhu4fhu5Hhu5Phu5Xhu5fhu6DGoOG7meG7neG7n+G7i+G7sOG7qOG7quG7rMah4bubxq/DgMOBw4LDg+G6osSC4bqz4bq1w4jDicOK4bq6w4zDjcSo4buzxJDhu6nDksOTw5ThuqHhu7fhu6vhu63DmcOa4bu54bu1w53hu6HGsMOgw6HDosOj4bqjxIPhu6/huqvDqMOpw6rhurvDrMOtxKnhu4nEkeG7scOyw7PDtMO14buP4buN4bulw7nDusWp4bunw73hu6Phu65cIlxuICB9LFxuICBcImlzbzY0NmNuXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCJcXHUwMDAwXFx1MDAwMVxcdTAwMDJcXHUwMDAzXFx1MDAwNFxcdTAwMDVcXHUwMDA2XFx1MDAwN1xcYlxcdFxcblxcdTAwMGJcXGZcXHJcXHUwMDBlXFx1MDAwZlxcdTAwMTBcXHUwMDExXFx1MDAxMlxcdTAwMTNcXHUwMDE0XFx1MDAxNVxcdTAwMTZcXHUwMDE3XFx1MDAxOFxcdTAwMTlcXHUwMDFhXFx1MDAxYlxcdTAwMWNcXHUwMDFkXFx1MDAxZVxcdTAwMWYgIVxcXCIjwqUlJicoKSorLC0uLzAxMjM0NTY3ODk6Ozw9Pj9AQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpbXFxcXF1eX2BhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ent8feKAvn/vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv71cIlxuICB9LFxuICBcImlzbzY0NmpwXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCJcXHUwMDAwXFx1MDAwMVxcdTAwMDJcXHUwMDAzXFx1MDAwNFxcdTAwMDVcXHUwMDA2XFx1MDAwN1xcYlxcdFxcblxcdTAwMGJcXGZcXHJcXHUwMDBlXFx1MDAwZlxcdTAwMTBcXHUwMDExXFx1MDAxMlxcdTAwMTNcXHUwMDE0XFx1MDAxNVxcdTAwMTZcXHUwMDE3XFx1MDAxOFxcdTAwMTlcXHUwMDFhXFx1MDAxYlxcdTAwMWNcXHUwMDFkXFx1MDAxZVxcdTAwMWYgIVxcXCIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWlvCpV1eX2BhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ent8feKAvn/vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv73vv71cIlxuICB9LFxuICBcImhwcm9tYW44XCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLCgMKBwoLCg8KEwoXChsKHwojCicKKwovCjMKNwo7Cj8KQwpHCksKTwpTClcKWwpfCmMKZwprCm8Kcwp3CnsKfwqDDgMOCw4jDisOLw47Dj8K0y4vLhsKoy5zDmcOb4oKkwq/DncO9wrDDh8Onw5HDscKhwr/CpMKjwqXCp8aSwqLDosOqw7TDu8Ohw6nDs8O6w6DDqMOyw7nDpMOrw7bDvMOFw67DmMOGw6XDrcO4w6bDhMOsw5bDnMOJw6/Dn8OUw4HDg8Ojw5DDsMONw4zDk8OSw5XDtcWgxaHDmsW4w7/DnsO+wrfCtcK2wr7igJTCvMK9wqrCusKr4pagwrvCse+/vVwiXG4gIH0sXG4gIFwibWFjaW50b3NoXCI6IHtcbiAgICBcInR5cGVcIjogXCJfc2Jjc1wiLFxuICAgIFwiY2hhcnNcIjogXCLDhMOFw4fDicORw5bDnMOhw6DDosOkw6PDpcOnw6nDqMOqw6vDrcOsw67Dr8Oxw7PDssO0w7bDtcO6w7nDu8O84oCgwrDCosKjwqfigKLCtsOfwq7CqeKEosK0wqjiiaDDhsOY4oiewrHiiaTiiaXCpcK14oiC4oiR4oiPz4DiiKvCqsK64oSmw6bDuMK/wqHCrOKImsaS4omI4oiGwqvCu+KApsKgw4DDg8OVxZLFk+KAk+KAlOKAnOKAneKAmOKAmcO34peKw7/FuOKBhMKk4oC54oC676yB76yC4oChwrfigJrigJ7igLDDgsOKw4HDi8OIw43DjsOPw4zDk8OU77+9w5LDmsObw5nEscuGy5zCr8uYy5nLmsK4y53Lm8uHXCJcbiAgfSxcbiAgXCJhc2NpaVwiOiB7XG4gICAgXCJ0eXBlXCI6IFwiX3NiY3NcIixcbiAgICBcImNoYXJzXCI6IFwi77+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+977+9XCJcbiAgfSxcbiAgXCJ0aXM2MjBcIjoge1xuICAgIFwidHlwZVwiOiBcIl9zYmNzXCIsXG4gICAgXCJjaGFyc1wiOiBcIu+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/veC4geC4guC4g+C4hOC4heC4huC4h+C4iOC4ieC4iuC4i+C4jOC4jeC4juC4j+C4kOC4keC4kuC4k+C4lOC4leC4luC4l+C4mOC4meC4muC4m+C4nOC4neC4nuC4n+C4oOC4oeC4ouC4o+C4pOC4peC4puC4p+C4qOC4qeC4quC4q+C4rOC4reC4ruC4r+C4sOC4seC4suC4s+C4tOC4teC4tuC4t+C4uOC4ueC4uu+/ve+/ve+/ve+/veC4v+C5gOC5geC5guC5g+C5hOC5heC5huC5h+C5iOC5ieC5iuC5i+C5jOC5jeC5juC5j+C5kOC5keC5kuC5k+C5lOC5leC5luC5l+C5mOC5meC5muC5m++/ve+/ve+/ve+/vVwiXG4gIH1cbn0iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBCdWZmZXIgPSByZXF1aXJlKFwic2FmZXItYnVmZmVyXCIpLkJ1ZmZlcjtcblxuLy8gTXVsdGlieXRlIGNvZGVjLiBJbiB0aGlzIHNjaGVtZSwgYSBjaGFyYWN0ZXIgaXMgcmVwcmVzZW50ZWQgYnkgMSBvciBtb3JlIGJ5dGVzLlxuLy8gT3VyIGNvZGVjIHN1cHBvcnRzIFVURi0xNiBzdXJyb2dhdGVzLCBleHRlbnNpb25zIGZvciBHQjE4MDMwIGFuZCB1bmljb2RlIHNlcXVlbmNlcy5cbi8vIFRvIHNhdmUgbWVtb3J5IGFuZCBsb2FkaW5nIHRpbWUsIHdlIHJlYWQgdGFibGUgZmlsZXMgb25seSB3aGVuIHJlcXVlc3RlZC5cblxuZXhwb3J0cy5fZGJjcyA9IERCQ1NDb2RlYztcblxudmFyIFVOQVNTSUdORUQgPSAtMSxcbiAgICBHQjE4MDMwX0NPREUgPSAtMixcbiAgICBTRVFfU1RBUlQgID0gLTEwLFxuICAgIE5PREVfU1RBUlQgPSAtMTAwMCxcbiAgICBVTkFTU0lHTkVEX05PREUgPSBuZXcgQXJyYXkoMHgxMDApLFxuICAgIERFRl9DSEFSID0gLTE7XG5cbmZvciAodmFyIGkgPSAwOyBpIDwgMHgxMDA7IGkrKylcbiAgICBVTkFTU0lHTkVEX05PREVbaV0gPSBVTkFTU0lHTkVEO1xuXG5cbi8vIENsYXNzIERCQ1NDb2RlYyByZWFkcyBhbmQgaW5pdGlhbGl6ZXMgbWFwcGluZyB0YWJsZXMuXG5mdW5jdGlvbiBEQkNTQ29kZWMoY29kZWNPcHRpb25zLCBpY29udikge1xuICAgIHRoaXMuZW5jb2RpbmdOYW1lID0gY29kZWNPcHRpb25zLmVuY29kaW5nTmFtZTtcbiAgICBpZiAoIWNvZGVjT3B0aW9ucylcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiREJDUyBjb2RlYyBpcyBjYWxsZWQgd2l0aG91dCB0aGUgZGF0YS5cIilcbiAgICBpZiAoIWNvZGVjT3B0aW9ucy50YWJsZSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRW5jb2RpbmcgJ1wiICsgdGhpcy5lbmNvZGluZ05hbWUgKyBcIicgaGFzIG5vIGRhdGEuXCIpO1xuXG4gICAgLy8gTG9hZCB0YWJsZXMuXG4gICAgdmFyIG1hcHBpbmdUYWJsZSA9IGNvZGVjT3B0aW9ucy50YWJsZSgpO1xuXG5cbiAgICAvLyBEZWNvZGUgdGFibGVzOiBNQkNTIC0+IFVuaWNvZGUuXG5cbiAgICAvLyBkZWNvZGVUYWJsZXMgaXMgYSB0cmllLCBlbmNvZGVkIGFzIGFuIGFycmF5IG9mIGFycmF5cyBvZiBpbnRlZ2Vycy4gSW50ZXJuYWwgYXJyYXlzIGFyZSB0cmllIG5vZGVzIGFuZCBhbGwgaGF2ZSBsZW4gPSAyNTYuXG4gICAgLy8gVHJpZSByb290IGlzIGRlY29kZVRhYmxlc1swXS5cbiAgICAvLyBWYWx1ZXM6ID49ICAwIC0+IHVuaWNvZGUgY2hhcmFjdGVyIGNvZGUuIGNhbiBiZSA+IDB4RkZGRlxuICAgIC8vICAgICAgICAgPT0gVU5BU1NJR05FRCAtPiB1bmtub3duL3VuYXNzaWduZWQgc2VxdWVuY2UuXG4gICAgLy8gICAgICAgICA9PSBHQjE4MDMwX0NPREUgLT4gdGhpcyBpcyB0aGUgZW5kIG9mIGEgR0IxODAzMCA0LWJ5dGUgc2VxdWVuY2UuXG4gICAgLy8gICAgICAgICA8PSBOT0RFX1NUQVJUIC0+IGluZGV4IG9mIHRoZSBuZXh0IG5vZGUgaW4gb3VyIHRyaWUgdG8gcHJvY2VzcyBuZXh0IGJ5dGUuXG4gICAgLy8gICAgICAgICA8PSBTRVFfU1RBUlQgIC0+IGluZGV4IG9mIHRoZSBzdGFydCBvZiBhIGNoYXJhY3RlciBjb2RlIHNlcXVlbmNlLCBpbiBkZWNvZGVUYWJsZVNlcS5cbiAgICB0aGlzLmRlY29kZVRhYmxlcyA9IFtdO1xuICAgIHRoaXMuZGVjb2RlVGFibGVzWzBdID0gVU5BU1NJR05FRF9OT0RFLnNsaWNlKDApOyAvLyBDcmVhdGUgcm9vdCBub2RlLlxuXG4gICAgLy8gU29tZXRpbWVzIGEgTUJDUyBjaGFyIGNvcnJlc3BvbmRzIHRvIGEgc2VxdWVuY2Ugb2YgdW5pY29kZSBjaGFycy4gV2Ugc3RvcmUgdGhlbSBhcyBhcnJheXMgb2YgaW50ZWdlcnMgaGVyZS4gXG4gICAgdGhpcy5kZWNvZGVUYWJsZVNlcSA9IFtdO1xuXG4gICAgLy8gQWN0dWFsIG1hcHBpbmcgdGFibGVzIGNvbnNpc3Qgb2YgY2h1bmtzLiBVc2UgdGhlbSB0byBmaWxsIHVwIGRlY29kZSB0YWJsZXMuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtYXBwaW5nVGFibGUubGVuZ3RoOyBpKyspXG4gICAgICAgIHRoaXMuX2FkZERlY29kZUNodW5rKG1hcHBpbmdUYWJsZVtpXSk7XG5cbiAgICB0aGlzLmRlZmF1bHRDaGFyVW5pY29kZSA9IGljb252LmRlZmF1bHRDaGFyVW5pY29kZTtcblxuICAgIFxuICAgIC8vIEVuY29kZSB0YWJsZXM6IFVuaWNvZGUgLT4gREJDUy5cblxuICAgIC8vIGBlbmNvZGVUYWJsZWAgaXMgYXJyYXkgbWFwcGluZyBmcm9tIHVuaWNvZGUgY2hhciB0byBlbmNvZGVkIGNoYXIuIEFsbCBpdHMgdmFsdWVzIGFyZSBpbnRlZ2VycyBmb3IgcGVyZm9ybWFuY2UuXG4gICAgLy8gQmVjYXVzZSBpdCBjYW4gYmUgc3BhcnNlLCBpdCBpcyByZXByZXNlbnRlZCBhcyBhcnJheSBvZiBidWNrZXRzIGJ5IDI1NiBjaGFycyBlYWNoLiBCdWNrZXQgY2FuIGJlIG51bGwuXG4gICAgLy8gVmFsdWVzOiA+PSAgMCAtPiBpdCBpcyBhIG5vcm1hbCBjaGFyLiBXcml0ZSB0aGUgdmFsdWUgKGlmIDw9MjU2IHRoZW4gMSBieXRlLCBpZiA8PTY1NTM2IHRoZW4gMiBieXRlcywgZXRjLikuXG4gICAgLy8gICAgICAgICA9PSBVTkFTU0lHTkVEIC0+IG5vIGNvbnZlcnNpb24gZm91bmQuIE91dHB1dCBhIGRlZmF1bHQgY2hhci5cbiAgICAvLyAgICAgICAgIDw9IFNFUV9TVEFSVCAgLT4gaXQncyBhbiBpbmRleCBpbiBlbmNvZGVUYWJsZVNlcSwgc2VlIGJlbG93LiBUaGUgY2hhcmFjdGVyIHN0YXJ0cyBhIHNlcXVlbmNlLlxuICAgIHRoaXMuZW5jb2RlVGFibGUgPSBbXTtcbiAgICBcbiAgICAvLyBgZW5jb2RlVGFibGVTZXFgIGlzIHVzZWQgd2hlbiBhIHNlcXVlbmNlIG9mIHVuaWNvZGUgY2hhcmFjdGVycyBpcyBlbmNvZGVkIGFzIGEgc2luZ2xlIGNvZGUuIFdlIHVzZSBhIHRyZWUgb2ZcbiAgICAvLyBvYmplY3RzIHdoZXJlIGtleXMgY29ycmVzcG9uZCB0byBjaGFyYWN0ZXJzIGluIHNlcXVlbmNlIGFuZCBsZWFmcyBhcmUgdGhlIGVuY29kZWQgZGJjcyB2YWx1ZXMuIEEgc3BlY2lhbCBERUZfQ0hBUiBrZXlcbiAgICAvLyBtZWFucyBlbmQgb2Ygc2VxdWVuY2UgKG5lZWRlZCB3aGVuIG9uZSBzZXF1ZW5jZSBpcyBhIHN0cmljdCBzdWJzZXF1ZW5jZSBvZiBhbm90aGVyKS5cbiAgICAvLyBPYmplY3RzIGFyZSBrZXB0IHNlcGFyYXRlbHkgZnJvbSBlbmNvZGVUYWJsZSB0byBpbmNyZWFzZSBwZXJmb3JtYW5jZS5cbiAgICB0aGlzLmVuY29kZVRhYmxlU2VxID0gW107XG5cbiAgICAvLyBTb21lIGNoYXJzIGNhbiBiZSBkZWNvZGVkLCBidXQgbmVlZCBub3QgYmUgZW5jb2RlZC5cbiAgICB2YXIgc2tpcEVuY29kZUNoYXJzID0ge307XG4gICAgaWYgKGNvZGVjT3B0aW9ucy5lbmNvZGVTa2lwVmFscylcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb2RlY09wdGlvbnMuZW5jb2RlU2tpcFZhbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciB2YWwgPSBjb2RlY09wdGlvbnMuZW5jb2RlU2tpcFZhbHNbaV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ251bWJlcicpXG4gICAgICAgICAgICAgICAgc2tpcEVuY29kZUNoYXJzW3ZhbF0gPSB0cnVlO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSB2YWwuZnJvbTsgaiA8PSB2YWwudG87IGorKylcbiAgICAgICAgICAgICAgICAgICAgc2tpcEVuY29kZUNoYXJzW2pdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAvLyBVc2UgZGVjb2RlIHRyaWUgdG8gcmVjdXJzaXZlbHkgZmlsbCBvdXQgZW5jb2RlIHRhYmxlcy5cbiAgICB0aGlzLl9maWxsRW5jb2RlVGFibGUoMCwgMCwgc2tpcEVuY29kZUNoYXJzKTtcblxuICAgIC8vIEFkZCBtb3JlIGVuY29kaW5nIHBhaXJzIHdoZW4gbmVlZGVkLlxuICAgIGlmIChjb2RlY09wdGlvbnMuZW5jb2RlQWRkKSB7XG4gICAgICAgIGZvciAodmFyIHVDaGFyIGluIGNvZGVjT3B0aW9ucy5lbmNvZGVBZGQpXG4gICAgICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGNvZGVjT3B0aW9ucy5lbmNvZGVBZGQsIHVDaGFyKSlcbiAgICAgICAgICAgICAgICB0aGlzLl9zZXRFbmNvZGVDaGFyKHVDaGFyLmNoYXJDb2RlQXQoMCksIGNvZGVjT3B0aW9ucy5lbmNvZGVBZGRbdUNoYXJdKTtcbiAgICB9XG5cbiAgICB0aGlzLmRlZkNoYXJTQiAgPSB0aGlzLmVuY29kZVRhYmxlWzBdW2ljb252LmRlZmF1bHRDaGFyU2luZ2xlQnl0ZS5jaGFyQ29kZUF0KDApXTtcbiAgICBpZiAodGhpcy5kZWZDaGFyU0IgPT09IFVOQVNTSUdORUQpIHRoaXMuZGVmQ2hhclNCID0gdGhpcy5lbmNvZGVUYWJsZVswXVsnPyddO1xuICAgIGlmICh0aGlzLmRlZkNoYXJTQiA9PT0gVU5BU1NJR05FRCkgdGhpcy5kZWZDaGFyU0IgPSBcIj9cIi5jaGFyQ29kZUF0KDApO1xuXG5cbiAgICAvLyBMb2FkICYgY3JlYXRlIEdCMTgwMzAgdGFibGVzIHdoZW4gbmVlZGVkLlxuICAgIGlmICh0eXBlb2YgY29kZWNPcHRpb25zLmdiMTgwMzAgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhpcy5nYjE4MDMwID0gY29kZWNPcHRpb25zLmdiMTgwMzAoKTsgLy8gTG9hZCBHQjE4MDMwIHJhbmdlcy5cblxuICAgICAgICAvLyBBZGQgR0IxODAzMCBkZWNvZGUgdGFibGVzLlxuICAgICAgICB2YXIgdGhpcmRCeXRlTm9kZUlkeCA9IHRoaXMuZGVjb2RlVGFibGVzLmxlbmd0aDtcbiAgICAgICAgdmFyIHRoaXJkQnl0ZU5vZGUgPSB0aGlzLmRlY29kZVRhYmxlc1t0aGlyZEJ5dGVOb2RlSWR4XSA9IFVOQVNTSUdORURfTk9ERS5zbGljZSgwKTtcblxuICAgICAgICB2YXIgZm91cnRoQnl0ZU5vZGVJZHggPSB0aGlzLmRlY29kZVRhYmxlcy5sZW5ndGg7XG4gICAgICAgIHZhciBmb3VydGhCeXRlTm9kZSA9IHRoaXMuZGVjb2RlVGFibGVzW2ZvdXJ0aEJ5dGVOb2RlSWR4XSA9IFVOQVNTSUdORURfTk9ERS5zbGljZSgwKTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMHg4MTsgaSA8PSAweEZFOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBzZWNvbmRCeXRlTm9kZUlkeCA9IE5PREVfU1RBUlQgLSB0aGlzLmRlY29kZVRhYmxlc1swXVtpXTtcbiAgICAgICAgICAgIHZhciBzZWNvbmRCeXRlTm9kZSA9IHRoaXMuZGVjb2RlVGFibGVzW3NlY29uZEJ5dGVOb2RlSWR4XTtcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAweDMwOyBqIDw9IDB4Mzk7IGorKylcbiAgICAgICAgICAgICAgICBzZWNvbmRCeXRlTm9kZVtqXSA9IE5PREVfU1RBUlQgLSB0aGlyZEJ5dGVOb2RlSWR4O1xuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkgPSAweDgxOyBpIDw9IDB4RkU7IGkrKylcbiAgICAgICAgICAgIHRoaXJkQnl0ZU5vZGVbaV0gPSBOT0RFX1NUQVJUIC0gZm91cnRoQnl0ZU5vZGVJZHg7XG4gICAgICAgIGZvciAodmFyIGkgPSAweDMwOyBpIDw9IDB4Mzk7IGkrKylcbiAgICAgICAgICAgIGZvdXJ0aEJ5dGVOb2RlW2ldID0gR0IxODAzMF9DT0RFXG4gICAgfSAgICAgICAgXG59XG5cbkRCQ1NDb2RlYy5wcm90b3R5cGUuZW5jb2RlciA9IERCQ1NFbmNvZGVyO1xuREJDU0NvZGVjLnByb3RvdHlwZS5kZWNvZGVyID0gREJDU0RlY29kZXI7XG5cbi8vIERlY29kZXIgaGVscGVyc1xuREJDU0NvZGVjLnByb3RvdHlwZS5fZ2V0RGVjb2RlVHJpZU5vZGUgPSBmdW5jdGlvbihhZGRyKSB7XG4gICAgdmFyIGJ5dGVzID0gW107XG4gICAgZm9yICg7IGFkZHIgPiAwOyBhZGRyID4+PSA4KVxuICAgICAgICBieXRlcy5wdXNoKGFkZHIgJiAweEZGKTtcbiAgICBpZiAoYnl0ZXMubGVuZ3RoID09IDApXG4gICAgICAgIGJ5dGVzLnB1c2goMCk7XG5cbiAgICB2YXIgbm9kZSA9IHRoaXMuZGVjb2RlVGFibGVzWzBdO1xuICAgIGZvciAodmFyIGkgPSBieXRlcy5sZW5ndGgtMTsgaSA+IDA7IGktLSkgeyAvLyBUcmF2ZXJzZSBub2RlcyBkZWVwZXIgaW50byB0aGUgdHJpZS5cbiAgICAgICAgdmFyIHZhbCA9IG5vZGVbYnl0ZXNbaV1dO1xuXG4gICAgICAgIGlmICh2YWwgPT0gVU5BU1NJR05FRCkgeyAvLyBDcmVhdGUgbmV3IG5vZGUuXG4gICAgICAgICAgICBub2RlW2J5dGVzW2ldXSA9IE5PREVfU1RBUlQgLSB0aGlzLmRlY29kZVRhYmxlcy5sZW5ndGg7XG4gICAgICAgICAgICB0aGlzLmRlY29kZVRhYmxlcy5wdXNoKG5vZGUgPSBVTkFTU0lHTkVEX05PREUuc2xpY2UoMCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHZhbCA8PSBOT0RFX1NUQVJUKSB7IC8vIEV4aXN0aW5nIG5vZGUuXG4gICAgICAgICAgICBub2RlID0gdGhpcy5kZWNvZGVUYWJsZXNbTk9ERV9TVEFSVCAtIHZhbF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiT3ZlcndyaXRlIGJ5dGUgaW4gXCIgKyB0aGlzLmVuY29kaW5nTmFtZSArIFwiLCBhZGRyOiBcIiArIGFkZHIudG9TdHJpbmcoMTYpKTtcbiAgICB9XG4gICAgcmV0dXJuIG5vZGU7XG59XG5cblxuREJDU0NvZGVjLnByb3RvdHlwZS5fYWRkRGVjb2RlQ2h1bmsgPSBmdW5jdGlvbihjaHVuaykge1xuICAgIC8vIEZpcnN0IGVsZW1lbnQgb2YgY2h1bmsgaXMgdGhlIGhleCBtYmNzIGNvZGUgd2hlcmUgd2Ugc3RhcnQuXG4gICAgdmFyIGN1ckFkZHIgPSBwYXJzZUludChjaHVua1swXSwgMTYpO1xuXG4gICAgLy8gQ2hvb3NlIHRoZSBkZWNvZGluZyBub2RlIHdoZXJlIHdlJ2xsIHdyaXRlIG91ciBjaGFycy5cbiAgICB2YXIgd3JpdGVUYWJsZSA9IHRoaXMuX2dldERlY29kZVRyaWVOb2RlKGN1ckFkZHIpO1xuICAgIGN1ckFkZHIgPSBjdXJBZGRyICYgMHhGRjtcblxuICAgIC8vIFdyaXRlIGFsbCBvdGhlciBlbGVtZW50cyBvZiB0aGUgY2h1bmsgdG8gdGhlIHRhYmxlLlxuICAgIGZvciAodmFyIGsgPSAxOyBrIDwgY2h1bmsubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIHBhcnQgPSBjaHVua1trXTtcbiAgICAgICAgaWYgKHR5cGVvZiBwYXJ0ID09PSBcInN0cmluZ1wiKSB7IC8vIFN0cmluZywgd3JpdGUgYXMtaXMuXG4gICAgICAgICAgICBmb3IgKHZhciBsID0gMDsgbCA8IHBhcnQubGVuZ3RoOykge1xuICAgICAgICAgICAgICAgIHZhciBjb2RlID0gcGFydC5jaGFyQ29kZUF0KGwrKyk7XG4gICAgICAgICAgICAgICAgaWYgKDB4RDgwMCA8PSBjb2RlICYmIGNvZGUgPCAweERDMDApIHsgLy8gRGVjb2RlIHN1cnJvZ2F0ZVxuICAgICAgICAgICAgICAgICAgICB2YXIgY29kZVRyYWlsID0gcGFydC5jaGFyQ29kZUF0KGwrKyk7XG4gICAgICAgICAgICAgICAgICAgIGlmICgweERDMDAgPD0gY29kZVRyYWlsICYmIGNvZGVUcmFpbCA8IDB4RTAwMClcbiAgICAgICAgICAgICAgICAgICAgICAgIHdyaXRlVGFibGVbY3VyQWRkcisrXSA9IDB4MTAwMDAgKyAoY29kZSAtIDB4RDgwMCkgKiAweDQwMCArIChjb2RlVHJhaWwgLSAweERDMDApO1xuICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbmNvcnJlY3Qgc3Vycm9nYXRlIHBhaXIgaW4gXCIgICsgdGhpcy5lbmNvZGluZ05hbWUgKyBcIiBhdCBjaHVuayBcIiArIGNodW5rWzBdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoMHgwRkYwIDwgY29kZSAmJiBjb2RlIDw9IDB4MEZGRikgeyAvLyBDaGFyYWN0ZXIgc2VxdWVuY2UgKG91ciBvd24gZW5jb2RpbmcgdXNlZClcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxlbiA9IDB4RkZGIC0gY29kZSArIDI7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzZXEgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbSA9IDA7IG0gPCBsZW47IG0rKylcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlcS5wdXNoKHBhcnQuY2hhckNvZGVBdChsKyspKTsgLy8gU2ltcGxlIHZhcmlhdGlvbjogZG9uJ3Qgc3VwcG9ydCBzdXJyb2dhdGVzIG9yIHN1YnNlcXVlbmNlcyBpbiBzZXEuXG5cbiAgICAgICAgICAgICAgICAgICAgd3JpdGVUYWJsZVtjdXJBZGRyKytdID0gU0VRX1NUQVJUIC0gdGhpcy5kZWNvZGVUYWJsZVNlcS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGVjb2RlVGFibGVTZXEucHVzaChzZXEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHdyaXRlVGFibGVbY3VyQWRkcisrXSA9IGNvZGU7IC8vIEJhc2ljIGNoYXJcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBcbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHBhcnQgPT09IFwibnVtYmVyXCIpIHsgLy8gSW50ZWdlciwgbWVhbmluZyBpbmNyZWFzaW5nIHNlcXVlbmNlIHN0YXJ0aW5nIHdpdGggcHJldiBjaGFyYWN0ZXIuXG4gICAgICAgICAgICB2YXIgY2hhckNvZGUgPSB3cml0ZVRhYmxlW2N1ckFkZHIgLSAxXSArIDE7XG4gICAgICAgICAgICBmb3IgKHZhciBsID0gMDsgbCA8IHBhcnQ7IGwrKylcbiAgICAgICAgICAgICAgICB3cml0ZVRhYmxlW2N1ckFkZHIrK10gPSBjaGFyQ29kZSsrO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkluY29ycmVjdCB0eXBlICdcIiArIHR5cGVvZiBwYXJ0ICsgXCInIGdpdmVuIGluIFwiICArIHRoaXMuZW5jb2RpbmdOYW1lICsgXCIgYXQgY2h1bmsgXCIgKyBjaHVua1swXSk7XG4gICAgfVxuICAgIGlmIChjdXJBZGRyID4gMHhGRilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW5jb3JyZWN0IGNodW5rIGluIFwiICArIHRoaXMuZW5jb2RpbmdOYW1lICsgXCIgYXQgYWRkciBcIiArIGNodW5rWzBdICsgXCI6IHRvbyBsb25nXCIgKyBjdXJBZGRyKTtcbn1cblxuLy8gRW5jb2RlciBoZWxwZXJzXG5EQkNTQ29kZWMucHJvdG90eXBlLl9nZXRFbmNvZGVCdWNrZXQgPSBmdW5jdGlvbih1Q29kZSkge1xuICAgIHZhciBoaWdoID0gdUNvZGUgPj4gODsgLy8gVGhpcyBjb3VsZCBiZSA+IDB4RkYgYmVjYXVzZSBvZiBhc3RyYWwgY2hhcmFjdGVycy5cbiAgICBpZiAodGhpcy5lbmNvZGVUYWJsZVtoaWdoXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICB0aGlzLmVuY29kZVRhYmxlW2hpZ2hdID0gVU5BU1NJR05FRF9OT0RFLnNsaWNlKDApOyAvLyBDcmVhdGUgYnVja2V0IG9uIGRlbWFuZC5cbiAgICByZXR1cm4gdGhpcy5lbmNvZGVUYWJsZVtoaWdoXTtcbn1cblxuREJDU0NvZGVjLnByb3RvdHlwZS5fc2V0RW5jb2RlQ2hhciA9IGZ1bmN0aW9uKHVDb2RlLCBkYmNzQ29kZSkge1xuICAgIHZhciBidWNrZXQgPSB0aGlzLl9nZXRFbmNvZGVCdWNrZXQodUNvZGUpO1xuICAgIHZhciBsb3cgPSB1Q29kZSAmIDB4RkY7XG4gICAgaWYgKGJ1Y2tldFtsb3ddIDw9IFNFUV9TVEFSVClcbiAgICAgICAgdGhpcy5lbmNvZGVUYWJsZVNlcVtTRVFfU1RBUlQtYnVja2V0W2xvd11dW0RFRl9DSEFSXSA9IGRiY3NDb2RlOyAvLyBUaGVyZSdzIGFscmVhZHkgYSBzZXF1ZW5jZSwgc2V0IGEgc2luZ2xlLWNoYXIgc3Vic2VxdWVuY2Ugb2YgaXQuXG4gICAgZWxzZSBpZiAoYnVja2V0W2xvd10gPT0gVU5BU1NJR05FRClcbiAgICAgICAgYnVja2V0W2xvd10gPSBkYmNzQ29kZTtcbn1cblxuREJDU0NvZGVjLnByb3RvdHlwZS5fc2V0RW5jb2RlU2VxdWVuY2UgPSBmdW5jdGlvbihzZXEsIGRiY3NDb2RlKSB7XG4gICAgXG4gICAgLy8gR2V0IHRoZSByb290IG9mIGNoYXJhY3RlciB0cmVlIGFjY29yZGluZyB0byBmaXJzdCBjaGFyYWN0ZXIgb2YgdGhlIHNlcXVlbmNlLlxuICAgIHZhciB1Q29kZSA9IHNlcVswXTtcbiAgICB2YXIgYnVja2V0ID0gdGhpcy5fZ2V0RW5jb2RlQnVja2V0KHVDb2RlKTtcbiAgICB2YXIgbG93ID0gdUNvZGUgJiAweEZGO1xuXG4gICAgdmFyIG5vZGU7XG4gICAgaWYgKGJ1Y2tldFtsb3ddIDw9IFNFUV9TVEFSVCkge1xuICAgICAgICAvLyBUaGVyZSdzIGFscmVhZHkgYSBzZXF1ZW5jZSB3aXRoICAtIHVzZSBpdC5cbiAgICAgICAgbm9kZSA9IHRoaXMuZW5jb2RlVGFibGVTZXFbU0VRX1NUQVJULWJ1Y2tldFtsb3ddXTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIC8vIFRoZXJlIHdhcyBubyBzZXF1ZW5jZSBvYmplY3QgLSBhbGxvY2F0ZSBhIG5ldyBvbmUuXG4gICAgICAgIG5vZGUgPSB7fTtcbiAgICAgICAgaWYgKGJ1Y2tldFtsb3ddICE9PSBVTkFTU0lHTkVEKSBub2RlW0RFRl9DSEFSXSA9IGJ1Y2tldFtsb3ddOyAvLyBJZiBhIGNoYXIgd2FzIHNldCBiZWZvcmUgLSBtYWtlIGl0IGEgc2luZ2xlLWNoYXIgc3Vic2VxdWVuY2UuXG4gICAgICAgIGJ1Y2tldFtsb3ddID0gU0VRX1NUQVJUIC0gdGhpcy5lbmNvZGVUYWJsZVNlcS5sZW5ndGg7XG4gICAgICAgIHRoaXMuZW5jb2RlVGFibGVTZXEucHVzaChub2RlKTtcbiAgICB9XG5cbiAgICAvLyBUcmF2ZXJzZSB0aGUgY2hhcmFjdGVyIHRyZWUsIGFsbG9jYXRpbmcgbmV3IG5vZGVzIGFzIG5lZWRlZC5cbiAgICBmb3IgKHZhciBqID0gMTsgaiA8IHNlcS5sZW5ndGgtMTsgaisrKSB7XG4gICAgICAgIHZhciBvbGRWYWwgPSBub2RlW3VDb2RlXTtcbiAgICAgICAgaWYgKHR5cGVvZiBvbGRWYWwgPT09ICdvYmplY3QnKVxuICAgICAgICAgICAgbm9kZSA9IG9sZFZhbDtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBub2RlID0gbm9kZVt1Q29kZV0gPSB7fVxuICAgICAgICAgICAgaWYgKG9sZFZhbCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIG5vZGVbREVGX0NIQVJdID0gb2xkVmFsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBTZXQgdGhlIGxlYWYgdG8gZ2l2ZW4gZGJjc0NvZGUuXG4gICAgdUNvZGUgPSBzZXFbc2VxLmxlbmd0aC0xXTtcbiAgICBub2RlW3VDb2RlXSA9IGRiY3NDb2RlO1xufVxuXG5EQkNTQ29kZWMucHJvdG90eXBlLl9maWxsRW5jb2RlVGFibGUgPSBmdW5jdGlvbihub2RlSWR4LCBwcmVmaXgsIHNraXBFbmNvZGVDaGFycykge1xuICAgIHZhciBub2RlID0gdGhpcy5kZWNvZGVUYWJsZXNbbm9kZUlkeF07XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCAweDEwMDsgaSsrKSB7XG4gICAgICAgIHZhciB1Q29kZSA9IG5vZGVbaV07XG4gICAgICAgIHZhciBtYkNvZGUgPSBwcmVmaXggKyBpO1xuICAgICAgICBpZiAoc2tpcEVuY29kZUNoYXJzW21iQ29kZV0pXG4gICAgICAgICAgICBjb250aW51ZTtcblxuICAgICAgICBpZiAodUNvZGUgPj0gMClcbiAgICAgICAgICAgIHRoaXMuX3NldEVuY29kZUNoYXIodUNvZGUsIG1iQ29kZSk7XG4gICAgICAgIGVsc2UgaWYgKHVDb2RlIDw9IE5PREVfU1RBUlQpXG4gICAgICAgICAgICB0aGlzLl9maWxsRW5jb2RlVGFibGUoTk9ERV9TVEFSVCAtIHVDb2RlLCBtYkNvZGUgPDwgOCwgc2tpcEVuY29kZUNoYXJzKTtcbiAgICAgICAgZWxzZSBpZiAodUNvZGUgPD0gU0VRX1NUQVJUKVxuICAgICAgICAgICAgdGhpcy5fc2V0RW5jb2RlU2VxdWVuY2UodGhpcy5kZWNvZGVUYWJsZVNlcVtTRVFfU1RBUlQgLSB1Q29kZV0sIG1iQ29kZSk7XG4gICAgfVxufVxuXG5cblxuLy8gPT0gRW5jb2RlciA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZnVuY3Rpb24gREJDU0VuY29kZXIob3B0aW9ucywgY29kZWMpIHtcbiAgICAvLyBFbmNvZGVyIHN0YXRlXG4gICAgdGhpcy5sZWFkU3Vycm9nYXRlID0gLTE7XG4gICAgdGhpcy5zZXFPYmogPSB1bmRlZmluZWQ7XG4gICAgXG4gICAgLy8gU3RhdGljIGRhdGFcbiAgICB0aGlzLmVuY29kZVRhYmxlID0gY29kZWMuZW5jb2RlVGFibGU7XG4gICAgdGhpcy5lbmNvZGVUYWJsZVNlcSA9IGNvZGVjLmVuY29kZVRhYmxlU2VxO1xuICAgIHRoaXMuZGVmYXVsdENoYXJTaW5nbGVCeXRlID0gY29kZWMuZGVmQ2hhclNCO1xuICAgIHRoaXMuZ2IxODAzMCA9IGNvZGVjLmdiMTgwMzA7XG59XG5cbkRCQ1NFbmNvZGVyLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIHZhciBuZXdCdWYgPSBCdWZmZXIuYWxsb2Moc3RyLmxlbmd0aCAqICh0aGlzLmdiMTgwMzAgPyA0IDogMykpLFxuICAgICAgICBsZWFkU3Vycm9nYXRlID0gdGhpcy5sZWFkU3Vycm9nYXRlLFxuICAgICAgICBzZXFPYmogPSB0aGlzLnNlcU9iaiwgbmV4dENoYXIgPSAtMSxcbiAgICAgICAgaSA9IDAsIGogPSAwO1xuXG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgLy8gMC4gR2V0IG5leHQgY2hhcmFjdGVyLlxuICAgICAgICBpZiAobmV4dENoYXIgPT09IC0xKSB7XG4gICAgICAgICAgICBpZiAoaSA9PSBzdHIubGVuZ3RoKSBicmVhaztcbiAgICAgICAgICAgIHZhciB1Q29kZSA9IHN0ci5jaGFyQ29kZUF0KGkrKyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgdUNvZGUgPSBuZXh0Q2hhcjtcbiAgICAgICAgICAgIG5leHRDaGFyID0gLTE7ICAgIFxuICAgICAgICB9XG5cbiAgICAgICAgLy8gMS4gSGFuZGxlIHN1cnJvZ2F0ZXMuXG4gICAgICAgIGlmICgweEQ4MDAgPD0gdUNvZGUgJiYgdUNvZGUgPCAweEUwMDApIHsgLy8gQ2hhciBpcyBvbmUgb2Ygc3Vycm9nYXRlcy5cbiAgICAgICAgICAgIGlmICh1Q29kZSA8IDB4REMwMCkgeyAvLyBXZSd2ZSBnb3QgbGVhZCBzdXJyb2dhdGUuXG4gICAgICAgICAgICAgICAgaWYgKGxlYWRTdXJyb2dhdGUgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGxlYWRTdXJyb2dhdGUgPSB1Q29kZTtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbGVhZFN1cnJvZ2F0ZSA9IHVDb2RlO1xuICAgICAgICAgICAgICAgICAgICAvLyBEb3VibGUgbGVhZCBzdXJyb2dhdGUgZm91bmQuXG4gICAgICAgICAgICAgICAgICAgIHVDb2RlID0gVU5BU1NJR05FRDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgeyAvLyBXZSd2ZSBnb3QgdHJhaWwgc3Vycm9nYXRlLlxuICAgICAgICAgICAgICAgIGlmIChsZWFkU3Vycm9nYXRlICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICB1Q29kZSA9IDB4MTAwMDAgKyAobGVhZFN1cnJvZ2F0ZSAtIDB4RDgwMCkgKiAweDQwMCArICh1Q29kZSAtIDB4REMwMCk7XG4gICAgICAgICAgICAgICAgICAgIGxlYWRTdXJyb2dhdGUgPSAtMTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBJbmNvbXBsZXRlIHN1cnJvZ2F0ZSBwYWlyIC0gb25seSB0cmFpbCBzdXJyb2dhdGUgZm91bmQuXG4gICAgICAgICAgICAgICAgICAgIHVDb2RlID0gVU5BU1NJR05FRDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobGVhZFN1cnJvZ2F0ZSAhPT0gLTEpIHtcbiAgICAgICAgICAgIC8vIEluY29tcGxldGUgc3Vycm9nYXRlIHBhaXIgLSBvbmx5IGxlYWQgc3Vycm9nYXRlIGZvdW5kLlxuICAgICAgICAgICAgbmV4dENoYXIgPSB1Q29kZTsgdUNvZGUgPSBVTkFTU0lHTkVEOyAvLyBXcml0ZSBhbiBlcnJvciwgdGhlbiBjdXJyZW50IGNoYXIuXG4gICAgICAgICAgICBsZWFkU3Vycm9nYXRlID0gLTE7XG4gICAgICAgIH1cblxuICAgICAgICAvLyAyLiBDb252ZXJ0IHVDb2RlIGNoYXJhY3Rlci5cbiAgICAgICAgdmFyIGRiY3NDb2RlID0gVU5BU1NJR05FRDtcbiAgICAgICAgaWYgKHNlcU9iaiAhPT0gdW5kZWZpbmVkICYmIHVDb2RlICE9IFVOQVNTSUdORUQpIHsgLy8gV2UgYXJlIGluIHRoZSBtaWRkbGUgb2YgdGhlIHNlcXVlbmNlXG4gICAgICAgICAgICB2YXIgcmVzQ29kZSA9IHNlcU9ialt1Q29kZV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIHJlc0NvZGUgPT09ICdvYmplY3QnKSB7IC8vIFNlcXVlbmNlIGNvbnRpbnVlcy5cbiAgICAgICAgICAgICAgICBzZXFPYmogPSByZXNDb2RlO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiByZXNDb2RlID09ICdudW1iZXInKSB7IC8vIFNlcXVlbmNlIGZpbmlzaGVkLiBXcml0ZSBpdC5cbiAgICAgICAgICAgICAgICBkYmNzQ29kZSA9IHJlc0NvZGU7XG5cbiAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzQ29kZSA9PSB1bmRlZmluZWQpIHsgLy8gQ3VycmVudCBjaGFyYWN0ZXIgaXMgbm90IHBhcnQgb2YgdGhlIHNlcXVlbmNlLlxuXG4gICAgICAgICAgICAgICAgLy8gVHJ5IGRlZmF1bHQgY2hhcmFjdGVyIGZvciB0aGlzIHNlcXVlbmNlXG4gICAgICAgICAgICAgICAgcmVzQ29kZSA9IHNlcU9ialtERUZfQ0hBUl07XG4gICAgICAgICAgICAgICAgaWYgKHJlc0NvZGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBkYmNzQ29kZSA9IHJlc0NvZGU7IC8vIEZvdW5kLiBXcml0ZSBpdC5cbiAgICAgICAgICAgICAgICAgICAgbmV4dENoYXIgPSB1Q29kZTsgLy8gQ3VycmVudCBjaGFyYWN0ZXIgd2lsbCBiZSB3cml0dGVuIHRvbyBpbiB0aGUgbmV4dCBpdGVyYXRpb24uXG5cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBUT0RPOiBXaGF0IGlmIHdlIGhhdmUgbm8gZGVmYXVsdD8gKHJlc0NvZGUgPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICAvLyBUaGVuLCB3ZSBzaG91bGQgd3JpdGUgZmlyc3QgY2hhciBvZiB0aGUgc2VxdWVuY2UgYXMtaXMgYW5kIHRyeSB0aGUgcmVzdCByZWN1cnNpdmVseS5cbiAgICAgICAgICAgICAgICAgICAgLy8gRGlkbid0IGRvIGl0IGZvciBub3cgYmVjYXVzZSBubyBlbmNvZGluZyBoYXMgdGhpcyBzaXR1YXRpb24geWV0LlxuICAgICAgICAgICAgICAgICAgICAvLyBDdXJyZW50bHksIGp1c3Qgc2tpcCB0aGUgc2VxdWVuY2UgYW5kIHdyaXRlIGN1cnJlbnQgY2hhci5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZXFPYmogPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodUNvZGUgPj0gMCkgeyAgLy8gUmVndWxhciBjaGFyYWN0ZXJcbiAgICAgICAgICAgIHZhciBzdWJ0YWJsZSA9IHRoaXMuZW5jb2RlVGFibGVbdUNvZGUgPj4gOF07XG4gICAgICAgICAgICBpZiAoc3VidGFibGUgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICBkYmNzQ29kZSA9IHN1YnRhYmxlW3VDb2RlICYgMHhGRl07XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChkYmNzQ29kZSA8PSBTRVFfU1RBUlQpIHsgLy8gU2VxdWVuY2Ugc3RhcnRcbiAgICAgICAgICAgICAgICBzZXFPYmogPSB0aGlzLmVuY29kZVRhYmxlU2VxW1NFUV9TVEFSVC1kYmNzQ29kZV07XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChkYmNzQ29kZSA9PSBVTkFTU0lHTkVEICYmIHRoaXMuZ2IxODAzMCkge1xuICAgICAgICAgICAgICAgIC8vIFVzZSBHQjE4MDMwIGFsZ29yaXRobSB0byBmaW5kIGNoYXJhY3RlcihzKSB0byB3cml0ZS5cbiAgICAgICAgICAgICAgICB2YXIgaWR4ID0gZmluZElkeCh0aGlzLmdiMTgwMzAudUNoYXJzLCB1Q29kZSk7XG4gICAgICAgICAgICAgICAgaWYgKGlkeCAhPSAtMSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZGJjc0NvZGUgPSB0aGlzLmdiMTgwMzAuZ2JDaGFyc1tpZHhdICsgKHVDb2RlIC0gdGhpcy5nYjE4MDMwLnVDaGFyc1tpZHhdKTtcbiAgICAgICAgICAgICAgICAgICAgbmV3QnVmW2orK10gPSAweDgxICsgTWF0aC5mbG9vcihkYmNzQ29kZSAvIDEyNjAwKTsgZGJjc0NvZGUgPSBkYmNzQ29kZSAlIDEyNjAwO1xuICAgICAgICAgICAgICAgICAgICBuZXdCdWZbaisrXSA9IDB4MzAgKyBNYXRoLmZsb29yKGRiY3NDb2RlIC8gMTI2MCk7IGRiY3NDb2RlID0gZGJjc0NvZGUgJSAxMjYwO1xuICAgICAgICAgICAgICAgICAgICBuZXdCdWZbaisrXSA9IDB4ODEgKyBNYXRoLmZsb29yKGRiY3NDb2RlIC8gMTApOyBkYmNzQ29kZSA9IGRiY3NDb2RlICUgMTA7XG4gICAgICAgICAgICAgICAgICAgIG5ld0J1ZltqKytdID0gMHgzMCArIGRiY3NDb2RlO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyAzLiBXcml0ZSBkYmNzQ29kZSBjaGFyYWN0ZXIuXG4gICAgICAgIGlmIChkYmNzQ29kZSA9PT0gVU5BU1NJR05FRClcbiAgICAgICAgICAgIGRiY3NDb2RlID0gdGhpcy5kZWZhdWx0Q2hhclNpbmdsZUJ5dGU7XG4gICAgICAgIFxuICAgICAgICBpZiAoZGJjc0NvZGUgPCAweDEwMCkge1xuICAgICAgICAgICAgbmV3QnVmW2orK10gPSBkYmNzQ29kZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChkYmNzQ29kZSA8IDB4MTAwMDApIHtcbiAgICAgICAgICAgIG5ld0J1ZltqKytdID0gZGJjc0NvZGUgPj4gODsgICAvLyBoaWdoIGJ5dGVcbiAgICAgICAgICAgIG5ld0J1ZltqKytdID0gZGJjc0NvZGUgJiAweEZGOyAvLyBsb3cgYnl0ZVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbmV3QnVmW2orK10gPSBkYmNzQ29kZSA+PiAxNjtcbiAgICAgICAgICAgIG5ld0J1ZltqKytdID0gKGRiY3NDb2RlID4+IDgpICYgMHhGRjtcbiAgICAgICAgICAgIG5ld0J1ZltqKytdID0gZGJjc0NvZGUgJiAweEZGO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5zZXFPYmogPSBzZXFPYmo7XG4gICAgdGhpcy5sZWFkU3Vycm9nYXRlID0gbGVhZFN1cnJvZ2F0ZTtcbiAgICByZXR1cm4gbmV3QnVmLnNsaWNlKDAsIGopO1xufVxuXG5EQkNTRW5jb2Rlci5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMubGVhZFN1cnJvZ2F0ZSA9PT0gLTEgJiYgdGhpcy5zZXFPYmogPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuOyAvLyBBbGwgY2xlYW4uIE1vc3Qgb2Z0ZW4gY2FzZS5cblxuICAgIHZhciBuZXdCdWYgPSBCdWZmZXIuYWxsb2MoMTApLCBqID0gMDtcblxuICAgIGlmICh0aGlzLnNlcU9iaikgeyAvLyBXZSdyZSBpbiB0aGUgc2VxdWVuY2UuXG4gICAgICAgIHZhciBkYmNzQ29kZSA9IHRoaXMuc2VxT2JqW0RFRl9DSEFSXTtcbiAgICAgICAgaWYgKGRiY3NDb2RlICE9PSB1bmRlZmluZWQpIHsgLy8gV3JpdGUgYmVnaW5uaW5nIG9mIHRoZSBzZXF1ZW5jZS5cbiAgICAgICAgICAgIGlmIChkYmNzQ29kZSA8IDB4MTAwKSB7XG4gICAgICAgICAgICAgICAgbmV3QnVmW2orK10gPSBkYmNzQ29kZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld0J1ZltqKytdID0gZGJjc0NvZGUgPj4gODsgICAvLyBoaWdoIGJ5dGVcbiAgICAgICAgICAgICAgICBuZXdCdWZbaisrXSA9IGRiY3NDb2RlICYgMHhGRjsgLy8gbG93IGJ5dGVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIFNlZSB0b2RvIGFib3ZlLlxuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2VxT2JqID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmxlYWRTdXJyb2dhdGUgIT09IC0xKSB7XG4gICAgICAgIC8vIEluY29tcGxldGUgc3Vycm9nYXRlIHBhaXIgLSBvbmx5IGxlYWQgc3Vycm9nYXRlIGZvdW5kLlxuICAgICAgICBuZXdCdWZbaisrXSA9IHRoaXMuZGVmYXVsdENoYXJTaW5nbGVCeXRlO1xuICAgICAgICB0aGlzLmxlYWRTdXJyb2dhdGUgPSAtMTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIG5ld0J1Zi5zbGljZSgwLCBqKTtcbn1cblxuLy8gRXhwb3J0IGZvciB0ZXN0aW5nXG5EQkNTRW5jb2Rlci5wcm90b3R5cGUuZmluZElkeCA9IGZpbmRJZHg7XG5cblxuLy8gPT0gRGVjb2RlciA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZnVuY3Rpb24gREJDU0RlY29kZXIob3B0aW9ucywgY29kZWMpIHtcbiAgICAvLyBEZWNvZGVyIHN0YXRlXG4gICAgdGhpcy5ub2RlSWR4ID0gMDtcbiAgICB0aGlzLnByZXZCdWYgPSBCdWZmZXIuYWxsb2MoMCk7XG5cbiAgICAvLyBTdGF0aWMgZGF0YVxuICAgIHRoaXMuZGVjb2RlVGFibGVzID0gY29kZWMuZGVjb2RlVGFibGVzO1xuICAgIHRoaXMuZGVjb2RlVGFibGVTZXEgPSBjb2RlYy5kZWNvZGVUYWJsZVNlcTtcbiAgICB0aGlzLmRlZmF1bHRDaGFyVW5pY29kZSA9IGNvZGVjLmRlZmF1bHRDaGFyVW5pY29kZTtcbiAgICB0aGlzLmdiMTgwMzAgPSBjb2RlYy5nYjE4MDMwO1xufVxuXG5EQkNTRGVjb2Rlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihidWYpIHtcbiAgICB2YXIgbmV3QnVmID0gQnVmZmVyLmFsbG9jKGJ1Zi5sZW5ndGgqMiksXG4gICAgICAgIG5vZGVJZHggPSB0aGlzLm5vZGVJZHgsIFxuICAgICAgICBwcmV2QnVmID0gdGhpcy5wcmV2QnVmLCBwcmV2QnVmT2Zmc2V0ID0gdGhpcy5wcmV2QnVmLmxlbmd0aCxcbiAgICAgICAgc2VxU3RhcnQgPSAtdGhpcy5wcmV2QnVmLmxlbmd0aCwgLy8gaWR4IG9mIHRoZSBzdGFydCBvZiBjdXJyZW50IHBhcnNlZCBzZXF1ZW5jZS5cbiAgICAgICAgdUNvZGU7XG5cbiAgICBpZiAocHJldkJ1Zk9mZnNldCA+IDApIC8vIE1ha2UgcHJldiBidWYgb3ZlcmxhcCBhIGxpdHRsZSB0byBtYWtlIGl0IGVhc2llciB0byBzbGljZSBsYXRlci5cbiAgICAgICAgcHJldkJ1ZiA9IEJ1ZmZlci5jb25jYXQoW3ByZXZCdWYsIGJ1Zi5zbGljZSgwLCAxMCldKTtcbiAgICBcbiAgICBmb3IgKHZhciBpID0gMCwgaiA9IDA7IGkgPCBidWYubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGN1ckJ5dGUgPSAoaSA+PSAwKSA/IGJ1ZltpXSA6IHByZXZCdWZbaSArIHByZXZCdWZPZmZzZXRdO1xuXG4gICAgICAgIC8vIExvb2t1cCBpbiBjdXJyZW50IHRyaWUgbm9kZS5cbiAgICAgICAgdmFyIHVDb2RlID0gdGhpcy5kZWNvZGVUYWJsZXNbbm9kZUlkeF1bY3VyQnl0ZV07XG5cbiAgICAgICAgaWYgKHVDb2RlID49IDApIHsgXG4gICAgICAgICAgICAvLyBOb3JtYWwgY2hhcmFjdGVyLCBqdXN0IHVzZSBpdC5cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh1Q29kZSA9PT0gVU5BU1NJR05FRCkgeyAvLyBVbmtub3duIGNoYXIuXG4gICAgICAgICAgICAvLyBUT0RPOiBDYWxsYmFjayB3aXRoIHNlcS5cbiAgICAgICAgICAgIC8vdmFyIGN1clNlcSA9IChzZXFTdGFydCA+PSAwKSA/IGJ1Zi5zbGljZShzZXFTdGFydCwgaSsxKSA6IHByZXZCdWYuc2xpY2Uoc2VxU3RhcnQgKyBwcmV2QnVmT2Zmc2V0LCBpKzEgKyBwcmV2QnVmT2Zmc2V0KTtcbiAgICAgICAgICAgIGkgPSBzZXFTdGFydDsgLy8gVHJ5IHRvIHBhcnNlIGFnYWluLCBhZnRlciBza2lwcGluZyBmaXJzdCBieXRlIG9mIHRoZSBzZXF1ZW5jZSAoJ2knIHdpbGwgYmUgaW5jcmVtZW50ZWQgYnkgJ2ZvcicgY3ljbGUpLlxuICAgICAgICAgICAgdUNvZGUgPSB0aGlzLmRlZmF1bHRDaGFyVW5pY29kZS5jaGFyQ29kZUF0KDApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVDb2RlID09PSBHQjE4MDMwX0NPREUpIHtcbiAgICAgICAgICAgIHZhciBjdXJTZXEgPSAoc2VxU3RhcnQgPj0gMCkgPyBidWYuc2xpY2Uoc2VxU3RhcnQsIGkrMSkgOiBwcmV2QnVmLnNsaWNlKHNlcVN0YXJ0ICsgcHJldkJ1Zk9mZnNldCwgaSsxICsgcHJldkJ1Zk9mZnNldCk7XG4gICAgICAgICAgICB2YXIgcHRyID0gKGN1clNlcVswXS0weDgxKSoxMjYwMCArIChjdXJTZXFbMV0tMHgzMCkqMTI2MCArIChjdXJTZXFbMl0tMHg4MSkqMTAgKyAoY3VyU2VxWzNdLTB4MzApO1xuICAgICAgICAgICAgdmFyIGlkeCA9IGZpbmRJZHgodGhpcy5nYjE4MDMwLmdiQ2hhcnMsIHB0cik7XG4gICAgICAgICAgICB1Q29kZSA9IHRoaXMuZ2IxODAzMC51Q2hhcnNbaWR4XSArIHB0ciAtIHRoaXMuZ2IxODAzMC5nYkNoYXJzW2lkeF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodUNvZGUgPD0gTk9ERV9TVEFSVCkgeyAvLyBHbyB0byBuZXh0IHRyaWUgbm9kZS5cbiAgICAgICAgICAgIG5vZGVJZHggPSBOT0RFX1NUQVJUIC0gdUNvZGU7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh1Q29kZSA8PSBTRVFfU1RBUlQpIHsgLy8gT3V0cHV0IGEgc2VxdWVuY2Ugb2YgY2hhcnMuXG4gICAgICAgICAgICB2YXIgc2VxID0gdGhpcy5kZWNvZGVUYWJsZVNlcVtTRVFfU1RBUlQgLSB1Q29kZV07XG4gICAgICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IHNlcS5sZW5ndGggLSAxOyBrKyspIHtcbiAgICAgICAgICAgICAgICB1Q29kZSA9IHNlcVtrXTtcbiAgICAgICAgICAgICAgICBuZXdCdWZbaisrXSA9IHVDb2RlICYgMHhGRjtcbiAgICAgICAgICAgICAgICBuZXdCdWZbaisrXSA9IHVDb2RlID4+IDg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1Q29kZSA9IHNlcVtzZXEubGVuZ3RoLTFdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImljb252LWxpdGUgaW50ZXJuYWwgZXJyb3I6IGludmFsaWQgZGVjb2RpbmcgdGFibGUgdmFsdWUgXCIgKyB1Q29kZSArIFwiIGF0IFwiICsgbm9kZUlkeCArIFwiL1wiICsgY3VyQnl0ZSk7XG5cbiAgICAgICAgLy8gV3JpdGUgdGhlIGNoYXJhY3RlciB0byBidWZmZXIsIGhhbmRsaW5nIGhpZ2hlciBwbGFuZXMgdXNpbmcgc3Vycm9nYXRlIHBhaXIuXG4gICAgICAgIGlmICh1Q29kZSA+IDB4RkZGRikgeyBcbiAgICAgICAgICAgIHVDb2RlIC09IDB4MTAwMDA7XG4gICAgICAgICAgICB2YXIgdUNvZGVMZWFkID0gMHhEODAwICsgTWF0aC5mbG9vcih1Q29kZSAvIDB4NDAwKTtcbiAgICAgICAgICAgIG5ld0J1ZltqKytdID0gdUNvZGVMZWFkICYgMHhGRjtcbiAgICAgICAgICAgIG5ld0J1ZltqKytdID0gdUNvZGVMZWFkID4+IDg7XG5cbiAgICAgICAgICAgIHVDb2RlID0gMHhEQzAwICsgdUNvZGUgJSAweDQwMDtcbiAgICAgICAgfVxuICAgICAgICBuZXdCdWZbaisrXSA9IHVDb2RlICYgMHhGRjtcbiAgICAgICAgbmV3QnVmW2orK10gPSB1Q29kZSA+PiA4O1xuXG4gICAgICAgIC8vIFJlc2V0IHRyaWUgbm9kZS5cbiAgICAgICAgbm9kZUlkeCA9IDA7IHNlcVN0YXJ0ID0gaSsxO1xuICAgIH1cblxuICAgIHRoaXMubm9kZUlkeCA9IG5vZGVJZHg7XG4gICAgdGhpcy5wcmV2QnVmID0gKHNlcVN0YXJ0ID49IDApID8gYnVmLnNsaWNlKHNlcVN0YXJ0KSA6IHByZXZCdWYuc2xpY2Uoc2VxU3RhcnQgKyBwcmV2QnVmT2Zmc2V0KTtcbiAgICByZXR1cm4gbmV3QnVmLnNsaWNlKDAsIGopLnRvU3RyaW5nKCd1Y3MyJyk7XG59XG5cbkRCQ1NEZWNvZGVyLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgcmV0ID0gJyc7XG5cbiAgICAvLyBUcnkgdG8gcGFyc2UgYWxsIHJlbWFpbmluZyBjaGFycy5cbiAgICB3aGlsZSAodGhpcy5wcmV2QnVmLmxlbmd0aCA+IDApIHtcbiAgICAgICAgLy8gU2tpcCAxIGNoYXJhY3RlciBpbiB0aGUgYnVmZmVyLlxuICAgICAgICByZXQgKz0gdGhpcy5kZWZhdWx0Q2hhclVuaWNvZGU7XG4gICAgICAgIHZhciBidWYgPSB0aGlzLnByZXZCdWYuc2xpY2UoMSk7XG5cbiAgICAgICAgLy8gUGFyc2UgcmVtYWluaW5nIGFzIHVzdWFsLlxuICAgICAgICB0aGlzLnByZXZCdWYgPSBCdWZmZXIuYWxsb2MoMCk7XG4gICAgICAgIHRoaXMubm9kZUlkeCA9IDA7XG4gICAgICAgIGlmIChidWYubGVuZ3RoID4gMClcbiAgICAgICAgICAgIHJldCArPSB0aGlzLndyaXRlKGJ1Zik7XG4gICAgfVxuXG4gICAgdGhpcy5ub2RlSWR4ID0gMDtcbiAgICByZXR1cm4gcmV0O1xufVxuXG4vLyBCaW5hcnkgc2VhcmNoIGZvciBHQjE4MDMwLiBSZXR1cm5zIGxhcmdlc3QgaSBzdWNoIHRoYXQgdGFibGVbaV0gPD0gdmFsLlxuZnVuY3Rpb24gZmluZElkeCh0YWJsZSwgdmFsKSB7XG4gICAgaWYgKHRhYmxlWzBdID4gdmFsKVxuICAgICAgICByZXR1cm4gLTE7XG5cbiAgICB2YXIgbCA9IDAsIHIgPSB0YWJsZS5sZW5ndGg7XG4gICAgd2hpbGUgKGwgPCByLTEpIHsgLy8gYWx3YXlzIHRhYmxlW2xdIDw9IHZhbCA8IHRhYmxlW3JdXG4gICAgICAgIHZhciBtaWQgPSBsICsgTWF0aC5mbG9vcigoci1sKzEpLzIpO1xuICAgICAgICBpZiAodGFibGVbbWlkXSA8PSB2YWwpXG4gICAgICAgICAgICBsID0gbWlkO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByID0gbWlkO1xuICAgIH1cbiAgICByZXR1cm4gbDtcbn1cblxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIERlc2NyaXB0aW9uIG9mIHN1cHBvcnRlZCBkb3VibGUgYnl0ZSBlbmNvZGluZ3MgYW5kIGFsaWFzZXMuXG4vLyBUYWJsZXMgYXJlIG5vdCByZXF1aXJlKCktZCB1bnRpbCB0aGV5IGFyZSBuZWVkZWQgdG8gc3BlZWQgdXAgbGlicmFyeSBsb2FkLlxuLy8gcmVxdWlyZSgpLXMgYXJlIGRpcmVjdCB0byBzdXBwb3J0IEJyb3dzZXJpZnkuXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFxuICAgIC8vID09IEphcGFuZXNlL1NoaWZ0SklTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBBbGwgamFwYW5lc2UgZW5jb2RpbmdzIGFyZSBiYXNlZCBvbiBKSVMgWCBzZXQgb2Ygc3RhbmRhcmRzOlxuICAgIC8vIEpJUyBYIDAyMDEgLSBTaW5nbGUtYnl0ZSBlbmNvZGluZyBvZiBBU0NJSSArIMKlICsgS2FuYSBjaGFycyBhdCAweEExLTB4REYuXG4gICAgLy8gSklTIFggMDIwOCAtIE1haW4gc2V0IG9mIDY4NzkgY2hhcmFjdGVycywgcGxhY2VkIGluIDk0eDk0IHBsYW5lLCB0byBiZSBlbmNvZGVkIGJ5IDIgYnl0ZXMuIFxuICAgIC8vICAgICAgICAgICAgICBIYXMgc2V2ZXJhbCB2YXJpYXRpb25zIGluIDE5NzgsIDE5ODMsIDE5OTAgYW5kIDE5OTcuXG4gICAgLy8gSklTIFggMDIxMiAtIFN1cHBsZW1lbnRhcnkgcGxhbmUgb2YgNjA2NyBjaGFycyBpbiA5NHg5NCBwbGFuZS4gMTk5MC4gRWZmZWN0aXZlbHkgZGVhZC5cbiAgICAvLyBKSVMgWCAwMjEzIC0gRXh0ZW5zaW9uIGFuZCBtb2Rlcm4gcmVwbGFjZW1lbnQgb2YgMDIwOCBhbmQgMDIxMi4gVG90YWwgY2hhcnM6IDExMjMzLlxuICAgIC8vICAgICAgICAgICAgICAyIHBsYW5lcywgZmlyc3QgaXMgc3VwZXJzZXQgb2YgMDIwOCwgc2Vjb25kIC0gcmV2aXNlZCAwMjEyLlxuICAgIC8vICAgICAgICAgICAgICBJbnRyb2R1Y2VkIGluIDIwMDAsIHJldmlzZWQgMjAwNC4gU29tZSBjaGFyYWN0ZXJzIGFyZSBpbiBVbmljb2RlIFBsYW5lIDIgKDB4Mnh4eHgpXG5cbiAgICAvLyBCeXRlIGVuY29kaW5ncyBhcmU6XG4gICAgLy8gICogU2hpZnRfSklTOiBDb21wYXRpYmxlIHdpdGggMDIwMSwgdXNlcyBub3QgZGVmaW5lZCBjaGFycyBpbiB0b3AgaGFsZiBhcyBsZWFkIGJ5dGVzIGZvciBkb3VibGUtYnl0ZVxuICAgIC8vICAgICAgICAgICAgICAgZW5jb2Rpbmcgb2YgMDIwOC4gTGVhZCBieXRlIHJhbmdlczogMHg4MS0weDlGLCAweEUwLTB4RUY7IFRyYWlsIGJ5dGUgcmFuZ2VzOiAweDQwLTB4N0UsIDB4ODAtMHg5RSwgMHg5Ri0weEZDLlxuICAgIC8vICAgICAgICAgICAgICAgV2luZG93cyBDUDkzMiBpcyBhIHN1cGVyc2V0IG9mIFNoaWZ0X0pJUy4gU29tZSBjb21wYW5pZXMgYWRkZWQgbW9yZSBjaGFycywgbm90YWJseSBLRERJLlxuICAgIC8vICAqIEVVQy1KUDogICAgVXAgdG8gMyBieXRlcyBwZXIgY2hhcmFjdGVyLiBVc2VkIG1vc3RseSBvbiAqbml4ZXMuXG4gICAgLy8gICAgICAgICAgICAgICAweDAwLTB4N0YgICAgICAgLSBsb3dlciBwYXJ0IG9mIDAyMDFcbiAgICAvLyAgICAgICAgICAgICAgIDB4OEUsIDB4QTEtMHhERiAtIHVwcGVyIHBhcnQgb2YgMDIwMVxuICAgIC8vICAgICAgICAgICAgICAgKDB4QTEtMHhGRSl4MiAgIC0gMDIwOCBwbGFuZSAoOTR4OTQpLlxuICAgIC8vICAgICAgICAgICAgICAgMHg4RiwgKDB4QTEtMHhGRSl4MiAtIDAyMTIgcGxhbmUgKDk0eDk0KS5cbiAgICAvLyAgKiBKSVMgWCAyMDg6IDctYml0LCBkaXJlY3QgZW5jb2Rpbmcgb2YgMDIwOC4gQnl0ZSByYW5nZXM6IDB4MjEtMHg3RSAoOTQgdmFsdWVzKS4gVW5jb21tb24uXG4gICAgLy8gICAgICAgICAgICAgICBVc2VkIGFzLWlzIGluIElTTzIwMjIgZmFtaWx5LlxuICAgIC8vICAqIElTTzIwMjItSlA6IFN0YXRlZnVsIGVuY29kaW5nLCB3aXRoIGVzY2FwZSBzZXF1ZW5jZXMgdG8gc3dpdGNoIGJldHdlZW4gQVNDSUksIFxuICAgIC8vICAgICAgICAgICAgICAgIDAyMDEtMTk3NiBSb21hbiwgMDIwOC0xOTc4LCAwMjA4LTE5ODMuXG4gICAgLy8gICogSVNPMjAyMi1KUC0xOiBBZGRzIGVzYyBzZXEgZm9yIDAyMTItMTk5MC5cbiAgICAvLyAgKiBJU08yMDIyLUpQLTI6IEFkZHMgZXNjIHNlcSBmb3IgR0IyMzEzLTE5ODAsIEtTWDEwMDEtMTk5MiwgSVNPODg1OS0xLCBJU084ODU5LTcuXG4gICAgLy8gICogSVNPMjAyMi1KUC0zOiBBZGRzIGVzYyBzZXEgZm9yIDAyMDEtMTk3NiBLYW5hIHNldCwgMDIxMy0yMDAwIFBsYW5lcyAxLCAyLlxuICAgIC8vICAqIElTTzIwMjItSlAtMjAwNDogQWRkcyAwMjEzLTIwMDQgUGxhbmUgMS5cbiAgICAvL1xuICAgIC8vIEFmdGVyIEpJUyBYIDAyMTMgYXBwZWFyZWQsIFNoaWZ0X0pJUy0yMDA0LCBFVUMtSklTWDAyMTMgYW5kIElTTzIwMjItSlAtMjAwNCBmb2xsb3dlZCwgd2l0aCBqdXN0IGNoYW5naW5nIHRoZSBwbGFuZXMuXG4gICAgLy9cbiAgICAvLyBPdmVyYWxsLCBpdCBzZWVtcyB0aGF0IGl0J3MgYSBtZXNzIDooIGh0dHA6Ly93d3c4LnBsYWxhLm9yLmpwL3RrdWJvdGExL3VuaWNvZGUtc3ltYm9scy1tYXAyLmh0bWxcblxuICAgICdzaGlmdGppcyc6IHtcbiAgICAgICAgdHlwZTogJ19kYmNzJyxcbiAgICAgICAgdGFibGU6IGZ1bmN0aW9uKCkgeyByZXR1cm4gcmVxdWlyZSgnLi90YWJsZXMvc2hpZnRqaXMuanNvbicpIH0sXG4gICAgICAgIGVuY29kZUFkZDogeydcXHUwMGE1JzogMHg1QywgJ1xcdTIwM0UnOiAweDdFfSxcbiAgICAgICAgZW5jb2RlU2tpcFZhbHM6IFt7ZnJvbTogMHhFRDQwLCB0bzogMHhGOTQwfV0sXG4gICAgfSxcbiAgICAnY3NzaGlmdGppcyc6ICdzaGlmdGppcycsXG4gICAgJ21za2FuamknOiAnc2hpZnRqaXMnLFxuICAgICdzamlzJzogJ3NoaWZ0amlzJyxcbiAgICAnd2luZG93czMxaic6ICdzaGlmdGppcycsXG4gICAgJ21zMzFqJzogJ3NoaWZ0amlzJyxcbiAgICAneHNqaXMnOiAnc2hpZnRqaXMnLFxuICAgICd3aW5kb3dzOTMyJzogJ3NoaWZ0amlzJyxcbiAgICAnbXM5MzInOiAnc2hpZnRqaXMnLFxuICAgICc5MzInOiAnc2hpZnRqaXMnLFxuICAgICdjcDkzMic6ICdzaGlmdGppcycsXG5cbiAgICAnZXVjanAnOiB7XG4gICAgICAgIHR5cGU6ICdfZGJjcycsXG4gICAgICAgIHRhYmxlOiBmdW5jdGlvbigpIHsgcmV0dXJuIHJlcXVpcmUoJy4vdGFibGVzL2V1Y2pwLmpzb24nKSB9LFxuICAgICAgICBlbmNvZGVBZGQ6IHsnXFx1MDBhNSc6IDB4NUMsICdcXHUyMDNFJzogMHg3RX0sXG4gICAgfSxcblxuICAgIC8vIFRPRE86IEtEREkgZXh0ZW5zaW9uIHRvIFNoaWZ0X0pJU1xuICAgIC8vIFRPRE86IElCTSBDQ1NJRCA5NDIgPSBDUDkzMiwgYnV0IEYwLUY5IGN1c3RvbSBjaGFycyBhbmQgb3RoZXIgY2hhciBjaGFuZ2VzLlxuICAgIC8vIFRPRE86IElCTSBDQ1NJRCA5NDMgPSBTaGlmdF9KSVMgPSBDUDkzMiB3aXRoIG9yaWdpbmFsIFNoaWZ0X0pJUyBsb3dlciAxMjggY2hhcnMuXG5cblxuICAgIC8vID09IENoaW5lc2UvR0JLID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0dCS1xuICAgIC8vIFdlIG1vc3RseSBpbXBsZW1lbnQgVzNDIHJlY29tbWVuZGF0aW9uOiBodHRwczovL3d3dy53My5vcmcvVFIvZW5jb2RpbmcvI2diay1lbmNvZGVyXG5cbiAgICAvLyBPbGRlc3QgR0IyMzEyICgxOTgxLCB+NzYwMCBjaGFycykgaXMgYSBzdWJzZXQgb2YgQ1A5MzZcbiAgICAnZ2IyMzEyJzogJ2NwOTM2JyxcbiAgICAnZ2IyMzEyODAnOiAnY3A5MzYnLFxuICAgICdnYjIzMTIxOTgwJzogJ2NwOTM2JyxcbiAgICAnY3NnYjIzMTInOiAnY3A5MzYnLFxuICAgICdjc2lzbzU4Z2IyMzEyODAnOiAnY3A5MzYnLFxuICAgICdldWNjbic6ICdjcDkzNicsXG5cbiAgICAvLyBNaWNyb3NvZnQncyBDUDkzNiBpcyBhIHN1YnNldCBhbmQgYXBwcm94aW1hdGlvbiBvZiBHQksuXG4gICAgJ3dpbmRvd3M5MzYnOiAnY3A5MzYnLFxuICAgICdtczkzNic6ICdjcDkzNicsXG4gICAgJzkzNic6ICdjcDkzNicsXG4gICAgJ2NwOTM2Jzoge1xuICAgICAgICB0eXBlOiAnX2RiY3MnLFxuICAgICAgICB0YWJsZTogZnVuY3Rpb24oKSB7IHJldHVybiByZXF1aXJlKCcuL3RhYmxlcy9jcDkzNi5qc29uJykgfSxcbiAgICB9LFxuXG4gICAgLy8gR0JLICh+MjIwMDAgY2hhcnMpIGlzIGFuIGV4dGVuc2lvbiBvZiBDUDkzNiB0aGF0IGFkZGVkIHVzZXItbWFwcGVkIGNoYXJzIGFuZCBzb21lIG90aGVyLlxuICAgICdnYmsnOiB7XG4gICAgICAgIHR5cGU6ICdfZGJjcycsXG4gICAgICAgIHRhYmxlOiBmdW5jdGlvbigpIHsgcmV0dXJuIHJlcXVpcmUoJy4vdGFibGVzL2NwOTM2Lmpzb24nKS5jb25jYXQocmVxdWlyZSgnLi90YWJsZXMvZ2JrLWFkZGVkLmpzb24nKSkgfSxcbiAgICB9LFxuICAgICd4Z2JrJzogJ2diaycsXG4gICAgJ2lzb2lyNTgnOiAnZ2JrJyxcblxuICAgIC8vIEdCMTgwMzAgaXMgYW4gYWxnb3JpdGhtaWMgZXh0ZW5zaW9uIG9mIEdCSy5cbiAgICAvLyBNYWluIHNvdXJjZTogaHR0cHM6Ly93d3cudzMub3JnL1RSL2VuY29kaW5nLyNnYmstZW5jb2RlclxuICAgIC8vIGh0dHA6Ly9pY3UtcHJvamVjdC5vcmcvZG9jcy9wYXBlcnMvZ2IxODAzMC5odG1sXG4gICAgLy8gaHR0cDovL3NvdXJjZS5pY3UtcHJvamVjdC5vcmcvcmVwb3MvaWN1L2RhdGEvdHJ1bmsvY2hhcnNldC9kYXRhL3htbC9nYi0xODAzMC0yMDAwLnhtbFxuICAgIC8vIGh0dHA6Ly93d3cua2huZ2FpLmNvbS9jaGluZXNlL2NoYXJtYXAvdGJsZ2JrLnBocD9wYWdlPTBcbiAgICAnZ2IxODAzMCc6IHtcbiAgICAgICAgdHlwZTogJ19kYmNzJyxcbiAgICAgICAgdGFibGU6IGZ1bmN0aW9uKCkgeyByZXR1cm4gcmVxdWlyZSgnLi90YWJsZXMvY3A5MzYuanNvbicpLmNvbmNhdChyZXF1aXJlKCcuL3RhYmxlcy9nYmstYWRkZWQuanNvbicpKSB9LFxuICAgICAgICBnYjE4MDMwOiBmdW5jdGlvbigpIHsgcmV0dXJuIHJlcXVpcmUoJy4vdGFibGVzL2diMTgwMzAtcmFuZ2VzLmpzb24nKSB9LFxuICAgICAgICBlbmNvZGVTa2lwVmFsczogWzB4ODBdLFxuICAgICAgICBlbmNvZGVBZGQ6IHsn4oKsJzogMHhBMkUzfSxcbiAgICB9LFxuXG4gICAgJ2NoaW5lc2UnOiAnZ2IxODAzMCcsXG5cblxuICAgIC8vID09IEtvcmVhbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBFVUMtS1IsIEtTX0NfNTYwMSBhbmQgS1MgWCAxMDAxIGFyZSBleGFjdGx5IHRoZSBzYW1lLlxuICAgICd3aW5kb3dzOTQ5JzogJ2NwOTQ5JyxcbiAgICAnbXM5NDknOiAnY3A5NDknLFxuICAgICc5NDknOiAnY3A5NDknLFxuICAgICdjcDk0OSc6IHtcbiAgICAgICAgdHlwZTogJ19kYmNzJyxcbiAgICAgICAgdGFibGU6IGZ1bmN0aW9uKCkgeyByZXR1cm4gcmVxdWlyZSgnLi90YWJsZXMvY3A5NDkuanNvbicpIH0sXG4gICAgfSxcblxuICAgICdjc2V1Y2tyJzogJ2NwOTQ5JyxcbiAgICAnY3Nrc2M1NjAxMTk4Nyc6ICdjcDk0OScsXG4gICAgJ2V1Y2tyJzogJ2NwOTQ5JyxcbiAgICAnaXNvaXIxNDknOiAnY3A5NDknLFxuICAgICdrb3JlYW4nOiAnY3A5NDknLFxuICAgICdrc2M1NjAxMTk4Nyc6ICdjcDk0OScsXG4gICAgJ2tzYzU2MDExOTg5JzogJ2NwOTQ5JyxcbiAgICAna3NjNTYwMSc6ICdjcDk0OScsXG5cblxuICAgIC8vID09IEJpZzUvVGFpd2FuL0hvbmcgS29uZyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBUaGVyZSBhcmUgbG90cyBvZiB0YWJsZXMgZm9yIEJpZzUgYW5kIGNwOTUwLiBQbGVhc2Ugc2VlIHRoZSBmb2xsb3dpbmcgbGlua3MgZm9yIGhpc3Rvcnk6XG4gICAgLy8gaHR0cDovL21venR3Lm9yZy9kb2NzL2JpZzUvICBodHRwOi8vd3d3LmhhaWJsZS5kZS9icnVuby9jaGFyc2V0cy9jb252ZXJzaW9uLXRhYmxlcy9CaWc1Lmh0bWxcbiAgICAvLyBWYXJpYXRpb25zLCBpbiByb3VnaGx5IG51bWJlciBvZiBkZWZpbmVkIGNoYXJzOlxuICAgIC8vICAqIFdpbmRvd3MgQ1AgOTUwOiBNaWNyb3NvZnQgdmFyaWFudCBvZiBCaWc1LiBDYW5vbmljYWw6IGh0dHA6Ly93d3cudW5pY29kZS5vcmcvUHVibGljL01BUFBJTkdTL1ZFTkRPUlMvTUlDU0ZUL1dJTkRPV1MvQ1A5NTAuVFhUXG4gICAgLy8gICogV2luZG93cyBDUCA5NTE6IE1pY3Jvc29mdCB2YXJpYW50IG9mIEJpZzUtSEtTQ1MtMjAwMS4gU2VlbXMgdG8gYmUgbmV2ZXIgcHVibGljLiBodHRwOi8vbWUuYWJlbGNoZXVuZy5vcmcvYXJ0aWNsZXMvcmVzZWFyY2gvd2hhdC1pcy1jcDk1MS9cbiAgICAvLyAgKiBCaWc1LTIwMDMgKFRhaXdhbiBzdGFuZGFyZCkgYWxtb3N0IHN1cGVyc2V0IG9mIGNwOTUwLlxuICAgIC8vICAqIFVuaWNvZGUtYXQtb24gKFVBTykgLyBNb3ppbGxhIDEuOC4gRmFsbGluZyBvdXQgb2YgdXNlIG9uIHRoZSBXZWIuIE5vdCBzdXBwb3J0ZWQgYnkgb3RoZXIgYnJvd3NlcnMuXG4gICAgLy8gICogQmlnNS1IS1NDUyAoLTIwMDEsIC0yMDA0LCAtMjAwOCkuIEhvbmcgS29uZyBzdGFuZGFyZC4gXG4gICAgLy8gICAgbWFueSB1bmljb2RlIGNvZGUgcG9pbnRzIG1vdmVkIGZyb20gUFVBIHRvIFN1cHBsZW1lbnRhcnkgcGxhbmUgKFUrMlhYWFgpIG92ZXIgdGhlIHllYXJzLlxuICAgIC8vICAgIFBsdXMsIGl0IGhhcyA0IGNvbWJpbmluZyBzZXF1ZW5jZXMuXG4gICAgLy8gICAgU2VlbXMgdGhhdCBNb3ppbGxhIHJlZnVzZWQgdG8gc3VwcG9ydCBpdCBmb3IgMTAgeXJzLiBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD0xNjI0MzEgaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MzEwMjk5XG4gICAgLy8gICAgYmVjYXVzZSBiaWc1LWhrc2NzIGlzIHRoZSBvbmx5IGVuY29kaW5nIHRvIGluY2x1ZGUgYXN0cmFsIGNoYXJhY3RlcnMgaW4gbm9uLWFsZ29yaXRobWljIHdheS5cbiAgICAvLyAgICBJbXBsZW1lbnRhdGlvbnMgYXJlIG5vdCBjb25zaXN0ZW50IHdpdGhpbiBicm93c2Vyczsgc29tZXRpbWVzIGxhYmVsZWQgYXMganVzdCBiaWc1LlxuICAgIC8vICAgIE1TIEludGVybmV0IEV4cGxvcmVyIHN3aXRjaGVzIGZyb20gYmlnNSB0byBiaWc1LWhrc2NzIHdoZW4gYSBwYXRjaCBhcHBsaWVkLlxuICAgIC8vICAgIEdyZWF0IGRpc2N1c3Npb24gJiByZWNhcCBvZiB3aGF0J3MgZ29pbmcgb24gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9OTEyNDcwI2MzMVxuICAgIC8vICAgIEluIHRoZSBlbmNvZGVyLCBpdCBtaWdodCBtYWtlIHNlbnNlIHRvIHN1cHBvcnQgZW5jb2Rpbmcgb2xkIFBVQSBtYXBwaW5ncyB0byBCaWc1IGJ5dGVzIHNlcS1zLlxuICAgIC8vICAgIE9mZmljaWFsIHNwZWM6IGh0dHA6Ly93d3cub2djaW8uZ292LmhrL2VuL2J1c2luZXNzL3RlY2hfcHJvbW90aW9uL2NjbGkvdGVybXMvZG9jLzIwMDNjbXBfMjAwOC50eHRcbiAgICAvLyAgICAgICAgICAgICAgICAgICBodHRwOi8vd3d3Lm9nY2lvLmdvdi5oay90Yy9idXNpbmVzcy90ZWNoX3Byb21vdGlvbi9jY2xpL3Rlcm1zL2RvYy9oa3Njcy0yMDA4LWJpZzUtaXNvLnR4dFxuICAgIC8vIFxuICAgIC8vIEN1cnJlbnQgdW5kZXJzdGFuZGluZyBvZiBob3cgdG8gZGVhbCB3aXRoIEJpZzUoLUhLU0NTKSBpcyBpbiB0aGUgRW5jb2RpbmcgU3RhbmRhcmQsIGh0dHA6Ly9lbmNvZGluZy5zcGVjLndoYXR3Zy5vcmcvI2JpZzUtZW5jb2RlclxuICAgIC8vIFVuaWNvZGUgbWFwcGluZyAoaHR0cDovL3d3dy51bmljb2RlLm9yZy9QdWJsaWMvTUFQUElOR1MvT0JTT0xFVEUvRUFTVEFTSUEvT1RIRVIvQklHNS5UWFQpIGlzIHNhaWQgdG8gYmUgd3JvbmcuXG5cbiAgICAnd2luZG93czk1MCc6ICdjcDk1MCcsXG4gICAgJ21zOTUwJzogJ2NwOTUwJyxcbiAgICAnOTUwJzogJ2NwOTUwJyxcbiAgICAnY3A5NTAnOiB7XG4gICAgICAgIHR5cGU6ICdfZGJjcycsXG4gICAgICAgIHRhYmxlOiBmdW5jdGlvbigpIHsgcmV0dXJuIHJlcXVpcmUoJy4vdGFibGVzL2NwOTUwLmpzb24nKSB9LFxuICAgIH0sXG5cbiAgICAvLyBCaWc1IGhhcyBtYW55IHZhcmlhdGlvbnMgYW5kIGlzIGFuIGV4dGVuc2lvbiBvZiBjcDk1MC4gV2UgdXNlIEVuY29kaW5nIFN0YW5kYXJkJ3MgYXMgYSBjb25zZW5zdXMuXG4gICAgJ2JpZzUnOiAnYmlnNWhrc2NzJyxcbiAgICAnYmlnNWhrc2NzJzoge1xuICAgICAgICB0eXBlOiAnX2RiY3MnLFxuICAgICAgICB0YWJsZTogZnVuY3Rpb24oKSB7IHJldHVybiByZXF1aXJlKCcuL3RhYmxlcy9jcDk1MC5qc29uJykuY29uY2F0KHJlcXVpcmUoJy4vdGFibGVzL2JpZzUtYWRkZWQuanNvbicpKSB9LFxuICAgICAgICBlbmNvZGVTa2lwVmFsczogWzB4YTJjY10sXG4gICAgfSxcblxuICAgICdjbmJpZzUnOiAnYmlnNWhrc2NzJyxcbiAgICAnY3NiaWc1JzogJ2JpZzVoa3NjcycsXG4gICAgJ3h4YmlnNSc6ICdiaWc1aGtzY3MnLFxufTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgQnVmZmVyID0gcmVxdWlyZShcImJ1ZmZlclwiKS5CdWZmZXIsXG4gICAgVHJhbnNmb3JtID0gcmVxdWlyZShcInN0cmVhbVwiKS5UcmFuc2Zvcm07XG5cblxuLy8gPT0gRXhwb3J0cyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaWNvbnYpIHtcbiAgICBcbiAgICAvLyBBZGRpdGlvbmFsIFB1YmxpYyBBUEkuXG4gICAgaWNvbnYuZW5jb2RlU3RyZWFtID0gZnVuY3Rpb24gZW5jb2RlU3RyZWFtKGVuY29kaW5nLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgSWNvbnZMaXRlRW5jb2RlclN0cmVhbShpY29udi5nZXRFbmNvZGVyKGVuY29kaW5nLCBvcHRpb25zKSwgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgaWNvbnYuZGVjb2RlU3RyZWFtID0gZnVuY3Rpb24gZGVjb2RlU3RyZWFtKGVuY29kaW5nLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgSWNvbnZMaXRlRGVjb2RlclN0cmVhbShpY29udi5nZXREZWNvZGVyKGVuY29kaW5nLCBvcHRpb25zKSwgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgaWNvbnYuc3VwcG9ydHNTdHJlYW1zID0gdHJ1ZTtcblxuXG4gICAgLy8gTm90IHB1Ymxpc2hlZCB5ZXQuXG4gICAgaWNvbnYuSWNvbnZMaXRlRW5jb2RlclN0cmVhbSA9IEljb252TGl0ZUVuY29kZXJTdHJlYW07XG4gICAgaWNvbnYuSWNvbnZMaXRlRGVjb2RlclN0cmVhbSA9IEljb252TGl0ZURlY29kZXJTdHJlYW07XG4gICAgaWNvbnYuX2NvbGxlY3QgPSBJY29udkxpdGVEZWNvZGVyU3RyZWFtLnByb3RvdHlwZS5jb2xsZWN0O1xufTtcblxuXG4vLyA9PSBFbmNvZGVyIHN0cmVhbSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5mdW5jdGlvbiBJY29udkxpdGVFbmNvZGVyU3RyZWFtKGNvbnYsIG9wdGlvbnMpIHtcbiAgICB0aGlzLmNvbnYgPSBjb252O1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIG9wdGlvbnMuZGVjb2RlU3RyaW5ncyA9IGZhbHNlOyAvLyBXZSBhY2NlcHQgb25seSBzdHJpbmdzLCBzbyB3ZSBkb24ndCBuZWVkIHRvIGRlY29kZSB0aGVtLlxuICAgIFRyYW5zZm9ybS5jYWxsKHRoaXMsIG9wdGlvbnMpO1xufVxuXG5JY29udkxpdGVFbmNvZGVyU3RyZWFtLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoVHJhbnNmb3JtLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBJY29udkxpdGVFbmNvZGVyU3RyZWFtIH1cbn0pO1xuXG5JY29udkxpdGVFbmNvZGVyU3RyZWFtLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24oY2h1bmssIGVuY29kaW5nLCBkb25lKSB7XG4gICAgaWYgKHR5cGVvZiBjaHVuayAhPSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuIGRvbmUobmV3IEVycm9yKFwiSWNvbnYgZW5jb2Rpbmcgc3RyZWFtIG5lZWRzIHN0cmluZ3MgYXMgaXRzIGlucHV0LlwiKSk7XG4gICAgdHJ5IHtcbiAgICAgICAgdmFyIHJlcyA9IHRoaXMuY29udi53cml0ZShjaHVuayk7XG4gICAgICAgIGlmIChyZXMgJiYgcmVzLmxlbmd0aCkgdGhpcy5wdXNoKHJlcyk7XG4gICAgICAgIGRvbmUoKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgZG9uZShlKTtcbiAgICB9XG59XG5cbkljb252TGl0ZUVuY29kZXJTdHJlYW0ucHJvdG90eXBlLl9mbHVzaCA9IGZ1bmN0aW9uKGRvbmUpIHtcbiAgICB0cnkge1xuICAgICAgICB2YXIgcmVzID0gdGhpcy5jb252LmVuZCgpO1xuICAgICAgICBpZiAocmVzICYmIHJlcy5sZW5ndGgpIHRoaXMucHVzaChyZXMpO1xuICAgICAgICBkb25lKCk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGRvbmUoZSk7XG4gICAgfVxufVxuXG5JY29udkxpdGVFbmNvZGVyU3RyZWFtLnByb3RvdHlwZS5jb2xsZWN0ID0gZnVuY3Rpb24oY2IpIHtcbiAgICB2YXIgY2h1bmtzID0gW107XG4gICAgdGhpcy5vbignZXJyb3InLCBjYik7XG4gICAgdGhpcy5vbignZGF0YScsIGZ1bmN0aW9uKGNodW5rKSB7IGNodW5rcy5wdXNoKGNodW5rKTsgfSk7XG4gICAgdGhpcy5vbignZW5kJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGNiKG51bGwsIEJ1ZmZlci5jb25jYXQoY2h1bmtzKSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXM7XG59XG5cblxuLy8gPT0gRGVjb2RlciBzdHJlYW0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuZnVuY3Rpb24gSWNvbnZMaXRlRGVjb2RlclN0cmVhbShjb252LCBvcHRpb25zKSB7XG4gICAgdGhpcy5jb252ID0gY29udjtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICBvcHRpb25zLmVuY29kaW5nID0gdGhpcy5lbmNvZGluZyA9ICd1dGY4JzsgLy8gV2Ugb3V0cHV0IHN0cmluZ3MuXG4gICAgVHJhbnNmb3JtLmNhbGwodGhpcywgb3B0aW9ucyk7XG59XG5cbkljb252TGl0ZURlY29kZXJTdHJlYW0ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShUcmFuc2Zvcm0ucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHsgdmFsdWU6IEljb252TGl0ZURlY29kZXJTdHJlYW0gfVxufSk7XG5cbkljb252TGl0ZURlY29kZXJTdHJlYW0ucHJvdG90eXBlLl90cmFuc2Zvcm0gPSBmdW5jdGlvbihjaHVuaywgZW5jb2RpbmcsIGRvbmUpIHtcbiAgICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihjaHVuaykpXG4gICAgICAgIHJldHVybiBkb25lKG5ldyBFcnJvcihcIkljb252IGRlY29kaW5nIHN0cmVhbSBuZWVkcyBidWZmZXJzIGFzIGl0cyBpbnB1dC5cIikpO1xuICAgIHRyeSB7XG4gICAgICAgIHZhciByZXMgPSB0aGlzLmNvbnYud3JpdGUoY2h1bmspO1xuICAgICAgICBpZiAocmVzICYmIHJlcy5sZW5ndGgpIHRoaXMucHVzaChyZXMsIHRoaXMuZW5jb2RpbmcpO1xuICAgICAgICBkb25lKCk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGRvbmUoZSk7XG4gICAgfVxufVxuXG5JY29udkxpdGVEZWNvZGVyU3RyZWFtLnByb3RvdHlwZS5fZmx1c2ggPSBmdW5jdGlvbihkb25lKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgdmFyIHJlcyA9IHRoaXMuY29udi5lbmQoKTtcbiAgICAgICAgaWYgKHJlcyAmJiByZXMubGVuZ3RoKSB0aGlzLnB1c2gocmVzLCB0aGlzLmVuY29kaW5nKTsgICAgICAgICAgICAgICAgXG4gICAgICAgIGRvbmUoKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgZG9uZShlKTtcbiAgICB9XG59XG5cbkljb252TGl0ZURlY29kZXJTdHJlYW0ucHJvdG90eXBlLmNvbGxlY3QgPSBmdW5jdGlvbihjYikge1xuICAgIHZhciByZXMgPSAnJztcbiAgICB0aGlzLm9uKCdlcnJvcicsIGNiKTtcbiAgICB0aGlzLm9uKCdkYXRhJywgZnVuY3Rpb24oY2h1bmspIHsgcmVzICs9IGNodW5rOyB9KTtcbiAgICB0aGlzLm9uKCdlbmQnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgY2IobnVsbCwgcmVzKTtcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcztcbn1cblxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgQnVmZmVyID0gcmVxdWlyZShcImJ1ZmZlclwiKS5CdWZmZXI7XG4vLyBOb3RlOiBub3QgcG9seWZpbGxlZCB3aXRoIHNhZmVyLWJ1ZmZlciBvbiBhIHB1cnBvc2UsIGFzIG92ZXJyaWRlcyBCdWZmZXJcblxuLy8gPT0gRXh0ZW5kIE5vZGUgcHJpbWl0aXZlcyB0byB1c2UgaWNvbnYtbGl0ZSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaWNvbnYpIHtcbiAgICB2YXIgb3JpZ2luYWwgPSB1bmRlZmluZWQ7IC8vIFBsYWNlIHRvIGtlZXAgb3JpZ2luYWwgbWV0aG9kcy5cblxuICAgIC8vIE5vZGUgYXV0aG9ycyByZXdyb3RlIEJ1ZmZlciBpbnRlcm5hbHMgdG8gbWFrZSBpdCBjb21wYXRpYmxlIHdpdGhcbiAgICAvLyBVaW50OEFycmF5IGFuZCB3ZSBjYW5ub3QgcGF0Y2gga2V5IGZ1bmN0aW9ucyBzaW5jZSB0aGVuLlxuICAgIC8vIE5vdGU6IHRoaXMgZG9lcyB1c2Ugb2xkZXIgQnVmZmVyIEFQSSBvbiBhIHB1cnBvc2VcbiAgICBpY29udi5zdXBwb3J0c05vZGVFbmNvZGluZ3NFeHRlbnNpb24gPSAhKEJ1ZmZlci5mcm9tIHx8IG5ldyBCdWZmZXIoMCkgaW5zdGFuY2VvZiBVaW50OEFycmF5KTtcblxuICAgIGljb252LmV4dGVuZE5vZGVFbmNvZGluZ3MgPSBmdW5jdGlvbiBleHRlbmROb2RlRW5jb2RpbmdzKCkge1xuICAgICAgICBpZiAob3JpZ2luYWwpIHJldHVybjtcbiAgICAgICAgb3JpZ2luYWwgPSB7fTtcblxuICAgICAgICBpZiAoIWljb252LnN1cHBvcnRzTm9kZUVuY29kaW5nc0V4dGVuc2lvbikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkFDVElPTiBORUVERUQ6IHJlcXVpcmUoJ2ljb252LWxpdGUnKS5leHRlbmROb2RlRW5jb2RpbmdzKCkgaXMgbm90IHN1cHBvcnRlZCBpbiB5b3VyIHZlcnNpb24gb2YgTm9kZVwiKTtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJTZWUgbW9yZSBpbmZvIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9hc2h0dWNoa2luL2ljb252LWxpdGUvd2lraS9Ob2RlLXY0LWNvbXBhdGliaWxpdHlcIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgbm9kZU5hdGl2ZUVuY29kaW5ncyA9IHtcbiAgICAgICAgICAgICdoZXgnOiB0cnVlLCAndXRmOCc6IHRydWUsICd1dGYtOCc6IHRydWUsICdhc2NpaSc6IHRydWUsICdiaW5hcnknOiB0cnVlLCBcbiAgICAgICAgICAgICdiYXNlNjQnOiB0cnVlLCAndWNzMic6IHRydWUsICd1Y3MtMic6IHRydWUsICd1dGYxNmxlJzogdHJ1ZSwgJ3V0Zi0xNmxlJzogdHJ1ZSxcbiAgICAgICAgfTtcblxuICAgICAgICBCdWZmZXIuaXNOYXRpdmVFbmNvZGluZyA9IGZ1bmN0aW9uKGVuYykge1xuICAgICAgICAgICAgcmV0dXJuIGVuYyAmJiBub2RlTmF0aXZlRW5jb2RpbmdzW2VuYy50b0xvd2VyQ2FzZSgpXTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIC0tIFNsb3dCdWZmZXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgdmFyIFNsb3dCdWZmZXIgPSByZXF1aXJlKCdidWZmZXInKS5TbG93QnVmZmVyO1xuXG4gICAgICAgIG9yaWdpbmFsLlNsb3dCdWZmZXJUb1N0cmluZyA9IFNsb3dCdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nO1xuICAgICAgICBTbG93QnVmZmVyLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKGVuY29kaW5nLCBzdGFydCwgZW5kKSB7XG4gICAgICAgICAgICBlbmNvZGluZyA9IFN0cmluZyhlbmNvZGluZyB8fCAndXRmOCcpLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgICAgIC8vIFVzZSBuYXRpdmUgY29udmVyc2lvbiB3aGVuIHBvc3NpYmxlXG4gICAgICAgICAgICBpZiAoQnVmZmVyLmlzTmF0aXZlRW5jb2RpbmcoZW5jb2RpbmcpKVxuICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbC5TbG93QnVmZmVyVG9TdHJpbmcuY2FsbCh0aGlzLCBlbmNvZGluZywgc3RhcnQsIGVuZCk7XG5cbiAgICAgICAgICAgIC8vIE90aGVyd2lzZSwgdXNlIG91ciBkZWNvZGluZyBtZXRob2QuXG4gICAgICAgICAgICBpZiAodHlwZW9mIHN0YXJ0ID09ICd1bmRlZmluZWQnKSBzdGFydCA9IDA7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGVuZCA9PSAndW5kZWZpbmVkJykgZW5kID0gdGhpcy5sZW5ndGg7XG4gICAgICAgICAgICByZXR1cm4gaWNvbnYuZGVjb2RlKHRoaXMuc2xpY2Uoc3RhcnQsIGVuZCksIGVuY29kaW5nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIG9yaWdpbmFsLlNsb3dCdWZmZXJXcml0ZSA9IFNsb3dCdWZmZXIucHJvdG90eXBlLndyaXRlO1xuICAgICAgICBTbG93QnVmZmVyLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uKHN0cmluZywgb2Zmc2V0LCBsZW5ndGgsIGVuY29kaW5nKSB7XG4gICAgICAgICAgICAvLyBTdXBwb3J0IGJvdGggKHN0cmluZywgb2Zmc2V0LCBsZW5ndGgsIGVuY29kaW5nKVxuICAgICAgICAgICAgLy8gYW5kIHRoZSBsZWdhY3kgKHN0cmluZywgZW5jb2RpbmcsIG9mZnNldCwgbGVuZ3RoKVxuICAgICAgICAgICAgaWYgKGlzRmluaXRlKG9mZnNldCkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWlzRmluaXRlKGxlbmd0aCkpIHtcbiAgICAgICAgICAgICAgICAgICAgZW5jb2RpbmcgPSBsZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgeyAgLy8gbGVnYWN5XG4gICAgICAgICAgICAgICAgdmFyIHN3YXAgPSBlbmNvZGluZztcbiAgICAgICAgICAgICAgICBlbmNvZGluZyA9IG9mZnNldDtcbiAgICAgICAgICAgICAgICBvZmZzZXQgPSBsZW5ndGg7XG4gICAgICAgICAgICAgICAgbGVuZ3RoID0gc3dhcDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgb2Zmc2V0ID0gK29mZnNldCB8fCAwO1xuICAgICAgICAgICAgdmFyIHJlbWFpbmluZyA9IHRoaXMubGVuZ3RoIC0gb2Zmc2V0O1xuICAgICAgICAgICAgaWYgKCFsZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBsZW5ndGggPSByZW1haW5pbmc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxlbmd0aCA9ICtsZW5ndGg7XG4gICAgICAgICAgICAgICAgaWYgKGxlbmd0aCA+IHJlbWFpbmluZykge1xuICAgICAgICAgICAgICAgICAgICBsZW5ndGggPSByZW1haW5pbmc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZW5jb2RpbmcgPSBTdHJpbmcoZW5jb2RpbmcgfHwgJ3V0ZjgnKS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICAgICAgICAvLyBVc2UgbmF0aXZlIGNvbnZlcnNpb24gd2hlbiBwb3NzaWJsZVxuICAgICAgICAgICAgaWYgKEJ1ZmZlci5pc05hdGl2ZUVuY29kaW5nKGVuY29kaW5nKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gb3JpZ2luYWwuU2xvd0J1ZmZlcldyaXRlLmNhbGwodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCwgZW5jb2RpbmcpO1xuXG4gICAgICAgICAgICBpZiAoc3RyaW5nLmxlbmd0aCA+IDAgJiYgKGxlbmd0aCA8IDAgfHwgb2Zmc2V0IDwgMCkpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ2F0dGVtcHQgdG8gd3JpdGUgYmV5b25kIGJ1ZmZlciBib3VuZHMnKTtcblxuICAgICAgICAgICAgLy8gT3RoZXJ3aXNlLCB1c2Ugb3VyIGVuY29kaW5nIG1ldGhvZC5cbiAgICAgICAgICAgIHZhciBidWYgPSBpY29udi5lbmNvZGUoc3RyaW5nLCBlbmNvZGluZyk7XG4gICAgICAgICAgICBpZiAoYnVmLmxlbmd0aCA8IGxlbmd0aCkgbGVuZ3RoID0gYnVmLmxlbmd0aDtcbiAgICAgICAgICAgIGJ1Zi5jb3B5KHRoaXMsIG9mZnNldCwgMCwgbGVuZ3RoKTtcbiAgICAgICAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgICAgIH1cblxuICAgICAgICAvLyAtLSBCdWZmZXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgICAgICAgb3JpZ2luYWwuQnVmZmVySXNFbmNvZGluZyA9IEJ1ZmZlci5pc0VuY29kaW5nO1xuICAgICAgICBCdWZmZXIuaXNFbmNvZGluZyA9IGZ1bmN0aW9uKGVuY29kaW5nKSB7XG4gICAgICAgICAgICByZXR1cm4gQnVmZmVyLmlzTmF0aXZlRW5jb2RpbmcoZW5jb2RpbmcpIHx8IGljb252LmVuY29kaW5nRXhpc3RzKGVuY29kaW5nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIG9yaWdpbmFsLkJ1ZmZlckJ5dGVMZW5ndGggPSBCdWZmZXIuYnl0ZUxlbmd0aDtcbiAgICAgICAgQnVmZmVyLmJ5dGVMZW5ndGggPSBTbG93QnVmZmVyLmJ5dGVMZW5ndGggPSBmdW5jdGlvbihzdHIsIGVuY29kaW5nKSB7XG4gICAgICAgICAgICBlbmNvZGluZyA9IFN0cmluZyhlbmNvZGluZyB8fCAndXRmOCcpLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgICAgIC8vIFVzZSBuYXRpdmUgY29udmVyc2lvbiB3aGVuIHBvc3NpYmxlXG4gICAgICAgICAgICBpZiAoQnVmZmVyLmlzTmF0aXZlRW5jb2RpbmcoZW5jb2RpbmcpKVxuICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbC5CdWZmZXJCeXRlTGVuZ3RoLmNhbGwodGhpcywgc3RyLCBlbmNvZGluZyk7XG5cbiAgICAgICAgICAgIC8vIFNsb3csIEkga25vdywgYnV0IHdlIGRvbid0IGhhdmUgYSBiZXR0ZXIgd2F5IHlldC5cbiAgICAgICAgICAgIHJldHVybiBpY29udi5lbmNvZGUoc3RyLCBlbmNvZGluZykubGVuZ3RoO1xuICAgICAgICB9XG5cbiAgICAgICAgb3JpZ2luYWwuQnVmZmVyVG9TdHJpbmcgPSBCdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nO1xuICAgICAgICBCdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oZW5jb2RpbmcsIHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgICAgIGVuY29kaW5nID0gU3RyaW5nKGVuY29kaW5nIHx8ICd1dGY4JykudG9Mb3dlckNhc2UoKTtcblxuICAgICAgICAgICAgLy8gVXNlIG5hdGl2ZSBjb252ZXJzaW9uIHdoZW4gcG9zc2libGVcbiAgICAgICAgICAgIGlmIChCdWZmZXIuaXNOYXRpdmVFbmNvZGluZyhlbmNvZGluZykpXG4gICAgICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsLkJ1ZmZlclRvU3RyaW5nLmNhbGwodGhpcywgZW5jb2RpbmcsIHN0YXJ0LCBlbmQpO1xuXG4gICAgICAgICAgICAvLyBPdGhlcndpc2UsIHVzZSBvdXIgZGVjb2RpbmcgbWV0aG9kLlxuICAgICAgICAgICAgaWYgKHR5cGVvZiBzdGFydCA9PSAndW5kZWZpbmVkJykgc3RhcnQgPSAwO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBlbmQgPT0gJ3VuZGVmaW5lZCcpIGVuZCA9IHRoaXMubGVuZ3RoO1xuICAgICAgICAgICAgcmV0dXJuIGljb252LmRlY29kZSh0aGlzLnNsaWNlKHN0YXJ0LCBlbmQpLCBlbmNvZGluZyk7XG4gICAgICAgIH1cblxuICAgICAgICBvcmlnaW5hbC5CdWZmZXJXcml0ZSA9IEJ1ZmZlci5wcm90b3R5cGUud3JpdGU7XG4gICAgICAgIEJ1ZmZlci5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihzdHJpbmcsIG9mZnNldCwgbGVuZ3RoLCBlbmNvZGluZykge1xuICAgICAgICAgICAgdmFyIF9vZmZzZXQgPSBvZmZzZXQsIF9sZW5ndGggPSBsZW5ndGgsIF9lbmNvZGluZyA9IGVuY29kaW5nO1xuICAgICAgICAgICAgLy8gU3VwcG9ydCBib3RoIChzdHJpbmcsIG9mZnNldCwgbGVuZ3RoLCBlbmNvZGluZylcbiAgICAgICAgICAgIC8vIGFuZCB0aGUgbGVnYWN5IChzdHJpbmcsIGVuY29kaW5nLCBvZmZzZXQsIGxlbmd0aClcbiAgICAgICAgICAgIGlmIChpc0Zpbml0ZShvZmZzZXQpKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFpc0Zpbml0ZShsZW5ndGgpKSB7XG4gICAgICAgICAgICAgICAgICAgIGVuY29kaW5nID0gbGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBsZW5ndGggPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHsgIC8vIGxlZ2FjeVxuICAgICAgICAgICAgICAgIHZhciBzd2FwID0gZW5jb2Rpbmc7XG4gICAgICAgICAgICAgICAgZW5jb2RpbmcgPSBvZmZzZXQ7XG4gICAgICAgICAgICAgICAgb2Zmc2V0ID0gbGVuZ3RoO1xuICAgICAgICAgICAgICAgIGxlbmd0aCA9IHN3YXA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGVuY29kaW5nID0gU3RyaW5nKGVuY29kaW5nIHx8ICd1dGY4JykudG9Mb3dlckNhc2UoKTtcblxuICAgICAgICAgICAgLy8gVXNlIG5hdGl2ZSBjb252ZXJzaW9uIHdoZW4gcG9zc2libGVcbiAgICAgICAgICAgIGlmIChCdWZmZXIuaXNOYXRpdmVFbmNvZGluZyhlbmNvZGluZykpXG4gICAgICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsLkJ1ZmZlcldyaXRlLmNhbGwodGhpcywgc3RyaW5nLCBfb2Zmc2V0LCBfbGVuZ3RoLCBfZW5jb2RpbmcpO1xuXG4gICAgICAgICAgICBvZmZzZXQgPSArb2Zmc2V0IHx8IDA7XG4gICAgICAgICAgICB2YXIgcmVtYWluaW5nID0gdGhpcy5sZW5ndGggLSBvZmZzZXQ7XG4gICAgICAgICAgICBpZiAoIWxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGxlbmd0aCA9IHJlbWFpbmluZztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbGVuZ3RoID0gK2xlbmd0aDtcbiAgICAgICAgICAgICAgICBpZiAobGVuZ3RoID4gcmVtYWluaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aCA9IHJlbWFpbmluZztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzdHJpbmcubGVuZ3RoID4gMCAmJiAobGVuZ3RoIDwgMCB8fCBvZmZzZXQgPCAwKSlcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignYXR0ZW1wdCB0byB3cml0ZSBiZXlvbmQgYnVmZmVyIGJvdW5kcycpO1xuXG4gICAgICAgICAgICAvLyBPdGhlcndpc2UsIHVzZSBvdXIgZW5jb2RpbmcgbWV0aG9kLlxuICAgICAgICAgICAgdmFyIGJ1ZiA9IGljb252LmVuY29kZShzdHJpbmcsIGVuY29kaW5nKTtcbiAgICAgICAgICAgIGlmIChidWYubGVuZ3RoIDwgbGVuZ3RoKSBsZW5ndGggPSBidWYubGVuZ3RoO1xuICAgICAgICAgICAgYnVmLmNvcHkodGhpcywgb2Zmc2V0LCAwLCBsZW5ndGgpO1xuICAgICAgICAgICAgcmV0dXJuIGxlbmd0aDtcblxuICAgICAgICAgICAgLy8gVE9ETzogU2V0IF9jaGFyc1dyaXR0ZW4uXG4gICAgICAgIH1cblxuXG4gICAgICAgIC8vIC0tIFJlYWRhYmxlIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgaWYgKGljb252LnN1cHBvcnRzU3RyZWFtcykge1xuICAgICAgICAgICAgdmFyIFJlYWRhYmxlID0gcmVxdWlyZSgnc3RyZWFtJykuUmVhZGFibGU7XG5cbiAgICAgICAgICAgIG9yaWdpbmFsLlJlYWRhYmxlU2V0RW5jb2RpbmcgPSBSZWFkYWJsZS5wcm90b3R5cGUuc2V0RW5jb2Rpbmc7XG4gICAgICAgICAgICBSZWFkYWJsZS5wcm90b3R5cGUuc2V0RW5jb2RpbmcgPSBmdW5jdGlvbiBzZXRFbmNvZGluZyhlbmMsIG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAvLyBVc2Ugb3VyIG93biBkZWNvZGVyLCBpdCBoYXMgdGhlIHNhbWUgaW50ZXJmYWNlLlxuICAgICAgICAgICAgICAgIC8vIFdlIGNhbm5vdCB1c2Ugb3JpZ2luYWwgZnVuY3Rpb24gYXMgaXQgZG9lc24ndCBoYW5kbGUgQk9NLXMuXG4gICAgICAgICAgICAgICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5kZWNvZGVyID0gaWNvbnYuZ2V0RGVjb2RlcihlbmMsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5jb2RpbmcgPSBlbmM7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIFJlYWRhYmxlLnByb3RvdHlwZS5jb2xsZWN0ID0gaWNvbnYuX2NvbGxlY3Q7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBSZW1vdmUgaWNvbnYtbGl0ZSBOb2RlIHByaW1pdGl2ZSBleHRlbnNpb25zLlxuICAgIGljb252LnVuZG9FeHRlbmROb2RlRW5jb2RpbmdzID0gZnVuY3Rpb24gdW5kb0V4dGVuZE5vZGVFbmNvZGluZ3MoKSB7XG4gICAgICAgIGlmICghaWNvbnYuc3VwcG9ydHNOb2RlRW5jb2RpbmdzRXh0ZW5zaW9uKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAoIW9yaWdpbmFsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicmVxdWlyZSgnaWNvbnYtbGl0ZScpLnVuZG9FeHRlbmROb2RlRW5jb2RpbmdzKCk6IE5vdGhpbmcgdG8gdW5kbzsgZXh0ZW5kTm9kZUVuY29kaW5ncygpIGlzIG5vdCBjYWxsZWQuXCIpXG5cbiAgICAgICAgZGVsZXRlIEJ1ZmZlci5pc05hdGl2ZUVuY29kaW5nO1xuXG4gICAgICAgIHZhciBTbG93QnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJykuU2xvd0J1ZmZlcjtcblxuICAgICAgICBTbG93QnVmZmVyLnByb3RvdHlwZS50b1N0cmluZyA9IG9yaWdpbmFsLlNsb3dCdWZmZXJUb1N0cmluZztcbiAgICAgICAgU2xvd0J1ZmZlci5wcm90b3R5cGUud3JpdGUgPSBvcmlnaW5hbC5TbG93QnVmZmVyV3JpdGU7XG5cbiAgICAgICAgQnVmZmVyLmlzRW5jb2RpbmcgPSBvcmlnaW5hbC5CdWZmZXJJc0VuY29kaW5nO1xuICAgICAgICBCdWZmZXIuYnl0ZUxlbmd0aCA9IG9yaWdpbmFsLkJ1ZmZlckJ5dGVMZW5ndGg7XG4gICAgICAgIEJ1ZmZlci5wcm90b3R5cGUudG9TdHJpbmcgPSBvcmlnaW5hbC5CdWZmZXJUb1N0cmluZztcbiAgICAgICAgQnVmZmVyLnByb3RvdHlwZS53cml0ZSA9IG9yaWdpbmFsLkJ1ZmZlcldyaXRlO1xuXG4gICAgICAgIGlmIChpY29udi5zdXBwb3J0c1N0cmVhbXMpIHtcbiAgICAgICAgICAgIHZhciBSZWFkYWJsZSA9IHJlcXVpcmUoJ3N0cmVhbScpLlJlYWRhYmxlO1xuXG4gICAgICAgICAgICBSZWFkYWJsZS5wcm90b3R5cGUuc2V0RW5jb2RpbmcgPSBvcmlnaW5hbC5SZWFkYWJsZVNldEVuY29kaW5nO1xuICAgICAgICAgICAgZGVsZXRlIFJlYWRhYmxlLnByb3RvdHlwZS5jb2xsZWN0O1xuICAgICAgICB9XG5cbiAgICAgICAgb3JpZ2luYWwgPSB1bmRlZmluZWQ7XG4gICAgfVxufVxuIiwiLyohXG4gKiBlZS1maXJzdFxuICogQ29weXJpZ2h0KGMpIDIwMTQgSm9uYXRoYW4gT25nXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZpcnN0XG5cbi8qKlxuICogR2V0IHRoZSBmaXJzdCBldmVudCBpbiBhIHNldCBvZiBldmVudCBlbWl0dGVycyBhbmQgZXZlbnQgcGFpcnMuXG4gKlxuICogQHBhcmFtIHthcnJheX0gc3R1ZmZcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGRvbmVcbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBmaXJzdChzdHVmZiwgZG9uZSkge1xuICBpZiAoIUFycmF5LmlzQXJyYXkoc3R1ZmYpKVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZyBtdXN0IGJlIGFuIGFycmF5IG9mIFtlZSwgZXZlbnRzLi4uXSBhcnJheXMnKVxuXG4gIHZhciBjbGVhbnVwcyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHVmZi5sZW5ndGg7IGkrKykge1xuICAgIHZhciBhcnIgPSBzdHVmZltpXVxuXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGFycikgfHwgYXJyLmxlbmd0aCA8IDIpXG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdlYWNoIGFycmF5IG1lbWJlciBtdXN0IGJlIFtlZSwgZXZlbnRzLi4uXScpXG5cbiAgICB2YXIgZWUgPSBhcnJbMF1cblxuICAgIGZvciAodmFyIGogPSAxOyBqIDwgYXJyLmxlbmd0aDsgaisrKSB7XG4gICAgICB2YXIgZXZlbnQgPSBhcnJbal1cbiAgICAgIHZhciBmbiA9IGxpc3RlbmVyKGV2ZW50LCBjYWxsYmFjaylcblxuICAgICAgLy8gbGlzdGVuIHRvIHRoZSBldmVudFxuICAgICAgZWUub24oZXZlbnQsIGZuKVxuICAgICAgLy8gcHVzaCB0aGlzIGxpc3RlbmVyIHRvIHRoZSBsaXN0IG9mIGNsZWFudXBzXG4gICAgICBjbGVhbnVwcy5wdXNoKHtcbiAgICAgICAgZWU6IGVlLFxuICAgICAgICBldmVudDogZXZlbnQsXG4gICAgICAgIGZuOiBmbixcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY2FsbGJhY2soKSB7XG4gICAgY2xlYW51cCgpXG4gICAgZG9uZS5hcHBseShudWxsLCBhcmd1bWVudHMpXG4gIH1cblxuICBmdW5jdGlvbiBjbGVhbnVwKCkge1xuICAgIHZhciB4XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbGVhbnVwcy5sZW5ndGg7IGkrKykge1xuICAgICAgeCA9IGNsZWFudXBzW2ldXG4gICAgICB4LmVlLnJlbW92ZUxpc3RlbmVyKHguZXZlbnQsIHguZm4pXG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdGh1bmsoZm4pIHtcbiAgICBkb25lID0gZm5cbiAgfVxuXG4gIHRodW5rLmNhbmNlbCA9IGNsZWFudXBcblxuICByZXR1cm4gdGh1bmtcbn1cblxuLyoqXG4gKiBDcmVhdGUgdGhlIGV2ZW50IGxpc3RlbmVyLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBsaXN0ZW5lcihldmVudCwgZG9uZSkge1xuICByZXR1cm4gZnVuY3Rpb24gb25ldmVudChhcmcxKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aClcbiAgICB2YXIgZWUgPSB0aGlzXG4gICAgdmFyIGVyciA9IGV2ZW50ID09PSAnZXJyb3InXG4gICAgICA/IGFyZzFcbiAgICAgIDogbnVsbFxuXG4gICAgLy8gY29weSBhcmdzIHRvIHByZXZlbnQgYXJndW1lbnRzIGVzY2FwaW5nIHNjb3BlXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldXG4gICAgfVxuXG4gICAgZG9uZShlcnIsIGVlLCBldmVudCwgYXJncylcbiAgfVxufVxuIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiemxpYlwiKTsiLCIvKiFcbiAqIG1lZGlhLXR5cGVyXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuLyoqXG4gKiBSZWdFeHAgdG8gbWF0Y2ggKiggXCI7XCIgcGFyYW1ldGVyICkgaW4gUkZDIDI2MTYgc2VjIDMuN1xuICpcbiAqIHBhcmFtZXRlciAgICAgPSB0b2tlbiBcIj1cIiAoIHRva2VuIHwgcXVvdGVkLXN0cmluZyApXG4gKiB0b2tlbiAgICAgICAgID0gMSo8YW55IENIQVIgZXhjZXB0IENUTHMgb3Igc2VwYXJhdG9ycz5cbiAqIHNlcGFyYXRvcnMgICAgPSBcIihcIiB8IFwiKVwiIHwgXCI8XCIgfCBcIj5cIiB8IFwiQFwiXG4gKiAgICAgICAgICAgICAgIHwgXCIsXCIgfCBcIjtcIiB8IFwiOlwiIHwgXCJcXFwiIHwgPFwiPlxuICogICAgICAgICAgICAgICB8IFwiL1wiIHwgXCJbXCIgfCBcIl1cIiB8IFwiP1wiIHwgXCI9XCJcbiAqICAgICAgICAgICAgICAgfCBcIntcIiB8IFwifVwiIHwgU1AgfCBIVFxuICogcXVvdGVkLXN0cmluZyA9ICggPFwiPiAqKHFkdGV4dCB8IHF1b3RlZC1wYWlyICkgPFwiPiApXG4gKiBxZHRleHQgICAgICAgID0gPGFueSBURVhUIGV4Y2VwdCA8XCI+PlxuICogcXVvdGVkLXBhaXIgICA9IFwiXFxcIiBDSEFSXG4gKiBDSEFSICAgICAgICAgID0gPGFueSBVUy1BU0NJSSBjaGFyYWN0ZXIgKG9jdGV0cyAwIC0gMTI3KT5cbiAqIFRFWFQgICAgICAgICAgPSA8YW55IE9DVEVUIGV4Y2VwdCBDVExzLCBidXQgaW5jbHVkaW5nIExXUz5cbiAqIExXUyAgICAgICAgICAgPSBbQ1JMRl0gMSooIFNQIHwgSFQgKVxuICogQ1JMRiAgICAgICAgICA9IENSIExGXG4gKiBDUiAgICAgICAgICAgID0gPFVTLUFTQ0lJIENSLCBjYXJyaWFnZSByZXR1cm4gKDEzKT5cbiAqIExGICAgICAgICAgICAgPSA8VVMtQVNDSUkgTEYsIGxpbmVmZWVkICgxMCk+XG4gKiBTUCAgICAgICAgICAgID0gPFVTLUFTQ0lJIFNQLCBzcGFjZSAoMzIpPlxuICogU0hUICAgICAgICAgICA9IDxVUy1BU0NJSSBIVCwgaG9yaXpvbnRhbC10YWIgKDkpPlxuICogQ1RMICAgICAgICAgICA9IDxhbnkgVVMtQVNDSUkgY29udHJvbCBjaGFyYWN0ZXIgKG9jdGV0cyAwIC0gMzEpIGFuZCBERUwgKDEyNyk+XG4gKiBPQ1RFVCAgICAgICAgID0gPGFueSA4LWJpdCBzZXF1ZW5jZSBvZiBkYXRhPlxuICovXG52YXIgcGFyYW1SZWdFeHAgPSAvOyAqKFshIyQlJidcXCpcXCtcXC1cXC4wLTlBLVpcXF5fYGEtelxcfH5dKykgKj0gKihcIig/OlsgIVxcdTAwMjMtXFx1MDA1YlxcdTAwNWQtXFx1MDA3ZVxcdTAwODAtXFx1MDBmZl18XFxcXFtcXHUwMDIwLVxcdTAwN2VdKSpcInxbISMkJSYnXFwqXFwrXFwtXFwuMC05QS1aXFxeX2BhLXpcXHx+XSspICovZztcbnZhciB0ZXh0UmVnRXhwID0gL15bXFx1MDAyMC1cXHUwMDdlXFx1MDA4MC1cXHUwMGZmXSskL1xudmFyIHRva2VuUmVnRXhwID0gL15bISMkJSYnXFwqXFwrXFwtXFwuMC05QS1aXFxeX2BhLXpcXHx+XSskL1xuXG4vKipcbiAqIFJlZ0V4cCB0byBtYXRjaCBxdW90ZWQtcGFpciBpbiBSRkMgMjYxNlxuICpcbiAqIHF1b3RlZC1wYWlyID0gXCJcXFwiIENIQVJcbiAqIENIQVIgICAgICAgID0gPGFueSBVUy1BU0NJSSBjaGFyYWN0ZXIgKG9jdGV0cyAwIC0gMTI3KT5cbiAqL1xudmFyIHFlc2NSZWdFeHAgPSAvXFxcXChbXFx1MDAwMC1cXHUwMDdmXSkvZztcblxuLyoqXG4gKiBSZWdFeHAgdG8gbWF0Y2ggY2hhcnMgdGhhdCBtdXN0IGJlIHF1b3RlZC1wYWlyIGluIFJGQyAyNjE2XG4gKi9cbnZhciBxdW90ZVJlZ0V4cCA9IC8oW1xcXFxcIl0pL2c7XG5cbi8qKlxuICogUmVnRXhwIHRvIG1hdGNoIHR5cGUgaW4gUkZDIDY4MzhcbiAqXG4gKiB0eXBlLW5hbWUgPSByZXN0cmljdGVkLW5hbWVcbiAqIHN1YnR5cGUtbmFtZSA9IHJlc3RyaWN0ZWQtbmFtZVxuICogcmVzdHJpY3RlZC1uYW1lID0gcmVzdHJpY3RlZC1uYW1lLWZpcnN0ICoxMjZyZXN0cmljdGVkLW5hbWUtY2hhcnNcbiAqIHJlc3RyaWN0ZWQtbmFtZS1maXJzdCAgPSBBTFBIQSAvIERJR0lUXG4gKiByZXN0cmljdGVkLW5hbWUtY2hhcnMgID0gQUxQSEEgLyBESUdJVCAvIFwiIVwiIC8gXCIjXCIgL1xuICogICAgICAgICAgICAgICAgICAgICAgICAgIFwiJFwiIC8gXCImXCIgLyBcIi1cIiAvIFwiXlwiIC8gXCJfXCJcbiAqIHJlc3RyaWN0ZWQtbmFtZS1jaGFycyA9LyBcIi5cIiA7IENoYXJhY3RlcnMgYmVmb3JlIGZpcnN0IGRvdCBhbHdheXNcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOyBzcGVjaWZ5IGEgZmFjZXQgbmFtZVxuICogcmVzdHJpY3RlZC1uYW1lLWNoYXJzID0vIFwiK1wiIDsgQ2hhcmFjdGVycyBhZnRlciBsYXN0IHBsdXMgYWx3YXlzXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDsgc3BlY2lmeSBhIHN0cnVjdHVyZWQgc3ludGF4IHN1ZmZpeFxuICogQUxQSEEgPSAgJXg0MS01QSAvICV4NjEtN0EgICA7IEEtWiAvIGEtelxuICogRElHSVQgPSAgJXgzMC0zOSAgICAgICAgICAgICA7IDAtOVxuICovXG52YXIgc3VidHlwZU5hbWVSZWdFeHAgPSAvXltBLVphLXowLTldW0EtWmEtejAtOSEjJCZeXy4tXXswLDEyNn0kL1xudmFyIHR5cGVOYW1lUmVnRXhwID0gL15bQS1aYS16MC05XVtBLVphLXowLTkhIyQmXl8tXXswLDEyNn0kL1xudmFyIHR5cGVSZWdFeHAgPSAvXiAqKFtBLVphLXowLTldW0EtWmEtejAtOSEjJCZeXy1dezAsMTI2fSlcXC8oW0EtWmEtejAtOV1bQS1aYS16MC05ISMkJl5fListXXswLDEyNn0pICokLztcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5leHBvcnRzLmZvcm1hdCA9IGZvcm1hdFxuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5cbi8qKlxuICogRm9ybWF0IG9iamVjdCB0byBtZWRpYSB0eXBlLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZm9ybWF0KG9iaikge1xuICBpZiAoIW9iaiB8fCB0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IG9iaiBpcyByZXF1aXJlZCcpXG4gIH1cblxuICB2YXIgcGFyYW1ldGVycyA9IG9iai5wYXJhbWV0ZXJzXG4gIHZhciBzdWJ0eXBlID0gb2JqLnN1YnR5cGVcbiAgdmFyIHN1ZmZpeCA9IG9iai5zdWZmaXhcbiAgdmFyIHR5cGUgPSBvYmoudHlwZVxuXG4gIGlmICghdHlwZSB8fCAhdHlwZU5hbWVSZWdFeHAudGVzdCh0eXBlKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgdHlwZScpXG4gIH1cblxuICBpZiAoIXN1YnR5cGUgfHwgIXN1YnR5cGVOYW1lUmVnRXhwLnRlc3Qoc3VidHlwZSkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIHN1YnR5cGUnKVxuICB9XG5cbiAgLy8gZm9ybWF0IGFzIHR5cGUvc3VidHlwZVxuICB2YXIgc3RyaW5nID0gdHlwZSArICcvJyArIHN1YnR5cGVcblxuICAvLyBhcHBlbmQgK3N1ZmZpeFxuICBpZiAoc3VmZml4KSB7XG4gICAgaWYgKCF0eXBlTmFtZVJlZ0V4cC50ZXN0KHN1ZmZpeCkpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgc3VmZml4JylcbiAgICB9XG5cbiAgICBzdHJpbmcgKz0gJysnICsgc3VmZml4XG4gIH1cblxuICAvLyBhcHBlbmQgcGFyYW1ldGVyc1xuICBpZiAocGFyYW1ldGVycyAmJiB0eXBlb2YgcGFyYW1ldGVycyA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIgcGFyYW1cbiAgICB2YXIgcGFyYW1zID0gT2JqZWN0LmtleXMocGFyYW1ldGVycykuc29ydCgpXG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhcmFtcy5sZW5ndGg7IGkrKykge1xuICAgICAgcGFyYW0gPSBwYXJhbXNbaV1cblxuICAgICAgaWYgKCF0b2tlblJlZ0V4cC50ZXN0KHBhcmFtKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIHBhcmFtZXRlciBuYW1lJylcbiAgICAgIH1cblxuICAgICAgc3RyaW5nICs9ICc7ICcgKyBwYXJhbSArICc9JyArIHFzdHJpbmcocGFyYW1ldGVyc1twYXJhbV0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1xufVxuXG4vKipcbiAqIFBhcnNlIG1lZGlhIHR5cGUgdG8gb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfG9iamVjdH0gc3RyaW5nXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHN0cmluZykge1xuICBpZiAoIXN0cmluZykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IHN0cmluZyBpcyByZXF1aXJlZCcpXG4gIH1cblxuICAvLyBzdXBwb3J0IHJlcS9yZXMtbGlrZSBvYmplY3RzIGFzIGFyZ3VtZW50XG4gIGlmICh0eXBlb2Ygc3RyaW5nID09PSAnb2JqZWN0Jykge1xuICAgIHN0cmluZyA9IGdldGNvbnRlbnR0eXBlKHN0cmluZylcbiAgfVxuXG4gIGlmICh0eXBlb2Ygc3RyaW5nICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IHN0cmluZyBpcyByZXF1aXJlZCB0byBiZSBhIHN0cmluZycpXG4gIH1cblxuICB2YXIgaW5kZXggPSBzdHJpbmcuaW5kZXhPZignOycpXG4gIHZhciB0eXBlID0gaW5kZXggIT09IC0xXG4gICAgPyBzdHJpbmcuc3Vic3RyKDAsIGluZGV4KVxuICAgIDogc3RyaW5nXG5cbiAgdmFyIGtleVxuICB2YXIgbWF0Y2hcbiAgdmFyIG9iaiA9IHNwbGl0VHlwZSh0eXBlKVxuICB2YXIgcGFyYW1zID0ge31cbiAgdmFyIHZhbHVlXG5cbiAgcGFyYW1SZWdFeHAubGFzdEluZGV4ID0gaW5kZXhcblxuICB3aGlsZSAobWF0Y2ggPSBwYXJhbVJlZ0V4cC5leGVjKHN0cmluZykpIHtcbiAgICBpZiAobWF0Y2guaW5kZXggIT09IGluZGV4KSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIHBhcmFtZXRlciBmb3JtYXQnKVxuICAgIH1cblxuICAgIGluZGV4ICs9IG1hdGNoWzBdLmxlbmd0aFxuICAgIGtleSA9IG1hdGNoWzFdLnRvTG93ZXJDYXNlKClcbiAgICB2YWx1ZSA9IG1hdGNoWzJdXG5cbiAgICBpZiAodmFsdWVbMF0gPT09ICdcIicpIHtcbiAgICAgIC8vIHJlbW92ZSBxdW90ZXMgYW5kIGVzY2FwZXNcbiAgICAgIHZhbHVlID0gdmFsdWVcbiAgICAgICAgLnN1YnN0cigxLCB2YWx1ZS5sZW5ndGggLSAyKVxuICAgICAgICAucmVwbGFjZShxZXNjUmVnRXhwLCAnJDEnKVxuICAgIH1cblxuICAgIHBhcmFtc1trZXldID0gdmFsdWVcbiAgfVxuXG4gIGlmIChpbmRleCAhPT0gLTEgJiYgaW5kZXggIT09IHN0cmluZy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIHBhcmFtZXRlciBmb3JtYXQnKVxuICB9XG5cbiAgb2JqLnBhcmFtZXRlcnMgPSBwYXJhbXNcblxuICByZXR1cm4gb2JqXG59XG5cbi8qKlxuICogR2V0IGNvbnRlbnQtdHlwZSBmcm9tIHJlcS9yZXMgb2JqZWN0cy5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH1cbiAqIEByZXR1cm4ge09iamVjdH1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGdldGNvbnRlbnR0eXBlKG9iaikge1xuICBpZiAodHlwZW9mIG9iai5nZXRIZWFkZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyByZXMtbGlrZVxuICAgIHJldHVybiBvYmouZ2V0SGVhZGVyKCdjb250ZW50LXR5cGUnKVxuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmouaGVhZGVycyA9PT0gJ29iamVjdCcpIHtcbiAgICAvLyByZXEtbGlrZVxuICAgIHJldHVybiBvYmouaGVhZGVycyAmJiBvYmouaGVhZGVyc1snY29udGVudC10eXBlJ11cbiAgfVxufVxuXG4vKipcbiAqIFF1b3RlIGEgc3RyaW5nIGlmIG5lY2Vzc2FyeS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBxc3RyaW5nKHZhbCkge1xuICB2YXIgc3RyID0gU3RyaW5nKHZhbClcblxuICAvLyBubyBuZWVkIHRvIHF1b3RlIHRva2Vuc1xuICBpZiAodG9rZW5SZWdFeHAudGVzdChzdHIpKSB7XG4gICAgcmV0dXJuIHN0clxuICB9XG5cbiAgaWYgKHN0ci5sZW5ndGggPiAwICYmICF0ZXh0UmVnRXhwLnRlc3Qoc3RyKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgcGFyYW1ldGVyIHZhbHVlJylcbiAgfVxuXG4gIHJldHVybiAnXCInICsgc3RyLnJlcGxhY2UocXVvdGVSZWdFeHAsICdcXFxcJDEnKSArICdcIidcbn1cblxuLyoqXG4gKiBTaW1wbHkgXCJ0eXBlL3N1YnR5cGUrc2lmZnhcIiBpbnRvIHBhcnRzLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHNwbGl0VHlwZShzdHJpbmcpIHtcbiAgdmFyIG1hdGNoID0gdHlwZVJlZ0V4cC5leGVjKHN0cmluZy50b0xvd2VyQ2FzZSgpKVxuXG4gIGlmICghbWF0Y2gpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIG1lZGlhIHR5cGUnKVxuICB9XG5cbiAgdmFyIHR5cGUgPSBtYXRjaFsxXVxuICB2YXIgc3VidHlwZSA9IG1hdGNoWzJdXG4gIHZhciBzdWZmaXhcblxuICAvLyBzdWZmaXggYWZ0ZXIgbGFzdCArXG4gIHZhciBpbmRleCA9IHN1YnR5cGUubGFzdEluZGV4T2YoJysnKVxuICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgc3VmZml4ID0gc3VidHlwZS5zdWJzdHIoaW5kZXggKyAxKVxuICAgIHN1YnR5cGUgPSBzdWJ0eXBlLnN1YnN0cigwLCBpbmRleClcbiAgfVxuXG4gIHZhciBvYmogPSB7XG4gICAgdHlwZTogdHlwZSxcbiAgICBzdWJ0eXBlOiBzdWJ0eXBlLFxuICAgIHN1ZmZpeDogc3VmZml4XG4gIH1cblxuICByZXR1cm4gb2JqXG59XG4iLCIvKiFcbiAqIG1pbWUtZGJcbiAqIENvcHlyaWdodChjKSAyMDE0IEpvbmF0aGFuIE9uZ1xuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGIuanNvbicpXG4iLCIvKiFcbiAqIGJvZHktcGFyc2VyXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICovXG5cbnZhciBieXRlcyA9IHJlcXVpcmUoJ2J5dGVzJylcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2JvZHktcGFyc2VyOnJhdycpXG52YXIgcmVhZCA9IHJlcXVpcmUoJy4uL3JlYWQnKVxudmFyIHR5cGVpcyA9IHJlcXVpcmUoJ3R5cGUtaXMnKVxuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gcmF3XG5cbi8qKlxuICogQ3JlYXRlIGEgbWlkZGxld2FyZSB0byBwYXJzZSByYXcgYm9kaWVzLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiByYXcgKG9wdGlvbnMpIHtcbiAgdmFyIG9wdHMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIGluZmxhdGUgPSBvcHRzLmluZmxhdGUgIT09IGZhbHNlXG4gIHZhciBsaW1pdCA9IHR5cGVvZiBvcHRzLmxpbWl0ICE9PSAnbnVtYmVyJ1xuICAgID8gYnl0ZXMucGFyc2Uob3B0cy5saW1pdCB8fCAnMTAwa2InKVxuICAgIDogb3B0cy5saW1pdFxuICB2YXIgdHlwZSA9IG9wdHMudHlwZSB8fCAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJ1xuICB2YXIgdmVyaWZ5ID0gb3B0cy52ZXJpZnkgfHwgZmFsc2VcblxuICBpZiAodmVyaWZ5ICE9PSBmYWxzZSAmJiB0eXBlb2YgdmVyaWZ5ICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIHZlcmlmeSBtdXN0IGJlIGZ1bmN0aW9uJylcbiAgfVxuXG4gIC8vIGNyZWF0ZSB0aGUgYXBwcm9wcmlhdGUgdHlwZSBjaGVja2luZyBmdW5jdGlvblxuICB2YXIgc2hvdWxkUGFyc2UgPSB0eXBlb2YgdHlwZSAhPT0gJ2Z1bmN0aW9uJ1xuICAgID8gdHlwZUNoZWNrZXIodHlwZSlcbiAgICA6IHR5cGVcblxuICBmdW5jdGlvbiBwYXJzZSAoYnVmKSB7XG4gICAgcmV0dXJuIGJ1ZlxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHJhd1BhcnNlciAocmVxLCByZXMsIG5leHQpIHtcbiAgICBpZiAocmVxLl9ib2R5KSB7XG4gICAgICBkZWJ1ZygnYm9keSBhbHJlYWR5IHBhcnNlZCcpXG4gICAgICBuZXh0KClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHJlcS5ib2R5ID0gcmVxLmJvZHkgfHwge31cblxuICAgIC8vIHNraXAgcmVxdWVzdHMgd2l0aG91dCBib2RpZXNcbiAgICBpZiAoIXR5cGVpcy5oYXNCb2R5KHJlcSkpIHtcbiAgICAgIGRlYnVnKCdza2lwIGVtcHR5IGJvZHknKVxuICAgICAgbmV4dCgpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBkZWJ1ZygnY29udGVudC10eXBlICVqJywgcmVxLmhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddKVxuXG4gICAgLy8gZGV0ZXJtaW5lIGlmIHJlcXVlc3Qgc2hvdWxkIGJlIHBhcnNlZFxuICAgIGlmICghc2hvdWxkUGFyc2UocmVxKSkge1xuICAgICAgZGVidWcoJ3NraXAgcGFyc2luZycpXG4gICAgICBuZXh0KClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIHJlYWRcbiAgICByZWFkKHJlcSwgcmVzLCBuZXh0LCBwYXJzZSwgZGVidWcsIHtcbiAgICAgIGVuY29kaW5nOiBudWxsLFxuICAgICAgaW5mbGF0ZTogaW5mbGF0ZSxcbiAgICAgIGxpbWl0OiBsaW1pdCxcbiAgICAgIHZlcmlmeTogdmVyaWZ5XG4gICAgfSlcbiAgfVxufVxuXG4vKipcbiAqIEdldCB0aGUgc2ltcGxlIHR5cGUgY2hlY2tlci5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICogQHJldHVybiB7ZnVuY3Rpb259XG4gKi9cblxuZnVuY3Rpb24gdHlwZUNoZWNrZXIgKHR5cGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGNoZWNrVHlwZSAocmVxKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odHlwZWlzKHJlcSwgdHlwZSkpXG4gIH1cbn1cbiIsIi8qIVxuICogYm9keS1wYXJzZXJcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxudmFyIGJ5dGVzID0gcmVxdWlyZSgnYnl0ZXMnKVxudmFyIGNvbnRlbnRUeXBlID0gcmVxdWlyZSgnY29udGVudC10eXBlJylcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2JvZHktcGFyc2VyOnRleHQnKVxudmFyIHJlYWQgPSByZXF1aXJlKCcuLi9yZWFkJylcbnZhciB0eXBlaXMgPSByZXF1aXJlKCd0eXBlLWlzJylcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHRleHRcblxuLyoqXG4gKiBDcmVhdGUgYSBtaWRkbGV3YXJlIHRvIHBhcnNlIHRleHQgYm9kaWVzLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiB0ZXh0IChvcHRpb25zKSB7XG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fVxuXG4gIHZhciBkZWZhdWx0Q2hhcnNldCA9IG9wdHMuZGVmYXVsdENoYXJzZXQgfHwgJ3V0Zi04J1xuICB2YXIgaW5mbGF0ZSA9IG9wdHMuaW5mbGF0ZSAhPT0gZmFsc2VcbiAgdmFyIGxpbWl0ID0gdHlwZW9mIG9wdHMubGltaXQgIT09ICdudW1iZXInXG4gICAgPyBieXRlcy5wYXJzZShvcHRzLmxpbWl0IHx8ICcxMDBrYicpXG4gICAgOiBvcHRzLmxpbWl0XG4gIHZhciB0eXBlID0gb3B0cy50eXBlIHx8ICd0ZXh0L3BsYWluJ1xuICB2YXIgdmVyaWZ5ID0gb3B0cy52ZXJpZnkgfHwgZmFsc2VcblxuICBpZiAodmVyaWZ5ICE9PSBmYWxzZSAmJiB0eXBlb2YgdmVyaWZ5ICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIHZlcmlmeSBtdXN0IGJlIGZ1bmN0aW9uJylcbiAgfVxuXG4gIC8vIGNyZWF0ZSB0aGUgYXBwcm9wcmlhdGUgdHlwZSBjaGVja2luZyBmdW5jdGlvblxuICB2YXIgc2hvdWxkUGFyc2UgPSB0eXBlb2YgdHlwZSAhPT0gJ2Z1bmN0aW9uJ1xuICAgID8gdHlwZUNoZWNrZXIodHlwZSlcbiAgICA6IHR5cGVcblxuICBmdW5jdGlvbiBwYXJzZSAoYnVmKSB7XG4gICAgcmV0dXJuIGJ1ZlxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHRleHRQYXJzZXIgKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgaWYgKHJlcS5fYm9keSkge1xuICAgICAgZGVidWcoJ2JvZHkgYWxyZWFkeSBwYXJzZWQnKVxuICAgICAgbmV4dCgpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICByZXEuYm9keSA9IHJlcS5ib2R5IHx8IHt9XG5cbiAgICAvLyBza2lwIHJlcXVlc3RzIHdpdGhvdXQgYm9kaWVzXG4gICAgaWYgKCF0eXBlaXMuaGFzQm9keShyZXEpKSB7XG4gICAgICBkZWJ1Zygnc2tpcCBlbXB0eSBib2R5JylcbiAgICAgIG5leHQoKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZGVidWcoJ2NvbnRlbnQtdHlwZSAlaicsIHJlcS5oZWFkZXJzWydjb250ZW50LXR5cGUnXSlcblxuICAgIC8vIGRldGVybWluZSBpZiByZXF1ZXN0IHNob3VsZCBiZSBwYXJzZWRcbiAgICBpZiAoIXNob3VsZFBhcnNlKHJlcSkpIHtcbiAgICAgIGRlYnVnKCdza2lwIHBhcnNpbmcnKVxuICAgICAgbmV4dCgpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyBnZXQgY2hhcnNldFxuICAgIHZhciBjaGFyc2V0ID0gZ2V0Q2hhcnNldChyZXEpIHx8IGRlZmF1bHRDaGFyc2V0XG5cbiAgICAvLyByZWFkXG4gICAgcmVhZChyZXEsIHJlcywgbmV4dCwgcGFyc2UsIGRlYnVnLCB7XG4gICAgICBlbmNvZGluZzogY2hhcnNldCxcbiAgICAgIGluZmxhdGU6IGluZmxhdGUsXG4gICAgICBsaW1pdDogbGltaXQsXG4gICAgICB2ZXJpZnk6IHZlcmlmeVxuICAgIH0pXG4gIH1cbn1cblxuLyoqXG4gKiBHZXQgdGhlIGNoYXJzZXQgb2YgYSByZXF1ZXN0LlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXFcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGdldENoYXJzZXQgKHJlcSkge1xuICB0cnkge1xuICAgIHJldHVybiAoY29udGVudFR5cGUucGFyc2UocmVxKS5wYXJhbWV0ZXJzLmNoYXJzZXQgfHwgJycpLnRvTG93ZXJDYXNlKClcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG4vKipcbiAqIEdldCB0aGUgc2ltcGxlIHR5cGUgY2hlY2tlci5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICogQHJldHVybiB7ZnVuY3Rpb259XG4gKi9cblxuZnVuY3Rpb24gdHlwZUNoZWNrZXIgKHR5cGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGNoZWNrVHlwZSAocmVxKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odHlwZWlzKHJlcSwgdHlwZSkpXG4gIH1cbn1cbiIsIi8qIVxuICogYm9keS1wYXJzZXJcbiAqIENvcHlyaWdodChjKSAyMDE0IEpvbmF0aGFuIE9uZ1xuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIGJ5dGVzID0gcmVxdWlyZSgnYnl0ZXMnKVxudmFyIGNvbnRlbnRUeXBlID0gcmVxdWlyZSgnY29udGVudC10eXBlJylcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJ2h0dHAtZXJyb3JzJylcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2JvZHktcGFyc2VyOnVybGVuY29kZWQnKVxudmFyIGRlcHJlY2F0ZSA9IHJlcXVpcmUoJ2RlcGQnKSgnYm9keS1wYXJzZXInKVxudmFyIHJlYWQgPSByZXF1aXJlKCcuLi9yZWFkJylcbnZhciB0eXBlaXMgPSByZXF1aXJlKCd0eXBlLWlzJylcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHVybGVuY29kZWRcblxuLyoqXG4gKiBDYWNoZSBvZiBwYXJzZXIgbW9kdWxlcy5cbiAqL1xuXG52YXIgcGFyc2VycyA9IE9iamVjdC5jcmVhdGUobnVsbClcblxuLyoqXG4gKiBDcmVhdGUgYSBtaWRkbGV3YXJlIHRvIHBhcnNlIHVybGVuY29kZWQgYm9kaWVzLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHVybGVuY29kZWQgKG9wdGlvbnMpIHtcbiAgdmFyIG9wdHMgPSBvcHRpb25zIHx8IHt9XG5cbiAgLy8gbm90aWNlIGJlY2F1c2Ugb3B0aW9uIGRlZmF1bHQgd2lsbCBmbGlwIGluIG5leHQgbWFqb3JcbiAgaWYgKG9wdHMuZXh0ZW5kZWQgPT09IHVuZGVmaW5lZCkge1xuICAgIGRlcHJlY2F0ZSgndW5kZWZpbmVkIGV4dGVuZGVkOiBwcm92aWRlIGV4dGVuZGVkIG9wdGlvbicpXG4gIH1cblxuICB2YXIgZXh0ZW5kZWQgPSBvcHRzLmV4dGVuZGVkICE9PSBmYWxzZVxuICB2YXIgaW5mbGF0ZSA9IG9wdHMuaW5mbGF0ZSAhPT0gZmFsc2VcbiAgdmFyIGxpbWl0ID0gdHlwZW9mIG9wdHMubGltaXQgIT09ICdudW1iZXInXG4gICAgPyBieXRlcy5wYXJzZShvcHRzLmxpbWl0IHx8ICcxMDBrYicpXG4gICAgOiBvcHRzLmxpbWl0XG4gIHZhciB0eXBlID0gb3B0cy50eXBlIHx8ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnXG4gIHZhciB2ZXJpZnkgPSBvcHRzLnZlcmlmeSB8fCBmYWxzZVxuXG4gIGlmICh2ZXJpZnkgIT09IGZhbHNlICYmIHR5cGVvZiB2ZXJpZnkgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gdmVyaWZ5IG11c3QgYmUgZnVuY3Rpb24nKVxuICB9XG5cbiAgLy8gY3JlYXRlIHRoZSBhcHByb3ByaWF0ZSBxdWVyeSBwYXJzZXJcbiAgdmFyIHF1ZXJ5cGFyc2UgPSBleHRlbmRlZFxuICAgID8gZXh0ZW5kZWRwYXJzZXIob3B0cylcbiAgICA6IHNpbXBsZXBhcnNlcihvcHRzKVxuXG4gIC8vIGNyZWF0ZSB0aGUgYXBwcm9wcmlhdGUgdHlwZSBjaGVja2luZyBmdW5jdGlvblxuICB2YXIgc2hvdWxkUGFyc2UgPSB0eXBlb2YgdHlwZSAhPT0gJ2Z1bmN0aW9uJ1xuICAgID8gdHlwZUNoZWNrZXIodHlwZSlcbiAgICA6IHR5cGVcblxuICBmdW5jdGlvbiBwYXJzZSAoYm9keSkge1xuICAgIHJldHVybiBib2R5Lmxlbmd0aFxuICAgICAgPyBxdWVyeXBhcnNlKGJvZHkpXG4gICAgICA6IHt9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gdXJsZW5jb2RlZFBhcnNlciAocmVxLCByZXMsIG5leHQpIHtcbiAgICBpZiAocmVxLl9ib2R5KSB7XG4gICAgICBkZWJ1ZygnYm9keSBhbHJlYWR5IHBhcnNlZCcpXG4gICAgICBuZXh0KClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHJlcS5ib2R5ID0gcmVxLmJvZHkgfHwge31cblxuICAgIC8vIHNraXAgcmVxdWVzdHMgd2l0aG91dCBib2RpZXNcbiAgICBpZiAoIXR5cGVpcy5oYXNCb2R5KHJlcSkpIHtcbiAgICAgIGRlYnVnKCdza2lwIGVtcHR5IGJvZHknKVxuICAgICAgbmV4dCgpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBkZWJ1ZygnY29udGVudC10eXBlICVqJywgcmVxLmhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddKVxuXG4gICAgLy8gZGV0ZXJtaW5lIGlmIHJlcXVlc3Qgc2hvdWxkIGJlIHBhcnNlZFxuICAgIGlmICghc2hvdWxkUGFyc2UocmVxKSkge1xuICAgICAgZGVidWcoJ3NraXAgcGFyc2luZycpXG4gICAgICBuZXh0KClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIGFzc2VydCBjaGFyc2V0XG4gICAgdmFyIGNoYXJzZXQgPSBnZXRDaGFyc2V0KHJlcSkgfHwgJ3V0Zi04J1xuICAgIGlmIChjaGFyc2V0ICE9PSAndXRmLTgnKSB7XG4gICAgICBkZWJ1ZygnaW52YWxpZCBjaGFyc2V0JylcbiAgICAgIG5leHQoY3JlYXRlRXJyb3IoNDE1LCAndW5zdXBwb3J0ZWQgY2hhcnNldCBcIicgKyBjaGFyc2V0LnRvVXBwZXJDYXNlKCkgKyAnXCInLCB7XG4gICAgICAgIGNoYXJzZXQ6IGNoYXJzZXQsXG4gICAgICAgIHR5cGU6ICdjaGFyc2V0LnVuc3VwcG9ydGVkJ1xuICAgICAgfSkpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyByZWFkXG4gICAgcmVhZChyZXEsIHJlcywgbmV4dCwgcGFyc2UsIGRlYnVnLCB7XG4gICAgICBkZWJ1ZzogZGVidWcsXG4gICAgICBlbmNvZGluZzogY2hhcnNldCxcbiAgICAgIGluZmxhdGU6IGluZmxhdGUsXG4gICAgICBsaW1pdDogbGltaXQsXG4gICAgICB2ZXJpZnk6IHZlcmlmeVxuICAgIH0pXG4gIH1cbn1cblxuLyoqXG4gKiBHZXQgdGhlIGV4dGVuZGVkIHF1ZXJ5IHBhcnNlci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICovXG5cbmZ1bmN0aW9uIGV4dGVuZGVkcGFyc2VyIChvcHRpb25zKSB7XG4gIHZhciBwYXJhbWV0ZXJMaW1pdCA9IG9wdGlvbnMucGFyYW1ldGVyTGltaXQgIT09IHVuZGVmaW5lZFxuICAgID8gb3B0aW9ucy5wYXJhbWV0ZXJMaW1pdFxuICAgIDogMTAwMFxuICB2YXIgcGFyc2UgPSBwYXJzZXIoJ3FzJylcblxuICBpZiAoaXNOYU4ocGFyYW1ldGVyTGltaXQpIHx8IHBhcmFtZXRlckxpbWl0IDwgMSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBwYXJhbWV0ZXJMaW1pdCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyJylcbiAgfVxuXG4gIGlmIChpc0Zpbml0ZShwYXJhbWV0ZXJMaW1pdCkpIHtcbiAgICBwYXJhbWV0ZXJMaW1pdCA9IHBhcmFtZXRlckxpbWl0IHwgMFxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHF1ZXJ5cGFyc2UgKGJvZHkpIHtcbiAgICB2YXIgcGFyYW1Db3VudCA9IHBhcmFtZXRlckNvdW50KGJvZHksIHBhcmFtZXRlckxpbWl0KVxuXG4gICAgaWYgKHBhcmFtQ291bnQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZGVidWcoJ3RvbyBtYW55IHBhcmFtZXRlcnMnKVxuICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoNDEzLCAndG9vIG1hbnkgcGFyYW1ldGVycycsIHtcbiAgICAgICAgdHlwZTogJ3BhcmFtZXRlcnMudG9vLm1hbnknXG4gICAgICB9KVxuICAgIH1cblxuICAgIHZhciBhcnJheUxpbWl0ID0gTWF0aC5tYXgoMTAwLCBwYXJhbUNvdW50KVxuXG4gICAgZGVidWcoJ3BhcnNlIGV4dGVuZGVkIHVybGVuY29kaW5nJylcbiAgICByZXR1cm4gcGFyc2UoYm9keSwge1xuICAgICAgYWxsb3dQcm90b3R5cGVzOiB0cnVlLFxuICAgICAgYXJyYXlMaW1pdDogYXJyYXlMaW1pdCxcbiAgICAgIGRlcHRoOiBJbmZpbml0eSxcbiAgICAgIHBhcmFtZXRlckxpbWl0OiBwYXJhbWV0ZXJMaW1pdFxuICAgIH0pXG4gIH1cbn1cblxuLyoqXG4gKiBHZXQgdGhlIGNoYXJzZXQgb2YgYSByZXF1ZXN0LlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXFcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGdldENoYXJzZXQgKHJlcSkge1xuICB0cnkge1xuICAgIHJldHVybiAoY29udGVudFR5cGUucGFyc2UocmVxKS5wYXJhbWV0ZXJzLmNoYXJzZXQgfHwgJycpLnRvTG93ZXJDYXNlKClcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG4vKipcbiAqIENvdW50IHRoZSBudW1iZXIgb2YgcGFyYW1ldGVycywgc3RvcHBpbmcgb25jZSBsaW1pdCByZWFjaGVkXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJvZHlcbiAqIEBwYXJhbSB7bnVtYmVyfSBsaW1pdFxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGFyYW1ldGVyQ291bnQgKGJvZHksIGxpbWl0KSB7XG4gIHZhciBjb3VudCA9IDBcbiAgdmFyIGluZGV4ID0gMFxuXG4gIHdoaWxlICgoaW5kZXggPSBib2R5LmluZGV4T2YoJyYnLCBpbmRleCkpICE9PSAtMSkge1xuICAgIGNvdW50KytcbiAgICBpbmRleCsrXG5cbiAgICBpZiAoY291bnQgPT09IGxpbWl0KSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNvdW50XG59XG5cbi8qKlxuICogR2V0IHBhcnNlciBmb3IgbW9kdWxlIG5hbWUgZHluYW1pY2FsbHkuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGFyc2VyIChuYW1lKSB7XG4gIHZhciBtb2QgPSBwYXJzZXJzW25hbWVdXG5cbiAgaWYgKG1vZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIG1vZC5wYXJzZVxuICB9XG5cbiAgLy8gdGhpcyB1c2VzIGEgc3dpdGNoIGZvciBzdGF0aWMgcmVxdWlyZSBhbmFseXNpc1xuICBzd2l0Y2ggKG5hbWUpIHtcbiAgICBjYXNlICdxcyc6XG4gICAgICBtb2QgPSByZXF1aXJlKCdxcycpXG4gICAgICBicmVha1xuICAgIGNhc2UgJ3F1ZXJ5c3RyaW5nJzpcbiAgICAgIG1vZCA9IHJlcXVpcmUoJ3F1ZXJ5c3RyaW5nJylcbiAgICAgIGJyZWFrXG4gIH1cblxuICAvLyBzdG9yZSB0byBwcmV2ZW50IGludm9raW5nIHJlcXVpcmUoKVxuICBwYXJzZXJzW25hbWVdID0gbW9kXG5cbiAgcmV0dXJuIG1vZC5wYXJzZVxufVxuXG4vKipcbiAqIEdldCB0aGUgc2ltcGxlIHF1ZXJ5IHBhcnNlci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICovXG5cbmZ1bmN0aW9uIHNpbXBsZXBhcnNlciAob3B0aW9ucykge1xuICB2YXIgcGFyYW1ldGVyTGltaXQgPSBvcHRpb25zLnBhcmFtZXRlckxpbWl0ICE9PSB1bmRlZmluZWRcbiAgICA/IG9wdGlvbnMucGFyYW1ldGVyTGltaXRcbiAgICA6IDEwMDBcbiAgdmFyIHBhcnNlID0gcGFyc2VyKCdxdWVyeXN0cmluZycpXG5cbiAgaWYgKGlzTmFOKHBhcmFtZXRlckxpbWl0KSB8fCBwYXJhbWV0ZXJMaW1pdCA8IDEpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gcGFyYW1ldGVyTGltaXQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlcicpXG4gIH1cblxuICBpZiAoaXNGaW5pdGUocGFyYW1ldGVyTGltaXQpKSB7XG4gICAgcGFyYW1ldGVyTGltaXQgPSBwYXJhbWV0ZXJMaW1pdCB8IDBcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiBxdWVyeXBhcnNlIChib2R5KSB7XG4gICAgdmFyIHBhcmFtQ291bnQgPSBwYXJhbWV0ZXJDb3VudChib2R5LCBwYXJhbWV0ZXJMaW1pdClcblxuICAgIGlmIChwYXJhbUNvdW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGRlYnVnKCd0b28gbWFueSBwYXJhbWV0ZXJzJylcbiAgICAgIHRocm93IGNyZWF0ZUVycm9yKDQxMywgJ3RvbyBtYW55IHBhcmFtZXRlcnMnLCB7XG4gICAgICAgIHR5cGU6ICdwYXJhbWV0ZXJzLnRvby5tYW55J1xuICAgICAgfSlcbiAgICB9XG5cbiAgICBkZWJ1ZygncGFyc2UgdXJsZW5jb2RpbmcnKVxuICAgIHJldHVybiBwYXJzZShib2R5LCB1bmRlZmluZWQsIHVuZGVmaW5lZCwge21heEtleXM6IHBhcmFtZXRlckxpbWl0fSlcbiAgfVxufVxuXG4vKipcbiAqIEdldCB0aGUgc2ltcGxlIHR5cGUgY2hlY2tlci5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICogQHJldHVybiB7ZnVuY3Rpb259XG4gKi9cblxuZnVuY3Rpb24gdHlwZUNoZWNrZXIgKHR5cGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGNoZWNrVHlwZSAocmVxKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odHlwZWlzKHJlcSwgdHlwZSkpXG4gIH1cbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIGZvcm1hdHMgPSByZXF1aXJlKCcuL2Zvcm1hdHMnKTtcblxudmFyIGFycmF5UHJlZml4R2VuZXJhdG9ycyA9IHtcbiAgICBicmFja2V0czogZnVuY3Rpb24gYnJhY2tldHMocHJlZml4KSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgZnVuYy1uYW1lLW1hdGNoaW5nXG4gICAgICAgIHJldHVybiBwcmVmaXggKyAnW10nO1xuICAgIH0sXG4gICAgaW5kaWNlczogZnVuY3Rpb24gaW5kaWNlcyhwcmVmaXgsIGtleSkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGZ1bmMtbmFtZS1tYXRjaGluZ1xuICAgICAgICByZXR1cm4gcHJlZml4ICsgJ1snICsga2V5ICsgJ10nO1xuICAgIH0sXG4gICAgcmVwZWF0OiBmdW5jdGlvbiByZXBlYXQocHJlZml4KSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgZnVuYy1uYW1lLW1hdGNoaW5nXG4gICAgICAgIHJldHVybiBwcmVmaXg7XG4gICAgfVxufTtcblxudmFyIHRvSVNPID0gRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmc7XG5cbnZhciBkZWZhdWx0cyA9IHtcbiAgICBkZWxpbWl0ZXI6ICcmJyxcbiAgICBlbmNvZGU6IHRydWUsXG4gICAgZW5jb2RlcjogdXRpbHMuZW5jb2RlLFxuICAgIGVuY29kZVZhbHVlc09ubHk6IGZhbHNlLFxuICAgIHNlcmlhbGl6ZURhdGU6IGZ1bmN0aW9uIHNlcmlhbGl6ZURhdGUoZGF0ZSkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGZ1bmMtbmFtZS1tYXRjaGluZ1xuICAgICAgICByZXR1cm4gdG9JU08uY2FsbChkYXRlKTtcbiAgICB9LFxuICAgIHNraXBOdWxsczogZmFsc2UsXG4gICAgc3RyaWN0TnVsbEhhbmRsaW5nOiBmYWxzZVxufTtcblxudmFyIHN0cmluZ2lmeSA9IGZ1bmN0aW9uIHN0cmluZ2lmeSggLy8gZXNsaW50LWRpc2FibGUtbGluZSBmdW5jLW5hbWUtbWF0Y2hpbmdcbiAgICBvYmplY3QsXG4gICAgcHJlZml4LFxuICAgIGdlbmVyYXRlQXJyYXlQcmVmaXgsXG4gICAgc3RyaWN0TnVsbEhhbmRsaW5nLFxuICAgIHNraXBOdWxscyxcbiAgICBlbmNvZGVyLFxuICAgIGZpbHRlcixcbiAgICBzb3J0LFxuICAgIGFsbG93RG90cyxcbiAgICBzZXJpYWxpemVEYXRlLFxuICAgIGZvcm1hdHRlcixcbiAgICBlbmNvZGVWYWx1ZXNPbmx5XG4pIHtcbiAgICB2YXIgb2JqID0gb2JqZWN0O1xuICAgIGlmICh0eXBlb2YgZmlsdGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIG9iaiA9IGZpbHRlcihwcmVmaXgsIG9iaik7XG4gICAgfSBlbHNlIGlmIChvYmogaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgICAgIG9iaiA9IHNlcmlhbGl6ZURhdGUob2JqKTtcbiAgICB9IGVsc2UgaWYgKG9iaiA9PT0gbnVsbCkge1xuICAgICAgICBpZiAoc3RyaWN0TnVsbEhhbmRsaW5nKSB7XG4gICAgICAgICAgICByZXR1cm4gZW5jb2RlciAmJiAhZW5jb2RlVmFsdWVzT25seSA/IGVuY29kZXIocHJlZml4LCBkZWZhdWx0cy5lbmNvZGVyKSA6IHByZWZpeDtcbiAgICAgICAgfVxuXG4gICAgICAgIG9iaiA9ICcnO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygb2JqID09PSAnc3RyaW5nJyB8fCB0eXBlb2Ygb2JqID09PSAnbnVtYmVyJyB8fCB0eXBlb2Ygb2JqID09PSAnYm9vbGVhbicgfHwgdXRpbHMuaXNCdWZmZXIob2JqKSkge1xuICAgICAgICBpZiAoZW5jb2Rlcikge1xuICAgICAgICAgICAgdmFyIGtleVZhbHVlID0gZW5jb2RlVmFsdWVzT25seSA/IHByZWZpeCA6IGVuY29kZXIocHJlZml4LCBkZWZhdWx0cy5lbmNvZGVyKTtcbiAgICAgICAgICAgIHJldHVybiBbZm9ybWF0dGVyKGtleVZhbHVlKSArICc9JyArIGZvcm1hdHRlcihlbmNvZGVyKG9iaiwgZGVmYXVsdHMuZW5jb2RlcikpXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW2Zvcm1hdHRlcihwcmVmaXgpICsgJz0nICsgZm9ybWF0dGVyKFN0cmluZyhvYmopKV07XG4gICAgfVxuXG4gICAgdmFyIHZhbHVlcyA9IFtdO1xuXG4gICAgaWYgKHR5cGVvZiBvYmogPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZXM7XG4gICAgfVxuXG4gICAgdmFyIG9iaktleXM7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZmlsdGVyKSkge1xuICAgICAgICBvYmpLZXlzID0gZmlsdGVyO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcbiAgICAgICAgb2JqS2V5cyA9IHNvcnQgPyBrZXlzLnNvcnQoc29ydCkgOiBrZXlzO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb2JqS2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgICB2YXIga2V5ID0gb2JqS2V5c1tpXTtcblxuICAgICAgICBpZiAoc2tpcE51bGxzICYmIG9ialtrZXldID09PSBudWxsKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgICAgICAgIHZhbHVlcyA9IHZhbHVlcy5jb25jYXQoc3RyaW5naWZ5KFxuICAgICAgICAgICAgICAgIG9ialtrZXldLFxuICAgICAgICAgICAgICAgIGdlbmVyYXRlQXJyYXlQcmVmaXgocHJlZml4LCBrZXkpLFxuICAgICAgICAgICAgICAgIGdlbmVyYXRlQXJyYXlQcmVmaXgsXG4gICAgICAgICAgICAgICAgc3RyaWN0TnVsbEhhbmRsaW5nLFxuICAgICAgICAgICAgICAgIHNraXBOdWxscyxcbiAgICAgICAgICAgICAgICBlbmNvZGVyLFxuICAgICAgICAgICAgICAgIGZpbHRlcixcbiAgICAgICAgICAgICAgICBzb3J0LFxuICAgICAgICAgICAgICAgIGFsbG93RG90cyxcbiAgICAgICAgICAgICAgICBzZXJpYWxpemVEYXRlLFxuICAgICAgICAgICAgICAgIGZvcm1hdHRlcixcbiAgICAgICAgICAgICAgICBlbmNvZGVWYWx1ZXNPbmx5XG4gICAgICAgICAgICApKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhbHVlcyA9IHZhbHVlcy5jb25jYXQoc3RyaW5naWZ5KFxuICAgICAgICAgICAgICAgIG9ialtrZXldLFxuICAgICAgICAgICAgICAgIHByZWZpeCArIChhbGxvd0RvdHMgPyAnLicgKyBrZXkgOiAnWycgKyBrZXkgKyAnXScpLFxuICAgICAgICAgICAgICAgIGdlbmVyYXRlQXJyYXlQcmVmaXgsXG4gICAgICAgICAgICAgICAgc3RyaWN0TnVsbEhhbmRsaW5nLFxuICAgICAgICAgICAgICAgIHNraXBOdWxscyxcbiAgICAgICAgICAgICAgICBlbmNvZGVyLFxuICAgICAgICAgICAgICAgIGZpbHRlcixcbiAgICAgICAgICAgICAgICBzb3J0LFxuICAgICAgICAgICAgICAgIGFsbG93RG90cyxcbiAgICAgICAgICAgICAgICBzZXJpYWxpemVEYXRlLFxuICAgICAgICAgICAgICAgIGZvcm1hdHRlcixcbiAgICAgICAgICAgICAgICBlbmNvZGVWYWx1ZXNPbmx5XG4gICAgICAgICAgICApKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZXM7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIG9wdHMpIHtcbiAgICB2YXIgb2JqID0gb2JqZWN0O1xuICAgIHZhciBvcHRpb25zID0gb3B0cyA/IHV0aWxzLmFzc2lnbih7fSwgb3B0cykgOiB7fTtcblxuICAgIGlmIChvcHRpb25zLmVuY29kZXIgIT09IG51bGwgJiYgb3B0aW9ucy5lbmNvZGVyICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIG9wdGlvbnMuZW5jb2RlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFbmNvZGVyIGhhcyB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICAgIH1cblxuICAgIHZhciBkZWxpbWl0ZXIgPSB0eXBlb2Ygb3B0aW9ucy5kZWxpbWl0ZXIgPT09ICd1bmRlZmluZWQnID8gZGVmYXVsdHMuZGVsaW1pdGVyIDogb3B0aW9ucy5kZWxpbWl0ZXI7XG4gICAgdmFyIHN0cmljdE51bGxIYW5kbGluZyA9IHR5cGVvZiBvcHRpb25zLnN0cmljdE51bGxIYW5kbGluZyA9PT0gJ2Jvb2xlYW4nID8gb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcgOiBkZWZhdWx0cy5zdHJpY3ROdWxsSGFuZGxpbmc7XG4gICAgdmFyIHNraXBOdWxscyA9IHR5cGVvZiBvcHRpb25zLnNraXBOdWxscyA9PT0gJ2Jvb2xlYW4nID8gb3B0aW9ucy5za2lwTnVsbHMgOiBkZWZhdWx0cy5za2lwTnVsbHM7XG4gICAgdmFyIGVuY29kZSA9IHR5cGVvZiBvcHRpb25zLmVuY29kZSA9PT0gJ2Jvb2xlYW4nID8gb3B0aW9ucy5lbmNvZGUgOiBkZWZhdWx0cy5lbmNvZGU7XG4gICAgdmFyIGVuY29kZXIgPSB0eXBlb2Ygb3B0aW9ucy5lbmNvZGVyID09PSAnZnVuY3Rpb24nID8gb3B0aW9ucy5lbmNvZGVyIDogZGVmYXVsdHMuZW5jb2RlcjtcbiAgICB2YXIgc29ydCA9IHR5cGVvZiBvcHRpb25zLnNvcnQgPT09ICdmdW5jdGlvbicgPyBvcHRpb25zLnNvcnQgOiBudWxsO1xuICAgIHZhciBhbGxvd0RvdHMgPSB0eXBlb2Ygb3B0aW9ucy5hbGxvd0RvdHMgPT09ICd1bmRlZmluZWQnID8gZmFsc2UgOiBvcHRpb25zLmFsbG93RG90cztcbiAgICB2YXIgc2VyaWFsaXplRGF0ZSA9IHR5cGVvZiBvcHRpb25zLnNlcmlhbGl6ZURhdGUgPT09ICdmdW5jdGlvbicgPyBvcHRpb25zLnNlcmlhbGl6ZURhdGUgOiBkZWZhdWx0cy5zZXJpYWxpemVEYXRlO1xuICAgIHZhciBlbmNvZGVWYWx1ZXNPbmx5ID0gdHlwZW9mIG9wdGlvbnMuZW5jb2RlVmFsdWVzT25seSA9PT0gJ2Jvb2xlYW4nID8gb3B0aW9ucy5lbmNvZGVWYWx1ZXNPbmx5IDogZGVmYXVsdHMuZW5jb2RlVmFsdWVzT25seTtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMuZm9ybWF0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBvcHRpb25zLmZvcm1hdCA9IGZvcm1hdHNbJ2RlZmF1bHQnXTtcbiAgICB9IGVsc2UgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZm9ybWF0cy5mb3JtYXR0ZXJzLCBvcHRpb25zLmZvcm1hdCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVW5rbm93biBmb3JtYXQgb3B0aW9uIHByb3ZpZGVkLicpO1xuICAgIH1cbiAgICB2YXIgZm9ybWF0dGVyID0gZm9ybWF0cy5mb3JtYXR0ZXJzW29wdGlvbnMuZm9ybWF0XTtcbiAgICB2YXIgb2JqS2V5cztcbiAgICB2YXIgZmlsdGVyO1xuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmZpbHRlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBmaWx0ZXIgPSBvcHRpb25zLmZpbHRlcjtcbiAgICAgICAgb2JqID0gZmlsdGVyKCcnLCBvYmopO1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShvcHRpb25zLmZpbHRlcikpIHtcbiAgICAgICAgZmlsdGVyID0gb3B0aW9ucy5maWx0ZXI7XG4gICAgICAgIG9iaktleXMgPSBmaWx0ZXI7XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBbXTtcblxuICAgIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cblxuICAgIHZhciBhcnJheUZvcm1hdDtcbiAgICBpZiAob3B0aW9ucy5hcnJheUZvcm1hdCBpbiBhcnJheVByZWZpeEdlbmVyYXRvcnMpIHtcbiAgICAgICAgYXJyYXlGb3JtYXQgPSBvcHRpb25zLmFycmF5Rm9ybWF0O1xuICAgIH0gZWxzZSBpZiAoJ2luZGljZXMnIGluIG9wdGlvbnMpIHtcbiAgICAgICAgYXJyYXlGb3JtYXQgPSBvcHRpb25zLmluZGljZXMgPyAnaW5kaWNlcycgOiAncmVwZWF0JztcbiAgICB9IGVsc2Uge1xuICAgICAgICBhcnJheUZvcm1hdCA9ICdpbmRpY2VzJztcbiAgICB9XG5cbiAgICB2YXIgZ2VuZXJhdGVBcnJheVByZWZpeCA9IGFycmF5UHJlZml4R2VuZXJhdG9yc1thcnJheUZvcm1hdF07XG5cbiAgICBpZiAoIW9iaktleXMpIHtcbiAgICAgICAgb2JqS2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG4gICAgfVxuXG4gICAgaWYgKHNvcnQpIHtcbiAgICAgICAgb2JqS2V5cy5zb3J0KHNvcnQpO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb2JqS2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgICB2YXIga2V5ID0gb2JqS2V5c1tpXTtcblxuICAgICAgICBpZiAoc2tpcE51bGxzICYmIG9ialtrZXldID09PSBudWxsKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChzdHJpbmdpZnkoXG4gICAgICAgICAgICBvYmpba2V5XSxcbiAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgIGdlbmVyYXRlQXJyYXlQcmVmaXgsXG4gICAgICAgICAgICBzdHJpY3ROdWxsSGFuZGxpbmcsXG4gICAgICAgICAgICBza2lwTnVsbHMsXG4gICAgICAgICAgICBlbmNvZGUgPyBlbmNvZGVyIDogbnVsbCxcbiAgICAgICAgICAgIGZpbHRlcixcbiAgICAgICAgICAgIHNvcnQsXG4gICAgICAgICAgICBhbGxvd0RvdHMsXG4gICAgICAgICAgICBzZXJpYWxpemVEYXRlLFxuICAgICAgICAgICAgZm9ybWF0dGVyLFxuICAgICAgICAgICAgZW5jb2RlVmFsdWVzT25seVxuICAgICAgICApKTtcbiAgICB9XG5cbiAgICB2YXIgam9pbmVkID0ga2V5cy5qb2luKGRlbGltaXRlcik7XG4gICAgdmFyIHByZWZpeCA9IG9wdGlvbnMuYWRkUXVlcnlQcmVmaXggPT09IHRydWUgPyAnPycgOiAnJztcblxuICAgIHJldHVybiBqb2luZWQubGVuZ3RoID4gMCA/IHByZWZpeCArIGpvaW5lZCA6ICcnO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xuXG52YXIgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxudmFyIGRlZmF1bHRzID0ge1xuICAgIGFsbG93RG90czogZmFsc2UsXG4gICAgYWxsb3dQcm90b3R5cGVzOiBmYWxzZSxcbiAgICBhcnJheUxpbWl0OiAyMCxcbiAgICBkZWNvZGVyOiB1dGlscy5kZWNvZGUsXG4gICAgZGVsaW1pdGVyOiAnJicsXG4gICAgZGVwdGg6IDUsXG4gICAgcGFyYW1ldGVyTGltaXQ6IDEwMDAsXG4gICAgcGxhaW5PYmplY3RzOiBmYWxzZSxcbiAgICBzdHJpY3ROdWxsSGFuZGxpbmc6IGZhbHNlXG59O1xuXG52YXIgcGFyc2VWYWx1ZXMgPSBmdW5jdGlvbiBwYXJzZVF1ZXJ5U3RyaW5nVmFsdWVzKHN0ciwgb3B0aW9ucykge1xuICAgIHZhciBvYmogPSB7fTtcbiAgICB2YXIgY2xlYW5TdHIgPSBvcHRpb25zLmlnbm9yZVF1ZXJ5UHJlZml4ID8gc3RyLnJlcGxhY2UoL15cXD8vLCAnJykgOiBzdHI7XG4gICAgdmFyIGxpbWl0ID0gb3B0aW9ucy5wYXJhbWV0ZXJMaW1pdCA9PT0gSW5maW5pdHkgPyB1bmRlZmluZWQgOiBvcHRpb25zLnBhcmFtZXRlckxpbWl0O1xuICAgIHZhciBwYXJ0cyA9IGNsZWFuU3RyLnNwbGl0KG9wdGlvbnMuZGVsaW1pdGVyLCBsaW1pdCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhcnRzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIHZhciBwYXJ0ID0gcGFydHNbaV07XG5cbiAgICAgICAgdmFyIGJyYWNrZXRFcXVhbHNQb3MgPSBwYXJ0LmluZGV4T2YoJ109Jyk7XG4gICAgICAgIHZhciBwb3MgPSBicmFja2V0RXF1YWxzUG9zID09PSAtMSA/IHBhcnQuaW5kZXhPZignPScpIDogYnJhY2tldEVxdWFsc1BvcyArIDE7XG5cbiAgICAgICAgdmFyIGtleSwgdmFsO1xuICAgICAgICBpZiAocG9zID09PSAtMSkge1xuICAgICAgICAgICAga2V5ID0gb3B0aW9ucy5kZWNvZGVyKHBhcnQsIGRlZmF1bHRzLmRlY29kZXIpO1xuICAgICAgICAgICAgdmFsID0gb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcgPyBudWxsIDogJyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBrZXkgPSBvcHRpb25zLmRlY29kZXIocGFydC5zbGljZSgwLCBwb3MpLCBkZWZhdWx0cy5kZWNvZGVyKTtcbiAgICAgICAgICAgIHZhbCA9IG9wdGlvbnMuZGVjb2RlcihwYXJ0LnNsaWNlKHBvcyArIDEpLCBkZWZhdWx0cy5kZWNvZGVyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaGFzLmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgICAgICBvYmpba2V5XSA9IFtdLmNvbmNhdChvYmpba2V5XSkuY29uY2F0KHZhbCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvYmpba2V5XSA9IHZhbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBvYmo7XG59O1xuXG52YXIgcGFyc2VPYmplY3QgPSBmdW5jdGlvbiAoY2hhaW4sIHZhbCwgb3B0aW9ucykge1xuICAgIHZhciBsZWFmID0gdmFsO1xuXG4gICAgZm9yICh2YXIgaSA9IGNoYWluLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBvYmo7XG4gICAgICAgIHZhciByb290ID0gY2hhaW5baV07XG5cbiAgICAgICAgaWYgKHJvb3QgPT09ICdbXScpIHtcbiAgICAgICAgICAgIG9iaiA9IFtdO1xuICAgICAgICAgICAgb2JqID0gb2JqLmNvbmNhdChsZWFmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9iaiA9IG9wdGlvbnMucGxhaW5PYmplY3RzID8gT2JqZWN0LmNyZWF0ZShudWxsKSA6IHt9O1xuICAgICAgICAgICAgdmFyIGNsZWFuUm9vdCA9IHJvb3QuY2hhckF0KDApID09PSAnWycgJiYgcm9vdC5jaGFyQXQocm9vdC5sZW5ndGggLSAxKSA9PT0gJ10nID8gcm9vdC5zbGljZSgxLCAtMSkgOiByb290O1xuICAgICAgICAgICAgdmFyIGluZGV4ID0gcGFyc2VJbnQoY2xlYW5Sb290LCAxMCk7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgIWlzTmFOKGluZGV4KVxuICAgICAgICAgICAgICAgICYmIHJvb3QgIT09IGNsZWFuUm9vdFxuICAgICAgICAgICAgICAgICYmIFN0cmluZyhpbmRleCkgPT09IGNsZWFuUm9vdFxuICAgICAgICAgICAgICAgICYmIGluZGV4ID49IDBcbiAgICAgICAgICAgICAgICAmJiAob3B0aW9ucy5wYXJzZUFycmF5cyAmJiBpbmRleCA8PSBvcHRpb25zLmFycmF5TGltaXQpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBvYmogPSBbXTtcbiAgICAgICAgICAgICAgICBvYmpbaW5kZXhdID0gbGVhZjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgb2JqW2NsZWFuUm9vdF0gPSBsZWFmO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbGVhZiA9IG9iajtcbiAgICB9XG5cbiAgICByZXR1cm4gbGVhZjtcbn07XG5cbnZhciBwYXJzZUtleXMgPSBmdW5jdGlvbiBwYXJzZVF1ZXJ5U3RyaW5nS2V5cyhnaXZlbktleSwgdmFsLCBvcHRpb25zKSB7XG4gICAgaWYgKCFnaXZlbktleSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gVHJhbnNmb3JtIGRvdCBub3RhdGlvbiB0byBicmFja2V0IG5vdGF0aW9uXG4gICAgdmFyIGtleSA9IG9wdGlvbnMuYWxsb3dEb3RzID8gZ2l2ZW5LZXkucmVwbGFjZSgvXFwuKFteLltdKykvZywgJ1skMV0nKSA6IGdpdmVuS2V5O1xuXG4gICAgLy8gVGhlIHJlZ2V4IGNodW5rc1xuXG4gICAgdmFyIGJyYWNrZXRzID0gLyhcXFtbXltcXF1dKl0pLztcbiAgICB2YXIgY2hpbGQgPSAvKFxcW1teW1xcXV0qXSkvZztcblxuICAgIC8vIEdldCB0aGUgcGFyZW50XG5cbiAgICB2YXIgc2VnbWVudCA9IGJyYWNrZXRzLmV4ZWMoa2V5KTtcbiAgICB2YXIgcGFyZW50ID0gc2VnbWVudCA/IGtleS5zbGljZSgwLCBzZWdtZW50LmluZGV4KSA6IGtleTtcblxuICAgIC8vIFN0YXNoIHRoZSBwYXJlbnQgaWYgaXQgZXhpc3RzXG5cbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgICAgLy8gSWYgd2UgYXJlbid0IHVzaW5nIHBsYWluIG9iamVjdHMsIG9wdGlvbmFsbHkgcHJlZml4IGtleXNcbiAgICAgICAgLy8gdGhhdCB3b3VsZCBvdmVyd3JpdGUgb2JqZWN0IHByb3RvdHlwZSBwcm9wZXJ0aWVzXG4gICAgICAgIGlmICghb3B0aW9ucy5wbGFpbk9iamVjdHMgJiYgaGFzLmNhbGwoT2JqZWN0LnByb3RvdHlwZSwgcGFyZW50KSkge1xuICAgICAgICAgICAgaWYgKCFvcHRpb25zLmFsbG93UHJvdG90eXBlcykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGtleXMucHVzaChwYXJlbnQpO1xuICAgIH1cblxuICAgIC8vIExvb3AgdGhyb3VnaCBjaGlsZHJlbiBhcHBlbmRpbmcgdG8gdGhlIGFycmF5IHVudGlsIHdlIGhpdCBkZXB0aFxuXG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlICgoc2VnbWVudCA9IGNoaWxkLmV4ZWMoa2V5KSkgIT09IG51bGwgJiYgaSA8IG9wdGlvbnMuZGVwdGgpIHtcbiAgICAgICAgaSArPSAxO1xuICAgICAgICBpZiAoIW9wdGlvbnMucGxhaW5PYmplY3RzICYmIGhhcy5jYWxsKE9iamVjdC5wcm90b3R5cGUsIHNlZ21lbnRbMV0uc2xpY2UoMSwgLTEpKSkge1xuICAgICAgICAgICAgaWYgKCFvcHRpb25zLmFsbG93UHJvdG90eXBlcykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBrZXlzLnB1c2goc2VnbWVudFsxXSk7XG4gICAgfVxuXG4gICAgLy8gSWYgdGhlcmUncyBhIHJlbWFpbmRlciwganVzdCBhZGQgd2hhdGV2ZXIgaXMgbGVmdFxuXG4gICAgaWYgKHNlZ21lbnQpIHtcbiAgICAgICAga2V5cy5wdXNoKCdbJyArIGtleS5zbGljZShzZWdtZW50LmluZGV4KSArICddJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhcnNlT2JqZWN0KGtleXMsIHZhbCwgb3B0aW9ucyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzdHIsIG9wdHMpIHtcbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgPyB1dGlscy5hc3NpZ24oe30sIG9wdHMpIDoge307XG5cbiAgICBpZiAob3B0aW9ucy5kZWNvZGVyICE9PSBudWxsICYmIG9wdGlvbnMuZGVjb2RlciAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvcHRpb25zLmRlY29kZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRGVjb2RlciBoYXMgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICBvcHRpb25zLmlnbm9yZVF1ZXJ5UHJlZml4ID0gb3B0aW9ucy5pZ25vcmVRdWVyeVByZWZpeCA9PT0gdHJ1ZTtcbiAgICBvcHRpb25zLmRlbGltaXRlciA9IHR5cGVvZiBvcHRpb25zLmRlbGltaXRlciA9PT0gJ3N0cmluZycgfHwgdXRpbHMuaXNSZWdFeHAob3B0aW9ucy5kZWxpbWl0ZXIpID8gb3B0aW9ucy5kZWxpbWl0ZXIgOiBkZWZhdWx0cy5kZWxpbWl0ZXI7XG4gICAgb3B0aW9ucy5kZXB0aCA9IHR5cGVvZiBvcHRpb25zLmRlcHRoID09PSAnbnVtYmVyJyA/IG9wdGlvbnMuZGVwdGggOiBkZWZhdWx0cy5kZXB0aDtcbiAgICBvcHRpb25zLmFycmF5TGltaXQgPSB0eXBlb2Ygb3B0aW9ucy5hcnJheUxpbWl0ID09PSAnbnVtYmVyJyA/IG9wdGlvbnMuYXJyYXlMaW1pdCA6IGRlZmF1bHRzLmFycmF5TGltaXQ7XG4gICAgb3B0aW9ucy5wYXJzZUFycmF5cyA9IG9wdGlvbnMucGFyc2VBcnJheXMgIT09IGZhbHNlO1xuICAgIG9wdGlvbnMuZGVjb2RlciA9IHR5cGVvZiBvcHRpb25zLmRlY29kZXIgPT09ICdmdW5jdGlvbicgPyBvcHRpb25zLmRlY29kZXIgOiBkZWZhdWx0cy5kZWNvZGVyO1xuICAgIG9wdGlvbnMuYWxsb3dEb3RzID0gdHlwZW9mIG9wdGlvbnMuYWxsb3dEb3RzID09PSAnYm9vbGVhbicgPyBvcHRpb25zLmFsbG93RG90cyA6IGRlZmF1bHRzLmFsbG93RG90cztcbiAgICBvcHRpb25zLnBsYWluT2JqZWN0cyA9IHR5cGVvZiBvcHRpb25zLnBsYWluT2JqZWN0cyA9PT0gJ2Jvb2xlYW4nID8gb3B0aW9ucy5wbGFpbk9iamVjdHMgOiBkZWZhdWx0cy5wbGFpbk9iamVjdHM7XG4gICAgb3B0aW9ucy5hbGxvd1Byb3RvdHlwZXMgPSB0eXBlb2Ygb3B0aW9ucy5hbGxvd1Byb3RvdHlwZXMgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuYWxsb3dQcm90b3R5cGVzIDogZGVmYXVsdHMuYWxsb3dQcm90b3R5cGVzO1xuICAgIG9wdGlvbnMucGFyYW1ldGVyTGltaXQgPSB0eXBlb2Ygb3B0aW9ucy5wYXJhbWV0ZXJMaW1pdCA9PT0gJ251bWJlcicgPyBvcHRpb25zLnBhcmFtZXRlckxpbWl0IDogZGVmYXVsdHMucGFyYW1ldGVyTGltaXQ7XG4gICAgb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcgPSB0eXBlb2Ygb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuc3RyaWN0TnVsbEhhbmRsaW5nIDogZGVmYXVsdHMuc3RyaWN0TnVsbEhhbmRsaW5nO1xuXG4gICAgaWYgKHN0ciA9PT0gJycgfHwgc3RyID09PSBudWxsIHx8IHR5cGVvZiBzdHIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBvcHRpb25zLnBsYWluT2JqZWN0cyA/IE9iamVjdC5jcmVhdGUobnVsbCkgOiB7fTtcbiAgICB9XG5cbiAgICB2YXIgdGVtcE9iaiA9IHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnID8gcGFyc2VWYWx1ZXMoc3RyLCBvcHRpb25zKSA6IHN0cjtcbiAgICB2YXIgb2JqID0gb3B0aW9ucy5wbGFpbk9iamVjdHMgPyBPYmplY3QuY3JlYXRlKG51bGwpIDoge307XG5cbiAgICAvLyBJdGVyYXRlIG92ZXIgdGhlIGtleXMgYW5kIHNldHVwIHRoZSBuZXcgb2JqZWN0XG5cbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHRlbXBPYmopO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgdmFyIG5ld09iaiA9IHBhcnNlS2V5cyhrZXksIHRlbXBPYmpba2V5XSwgb3B0aW9ucyk7XG4gICAgICAgIG9iaiA9IHV0aWxzLm1lcmdlKG9iaiwgbmV3T2JqLCBvcHRpb25zKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdXRpbHMuY29tcGFjdChvYmopO1xufTtcbiIsIi8qIVxuICogbWVyZ2UtZGVzY3JpcHRvcnNcbiAqIENvcHlyaWdodChjKSAyMDE0IEpvbmF0aGFuIE9uZ1xuICogQ29weXJpZ2h0KGMpIDIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gbWVyZ2VcblxuLyoqXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5XG5cbi8qKlxuICogTWVyZ2UgdGhlIHByb3BlcnR5IGRlc2NyaXB0b3JzIG9mIGBzcmNgIGludG8gYGRlc3RgXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IGRlc3QgT2JqZWN0IHRvIGFkZCBkZXNjcmlwdG9ycyB0b1xuICogQHBhcmFtIHtvYmplY3R9IHNyYyBPYmplY3QgdG8gY2xvbmUgZGVzY3JpcHRvcnMgZnJvbVxuICogQHBhcmFtIHtib29sZWFufSBbcmVkZWZpbmU9dHJ1ZV0gUmVkZWZpbmUgYGRlc3RgIHByb3BlcnRpZXMgd2l0aCBgc3JjYCBwcm9wZXJ0aWVzXG4gKiBAcmV0dXJucyB7b2JqZWN0fSBSZWZlcmVuY2UgdG8gZGVzdFxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIG1lcmdlKGRlc3QsIHNyYywgcmVkZWZpbmUpIHtcbiAgaWYgKCFkZXN0KSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgZGVzdCBpcyByZXF1aXJlZCcpXG4gIH1cblxuICBpZiAoIXNyYykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IHNyYyBpcyByZXF1aXJlZCcpXG4gIH1cblxuICBpZiAocmVkZWZpbmUgPT09IHVuZGVmaW5lZCkge1xuICAgIC8vIERlZmF1bHQgdG8gdHJ1ZVxuICAgIHJlZGVmaW5lID0gdHJ1ZVxuICB9XG5cbiAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoc3JjKS5mb3JFYWNoKGZ1bmN0aW9uIGZvckVhY2hPd25Qcm9wZXJ0eU5hbWUobmFtZSkge1xuICAgIGlmICghcmVkZWZpbmUgJiYgaGFzT3duUHJvcGVydHkuY2FsbChkZXN0LCBuYW1lKSkge1xuICAgICAgLy8gU2tpcCBkZXNyaXB0b3JcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIENvcHkgZGVzY3JpcHRvclxuICAgIHZhciBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzcmMsIG5hbWUpXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGRlc3QsIG5hbWUsIGRlc2NyaXB0b3IpXG4gIH0pXG5cbiAgcmV0dXJuIGRlc3Rcbn1cbiIsIi8qIVxuICogZXhwcmVzc1xuICogQ29weXJpZ2h0KGMpIDIwMDktMjAxMyBUSiBIb2xvd2F5Y2h1a1xuICogQ29weXJpZ2h0KGMpIDIwMTMgUm9tYW4gU2h0eWxtYW5cbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgZmluYWxoYW5kbGVyID0gcmVxdWlyZSgnZmluYWxoYW5kbGVyJyk7XG52YXIgUm91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXInKTtcbnZhciBtZXRob2RzID0gcmVxdWlyZSgnbWV0aG9kcycpO1xudmFyIG1pZGRsZXdhcmUgPSByZXF1aXJlKCcuL21pZGRsZXdhcmUvaW5pdCcpO1xudmFyIHF1ZXJ5ID0gcmVxdWlyZSgnLi9taWRkbGV3YXJlL3F1ZXJ5Jyk7XG52YXIgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdleHByZXNzOmFwcGxpY2F0aW9uJyk7XG52YXIgVmlldyA9IHJlcXVpcmUoJy4vdmlldycpO1xudmFyIGh0dHAgPSByZXF1aXJlKCdodHRwJyk7XG52YXIgY29tcGlsZUVUYWcgPSByZXF1aXJlKCcuL3V0aWxzJykuY29tcGlsZUVUYWc7XG52YXIgY29tcGlsZVF1ZXJ5UGFyc2VyID0gcmVxdWlyZSgnLi91dGlscycpLmNvbXBpbGVRdWVyeVBhcnNlcjtcbnZhciBjb21waWxlVHJ1c3QgPSByZXF1aXJlKCcuL3V0aWxzJykuY29tcGlsZVRydXN0O1xudmFyIGRlcHJlY2F0ZSA9IHJlcXVpcmUoJ2RlcGQnKSgnZXhwcmVzcycpO1xudmFyIGZsYXR0ZW4gPSByZXF1aXJlKCdhcnJheS1mbGF0dGVuJyk7XG52YXIgbWVyZ2UgPSByZXF1aXJlKCd1dGlscy1tZXJnZScpO1xudmFyIHJlc29sdmUgPSByZXF1aXJlKCdwYXRoJykucmVzb2x2ZTtcbnZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJ3NldHByb3RvdHlwZW9mJylcbnZhciBzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcblxuLyoqXG4gKiBBcHBsaWNhdGlvbiBwcm90b3R5cGUuXG4gKi9cblxudmFyIGFwcCA9IGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vKipcbiAqIFZhcmlhYmxlIGZvciB0cnVzdCBwcm94eSBpbmhlcml0YW5jZSBiYWNrLWNvbXBhdFxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgdHJ1c3RQcm94eURlZmF1bHRTeW1ib2wgPSAnQEBzeW1ib2w6dHJ1c3RfcHJveHlfZGVmYXVsdCc7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgc2VydmVyLlxuICpcbiAqICAgLSBzZXR1cCBkZWZhdWx0IGNvbmZpZ3VyYXRpb25cbiAqICAgLSBzZXR1cCBkZWZhdWx0IG1pZGRsZXdhcmVcbiAqICAgLSBzZXR1cCByb3V0ZSByZWZsZWN0aW9uIG1ldGhvZHNcbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5cbmFwcC5pbml0ID0gZnVuY3Rpb24gaW5pdCgpIHtcbiAgdGhpcy5jYWNoZSA9IHt9O1xuICB0aGlzLmVuZ2luZXMgPSB7fTtcbiAgdGhpcy5zZXR0aW5ncyA9IHt9O1xuXG4gIHRoaXMuZGVmYXVsdENvbmZpZ3VyYXRpb24oKTtcbn07XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBhcHBsaWNhdGlvbiBjb25maWd1cmF0aW9uLlxuICogQHByaXZhdGVcbiAqL1xuXG5hcHAuZGVmYXVsdENvbmZpZ3VyYXRpb24gPSBmdW5jdGlvbiBkZWZhdWx0Q29uZmlndXJhdGlvbigpIHtcbiAgdmFyIGVudiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wbWVudCc7XG5cbiAgLy8gZGVmYXVsdCBzZXR0aW5nc1xuICB0aGlzLmVuYWJsZSgneC1wb3dlcmVkLWJ5Jyk7XG4gIHRoaXMuc2V0KCdldGFnJywgJ3dlYWsnKTtcbiAgdGhpcy5zZXQoJ2VudicsIGVudik7XG4gIHRoaXMuc2V0KCdxdWVyeSBwYXJzZXInLCAnZXh0ZW5kZWQnKTtcbiAgdGhpcy5zZXQoJ3N1YmRvbWFpbiBvZmZzZXQnLCAyKTtcbiAgdGhpcy5zZXQoJ3RydXN0IHByb3h5JywgZmFsc2UpO1xuXG4gIC8vIHRydXN0IHByb3h5IGluaGVyaXQgYmFjay1jb21wYXRcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMuc2V0dGluZ3MsIHRydXN0UHJveHlEZWZhdWx0U3ltYm9sLCB7XG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiB0cnVlXG4gIH0pO1xuXG4gIGRlYnVnKCdib290aW5nIGluICVzIG1vZGUnLCBlbnYpO1xuXG4gIHRoaXMub24oJ21vdW50JywgZnVuY3Rpb24gb25tb3VudChwYXJlbnQpIHtcbiAgICAvLyBpbmhlcml0IHRydXN0IHByb3h5XG4gICAgaWYgKHRoaXMuc2V0dGluZ3NbdHJ1c3RQcm94eURlZmF1bHRTeW1ib2xdID09PSB0cnVlXG4gICAgICAmJiB0eXBlb2YgcGFyZW50LnNldHRpbmdzWyd0cnVzdCBwcm94eSBmbiddID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBkZWxldGUgdGhpcy5zZXR0aW5nc1sndHJ1c3QgcHJveHknXTtcbiAgICAgIGRlbGV0ZSB0aGlzLnNldHRpbmdzWyd0cnVzdCBwcm94eSBmbiddO1xuICAgIH1cblxuICAgIC8vIGluaGVyaXQgcHJvdG9zXG4gICAgc2V0UHJvdG90eXBlT2YodGhpcy5yZXF1ZXN0LCBwYXJlbnQucmVxdWVzdClcbiAgICBzZXRQcm90b3R5cGVPZih0aGlzLnJlc3BvbnNlLCBwYXJlbnQucmVzcG9uc2UpXG4gICAgc2V0UHJvdG90eXBlT2YodGhpcy5lbmdpbmVzLCBwYXJlbnQuZW5naW5lcylcbiAgICBzZXRQcm90b3R5cGVPZih0aGlzLnNldHRpbmdzLCBwYXJlbnQuc2V0dGluZ3MpXG4gIH0pO1xuXG4gIC8vIHNldHVwIGxvY2Fsc1xuICB0aGlzLmxvY2FscyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgLy8gdG9wLW1vc3QgYXBwIGlzIG1vdW50ZWQgYXQgL1xuICB0aGlzLm1vdW50cGF0aCA9ICcvJztcblxuICAvLyBkZWZhdWx0IGxvY2Fsc1xuICB0aGlzLmxvY2Fscy5zZXR0aW5ncyA9IHRoaXMuc2V0dGluZ3M7XG5cbiAgLy8gZGVmYXVsdCBjb25maWd1cmF0aW9uXG4gIHRoaXMuc2V0KCd2aWV3JywgVmlldyk7XG4gIHRoaXMuc2V0KCd2aWV3cycsIHJlc29sdmUoJ3ZpZXdzJykpO1xuICB0aGlzLnNldCgnanNvbnAgY2FsbGJhY2sgbmFtZScsICdjYWxsYmFjaycpO1xuXG4gIGlmIChlbnYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgIHRoaXMuZW5hYmxlKCd2aWV3IGNhY2hlJyk7XG4gIH1cblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ3JvdXRlcicsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdcXCdhcHAucm91dGVyXFwnIGlzIGRlcHJlY2F0ZWQhXFxuUGxlYXNlIHNlZSB0aGUgMy54IHRvIDQueCBtaWdyYXRpb24gZ3VpZGUgZm9yIGRldGFpbHMgb24gaG93IHRvIHVwZGF0ZSB5b3VyIGFwcC4nKTtcbiAgICB9XG4gIH0pO1xufTtcblxuLyoqXG4gKiBsYXppbHkgYWRkcyB0aGUgYmFzZSByb3V0ZXIgaWYgaXQgaGFzIG5vdCB5ZXQgYmVlbiBhZGRlZC5cbiAqXG4gKiBXZSBjYW5ub3QgYWRkIHRoZSBiYXNlIHJvdXRlciBpbiB0aGUgZGVmYXVsdENvbmZpZ3VyYXRpb24gYmVjYXVzZVxuICogaXQgcmVhZHMgYXBwIHNldHRpbmdzIHdoaWNoIG1pZ2h0IGJlIHNldCBhZnRlciB0aGF0IGhhcyBydW4uXG4gKlxuICogQHByaXZhdGVcbiAqL1xuYXBwLmxhenlyb3V0ZXIgPSBmdW5jdGlvbiBsYXp5cm91dGVyKCkge1xuICBpZiAoIXRoaXMuX3JvdXRlcikge1xuICAgIHRoaXMuX3JvdXRlciA9IG5ldyBSb3V0ZXIoe1xuICAgICAgY2FzZVNlbnNpdGl2ZTogdGhpcy5lbmFibGVkKCdjYXNlIHNlbnNpdGl2ZSByb3V0aW5nJyksXG4gICAgICBzdHJpY3Q6IHRoaXMuZW5hYmxlZCgnc3RyaWN0IHJvdXRpbmcnKVxuICAgIH0pO1xuXG4gICAgdGhpcy5fcm91dGVyLnVzZShxdWVyeSh0aGlzLmdldCgncXVlcnkgcGFyc2VyIGZuJykpKTtcbiAgICB0aGlzLl9yb3V0ZXIudXNlKG1pZGRsZXdhcmUuaW5pdCh0aGlzKSk7XG4gIH1cbn07XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXEsIHJlcyBwYWlyIGludG8gdGhlIGFwcGxpY2F0aW9uLiBTdGFydHMgcGlwZWxpbmUgcHJvY2Vzc2luZy5cbiAqXG4gKiBJZiBubyBjYWxsYmFjayBpcyBwcm92aWRlZCwgdGhlbiBkZWZhdWx0IGVycm9yIGhhbmRsZXJzIHdpbGwgcmVzcG9uZFxuICogaW4gdGhlIGV2ZW50IG9mIGFuIGVycm9yIGJ1YmJsaW5nIHRocm91Z2ggdGhlIHN0YWNrLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cblxuYXBwLmhhbmRsZSA9IGZ1bmN0aW9uIGhhbmRsZShyZXEsIHJlcywgY2FsbGJhY2spIHtcbiAgdmFyIHJvdXRlciA9IHRoaXMuX3JvdXRlcjtcblxuICAvLyBmaW5hbCBoYW5kbGVyXG4gIHZhciBkb25lID0gY2FsbGJhY2sgfHwgZmluYWxoYW5kbGVyKHJlcSwgcmVzLCB7XG4gICAgZW52OiB0aGlzLmdldCgnZW52JyksXG4gICAgb25lcnJvcjogbG9nZXJyb3IuYmluZCh0aGlzKVxuICB9KTtcblxuICAvLyBubyByb3V0ZXNcbiAgaWYgKCFyb3V0ZXIpIHtcbiAgICBkZWJ1Zygnbm8gcm91dGVzIGRlZmluZWQgb24gYXBwJyk7XG4gICAgZG9uZSgpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHJvdXRlci5oYW5kbGUocmVxLCByZXMsIGRvbmUpO1xufTtcblxuLyoqXG4gKiBQcm94eSBgUm91dGVyI3VzZSgpYCB0byBhZGQgbWlkZGxld2FyZSB0byB0aGUgYXBwIHJvdXRlci5cbiAqIFNlZSBSb3V0ZXIjdXNlKCkgZG9jdW1lbnRhdGlvbiBmb3IgZGV0YWlscy5cbiAqXG4gKiBJZiB0aGUgX2ZuXyBwYXJhbWV0ZXIgaXMgYW4gZXhwcmVzcyBhcHAsIHRoZW4gaXQgd2lsbCBiZVxuICogbW91bnRlZCBhdCB0aGUgX3JvdXRlXyBzcGVjaWZpZWQuXG4gKlxuICogQHB1YmxpY1xuICovXG5cbmFwcC51c2UgPSBmdW5jdGlvbiB1c2UoZm4pIHtcbiAgdmFyIG9mZnNldCA9IDA7XG4gIHZhciBwYXRoID0gJy8nO1xuXG4gIC8vIGRlZmF1bHQgcGF0aCB0byAnLydcbiAgLy8gZGlzYW1iaWd1YXRlIGFwcC51c2UoW2ZuXSlcbiAgaWYgKHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBhcmcgPSBmbjtcblxuICAgIHdoaWxlIChBcnJheS5pc0FycmF5KGFyZykgJiYgYXJnLmxlbmd0aCAhPT0gMCkge1xuICAgICAgYXJnID0gYXJnWzBdO1xuICAgIH1cblxuICAgIC8vIGZpcnN0IGFyZyBpcyB0aGUgcGF0aFxuICAgIGlmICh0eXBlb2YgYXJnICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvZmZzZXQgPSAxO1xuICAgICAgcGF0aCA9IGZuO1xuICAgIH1cbiAgfVxuXG4gIHZhciBmbnMgPSBmbGF0dGVuKHNsaWNlLmNhbGwoYXJndW1lbnRzLCBvZmZzZXQpKTtcblxuICBpZiAoZm5zLmxlbmd0aCA9PT0gMCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FwcC51c2UoKSByZXF1aXJlcyBhIG1pZGRsZXdhcmUgZnVuY3Rpb24nKVxuICB9XG5cbiAgLy8gc2V0dXAgcm91dGVyXG4gIHRoaXMubGF6eXJvdXRlcigpO1xuICB2YXIgcm91dGVyID0gdGhpcy5fcm91dGVyO1xuXG4gIGZucy5mb3JFYWNoKGZ1bmN0aW9uIChmbikge1xuICAgIC8vIG5vbi1leHByZXNzIGFwcFxuICAgIGlmICghZm4gfHwgIWZuLmhhbmRsZSB8fCAhZm4uc2V0KSB7XG4gICAgICByZXR1cm4gcm91dGVyLnVzZShwYXRoLCBmbik7XG4gICAgfVxuXG4gICAgZGVidWcoJy51c2UgYXBwIHVuZGVyICVzJywgcGF0aCk7XG4gICAgZm4ubW91bnRwYXRoID0gcGF0aDtcbiAgICBmbi5wYXJlbnQgPSB0aGlzO1xuXG4gICAgLy8gcmVzdG9yZSAuYXBwIHByb3BlcnR5IG9uIHJlcSBhbmQgcmVzXG4gICAgcm91dGVyLnVzZShwYXRoLCBmdW5jdGlvbiBtb3VudGVkX2FwcChyZXEsIHJlcywgbmV4dCkge1xuICAgICAgdmFyIG9yaWcgPSByZXEuYXBwO1xuICAgICAgZm4uaGFuZGxlKHJlcSwgcmVzLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIHNldFByb3RvdHlwZU9mKHJlcSwgb3JpZy5yZXF1ZXN0KVxuICAgICAgICBzZXRQcm90b3R5cGVPZihyZXMsIG9yaWcucmVzcG9uc2UpXG4gICAgICAgIG5leHQoZXJyKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgLy8gbW91bnRlZCBhbiBhcHBcbiAgICBmbi5lbWl0KCdtb3VudCcsIHRoaXMpO1xuICB9LCB0aGlzKTtcblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogUHJveHkgdG8gdGhlIGFwcCBgUm91dGVyI3JvdXRlKClgXG4gKiBSZXR1cm5zIGEgbmV3IGBSb3V0ZWAgaW5zdGFuY2UgZm9yIHRoZSBfcGF0aF8uXG4gKlxuICogUm91dGVzIGFyZSBpc29sYXRlZCBtaWRkbGV3YXJlIHN0YWNrcyBmb3Igc3BlY2lmaWMgcGF0aHMuXG4gKiBTZWUgdGhlIFJvdXRlIGFwaSBkb2NzIGZvciBkZXRhaWxzLlxuICpcbiAqIEBwdWJsaWNcbiAqL1xuXG5hcHAucm91dGUgPSBmdW5jdGlvbiByb3V0ZShwYXRoKSB7XG4gIHRoaXMubGF6eXJvdXRlcigpO1xuICByZXR1cm4gdGhpcy5fcm91dGVyLnJvdXRlKHBhdGgpO1xufTtcblxuLyoqXG4gKiBSZWdpc3RlciB0aGUgZ2l2ZW4gdGVtcGxhdGUgZW5naW5lIGNhbGxiYWNrIGBmbmBcbiAqIGFzIGBleHRgLlxuICpcbiAqIEJ5IGRlZmF1bHQgd2lsbCBgcmVxdWlyZSgpYCB0aGUgZW5naW5lIGJhc2VkIG9uIHRoZVxuICogZmlsZSBleHRlbnNpb24uIEZvciBleGFtcGxlIGlmIHlvdSB0cnkgdG8gcmVuZGVyXG4gKiBhIFwiZm9vLmVqc1wiIGZpbGUgRXhwcmVzcyB3aWxsIGludm9rZSB0aGUgZm9sbG93aW5nIGludGVybmFsbHk6XG4gKlxuICogICAgIGFwcC5lbmdpbmUoJ2VqcycsIHJlcXVpcmUoJ2VqcycpLl9fZXhwcmVzcyk7XG4gKlxuICogRm9yIGVuZ2luZXMgdGhhdCBkbyBub3QgcHJvdmlkZSBgLl9fZXhwcmVzc2Agb3V0IG9mIHRoZSBib3gsXG4gKiBvciBpZiB5b3Ugd2lzaCB0byBcIm1hcFwiIGEgZGlmZmVyZW50IGV4dGVuc2lvbiB0byB0aGUgdGVtcGxhdGUgZW5naW5lXG4gKiB5b3UgbWF5IHVzZSB0aGlzIG1ldGhvZC4gRm9yIGV4YW1wbGUgbWFwcGluZyB0aGUgRUpTIHRlbXBsYXRlIGVuZ2luZSB0b1xuICogXCIuaHRtbFwiIGZpbGVzOlxuICpcbiAqICAgICBhcHAuZW5naW5lKCdodG1sJywgcmVxdWlyZSgnZWpzJykucmVuZGVyRmlsZSk7XG4gKlxuICogSW4gdGhpcyBjYXNlIEVKUyBwcm92aWRlcyBhIGAucmVuZGVyRmlsZSgpYCBtZXRob2Qgd2l0aFxuICogdGhlIHNhbWUgc2lnbmF0dXJlIHRoYXQgRXhwcmVzcyBleHBlY3RzOiBgKHBhdGgsIG9wdGlvbnMsIGNhbGxiYWNrKWAsXG4gKiB0aG91Z2ggbm90ZSB0aGF0IGl0IGFsaWFzZXMgdGhpcyBtZXRob2QgYXMgYGVqcy5fX2V4cHJlc3NgIGludGVybmFsbHlcbiAqIHNvIGlmIHlvdSdyZSB1c2luZyBcIi5lanNcIiBleHRlbnNpb25zIHlvdSBkb250IG5lZWQgdG8gZG8gYW55dGhpbmcuXG4gKlxuICogU29tZSB0ZW1wbGF0ZSBlbmdpbmVzIGRvIG5vdCBmb2xsb3cgdGhpcyBjb252ZW50aW9uLCB0aGVcbiAqIFtDb25zb2xpZGF0ZS5qc10oaHR0cHM6Ly9naXRodWIuY29tL3RqL2NvbnNvbGlkYXRlLmpzKVxuICogbGlicmFyeSB3YXMgY3JlYXRlZCB0byBtYXAgYWxsIG9mIG5vZGUncyBwb3B1bGFyIHRlbXBsYXRlXG4gKiBlbmdpbmVzIHRvIGZvbGxvdyB0aGlzIGNvbnZlbnRpb24sIHRodXMgYWxsb3dpbmcgdGhlbSB0b1xuICogd29yayBzZWFtbGVzc2x5IHdpdGhpbiBFeHByZXNzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBleHRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKiBAcmV0dXJuIHthcHB9IGZvciBjaGFpbmluZ1xuICogQHB1YmxpY1xuICovXG5cbmFwcC5lbmdpbmUgPSBmdW5jdGlvbiBlbmdpbmUoZXh0LCBmbikge1xuICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjYWxsYmFjayBmdW5jdGlvbiByZXF1aXJlZCcpO1xuICB9XG5cbiAgLy8gZ2V0IGZpbGUgZXh0ZW5zaW9uXG4gIHZhciBleHRlbnNpb24gPSBleHRbMF0gIT09ICcuJ1xuICAgID8gJy4nICsgZXh0XG4gICAgOiBleHQ7XG5cbiAgLy8gc3RvcmUgZW5naW5lXG4gIHRoaXMuZW5naW5lc1tleHRlbnNpb25dID0gZm47XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFByb3h5IHRvIGBSb3V0ZXIjcGFyYW0oKWAgd2l0aCBvbmUgYWRkZWQgYXBpIGZlYXR1cmUuIFRoZSBfbmFtZV8gcGFyYW1ldGVyXG4gKiBjYW4gYmUgYW4gYXJyYXkgb2YgbmFtZXMuXG4gKlxuICogU2VlIHRoZSBSb3V0ZXIjcGFyYW0oKSBkb2NzIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8QXJyYXl9IG5hbWVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKiBAcmV0dXJuIHthcHB9IGZvciBjaGFpbmluZ1xuICogQHB1YmxpY1xuICovXG5cbmFwcC5wYXJhbSA9IGZ1bmN0aW9uIHBhcmFtKG5hbWUsIGZuKSB7XG4gIHRoaXMubGF6eXJvdXRlcigpO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KG5hbWUpKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuYW1lLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLnBhcmFtKG5hbWVbaV0sIGZuKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHRoaXMuX3JvdXRlci5wYXJhbShuYW1lLCBmbik7XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIEFzc2lnbiBgc2V0dGluZ2AgdG8gYHZhbGAsIG9yIHJldHVybiBgc2V0dGluZ2AncyB2YWx1ZS5cbiAqXG4gKiAgICBhcHAuc2V0KCdmb28nLCAnYmFyJyk7XG4gKiAgICBhcHAuc2V0KCdmb28nKTtcbiAqICAgIC8vID0+IFwiYmFyXCJcbiAqXG4gKiBNb3VudGVkIHNlcnZlcnMgaW5oZXJpdCB0aGVpciBwYXJlbnQgc2VydmVyJ3Mgc2V0dGluZ3MuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHNldHRpbmdcbiAqIEBwYXJhbSB7Kn0gW3ZhbF1cbiAqIEByZXR1cm4ge1NlcnZlcn0gZm9yIGNoYWluaW5nXG4gKiBAcHVibGljXG4gKi9cblxuYXBwLnNldCA9IGZ1bmN0aW9uIHNldChzZXR0aW5nLCB2YWwpIHtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAvLyBhcHAuZ2V0KHNldHRpbmcpXG4gICAgcmV0dXJuIHRoaXMuc2V0dGluZ3Nbc2V0dGluZ107XG4gIH1cblxuICBkZWJ1Zygnc2V0IFwiJXNcIiB0byAlbycsIHNldHRpbmcsIHZhbCk7XG5cbiAgLy8gc2V0IHZhbHVlXG4gIHRoaXMuc2V0dGluZ3Nbc2V0dGluZ10gPSB2YWw7XG5cbiAgLy8gdHJpZ2dlciBtYXRjaGVkIHNldHRpbmdzXG4gIHN3aXRjaCAoc2V0dGluZykge1xuICAgIGNhc2UgJ2V0YWcnOlxuICAgICAgdGhpcy5zZXQoJ2V0YWcgZm4nLCBjb21waWxlRVRhZyh2YWwpKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3F1ZXJ5IHBhcnNlcic6XG4gICAgICB0aGlzLnNldCgncXVlcnkgcGFyc2VyIGZuJywgY29tcGlsZVF1ZXJ5UGFyc2VyKHZhbCkpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndHJ1c3QgcHJveHknOlxuICAgICAgdGhpcy5zZXQoJ3RydXN0IHByb3h5IGZuJywgY29tcGlsZVRydXN0KHZhbCkpO1xuXG4gICAgICAvLyB0cnVzdCBwcm94eSBpbmhlcml0IGJhY2stY29tcGF0XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcy5zZXR0aW5ncywgdHJ1c3RQcm94eURlZmF1bHRTeW1ib2wsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogZmFsc2VcbiAgICAgIH0pO1xuXG4gICAgICBicmVhaztcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBSZXR1cm4gdGhlIGFwcCdzIGFic29sdXRlIHBhdGhuYW1lXG4gKiBiYXNlZCBvbiB0aGUgcGFyZW50KHMpIHRoYXQgaGF2ZVxuICogbW91bnRlZCBpdC5cbiAqXG4gKiBGb3IgZXhhbXBsZSBpZiB0aGUgYXBwbGljYXRpb24gd2FzXG4gKiBtb3VudGVkIGFzIFwiL2FkbWluXCIsIHdoaWNoIGl0c2VsZlxuICogd2FzIG1vdW50ZWQgYXMgXCIvYmxvZ1wiIHRoZW4gdGhlXG4gKiByZXR1cm4gdmFsdWUgd291bGQgYmUgXCIvYmxvZy9hZG1pblwiLlxuICpcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBwcml2YXRlXG4gKi9cblxuYXBwLnBhdGggPSBmdW5jdGlvbiBwYXRoKCkge1xuICByZXR1cm4gdGhpcy5wYXJlbnRcbiAgICA/IHRoaXMucGFyZW50LnBhdGgoKSArIHRoaXMubW91bnRwYXRoXG4gICAgOiAnJztcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgYHNldHRpbmdgIGlzIGVuYWJsZWQgKHRydXRoeSkuXG4gKlxuICogICAgYXBwLmVuYWJsZWQoJ2ZvbycpXG4gKiAgICAvLyA9PiBmYWxzZVxuICpcbiAqICAgIGFwcC5lbmFibGUoJ2ZvbycpXG4gKiAgICBhcHAuZW5hYmxlZCgnZm9vJylcbiAqICAgIC8vID0+IHRydWVcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc2V0dGluZ1xuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBwdWJsaWNcbiAqL1xuXG5hcHAuZW5hYmxlZCA9IGZ1bmN0aW9uIGVuYWJsZWQoc2V0dGluZykge1xuICByZXR1cm4gQm9vbGVhbih0aGlzLnNldChzZXR0aW5nKSk7XG59O1xuXG4vKipcbiAqIENoZWNrIGlmIGBzZXR0aW5nYCBpcyBkaXNhYmxlZC5cbiAqXG4gKiAgICBhcHAuZGlzYWJsZWQoJ2ZvbycpXG4gKiAgICAvLyA9PiB0cnVlXG4gKlxuICogICAgYXBwLmVuYWJsZSgnZm9vJylcbiAqICAgIGFwcC5kaXNhYmxlZCgnZm9vJylcbiAqICAgIC8vID0+IGZhbHNlXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHNldHRpbmdcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAcHVibGljXG4gKi9cblxuYXBwLmRpc2FibGVkID0gZnVuY3Rpb24gZGlzYWJsZWQoc2V0dGluZykge1xuICByZXR1cm4gIXRoaXMuc2V0KHNldHRpbmcpO1xufTtcblxuLyoqXG4gKiBFbmFibGUgYHNldHRpbmdgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzZXR0aW5nXG4gKiBAcmV0dXJuIHthcHB9IGZvciBjaGFpbmluZ1xuICogQHB1YmxpY1xuICovXG5cbmFwcC5lbmFibGUgPSBmdW5jdGlvbiBlbmFibGUoc2V0dGluZykge1xuICByZXR1cm4gdGhpcy5zZXQoc2V0dGluZywgdHJ1ZSk7XG59O1xuXG4vKipcbiAqIERpc2FibGUgYHNldHRpbmdgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzZXR0aW5nXG4gKiBAcmV0dXJuIHthcHB9IGZvciBjaGFpbmluZ1xuICogQHB1YmxpY1xuICovXG5cbmFwcC5kaXNhYmxlID0gZnVuY3Rpb24gZGlzYWJsZShzZXR0aW5nKSB7XG4gIHJldHVybiB0aGlzLnNldChzZXR0aW5nLCBmYWxzZSk7XG59O1xuXG4vKipcbiAqIERlbGVnYXRlIGAuVkVSQiguLi4pYCBjYWxscyB0byBgcm91dGVyLlZFUkIoLi4uKWAuXG4gKi9cblxubWV0aG9kcy5mb3JFYWNoKGZ1bmN0aW9uKG1ldGhvZCl7XG4gIGFwcFttZXRob2RdID0gZnVuY3Rpb24ocGF0aCl7XG4gICAgaWYgKG1ldGhvZCA9PT0gJ2dldCcgJiYgYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgLy8gYXBwLmdldChzZXR0aW5nKVxuICAgICAgcmV0dXJuIHRoaXMuc2V0KHBhdGgpO1xuICAgIH1cblxuICAgIHRoaXMubGF6eXJvdXRlcigpO1xuXG4gICAgdmFyIHJvdXRlID0gdGhpcy5fcm91dGVyLnJvdXRlKHBhdGgpO1xuICAgIHJvdXRlW21ldGhvZF0uYXBwbHkocm91dGUsIHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG59KTtcblxuLyoqXG4gKiBTcGVjaWFsLWNhc2VkIFwiYWxsXCIgbWV0aG9kLCBhcHBseWluZyB0aGUgZ2l2ZW4gcm91dGUgYHBhdGhgLFxuICogbWlkZGxld2FyZSwgYW5kIGNhbGxiYWNrIHRvIF9ldmVyeV8gSFRUUCBtZXRob2QuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhdGhcbiAqIEBwYXJhbSB7RnVuY3Rpb259IC4uLlxuICogQHJldHVybiB7YXBwfSBmb3IgY2hhaW5pbmdcbiAqIEBwdWJsaWNcbiAqL1xuXG5hcHAuYWxsID0gZnVuY3Rpb24gYWxsKHBhdGgpIHtcbiAgdGhpcy5sYXp5cm91dGVyKCk7XG5cbiAgdmFyIHJvdXRlID0gdGhpcy5fcm91dGVyLnJvdXRlKHBhdGgpO1xuICB2YXIgYXJncyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IG1ldGhvZHMubGVuZ3RoOyBpKyspIHtcbiAgICByb3V0ZVttZXRob2RzW2ldXS5hcHBseShyb3V0ZSwgYXJncyk7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8vIGRlbCAtPiBkZWxldGUgYWxpYXNcblxuYXBwLmRlbCA9IGRlcHJlY2F0ZS5mdW5jdGlvbihhcHAuZGVsZXRlLCAnYXBwLmRlbDogVXNlIGFwcC5kZWxldGUgaW5zdGVhZCcpO1xuXG4vKipcbiAqIFJlbmRlciB0aGUgZ2l2ZW4gdmlldyBgbmFtZWAgbmFtZSB3aXRoIGBvcHRpb25zYFxuICogYW5kIGEgY2FsbGJhY2sgYWNjZXB0aW5nIGFuIGVycm9yIGFuZCB0aGVcbiAqIHJlbmRlcmVkIHRlbXBsYXRlIHN0cmluZy5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqICAgIGFwcC5yZW5kZXIoJ2VtYWlsJywgeyBuYW1lOiAnVG9iaScgfSwgZnVuY3Rpb24oZXJyLCBodG1sKXtcbiAqICAgICAgLy8gLi4uXG4gKiAgICB9KVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gKiBAcGFyYW0ge09iamVjdHxGdW5jdGlvbn0gb3B0aW9ucyBvciBmblxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEBwdWJsaWNcbiAqL1xuXG5hcHAucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKG5hbWUsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIHZhciBjYWNoZSA9IHRoaXMuY2FjaGU7XG4gIHZhciBkb25lID0gY2FsbGJhY2s7XG4gIHZhciBlbmdpbmVzID0gdGhpcy5lbmdpbmVzO1xuICB2YXIgb3B0cyA9IG9wdGlvbnM7XG4gIHZhciByZW5kZXJPcHRpb25zID0ge307XG4gIHZhciB2aWV3O1xuXG4gIC8vIHN1cHBvcnQgY2FsbGJhY2sgZnVuY3Rpb24gYXMgc2Vjb25kIGFyZ1xuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBkb25lID0gb3B0aW9ucztcbiAgICBvcHRzID0ge307XG4gIH1cblxuICAvLyBtZXJnZSBhcHAubG9jYWxzXG4gIG1lcmdlKHJlbmRlck9wdGlvbnMsIHRoaXMubG9jYWxzKTtcblxuICAvLyBtZXJnZSBvcHRpb25zLl9sb2NhbHNcbiAgaWYgKG9wdHMuX2xvY2Fscykge1xuICAgIG1lcmdlKHJlbmRlck9wdGlvbnMsIG9wdHMuX2xvY2Fscyk7XG4gIH1cblxuICAvLyBtZXJnZSBvcHRpb25zXG4gIG1lcmdlKHJlbmRlck9wdGlvbnMsIG9wdHMpO1xuXG4gIC8vIHNldCAuY2FjaGUgdW5sZXNzIGV4cGxpY2l0bHkgcHJvdmlkZWRcbiAgaWYgKHJlbmRlck9wdGlvbnMuY2FjaGUgPT0gbnVsbCkge1xuICAgIHJlbmRlck9wdGlvbnMuY2FjaGUgPSB0aGlzLmVuYWJsZWQoJ3ZpZXcgY2FjaGUnKTtcbiAgfVxuXG4gIC8vIHByaW1lZCBjYWNoZVxuICBpZiAocmVuZGVyT3B0aW9ucy5jYWNoZSkge1xuICAgIHZpZXcgPSBjYWNoZVtuYW1lXTtcbiAgfVxuXG4gIC8vIHZpZXdcbiAgaWYgKCF2aWV3KSB7XG4gICAgdmFyIFZpZXcgPSB0aGlzLmdldCgndmlldycpO1xuXG4gICAgdmlldyA9IG5ldyBWaWV3KG5hbWUsIHtcbiAgICAgIGRlZmF1bHRFbmdpbmU6IHRoaXMuZ2V0KCd2aWV3IGVuZ2luZScpLFxuICAgICAgcm9vdDogdGhpcy5nZXQoJ3ZpZXdzJyksXG4gICAgICBlbmdpbmVzOiBlbmdpbmVzXG4gICAgfSk7XG5cbiAgICBpZiAoIXZpZXcucGF0aCkge1xuICAgICAgdmFyIGRpcnMgPSBBcnJheS5pc0FycmF5KHZpZXcucm9vdCkgJiYgdmlldy5yb290Lmxlbmd0aCA+IDFcbiAgICAgICAgPyAnZGlyZWN0b3JpZXMgXCInICsgdmlldy5yb290LnNsaWNlKDAsIC0xKS5qb2luKCdcIiwgXCInKSArICdcIiBvciBcIicgKyB2aWV3LnJvb3Rbdmlldy5yb290Lmxlbmd0aCAtIDFdICsgJ1wiJ1xuICAgICAgICA6ICdkaXJlY3RvcnkgXCInICsgdmlldy5yb290ICsgJ1wiJ1xuICAgICAgdmFyIGVyciA9IG5ldyBFcnJvcignRmFpbGVkIHRvIGxvb2t1cCB2aWV3IFwiJyArIG5hbWUgKyAnXCIgaW4gdmlld3MgJyArIGRpcnMpO1xuICAgICAgZXJyLnZpZXcgPSB2aWV3O1xuICAgICAgcmV0dXJuIGRvbmUoZXJyKTtcbiAgICB9XG5cbiAgICAvLyBwcmltZSB0aGUgY2FjaGVcbiAgICBpZiAocmVuZGVyT3B0aW9ucy5jYWNoZSkge1xuICAgICAgY2FjaGVbbmFtZV0gPSB2aWV3O1xuICAgIH1cbiAgfVxuXG4gIC8vIHJlbmRlclxuICB0cnlSZW5kZXIodmlldywgcmVuZGVyT3B0aW9ucywgZG9uZSk7XG59O1xuXG4vKipcbiAqIExpc3RlbiBmb3IgY29ubmVjdGlvbnMuXG4gKlxuICogQSBub2RlIGBodHRwLlNlcnZlcmAgaXMgcmV0dXJuZWQsIHdpdGggdGhpc1xuICogYXBwbGljYXRpb24gKHdoaWNoIGlzIGEgYEZ1bmN0aW9uYCkgYXMgaXRzXG4gKiBjYWxsYmFjay4gSWYgeW91IHdpc2ggdG8gY3JlYXRlIGJvdGggYW4gSFRUUFxuICogYW5kIEhUVFBTIHNlcnZlciB5b3UgbWF5IGRvIHNvIHdpdGggdGhlIFwiaHR0cFwiXG4gKiBhbmQgXCJodHRwc1wiIG1vZHVsZXMgYXMgc2hvd24gaGVyZTpcbiAqXG4gKiAgICB2YXIgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKVxuICogICAgICAsIGh0dHBzID0gcmVxdWlyZSgnaHR0cHMnKVxuICogICAgICAsIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbiAqICAgICAgLCBhcHAgPSBleHByZXNzKCk7XG4gKlxuICogICAgaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKS5saXN0ZW4oODApO1xuICogICAgaHR0cHMuY3JlYXRlU2VydmVyKHsgLi4uIH0sIGFwcCkubGlzdGVuKDQ0Myk7XG4gKlxuICogQHJldHVybiB7aHR0cC5TZXJ2ZXJ9XG4gKiBAcHVibGljXG4gKi9cblxuYXBwLmxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbigpIHtcbiAgdmFyIHNlcnZlciA9IGh0dHAuY3JlYXRlU2VydmVyKHRoaXMpO1xuICByZXR1cm4gc2VydmVyLmxpc3Rlbi5hcHBseShzZXJ2ZXIsIGFyZ3VtZW50cyk7XG59O1xuXG4vKipcbiAqIExvZyBlcnJvciB1c2luZyBjb25zb2xlLmVycm9yLlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVyclxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBsb2dlcnJvcihlcnIpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgaWYgKHRoaXMuZ2V0KCdlbnYnKSAhPT0gJ3Rlc3QnKSBjb25zb2xlLmVycm9yKGVyci5zdGFjayB8fCBlcnIudG9TdHJpbmcoKSk7XG59XG5cbi8qKlxuICogVHJ5IHJlbmRlcmluZyBhIHZpZXcuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHRyeVJlbmRlcih2aWV3LCBvcHRpb25zLCBjYWxsYmFjaykge1xuICB0cnkge1xuICAgIHZpZXcucmVuZGVyKG9wdGlvbnMsIGNhbGxiYWNrKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfVxufVxuIiwiLyohXG4gKiBmaW5hbGhhbmRsZXJcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTcgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2ZpbmFsaGFuZGxlcicpXG52YXIgZW5jb2RlVXJsID0gcmVxdWlyZSgnZW5jb2RldXJsJylcbnZhciBlc2NhcGVIdG1sID0gcmVxdWlyZSgnZXNjYXBlLWh0bWwnKVxudmFyIG9uRmluaXNoZWQgPSByZXF1aXJlKCdvbi1maW5pc2hlZCcpXG52YXIgcGFyc2VVcmwgPSByZXF1aXJlKCdwYXJzZXVybCcpXG52YXIgc3RhdHVzZXMgPSByZXF1aXJlKCdzdGF0dXNlcycpXG52YXIgdW5waXBlID0gcmVxdWlyZSgndW5waXBlJylcblxuLyoqXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgRE9VQkxFX1NQQUNFX1JFR0VYUCA9IC9cXHgyMHsyfS9nXG52YXIgTkVXTElORV9SRUdFWFAgPSAvXFxuL2dcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbnZhciBkZWZlciA9IHR5cGVvZiBzZXRJbW1lZGlhdGUgPT09ICdmdW5jdGlvbidcbiAgPyBzZXRJbW1lZGlhdGVcbiAgOiBmdW5jdGlvbiAoZm4pIHsgcHJvY2Vzcy5uZXh0VGljayhmbi5iaW5kLmFwcGx5KGZuLCBhcmd1bWVudHMpKSB9XG52YXIgaXNGaW5pc2hlZCA9IG9uRmluaXNoZWQuaXNGaW5pc2hlZFxuXG4vKipcbiAqIENyZWF0ZSBhIG1pbmltYWwgSFRNTCBkb2N1bWVudC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVIdG1sRG9jdW1lbnQgKG1lc3NhZ2UpIHtcbiAgdmFyIGJvZHkgPSBlc2NhcGVIdG1sKG1lc3NhZ2UpXG4gICAgLnJlcGxhY2UoTkVXTElORV9SRUdFWFAsICc8YnI+JylcbiAgICAucmVwbGFjZShET1VCTEVfU1BBQ0VfUkVHRVhQLCAnICZuYnNwOycpXG5cbiAgcmV0dXJuICc8IURPQ1RZUEUgaHRtbD5cXG4nICtcbiAgICAnPGh0bWwgbGFuZz1cImVuXCI+XFxuJyArXG4gICAgJzxoZWFkPlxcbicgK1xuICAgICc8bWV0YSBjaGFyc2V0PVwidXRmLThcIj5cXG4nICtcbiAgICAnPHRpdGxlPkVycm9yPC90aXRsZT5cXG4nICtcbiAgICAnPC9oZWFkPlxcbicgK1xuICAgICc8Ym9keT5cXG4nICtcbiAgICAnPHByZT4nICsgYm9keSArICc8L3ByZT5cXG4nICtcbiAgICAnPC9ib2R5PlxcbicgK1xuICAgICc8L2h0bWw+XFxuJ1xufVxuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZmluYWxoYW5kbGVyXG5cbi8qKlxuICogQ3JlYXRlIGEgZnVuY3Rpb24gdG8gaGFuZGxlIHRoZSBmaW5hbCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge1JlcXVlc3R9IHJlcVxuICogQHBhcmFtIHtSZXNwb25zZX0gcmVzXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBmaW5hbGhhbmRsZXIgKHJlcSwgcmVzLCBvcHRpb25zKSB7XG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fVxuXG4gIC8vIGdldCBlbnZpcm9ubWVudFxuICB2YXIgZW52ID0gb3B0cy5lbnYgfHwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHwgJ2RldmVsb3BtZW50J1xuXG4gIC8vIGdldCBlcnJvciBjYWxsYmFja1xuICB2YXIgb25lcnJvciA9IG9wdHMub25lcnJvclxuXG4gIHJldHVybiBmdW5jdGlvbiAoZXJyKSB7XG4gICAgdmFyIGhlYWRlcnNcbiAgICB2YXIgbXNnXG4gICAgdmFyIHN0YXR1c1xuXG4gICAgLy8gaWdub3JlIDQwNCBvbiBpbi1mbGlnaHQgcmVzcG9uc2VcbiAgICBpZiAoIWVyciAmJiBoZWFkZXJzU2VudChyZXMpKSB7XG4gICAgICBkZWJ1ZygnY2Fubm90IDQwNCBhZnRlciBoZWFkZXJzIHNlbnQnKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgLy8gdW5oYW5kbGVkIGVycm9yXG4gICAgaWYgKGVycikge1xuICAgICAgLy8gcmVzcGVjdCBzdGF0dXMgY29kZSBmcm9tIGVycm9yXG4gICAgICBzdGF0dXMgPSBnZXRFcnJvclN0YXR1c0NvZGUoZXJyKVxuXG4gICAgICBpZiAoc3RhdHVzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgLy8gZmFsbGJhY2sgdG8gc3RhdHVzIGNvZGUgb24gcmVzcG9uc2VcbiAgICAgICAgc3RhdHVzID0gZ2V0UmVzcG9uc2VTdGF0dXNDb2RlKHJlcylcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIHJlc3BlY3QgaGVhZGVycyBmcm9tIGVycm9yXG4gICAgICAgIGhlYWRlcnMgPSBnZXRFcnJvckhlYWRlcnMoZXJyKVxuICAgICAgfVxuXG4gICAgICAvLyBnZXQgZXJyb3IgbWVzc2FnZVxuICAgICAgbXNnID0gZ2V0RXJyb3JNZXNzYWdlKGVyciwgc3RhdHVzLCBlbnYpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIG5vdCBmb3VuZFxuICAgICAgc3RhdHVzID0gNDA0XG4gICAgICBtc2cgPSAnQ2Fubm90ICcgKyByZXEubWV0aG9kICsgJyAnICsgZW5jb2RlVXJsKGdldFJlc291cmNlTmFtZShyZXEpKVxuICAgIH1cblxuICAgIGRlYnVnKCdkZWZhdWx0ICVzJywgc3RhdHVzKVxuXG4gICAgLy8gc2NoZWR1bGUgb25lcnJvciBjYWxsYmFja1xuICAgIGlmIChlcnIgJiYgb25lcnJvcikge1xuICAgICAgZGVmZXIob25lcnJvciwgZXJyLCByZXEsIHJlcylcbiAgICB9XG5cbiAgICAvLyBjYW5ub3QgYWN0dWFsbHkgcmVzcG9uZFxuICAgIGlmIChoZWFkZXJzU2VudChyZXMpKSB7XG4gICAgICBkZWJ1ZygnY2Fubm90ICVkIGFmdGVyIGhlYWRlcnMgc2VudCcsIHN0YXR1cylcbiAgICAgIHJlcS5zb2NrZXQuZGVzdHJveSgpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyBzZW5kIHJlc3BvbnNlXG4gICAgc2VuZChyZXEsIHJlcywgc3RhdHVzLCBoZWFkZXJzLCBtc2cpXG4gIH1cbn1cblxuLyoqXG4gKiBHZXQgaGVhZGVycyBmcm9tIEVycm9yIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJcbiAqIEByZXR1cm4ge29iamVjdH1cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0RXJyb3JIZWFkZXJzIChlcnIpIHtcbiAgaWYgKCFlcnIuaGVhZGVycyB8fCB0eXBlb2YgZXJyLmhlYWRlcnMgIT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9XG5cbiAgdmFyIGhlYWRlcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpXG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMoZXJyLmhlYWRlcnMpXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNbaV1cbiAgICBoZWFkZXJzW2tleV0gPSBlcnIuaGVhZGVyc1trZXldXG4gIH1cblxuICByZXR1cm4gaGVhZGVyc1xufVxuXG4vKipcbiAqIEdldCBtZXNzYWdlIGZyb20gRXJyb3Igb2JqZWN0LCBmYWxsYmFjayB0byBzdGF0dXMgbWVzc2FnZS5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJcbiAqIEBwYXJhbSB7bnVtYmVyfSBzdGF0dXNcbiAqIEBwYXJhbSB7c3RyaW5nfSBlbnZcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0RXJyb3JNZXNzYWdlIChlcnIsIHN0YXR1cywgZW52KSB7XG4gIHZhciBtc2dcblxuICBpZiAoZW52ICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyB1c2UgZXJyLnN0YWNrLCB3aGljaCB0eXBpY2FsbHkgaW5jbHVkZXMgZXJyLm1lc3NhZ2VcbiAgICBtc2cgPSBlcnIuc3RhY2tcblxuICAgIC8vIGZhbGxiYWNrIHRvIGVyci50b1N0cmluZygpIHdoZW4gcG9zc2libGVcbiAgICBpZiAoIW1zZyAmJiB0eXBlb2YgZXJyLnRvU3RyaW5nID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBtc2cgPSBlcnIudG9TdHJpbmcoKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtc2cgfHwgc3RhdHVzZXNbc3RhdHVzXVxufVxuXG4vKipcbiAqIEdldCBzdGF0dXMgY29kZSBmcm9tIEVycm9yIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0RXJyb3JTdGF0dXNDb2RlIChlcnIpIHtcbiAgLy8gY2hlY2sgZXJyLnN0YXR1c1xuICBpZiAodHlwZW9mIGVyci5zdGF0dXMgPT09ICdudW1iZXInICYmIGVyci5zdGF0dXMgPj0gNDAwICYmIGVyci5zdGF0dXMgPCA2MDApIHtcbiAgICByZXR1cm4gZXJyLnN0YXR1c1xuICB9XG5cbiAgLy8gY2hlY2sgZXJyLnN0YXR1c0NvZGVcbiAgaWYgKHR5cGVvZiBlcnIuc3RhdHVzQ29kZSA9PT0gJ251bWJlcicgJiYgZXJyLnN0YXR1c0NvZGUgPj0gNDAwICYmIGVyci5zdGF0dXNDb2RlIDwgNjAwKSB7XG4gICAgcmV0dXJuIGVyci5zdGF0dXNDb2RlXG4gIH1cblxuICByZXR1cm4gdW5kZWZpbmVkXG59XG5cbi8qKlxuICogR2V0IHJlc291cmNlIG5hbWUgZm9yIHRoZSByZXF1ZXN0LlxuICpcbiAqIFRoaXMgaXMgdHlwaWNhbGx5IGp1c3QgdGhlIG9yaWdpbmFsIHBhdGhuYW1lIG9mIHRoZSByZXF1ZXN0XG4gKiBidXQgd2lsbCBmYWxsYmFjayB0byBcInJlc291cmNlXCIgaXMgdGhhdCBjYW5ub3QgYmUgZGV0ZXJtaW5lZC5cbiAqXG4gKiBAcGFyYW0ge0luY29taW5nTWVzc2FnZX0gcmVxXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGdldFJlc291cmNlTmFtZSAocmVxKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHBhcnNlVXJsLm9yaWdpbmFsKHJlcSkucGF0aG5hbWVcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiAncmVzb3VyY2UnXG4gIH1cbn1cblxuLyoqXG4gKiBHZXQgc3RhdHVzIGNvZGUgZnJvbSByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge091dGdvaW5nTWVzc2FnZX0gcmVzXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGdldFJlc3BvbnNlU3RhdHVzQ29kZSAocmVzKSB7XG4gIHZhciBzdGF0dXMgPSByZXMuc3RhdHVzQ29kZVxuXG4gIC8vIGRlZmF1bHQgc3RhdHVzIGNvZGUgdG8gNTAwIGlmIG91dHNpZGUgdmFsaWQgcmFuZ2VcbiAgaWYgKHR5cGVvZiBzdGF0dXMgIT09ICdudW1iZXInIHx8IHN0YXR1cyA8IDQwMCB8fCBzdGF0dXMgPiA1OTkpIHtcbiAgICBzdGF0dXMgPSA1MDBcbiAgfVxuXG4gIHJldHVybiBzdGF0dXNcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgdGhlIHJlc3BvbnNlIGhlYWRlcnMgaGF2ZSBiZWVuIHNlbnQuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICogQHJldHVybnMge2Jvb2xlYW59XG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGhlYWRlcnNTZW50IChyZXMpIHtcbiAgcmV0dXJuIHR5cGVvZiByZXMuaGVhZGVyc1NlbnQgIT09ICdib29sZWFuJ1xuICAgID8gQm9vbGVhbihyZXMuX2hlYWRlcilcbiAgICA6IHJlcy5oZWFkZXJzU2VudFxufVxuXG4vKipcbiAqIFNlbmQgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtJbmNvbWluZ01lc3NhZ2V9IHJlcVxuICogQHBhcmFtIHtPdXRnb2luZ01lc3NhZ2V9IHJlc1xuICogQHBhcmFtIHtudW1iZXJ9IHN0YXR1c1xuICogQHBhcmFtIHtvYmplY3R9IGhlYWRlcnNcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHNlbmQgKHJlcSwgcmVzLCBzdGF0dXMsIGhlYWRlcnMsIG1lc3NhZ2UpIHtcbiAgZnVuY3Rpb24gd3JpdGUgKCkge1xuICAgIC8vIHJlc3BvbnNlIGJvZHlcbiAgICB2YXIgYm9keSA9IGNyZWF0ZUh0bWxEb2N1bWVudChtZXNzYWdlKVxuXG4gICAgLy8gcmVzcG9uc2Ugc3RhdHVzXG4gICAgcmVzLnN0YXR1c0NvZGUgPSBzdGF0dXNcbiAgICByZXMuc3RhdHVzTWVzc2FnZSA9IHN0YXR1c2VzW3N0YXR1c11cblxuICAgIC8vIHJlc3BvbnNlIGhlYWRlcnNcbiAgICBzZXRIZWFkZXJzKHJlcywgaGVhZGVycylcblxuICAgIC8vIHNlY3VyaXR5IGhlYWRlcnNcbiAgICByZXMuc2V0SGVhZGVyKCdDb250ZW50LVNlY3VyaXR5LVBvbGljeScsIFwiZGVmYXVsdC1zcmMgJ3NlbGYnXCIpXG4gICAgcmVzLnNldEhlYWRlcignWC1Db250ZW50LVR5cGUtT3B0aW9ucycsICdub3NuaWZmJylcblxuICAgIC8vIHN0YW5kYXJkIGhlYWRlcnNcbiAgICByZXMuc2V0SGVhZGVyKCdDb250ZW50LVR5cGUnLCAndGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04JylcbiAgICByZXMuc2V0SGVhZGVyKCdDb250ZW50LUxlbmd0aCcsIEJ1ZmZlci5ieXRlTGVuZ3RoKGJvZHksICd1dGY4JykpXG5cbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ0hFQUQnKSB7XG4gICAgICByZXMuZW5kKClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHJlcy5lbmQoYm9keSwgJ3V0ZjgnKVxuICB9XG5cbiAgaWYgKGlzRmluaXNoZWQocmVxKSkge1xuICAgIHdyaXRlKClcbiAgICByZXR1cm5cbiAgfVxuXG4gIC8vIHVucGlwZSBldmVyeXRoaW5nIGZyb20gdGhlIHJlcXVlc3RcbiAgdW5waXBlKHJlcSlcblxuICAvLyBmbHVzaCB0aGUgcmVxdWVzdFxuICBvbkZpbmlzaGVkKHJlcSwgd3JpdGUpXG4gIHJlcS5yZXN1bWUoKVxufVxuXG4vKipcbiAqIFNldCByZXNwb25zZSBoZWFkZXJzIGZyb20gYW4gb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7T3V0Z29pbmdNZXNzYWdlfSByZXNcbiAqIEBwYXJhbSB7b2JqZWN0fSBoZWFkZXJzXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHNldEhlYWRlcnMgKHJlcywgaGVhZGVycykge1xuICBpZiAoIWhlYWRlcnMpIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMoaGVhZGVycylcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNbaV1cbiAgICByZXMuc2V0SGVhZGVyKGtleSwgaGVhZGVyc1trZXldKVxuICB9XG59XG4iLCIvKipcbiAqIEV4cG9zZSBgcGF0aHRvUmVnZXhwYC5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGh0b1JlZ2V4cDtcblxuLyoqXG4gKiBNYXRjaCBtYXRjaGluZyBncm91cHMgaW4gYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKi9cbnZhciBNQVRDSElOR19HUk9VUF9SRUdFWFAgPSAvXFwoKD8hXFw/KS9nO1xuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsXG4gKiByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgc2hvdWxkIGJlIHBhc3NlZCxcbiAqIHdoaWNoIHdpbGwgY29udGFpbiB0aGUgcGxhY2Vob2xkZXJcbiAqIGtleSBuYW1lcy4gRm9yIGV4YW1wbGUgXCIvdXNlci86aWRcIiB3aWxsXG4gKiB0aGVuIGNvbnRhaW4gW1wiaWRcIl0uXG4gKlxuICogQHBhcmFtICB7U3RyaW5nfFJlZ0V4cHxBcnJheX0gcGF0aFxuICogQHBhcmFtICB7QXJyYXl9IGtleXNcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7UmVnRXhwfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGF0aHRvUmVnZXhwKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGtleXMgPSBrZXlzIHx8IFtdO1xuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3Q7XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2U7XG4gIHZhciBmbGFncyA9IG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSc7XG4gIHZhciBleHRyYU9mZnNldCA9IDA7XG4gIHZhciBrZXlzT2Zmc2V0ID0ga2V5cy5sZW5ndGg7XG4gIHZhciBpID0gMDtcbiAgdmFyIG5hbWUgPSAwO1xuICB2YXIgbTtcblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHdoaWxlIChtID0gTUFUQ0hJTkdfR1JPVVBfUkVHRVhQLmV4ZWMocGF0aC5zb3VyY2UpKSB7XG4gICAgICBrZXlzLnB1c2goe1xuICAgICAgICBuYW1lOiBuYW1lKyssXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgb2Zmc2V0OiBtLmluZGV4XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aDtcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KHBhdGgpKSB7XG4gICAgLy8gTWFwIGFycmF5IHBhcnRzIGludG8gcmVnZXhwcyBhbmQgcmV0dXJuIHRoZWlyIHNvdXJjZS4gV2UgYWxzbyBwYXNzXG4gICAgLy8gdGhlIHNhbWUga2V5cyBhbmQgb3B0aW9ucyBpbnN0YW5jZSBpbnRvIGV2ZXJ5IGdlbmVyYXRpb24gdG8gZ2V0XG4gICAgLy8gY29uc2lzdGVudCBtYXRjaGluZyBncm91cHMgYmVmb3JlIHdlIGpvaW4gdGhlIHNvdXJjZXMgdG9nZXRoZXIuXG4gICAgcGF0aCA9IHBhdGgubWFwKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHBhdGh0b1JlZ2V4cCh2YWx1ZSwga2V5cywgb3B0aW9ucykuc291cmNlO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIG5ldyBSZWdFeHAoJyg/OicgKyBwYXRoLmpvaW4oJ3wnKSArICcpJywgZmxhZ3MpO1xuICB9XG5cbiAgcGF0aCA9ICgnXicgKyBwYXRoICsgKHN0cmljdCA/ICcnIDogcGF0aFtwYXRoLmxlbmd0aCAtIDFdID09PSAnLycgPyAnPycgOiAnLz8nKSlcbiAgICAucmVwbGFjZSgvXFwvXFwoL2csICcvKD86JylcbiAgICAucmVwbGFjZSgvKFtcXC9cXC5dKS9nLCAnXFxcXCQxJylcbiAgICAucmVwbGFjZSgvKFxcXFxcXC8pPyhcXFxcXFwuKT86KFxcdyspKFxcKC4qP1xcKSk/KFxcKik/KFxcPyk/L2csIGZ1bmN0aW9uIChtYXRjaCwgc2xhc2gsIGZvcm1hdCwga2V5LCBjYXB0dXJlLCBzdGFyLCBvcHRpb25hbCwgb2Zmc2V0KSB7XG4gICAgICBzbGFzaCA9IHNsYXNoIHx8ICcnO1xuICAgICAgZm9ybWF0ID0gZm9ybWF0IHx8ICcnO1xuICAgICAgY2FwdHVyZSA9IGNhcHR1cmUgfHwgJyhbXlxcXFwvJyArIGZvcm1hdCArICddKz8pJztcbiAgICAgIG9wdGlvbmFsID0gb3B0aW9uYWwgfHwgJyc7XG5cbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGtleSxcbiAgICAgICAgb3B0aW9uYWw6ICEhb3B0aW9uYWwsXG4gICAgICAgIG9mZnNldDogb2Zmc2V0ICsgZXh0cmFPZmZzZXRcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgcmVzdWx0ID0gJydcbiAgICAgICAgKyAob3B0aW9uYWwgPyAnJyA6IHNsYXNoKVxuICAgICAgICArICcoPzonXG4gICAgICAgICsgZm9ybWF0ICsgKG9wdGlvbmFsID8gc2xhc2ggOiAnJykgKyBjYXB0dXJlXG4gICAgICAgICsgKHN0YXIgPyAnKCg/OltcXFxcLycgKyBmb3JtYXQgKyAnXS4rPyk/KScgOiAnJylcbiAgICAgICAgKyAnKSdcbiAgICAgICAgKyBvcHRpb25hbDtcblxuICAgICAgZXh0cmFPZmZzZXQgKz0gcmVzdWx0Lmxlbmd0aCAtIG1hdGNoLmxlbmd0aDtcblxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KVxuICAgIC5yZXBsYWNlKC9cXCovZywgZnVuY3Rpb24gKHN0YXIsIGluZGV4KSB7XG4gICAgICB2YXIgbGVuID0ga2V5cy5sZW5ndGhcblxuICAgICAgd2hpbGUgKGxlbi0tID4ga2V5c09mZnNldCAmJiBrZXlzW2xlbl0ub2Zmc2V0ID4gaW5kZXgpIHtcbiAgICAgICAga2V5c1tsZW5dLm9mZnNldCArPSAzOyAvLyBSZXBsYWNlbWVudCBsZW5ndGggbWludXMgYXN0ZXJpc2sgbGVuZ3RoLlxuICAgICAgfVxuXG4gICAgICByZXR1cm4gJyguKiknO1xuICAgIH0pO1xuXG4gIC8vIFRoaXMgaXMgYSB3b3JrYXJvdW5kIGZvciBoYW5kbGluZyB1bm5hbWVkIG1hdGNoaW5nIGdyb3Vwcy5cbiAgd2hpbGUgKG0gPSBNQVRDSElOR19HUk9VUF9SRUdFWFAuZXhlYyhwYXRoKSkge1xuICAgIHZhciBlc2NhcGVDb3VudCA9IDA7XG4gICAgdmFyIGluZGV4ID0gbS5pbmRleDtcblxuICAgIHdoaWxlIChwYXRoLmNoYXJBdCgtLWluZGV4KSA9PT0gJ1xcXFwnKSB7XG4gICAgICBlc2NhcGVDb3VudCsrO1xuICAgIH1cblxuICAgIC8vIEl0J3MgcG9zc2libGUgdG8gZXNjYXBlIHRoZSBicmFja2V0LlxuICAgIGlmIChlc2NhcGVDb3VudCAlIDIgPT09IDEpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGlmIChrZXlzT2Zmc2V0ICsgaSA9PT0ga2V5cy5sZW5ndGggfHwga2V5c1trZXlzT2Zmc2V0ICsgaV0ub2Zmc2V0ID4gbS5pbmRleCkge1xuICAgICAga2V5cy5zcGxpY2Uoa2V5c09mZnNldCArIGksIDAsIHtcbiAgICAgICAgbmFtZTogbmFtZSsrLCAvLyBVbm5hbWVkIG1hdGNoaW5nIGdyb3VwcyBtdXN0IGJlIGNvbnNpc3RlbnRseSBsaW5lYXIuXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgb2Zmc2V0OiBtLmluZGV4XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpKys7XG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBpcyBub24tZW5kaW5nLCBtYXRjaCB1bnRpbCB0aGUgZW5kIG9yIGEgc2xhc2guXG4gIHBhdGggKz0gKGVuZCA/ICckJyA6IChwYXRoW3BhdGgubGVuZ3RoIC0gMV0gPT09ICcvJyA/ICcnIDogJyg/PVxcXFwvfCQpJykpO1xuXG4gIHJldHVybiBuZXcgUmVnRXhwKHBhdGgsIGZsYWdzKTtcbn07XG4iLCIvKiFcbiAqIGV4cHJlc3NcbiAqIENvcHlyaWdodChjKSAyMDA5LTIwMTMgVEogSG9sb3dheWNodWtcbiAqIENvcHlyaWdodChjKSAyMDEzIFJvbWFuIFNodHlsbWFuXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIHNldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnc2V0cHJvdG90eXBlb2YnKVxuXG4vKipcbiAqIEluaXRpYWxpemF0aW9uIG1pZGRsZXdhcmUsIGV4cG9zaW5nIHRoZVxuICogcmVxdWVzdCBhbmQgcmVzcG9uc2UgdG8gZWFjaCBvdGhlciwgYXMgd2VsbFxuICogYXMgZGVmYXVsdGluZyB0aGUgWC1Qb3dlcmVkLUJ5IGhlYWRlciBmaWVsZC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBhcHBcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZXhwb3J0cy5pbml0ID0gZnVuY3Rpb24oYXBwKXtcbiAgcmV0dXJuIGZ1bmN0aW9uIGV4cHJlc3NJbml0KHJlcSwgcmVzLCBuZXh0KXtcbiAgICBpZiAoYXBwLmVuYWJsZWQoJ3gtcG93ZXJlZC1ieScpKSByZXMuc2V0SGVhZGVyKCdYLVBvd2VyZWQtQnknLCAnRXhwcmVzcycpO1xuICAgIHJlcS5yZXMgPSByZXM7XG4gICAgcmVzLnJlcSA9IHJlcTtcbiAgICByZXEubmV4dCA9IG5leHQ7XG5cbiAgICBzZXRQcm90b3R5cGVPZihyZXEsIGFwcC5yZXF1ZXN0KVxuICAgIHNldFByb3RvdHlwZU9mKHJlcywgYXBwLnJlc3BvbnNlKVxuXG4gICAgcmVzLmxvY2FscyA9IHJlcy5sb2NhbHMgfHwgT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICAgIG5leHQoKTtcbiAgfTtcbn07XG5cbiIsIi8qIVxuICogZXhwcmVzc1xuICogQ29weXJpZ2h0KGMpIDIwMDktMjAxMyBUSiBIb2xvd2F5Y2h1a1xuICogQ29weXJpZ2h0KGMpIDIwMTMgUm9tYW4gU2h0eWxtYW5cbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdleHByZXNzOnZpZXcnKTtcbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xudmFyIGZzID0gcmVxdWlyZSgnZnMnKTtcblxuLyoqXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgZGlybmFtZSA9IHBhdGguZGlybmFtZTtcbnZhciBiYXNlbmFtZSA9IHBhdGguYmFzZW5hbWU7XG52YXIgZXh0bmFtZSA9IHBhdGguZXh0bmFtZTtcbnZhciBqb2luID0gcGF0aC5qb2luO1xudmFyIHJlc29sdmUgPSBwYXRoLnJlc29sdmU7XG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBWaWV3O1xuXG4vKipcbiAqIEluaXRpYWxpemUgYSBuZXcgYFZpZXdgIHdpdGggdGhlIGdpdmVuIGBuYW1lYC5cbiAqXG4gKiBPcHRpb25zOlxuICpcbiAqICAgLSBgZGVmYXVsdEVuZ2luZWAgdGhlIGRlZmF1bHQgdGVtcGxhdGUgZW5naW5lIG5hbWVcbiAqICAgLSBgZW5naW5lc2AgdGVtcGxhdGUgZW5naW5lIHJlcXVpcmUoKSBjYWNoZVxuICogICAtIGByb290YCByb290IHBhdGggZm9yIHZpZXcgbG9va3VwXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gVmlldyhuYW1lLCBvcHRpb25zKSB7XG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fTtcblxuICB0aGlzLmRlZmF1bHRFbmdpbmUgPSBvcHRzLmRlZmF1bHRFbmdpbmU7XG4gIHRoaXMuZXh0ID0gZXh0bmFtZShuYW1lKTtcbiAgdGhpcy5uYW1lID0gbmFtZTtcbiAgdGhpcy5yb290ID0gb3B0cy5yb290O1xuXG4gIGlmICghdGhpcy5leHQgJiYgIXRoaXMuZGVmYXVsdEVuZ2luZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignTm8gZGVmYXVsdCBlbmdpbmUgd2FzIHNwZWNpZmllZCBhbmQgbm8gZXh0ZW5zaW9uIHdhcyBwcm92aWRlZC4nKTtcbiAgfVxuXG4gIHZhciBmaWxlTmFtZSA9IG5hbWU7XG5cbiAgaWYgKCF0aGlzLmV4dCkge1xuICAgIC8vIGdldCBleHRlbnNpb24gZnJvbSBkZWZhdWx0IGVuZ2luZSBuYW1lXG4gICAgdGhpcy5leHQgPSB0aGlzLmRlZmF1bHRFbmdpbmVbMF0gIT09ICcuJ1xuICAgICAgPyAnLicgKyB0aGlzLmRlZmF1bHRFbmdpbmVcbiAgICAgIDogdGhpcy5kZWZhdWx0RW5naW5lO1xuXG4gICAgZmlsZU5hbWUgKz0gdGhpcy5leHQ7XG4gIH1cblxuICBpZiAoIW9wdHMuZW5naW5lc1t0aGlzLmV4dF0pIHtcbiAgICAvLyBsb2FkIGVuZ2luZVxuICAgIHZhciBtb2QgPSB0aGlzLmV4dC5zdWJzdHIoMSlcbiAgICBkZWJ1ZygncmVxdWlyZSBcIiVzXCInLCBtb2QpXG5cbiAgICAvLyBkZWZhdWx0IGVuZ2luZSBleHBvcnRcbiAgICB2YXIgZm4gPSByZXF1aXJlKG1vZCkuX19leHByZXNzXG5cbiAgICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ01vZHVsZSBcIicgKyBtb2QgKyAnXCIgZG9lcyBub3QgcHJvdmlkZSBhIHZpZXcgZW5naW5lLicpXG4gICAgfVxuXG4gICAgb3B0cy5lbmdpbmVzW3RoaXMuZXh0XSA9IGZuXG4gIH1cblxuICAvLyBzdG9yZSBsb2FkZWQgZW5naW5lXG4gIHRoaXMuZW5naW5lID0gb3B0cy5lbmdpbmVzW3RoaXMuZXh0XTtcblxuICAvLyBsb29rdXAgcGF0aFxuICB0aGlzLnBhdGggPSB0aGlzLmxvb2t1cChmaWxlTmFtZSk7XG59XG5cbi8qKlxuICogTG9va3VwIHZpZXcgYnkgdGhlIGdpdmVuIGBuYW1lYFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gKiBAcHJpdmF0ZVxuICovXG5cblZpZXcucHJvdG90eXBlLmxvb2t1cCA9IGZ1bmN0aW9uIGxvb2t1cChuYW1lKSB7XG4gIHZhciBwYXRoO1xuICB2YXIgcm9vdHMgPSBbXS5jb25jYXQodGhpcy5yb290KTtcblxuICBkZWJ1ZygnbG9va3VwIFwiJXNcIicsIG5hbWUpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcm9vdHMubGVuZ3RoICYmICFwYXRoOyBpKyspIHtcbiAgICB2YXIgcm9vdCA9IHJvb3RzW2ldO1xuXG4gICAgLy8gcmVzb2x2ZSB0aGUgcGF0aFxuICAgIHZhciBsb2MgPSByZXNvbHZlKHJvb3QsIG5hbWUpO1xuICAgIHZhciBkaXIgPSBkaXJuYW1lKGxvYyk7XG4gICAgdmFyIGZpbGUgPSBiYXNlbmFtZShsb2MpO1xuXG4gICAgLy8gcmVzb2x2ZSB0aGUgZmlsZVxuICAgIHBhdGggPSB0aGlzLnJlc29sdmUoZGlyLCBmaWxlKTtcbiAgfVxuXG4gIHJldHVybiBwYXRoO1xufTtcblxuLyoqXG4gKiBSZW5kZXIgd2l0aCB0aGUgZ2l2ZW4gb3B0aW9ucy5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEBwcml2YXRlXG4gKi9cblxuVmlldy5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIGRlYnVnKCdyZW5kZXIgXCIlc1wiJywgdGhpcy5wYXRoKTtcbiAgdGhpcy5lbmdpbmUodGhpcy5wYXRoLCBvcHRpb25zLCBjYWxsYmFjayk7XG59O1xuXG4vKipcbiAqIFJlc29sdmUgdGhlIGZpbGUgd2l0aGluIHRoZSBnaXZlbiBkaXJlY3RvcnkuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGRpclxuICogQHBhcmFtIHtzdHJpbmd9IGZpbGVcbiAqIEBwcml2YXRlXG4gKi9cblxuVmlldy5wcm90b3R5cGUucmVzb2x2ZSA9IGZ1bmN0aW9uIHJlc29sdmUoZGlyLCBmaWxlKSB7XG4gIHZhciBleHQgPSB0aGlzLmV4dDtcblxuICAvLyA8cGF0aD4uPGV4dD5cbiAgdmFyIHBhdGggPSBqb2luKGRpciwgZmlsZSk7XG4gIHZhciBzdGF0ID0gdHJ5U3RhdChwYXRoKTtcblxuICBpZiAoc3RhdCAmJiBzdGF0LmlzRmlsZSgpKSB7XG4gICAgcmV0dXJuIHBhdGg7XG4gIH1cblxuICAvLyA8cGF0aD4vaW5kZXguPGV4dD5cbiAgcGF0aCA9IGpvaW4oZGlyLCBiYXNlbmFtZShmaWxlLCBleHQpLCAnaW5kZXgnICsgZXh0KTtcbiAgc3RhdCA9IHRyeVN0YXQocGF0aCk7XG5cbiAgaWYgKHN0YXQgJiYgc3RhdC5pc0ZpbGUoKSkge1xuICAgIHJldHVybiBwYXRoO1xuICB9XG59O1xuXG4vKipcbiAqIFJldHVybiBhIHN0YXQsIG1heWJlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoXG4gKiBAcmV0dXJuIHtmcy5TdGF0c31cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gdHJ5U3RhdChwYXRoKSB7XG4gIGRlYnVnKCdzdGF0IFwiJXNcIicsIHBhdGgpO1xuXG4gIHRyeSB7XG4gICAgcmV0dXJuIGZzLnN0YXRTeW5jKHBhdGgpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufVxuIiwiZnVuY3Rpb24gd2VicGFja0VtcHR5Q29udGV4dChyZXEpIHtcblx0dmFyIGUgPSBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiICsgcmVxICsgXCInXCIpO1xuXHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdHRocm93IGU7XG59XG53ZWJwYWNrRW1wdHlDb250ZXh0LmtleXMgPSBmdW5jdGlvbigpIHsgcmV0dXJuIFtdOyB9O1xud2VicGFja0VtcHR5Q29udGV4dC5yZXNvbHZlID0gd2VicGFja0VtcHR5Q29udGV4dDtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0VtcHR5Q29udGV4dDtcbndlYnBhY2tFbXB0eUNvbnRleHQuaWQgPSAxMjQ7IiwiLyohXG4gKiBkZXN0cm95XG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBSZWFkU3RyZWFtID0gcmVxdWlyZSgnZnMnKS5SZWFkU3RyZWFtXG52YXIgU3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJylcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlc3Ryb3lcblxuLyoqXG4gKiBEZXN0cm95IGEgc3RyZWFtLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBzdHJlYW1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBkZXN0cm95KHN0cmVhbSkge1xuICBpZiAoc3RyZWFtIGluc3RhbmNlb2YgUmVhZFN0cmVhbSkge1xuICAgIHJldHVybiBkZXN0cm95UmVhZFN0cmVhbShzdHJlYW0pXG4gIH1cblxuICBpZiAoIShzdHJlYW0gaW5zdGFuY2VvZiBTdHJlYW0pKSB7XG4gICAgcmV0dXJuIHN0cmVhbVxuICB9XG5cbiAgaWYgKHR5cGVvZiBzdHJlYW0uZGVzdHJveSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHN0cmVhbS5kZXN0cm95KClcbiAgfVxuXG4gIHJldHVybiBzdHJlYW1cbn1cblxuLyoqXG4gKiBEZXN0cm95IGEgUmVhZFN0cmVhbS5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gc3RyZWFtXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGRlc3Ryb3lSZWFkU3RyZWFtKHN0cmVhbSkge1xuICBzdHJlYW0uZGVzdHJveSgpXG5cbiAgaWYgKHR5cGVvZiBzdHJlYW0uY2xvc2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBub2RlLmpzIGNvcmUgYnVnIHdvcmstYXJvdW5kXG4gICAgc3RyZWFtLm9uKCdvcGVuJywgb25PcGVuQ2xvc2UpXG4gIH1cblxuICByZXR1cm4gc3RyZWFtXG59XG5cbi8qKlxuICogT24gb3BlbiBoYW5kbGVyIHRvIGNsb3NlIHN0cmVhbS5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gb25PcGVuQ2xvc2UoKSB7XG4gIGlmICh0eXBlb2YgdGhpcy5mZCA9PT0gJ251bWJlcicpIHtcbiAgICAvLyBhY3R1YWxseSBjbG9zZSBkb3duIHRoZSBmZFxuICAgIHRoaXMuY2xvc2UoKVxuICB9XG59XG4iLCJ2YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbmZ1bmN0aW9uIE1pbWUoKSB7XG4gIC8vIE1hcCBvZiBleHRlbnNpb24gLT4gbWltZSB0eXBlXG4gIHRoaXMudHlwZXMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4gIC8vIE1hcCBvZiBtaW1lIHR5cGUgLT4gZXh0ZW5zaW9uXG4gIHRoaXMuZXh0ZW5zaW9ucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG59XG5cbi8qKlxuICogRGVmaW5lIG1pbWV0eXBlIC0+IGV4dGVuc2lvbiBtYXBwaW5ncy4gIEVhY2gga2V5IGlzIGEgbWltZS10eXBlIHRoYXQgbWFwc1xuICogdG8gYW4gYXJyYXkgb2YgZXh0ZW5zaW9ucyBhc3NvY2lhdGVkIHdpdGggdGhlIHR5cGUuICBUaGUgZmlyc3QgZXh0ZW5zaW9uIGlzXG4gKiB1c2VkIGFzIHRoZSBkZWZhdWx0IGV4dGVuc2lvbiBmb3IgdGhlIHR5cGUuXG4gKlxuICogZS5nLiBtaW1lLmRlZmluZSh7J2F1ZGlvL29nZycsIFsnb2dhJywgJ29nZycsICdzcHgnXX0pO1xuICpcbiAqIEBwYXJhbSBtYXAgKE9iamVjdCkgdHlwZSBkZWZpbml0aW9uc1xuICovXG5NaW1lLnByb3RvdHlwZS5kZWZpbmUgPSBmdW5jdGlvbiAobWFwKSB7XG4gIGZvciAodmFyIHR5cGUgaW4gbWFwKSB7XG4gICAgdmFyIGV4dHMgPSBtYXBbdHlwZV07XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBleHRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuREVCVUdfTUlNRSAmJiB0aGlzLnR5cGVzW2V4dHNbaV1dKSB7XG4gICAgICAgIGNvbnNvbGUud2FybigodGhpcy5fbG9hZGluZyB8fCBcImRlZmluZSgpXCIpLnJlcGxhY2UoLy4qXFwvLywgJycpLCAnY2hhbmdlcyBcIicgKyBleHRzW2ldICsgJ1wiIGV4dGVuc2lvbiB0eXBlIGZyb20gJyArXG4gICAgICAgICAgdGhpcy50eXBlc1tleHRzW2ldXSArICcgdG8gJyArIHR5cGUpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnR5cGVzW2V4dHNbaV1dID0gdHlwZTtcbiAgICB9XG5cbiAgICAvLyBEZWZhdWx0IGV4dGVuc2lvbiBpcyB0aGUgZmlyc3Qgb25lIHdlIGVuY291bnRlclxuICAgIGlmICghdGhpcy5leHRlbnNpb25zW3R5cGVdKSB7XG4gICAgICB0aGlzLmV4dGVuc2lvbnNbdHlwZV0gPSBleHRzWzBdO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBMb2FkIGFuIEFwYWNoZTItc3R5bGUgXCIudHlwZXNcIiBmaWxlXG4gKlxuICogVGhpcyBtYXkgYmUgY2FsbGVkIG11bHRpcGxlIHRpbWVzIChpdCdzIGV4cGVjdGVkKS4gIFdoZXJlIGZpbGVzIGRlY2xhcmVcbiAqIG92ZXJsYXBwaW5nIHR5cGVzL2V4dGVuc2lvbnMsIHRoZSBsYXN0IGZpbGUgd2lucy5cbiAqXG4gKiBAcGFyYW0gZmlsZSAoU3RyaW5nKSBwYXRoIG9mIGZpbGUgdG8gbG9hZC5cbiAqL1xuTWltZS5wcm90b3R5cGUubG9hZCA9IGZ1bmN0aW9uKGZpbGUpIHtcbiAgdGhpcy5fbG9hZGluZyA9IGZpbGU7XG4gIC8vIFJlYWQgZmlsZSBhbmQgc3BsaXQgaW50byBsaW5lc1xuICB2YXIgbWFwID0ge30sXG4gICAgICBjb250ZW50ID0gZnMucmVhZEZpbGVTeW5jKGZpbGUsICdhc2NpaScpLFxuICAgICAgbGluZXMgPSBjb250ZW50LnNwbGl0KC9bXFxyXFxuXSsvKTtcblxuICBsaW5lcy5mb3JFYWNoKGZ1bmN0aW9uKGxpbmUpIHtcbiAgICAvLyBDbGVhbiB1cCB3aGl0ZXNwYWNlL2NvbW1lbnRzLCBhbmQgc3BsaXQgaW50byBmaWVsZHNcbiAgICB2YXIgZmllbGRzID0gbGluZS5yZXBsYWNlKC9cXHMqIy4qfF5cXHMqfFxccyokL2csICcnKS5zcGxpdCgvXFxzKy8pO1xuICAgIG1hcFtmaWVsZHMuc2hpZnQoKV0gPSBmaWVsZHM7XG4gIH0pO1xuXG4gIHRoaXMuZGVmaW5lKG1hcCk7XG5cbiAgdGhpcy5fbG9hZGluZyA9IG51bGw7XG59O1xuXG4vKipcbiAqIExvb2t1cCBhIG1pbWUgdHlwZSBiYXNlZCBvbiBleHRlbnNpb25cbiAqL1xuTWltZS5wcm90b3R5cGUubG9va3VwID0gZnVuY3Rpb24ocGF0aCwgZmFsbGJhY2spIHtcbiAgdmFyIGV4dCA9IHBhdGgucmVwbGFjZSgvXi4qW1xcLlxcL1xcXFxdLywgJycpLnRvTG93ZXJDYXNlKCk7XG5cbiAgcmV0dXJuIHRoaXMudHlwZXNbZXh0XSB8fCBmYWxsYmFjayB8fCB0aGlzLmRlZmF1bHRfdHlwZTtcbn07XG5cbi8qKlxuICogUmV0dXJuIGZpbGUgZXh0ZW5zaW9uIGFzc29jaWF0ZWQgd2l0aCBhIG1pbWUgdHlwZVxuICovXG5NaW1lLnByb3RvdHlwZS5leHRlbnNpb24gPSBmdW5jdGlvbihtaW1lVHlwZSkge1xuICB2YXIgdHlwZSA9IG1pbWVUeXBlLm1hdGNoKC9eXFxzKihbXjtcXHNdKikoPzo7fFxcc3wkKS8pWzFdLnRvTG93ZXJDYXNlKCk7XG4gIHJldHVybiB0aGlzLmV4dGVuc2lvbnNbdHlwZV07XG59O1xuXG4vLyBEZWZhdWx0IGluc3RhbmNlXG52YXIgbWltZSA9IG5ldyBNaW1lKCk7XG5cbi8vIERlZmluZSBidWlsdC1pbiB0eXBlc1xubWltZS5kZWZpbmUocmVxdWlyZSgnLi90eXBlcy5qc29uJykpO1xuXG4vLyBEZWZhdWx0IHR5cGVcbm1pbWUuZGVmYXVsdF90eXBlID0gbWltZS5sb29rdXAoJ2JpbicpO1xuXG4vL1xuLy8gQWRkaXRpb25hbCBBUEkgc3BlY2lmaWMgdG8gdGhlIGRlZmF1bHQgaW5zdGFuY2Vcbi8vXG5cbm1pbWUuTWltZSA9IE1pbWU7XG5cbi8qKlxuICogTG9va3VwIGEgY2hhcnNldCBiYXNlZCBvbiBtaW1lIHR5cGUuXG4gKi9cbm1pbWUuY2hhcnNldHMgPSB7XG4gIGxvb2t1cDogZnVuY3Rpb24obWltZVR5cGUsIGZhbGxiYWNrKSB7XG4gICAgLy8gQXNzdW1lIHRleHQgdHlwZXMgYXJlIHV0ZjhcbiAgICByZXR1cm4gKC9edGV4dFxcL3xeYXBwbGljYXRpb25cXC8oamF2YXNjcmlwdHxqc29uKS8pLnRlc3QobWltZVR5cGUpID8gJ1VURi04JyA6IGZhbGxiYWNrO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1pbWU7XG4iLCIvKiFcbiAqIGZvcndhcmRlZFxuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNyBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmb3J3YXJkZWRcblxuLyoqXG4gKiBHZXQgYWxsIGFkZHJlc3NlcyBpbiB0aGUgcmVxdWVzdCwgdXNpbmcgdGhlIGBYLUZvcndhcmRlZC1Gb3JgIGhlYWRlci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gcmVxXG4gKiBAcmV0dXJuIHthcnJheX1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBmb3J3YXJkZWQgKHJlcSkge1xuICBpZiAoIXJlcSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IHJlcSBpcyByZXF1aXJlZCcpXG4gIH1cblxuICAvLyBzaW1wbGUgaGVhZGVyIHBhcnNpbmdcbiAgdmFyIHByb3h5QWRkcnMgPSBwYXJzZShyZXEuaGVhZGVyc1sneC1mb3J3YXJkZWQtZm9yJ10gfHwgJycpXG4gIHZhciBzb2NrZXRBZGRyID0gcmVxLmNvbm5lY3Rpb24ucmVtb3RlQWRkcmVzc1xuICB2YXIgYWRkcnMgPSBbc29ja2V0QWRkcl0uY29uY2F0KHByb3h5QWRkcnMpXG5cbiAgLy8gcmV0dXJuIGFsbCBhZGRyZXNzZXNcbiAgcmV0dXJuIGFkZHJzXG59XG5cbi8qKlxuICogUGFyc2UgdGhlIFgtRm9yd2FyZGVkLUZvciBoZWFkZXIuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGhlYWRlclxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZSAoaGVhZGVyKSB7XG4gIHZhciBlbmQgPSBoZWFkZXIubGVuZ3RoXG4gIHZhciBsaXN0ID0gW11cbiAgdmFyIHN0YXJ0ID0gaGVhZGVyLmxlbmd0aFxuXG4gIC8vIGdhdGhlciBhZGRyZXNzZXMsIGJhY2t3YXJkc1xuICBmb3IgKHZhciBpID0gaGVhZGVyLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgc3dpdGNoIChoZWFkZXIuY2hhckNvZGVBdChpKSkge1xuICAgICAgY2FzZSAweDIwOiAvKiAgICovXG4gICAgICAgIGlmIChzdGFydCA9PT0gZW5kKSB7XG4gICAgICAgICAgc3RhcnQgPSBlbmQgPSBpXG4gICAgICAgIH1cbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgMHgyYzogLyogLCAqL1xuICAgICAgICBpZiAoc3RhcnQgIT09IGVuZCkge1xuICAgICAgICAgIGxpc3QucHVzaChoZWFkZXIuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpKVxuICAgICAgICB9XG4gICAgICAgIHN0YXJ0ID0gZW5kID0gaVxuICAgICAgICBicmVha1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgc3RhcnQgPSBpXG4gICAgICAgIGJyZWFrXG4gICAgfVxuICB9XG5cbiAgLy8gZmluYWwgYWRkcmVzc1xuICBpZiAoc3RhcnQgIT09IGVuZCkge1xuICAgIGxpc3QucHVzaChoZWFkZXIuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpKVxuICB9XG5cbiAgcmV0dXJuIGxpc3Rcbn1cbiIsIihmdW5jdGlvbigpIHtcbiAgdmFyIGV4cGFuZElQdjYsIGlwYWRkciwgaXB2NFBhcnQsIGlwdjRSZWdleGVzLCBpcHY2UGFydCwgaXB2NlJlZ2V4ZXMsIG1hdGNoQ0lEUiwgcm9vdCwgem9uZUluZGV4O1xuXG4gIGlwYWRkciA9IHt9O1xuXG4gIHJvb3QgPSB0aGlzO1xuXG4gIGlmICgodHlwZW9mIG1vZHVsZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBtb2R1bGUgIT09IG51bGwpICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBpcGFkZHI7XG4gIH0gZWxzZSB7XG4gICAgcm9vdFsnaXBhZGRyJ10gPSBpcGFkZHI7XG4gIH1cblxuICBtYXRjaENJRFIgPSBmdW5jdGlvbihmaXJzdCwgc2Vjb25kLCBwYXJ0U2l6ZSwgY2lkckJpdHMpIHtcbiAgICB2YXIgcGFydCwgc2hpZnQ7XG4gICAgaWYgKGZpcnN0Lmxlbmd0aCAhPT0gc2Vjb25kLmxlbmd0aCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaXBhZGRyOiBjYW5ub3QgbWF0Y2ggQ0lEUiBmb3Igb2JqZWN0cyB3aXRoIGRpZmZlcmVudCBsZW5ndGhzXCIpO1xuICAgIH1cbiAgICBwYXJ0ID0gMDtcbiAgICB3aGlsZSAoY2lkckJpdHMgPiAwKSB7XG4gICAgICBzaGlmdCA9IHBhcnRTaXplIC0gY2lkckJpdHM7XG4gICAgICBpZiAoc2hpZnQgPCAwKSB7XG4gICAgICAgIHNoaWZ0ID0gMDtcbiAgICAgIH1cbiAgICAgIGlmIChmaXJzdFtwYXJ0XSA+PiBzaGlmdCAhPT0gc2Vjb25kW3BhcnRdID4+IHNoaWZ0KSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGNpZHJCaXRzIC09IHBhcnRTaXplO1xuICAgICAgcGFydCArPSAxO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcblxuICBpcGFkZHIuc3VibmV0TWF0Y2ggPSBmdW5jdGlvbihhZGRyZXNzLCByYW5nZUxpc3QsIGRlZmF1bHROYW1lKSB7XG4gICAgdmFyIGssIGxlbiwgcmFuZ2VOYW1lLCByYW5nZVN1Ym5ldHMsIHN1Ym5ldDtcbiAgICBpZiAoZGVmYXVsdE5hbWUgPT0gbnVsbCkge1xuICAgICAgZGVmYXVsdE5hbWUgPSAndW5pY2FzdCc7XG4gICAgfVxuICAgIGZvciAocmFuZ2VOYW1lIGluIHJhbmdlTGlzdCkge1xuICAgICAgcmFuZ2VTdWJuZXRzID0gcmFuZ2VMaXN0W3JhbmdlTmFtZV07XG4gICAgICBpZiAocmFuZ2VTdWJuZXRzWzBdICYmICEocmFuZ2VTdWJuZXRzWzBdIGluc3RhbmNlb2YgQXJyYXkpKSB7XG4gICAgICAgIHJhbmdlU3VibmV0cyA9IFtyYW5nZVN1Ym5ldHNdO1xuICAgICAgfVxuICAgICAgZm9yIChrID0gMCwgbGVuID0gcmFuZ2VTdWJuZXRzLmxlbmd0aDsgayA8IGxlbjsgaysrKSB7XG4gICAgICAgIHN1Ym5ldCA9IHJhbmdlU3VibmV0c1trXTtcbiAgICAgICAgaWYgKGFkZHJlc3Mua2luZCgpID09PSBzdWJuZXRbMF0ua2luZCgpKSB7XG4gICAgICAgICAgaWYgKGFkZHJlc3MubWF0Y2guYXBwbHkoYWRkcmVzcywgc3VibmV0KSkge1xuICAgICAgICAgICAgcmV0dXJuIHJhbmdlTmFtZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRlZmF1bHROYW1lO1xuICB9O1xuXG4gIGlwYWRkci5JUHY0ID0gKGZ1bmN0aW9uKCkge1xuICAgIGZ1bmN0aW9uIElQdjQob2N0ZXRzKSB7XG4gICAgICB2YXIgaywgbGVuLCBvY3RldDtcbiAgICAgIGlmIChvY3RldHMubGVuZ3RoICE9PSA0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImlwYWRkcjogaXB2NCBvY3RldCBjb3VudCBzaG91bGQgYmUgNFwiKTtcbiAgICAgIH1cbiAgICAgIGZvciAoayA9IDAsIGxlbiA9IG9jdGV0cy5sZW5ndGg7IGsgPCBsZW47IGsrKykge1xuICAgICAgICBvY3RldCA9IG9jdGV0c1trXTtcbiAgICAgICAgaWYgKCEoKDAgPD0gb2N0ZXQgJiYgb2N0ZXQgPD0gMjU1KSkpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpcGFkZHI6IGlwdjQgb2N0ZXQgc2hvdWxkIGZpdCBpbiA4IGJpdHNcIik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMub2N0ZXRzID0gb2N0ZXRzO1xuICAgIH1cblxuICAgIElQdjQucHJvdG90eXBlLmtpbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAnaXB2NCc7XG4gICAgfTtcblxuICAgIElQdjQucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5vY3RldHMuam9pbihcIi5cIik7XG4gICAgfTtcblxuICAgIElQdjQucHJvdG90eXBlLnRvTm9ybWFsaXplZFN0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKTtcbiAgICB9O1xuXG4gICAgSVB2NC5wcm90b3R5cGUudG9CeXRlQXJyYXkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLm9jdGV0cy5zbGljZSgwKTtcbiAgICB9O1xuXG4gICAgSVB2NC5wcm90b3R5cGUubWF0Y2ggPSBmdW5jdGlvbihvdGhlciwgY2lkclJhbmdlKSB7XG4gICAgICB2YXIgcmVmO1xuICAgICAgaWYgKGNpZHJSYW5nZSA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHJlZiA9IG90aGVyLCBvdGhlciA9IHJlZlswXSwgY2lkclJhbmdlID0gcmVmWzFdO1xuICAgICAgfVxuICAgICAgaWYgKG90aGVyLmtpbmQoKSAhPT0gJ2lwdjQnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImlwYWRkcjogY2Fubm90IG1hdGNoIGlwdjQgYWRkcmVzcyB3aXRoIG5vbi1pcHY0IG9uZVwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtYXRjaENJRFIodGhpcy5vY3RldHMsIG90aGVyLm9jdGV0cywgOCwgY2lkclJhbmdlKTtcbiAgICB9O1xuXG4gICAgSVB2NC5wcm90b3R5cGUuU3BlY2lhbFJhbmdlcyA9IHtcbiAgICAgIHVuc3BlY2lmaWVkOiBbW25ldyBJUHY0KFswLCAwLCAwLCAwXSksIDhdXSxcbiAgICAgIGJyb2FkY2FzdDogW1tuZXcgSVB2NChbMjU1LCAyNTUsIDI1NSwgMjU1XSksIDMyXV0sXG4gICAgICBtdWx0aWNhc3Q6IFtbbmV3IElQdjQoWzIyNCwgMCwgMCwgMF0pLCA0XV0sXG4gICAgICBsaW5rTG9jYWw6IFtbbmV3IElQdjQoWzE2OSwgMjU0LCAwLCAwXSksIDE2XV0sXG4gICAgICBsb29wYmFjazogW1tuZXcgSVB2NChbMTI3LCAwLCAwLCAwXSksIDhdXSxcbiAgICAgIGNhcnJpZXJHcmFkZU5hdDogW1tuZXcgSVB2NChbMTAwLCA2NCwgMCwgMF0pLCAxMF1dLFxuICAgICAgXCJwcml2YXRlXCI6IFtbbmV3IElQdjQoWzEwLCAwLCAwLCAwXSksIDhdLCBbbmV3IElQdjQoWzE3MiwgMTYsIDAsIDBdKSwgMTJdLCBbbmV3IElQdjQoWzE5MiwgMTY4LCAwLCAwXSksIDE2XV0sXG4gICAgICByZXNlcnZlZDogW1tuZXcgSVB2NChbMTkyLCAwLCAwLCAwXSksIDI0XSwgW25ldyBJUHY0KFsxOTIsIDAsIDIsIDBdKSwgMjRdLCBbbmV3IElQdjQoWzE5MiwgODgsIDk5LCAwXSksIDI0XSwgW25ldyBJUHY0KFsxOTgsIDUxLCAxMDAsIDBdKSwgMjRdLCBbbmV3IElQdjQoWzIwMywgMCwgMTEzLCAwXSksIDI0XSwgW25ldyBJUHY0KFsyNDAsIDAsIDAsIDBdKSwgNF1dXG4gICAgfTtcblxuICAgIElQdjQucHJvdG90eXBlLnJhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gaXBhZGRyLnN1Ym5ldE1hdGNoKHRoaXMsIHRoaXMuU3BlY2lhbFJhbmdlcyk7XG4gICAgfTtcblxuICAgIElQdjQucHJvdG90eXBlLnRvSVB2NE1hcHBlZEFkZHJlc3MgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpcGFkZHIuSVB2Ni5wYXJzZShcIjo6ZmZmZjpcIiArICh0aGlzLnRvU3RyaW5nKCkpKTtcbiAgICB9O1xuXG4gICAgSVB2NC5wcm90b3R5cGUucHJlZml4TGVuZ3RoRnJvbVN1Ym5ldE1hc2sgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBjaWRyLCBpLCBrLCBvY3RldCwgc3RvcCwgemVyb3MsIHplcm90YWJsZTtcbiAgICAgIHplcm90YWJsZSA9IHtcbiAgICAgICAgMDogOCxcbiAgICAgICAgMTI4OiA3LFxuICAgICAgICAxOTI6IDYsXG4gICAgICAgIDIyNDogNSxcbiAgICAgICAgMjQwOiA0LFxuICAgICAgICAyNDg6IDMsXG4gICAgICAgIDI1MjogMixcbiAgICAgICAgMjU0OiAxLFxuICAgICAgICAyNTU6IDBcbiAgICAgIH07XG4gICAgICBjaWRyID0gMDtcbiAgICAgIHN0b3AgPSBmYWxzZTtcbiAgICAgIGZvciAoaSA9IGsgPSAzOyBrID49IDA7IGkgPSBrICs9IC0xKSB7XG4gICAgICAgIG9jdGV0ID0gdGhpcy5vY3RldHNbaV07XG4gICAgICAgIGlmIChvY3RldCBpbiB6ZXJvdGFibGUpIHtcbiAgICAgICAgICB6ZXJvcyA9IHplcm90YWJsZVtvY3RldF07XG4gICAgICAgICAgaWYgKHN0b3AgJiYgemVyb3MgIT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoemVyb3MgIT09IDgpIHtcbiAgICAgICAgICAgIHN0b3AgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjaWRyICs9IHplcm9zO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gMzIgLSBjaWRyO1xuICAgIH07XG5cbiAgICByZXR1cm4gSVB2NDtcblxuICB9KSgpO1xuXG4gIGlwdjRQYXJ0ID0gXCIoMD9cXFxcZCt8MHhbYS1mMC05XSspXCI7XG5cbiAgaXB2NFJlZ2V4ZXMgPSB7XG4gICAgZm91ck9jdGV0OiBuZXcgUmVnRXhwKFwiXlwiICsgaXB2NFBhcnQgKyBcIlxcXFwuXCIgKyBpcHY0UGFydCArIFwiXFxcXC5cIiArIGlwdjRQYXJ0ICsgXCJcXFxcLlwiICsgaXB2NFBhcnQgKyBcIiRcIiwgJ2knKSxcbiAgICBsb25nVmFsdWU6IG5ldyBSZWdFeHAoXCJeXCIgKyBpcHY0UGFydCArIFwiJFwiLCAnaScpXG4gIH07XG5cbiAgaXBhZGRyLklQdjQucGFyc2VyID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgdmFyIG1hdGNoLCBwYXJzZUludEF1dG8sIHBhcnQsIHNoaWZ0LCB2YWx1ZTtcbiAgICBwYXJzZUludEF1dG8gPSBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICAgIGlmIChzdHJpbmdbMF0gPT09IFwiMFwiICYmIHN0cmluZ1sxXSAhPT0gXCJ4XCIpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KHN0cmluZywgOCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gcGFyc2VJbnQoc3RyaW5nKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGlmIChtYXRjaCA9IHN0cmluZy5tYXRjaChpcHY0UmVnZXhlcy5mb3VyT2N0ZXQpKSB7XG4gICAgICByZXR1cm4gKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgaywgbGVuLCByZWYsIHJlc3VsdHM7XG4gICAgICAgIHJlZiA9IG1hdGNoLnNsaWNlKDEsIDYpO1xuICAgICAgICByZXN1bHRzID0gW107XG4gICAgICAgIGZvciAoayA9IDAsIGxlbiA9IHJlZi5sZW5ndGg7IGsgPCBsZW47IGsrKykge1xuICAgICAgICAgIHBhcnQgPSByZWZba107XG4gICAgICAgICAgcmVzdWx0cy5wdXNoKHBhcnNlSW50QXV0byhwYXJ0KSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgICB9KSgpO1xuICAgIH0gZWxzZSBpZiAobWF0Y2ggPSBzdHJpbmcubWF0Y2goaXB2NFJlZ2V4ZXMubG9uZ1ZhbHVlKSkge1xuICAgICAgdmFsdWUgPSBwYXJzZUludEF1dG8obWF0Y2hbMV0pO1xuICAgICAgaWYgKHZhbHVlID4gMHhmZmZmZmZmZiB8fCB2YWx1ZSA8IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaXBhZGRyOiBhZGRyZXNzIG91dHNpZGUgZGVmaW5lZCByYW5nZVwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAoKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgaywgcmVzdWx0cztcbiAgICAgICAgcmVzdWx0cyA9IFtdO1xuICAgICAgICBmb3IgKHNoaWZ0ID0gayA9IDA7IGsgPD0gMjQ7IHNoaWZ0ID0gayArPSA4KSB7XG4gICAgICAgICAgcmVzdWx0cy5wdXNoKCh2YWx1ZSA+PiBzaGlmdCkgJiAweGZmKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICAgIH0pKCkpLnJldmVyc2UoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9O1xuXG4gIGlwYWRkci5JUHY2ID0gKGZ1bmN0aW9uKCkge1xuICAgIGZ1bmN0aW9uIElQdjYocGFydHMsIHpvbmVJZCkge1xuICAgICAgdmFyIGksIGssIGwsIGxlbiwgcGFydCwgcmVmO1xuICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMTYpIHtcbiAgICAgICAgdGhpcy5wYXJ0cyA9IFtdO1xuICAgICAgICBmb3IgKGkgPSBrID0gMDsgayA8PSAxNDsgaSA9IGsgKz0gMikge1xuICAgICAgICAgIHRoaXMucGFydHMucHVzaCgocGFydHNbaV0gPDwgOCkgfCBwYXJ0c1tpICsgMV0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHBhcnRzLmxlbmd0aCA9PT0gOCkge1xuICAgICAgICB0aGlzLnBhcnRzID0gcGFydHM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpcGFkZHI6IGlwdjYgcGFydCBjb3VudCBzaG91bGQgYmUgOCBvciAxNlwiKTtcbiAgICAgIH1cbiAgICAgIHJlZiA9IHRoaXMucGFydHM7XG4gICAgICBmb3IgKGwgPSAwLCBsZW4gPSByZWYubGVuZ3RoOyBsIDwgbGVuOyBsKyspIHtcbiAgICAgICAgcGFydCA9IHJlZltsXTtcbiAgICAgICAgaWYgKCEoKDAgPD0gcGFydCAmJiBwYXJ0IDw9IDB4ZmZmZikpKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaXBhZGRyOiBpcHY2IHBhcnQgc2hvdWxkIGZpdCBpbiAxNiBiaXRzXCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoem9uZUlkKSB7XG4gICAgICAgIHRoaXMuem9uZUlkID0gem9uZUlkO1xuICAgICAgfVxuICAgIH1cblxuICAgIElQdjYucHJvdG90eXBlLmtpbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAnaXB2Nic7XG4gICAgfTtcblxuICAgIElQdjYucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy50b05vcm1hbGl6ZWRTdHJpbmcoKS5yZXBsYWNlKC8oKF58OikoMCg6fCQpKSspLywgJzo6Jyk7XG4gICAgfTtcblxuICAgIElQdjYucHJvdG90eXBlLnRvQnl0ZUFycmF5ID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgYnl0ZXMsIGssIGxlbiwgcGFydCwgcmVmO1xuICAgICAgYnl0ZXMgPSBbXTtcbiAgICAgIHJlZiA9IHRoaXMucGFydHM7XG4gICAgICBmb3IgKGsgPSAwLCBsZW4gPSByZWYubGVuZ3RoOyBrIDwgbGVuOyBrKyspIHtcbiAgICAgICAgcGFydCA9IHJlZltrXTtcbiAgICAgICAgYnl0ZXMucHVzaChwYXJ0ID4+IDgpO1xuICAgICAgICBieXRlcy5wdXNoKHBhcnQgJiAweGZmKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBieXRlcztcbiAgICB9O1xuXG4gICAgSVB2Ni5wcm90b3R5cGUudG9Ob3JtYWxpemVkU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgYWRkciwgcGFydCwgc3VmZml4O1xuICAgICAgYWRkciA9ICgoZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBrLCBsZW4sIHJlZiwgcmVzdWx0cztcbiAgICAgICAgcmVmID0gdGhpcy5wYXJ0cztcbiAgICAgICAgcmVzdWx0cyA9IFtdO1xuICAgICAgICBmb3IgKGsgPSAwLCBsZW4gPSByZWYubGVuZ3RoOyBrIDwgbGVuOyBrKyspIHtcbiAgICAgICAgICBwYXJ0ID0gcmVmW2tdO1xuICAgICAgICAgIHJlc3VsdHMucHVzaChwYXJ0LnRvU3RyaW5nKDE2KSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgICB9KS5jYWxsKHRoaXMpKS5qb2luKFwiOlwiKTtcbiAgICAgIHN1ZmZpeCA9ICcnO1xuICAgICAgaWYgKHRoaXMuem9uZUlkKSB7XG4gICAgICAgIHN1ZmZpeCA9ICclJyArIHRoaXMuem9uZUlkO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGFkZHIgKyBzdWZmaXg7XG4gICAgfTtcblxuICAgIElQdjYucHJvdG90eXBlLm1hdGNoID0gZnVuY3Rpb24ob3RoZXIsIGNpZHJSYW5nZSkge1xuICAgICAgdmFyIHJlZjtcbiAgICAgIGlmIChjaWRyUmFuZ2UgPT09IHZvaWQgMCkge1xuICAgICAgICByZWYgPSBvdGhlciwgb3RoZXIgPSByZWZbMF0sIGNpZHJSYW5nZSA9IHJlZlsxXTtcbiAgICAgIH1cbiAgICAgIGlmIChvdGhlci5raW5kKCkgIT09ICdpcHY2Jykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpcGFkZHI6IGNhbm5vdCBtYXRjaCBpcHY2IGFkZHJlc3Mgd2l0aCBub24taXB2NiBvbmVcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gbWF0Y2hDSURSKHRoaXMucGFydHMsIG90aGVyLnBhcnRzLCAxNiwgY2lkclJhbmdlKTtcbiAgICB9O1xuXG4gICAgSVB2Ni5wcm90b3R5cGUuU3BlY2lhbFJhbmdlcyA9IHtcbiAgICAgIHVuc3BlY2lmaWVkOiBbbmV3IElQdjYoWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdKSwgMTI4XSxcbiAgICAgIGxpbmtMb2NhbDogW25ldyBJUHY2KFsweGZlODAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdKSwgMTBdLFxuICAgICAgbXVsdGljYXN0OiBbbmV3IElQdjYoWzB4ZmYwMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0pLCA4XSxcbiAgICAgIGxvb3BiYWNrOiBbbmV3IElQdjYoWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDFdKSwgMTI4XSxcbiAgICAgIHVuaXF1ZUxvY2FsOiBbbmV3IElQdjYoWzB4ZmMwMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0pLCA3XSxcbiAgICAgIGlwdjRNYXBwZWQ6IFtuZXcgSVB2NihbMCwgMCwgMCwgMCwgMCwgMHhmZmZmLCAwLCAwXSksIDk2XSxcbiAgICAgIHJmYzYxNDU6IFtuZXcgSVB2NihbMCwgMCwgMCwgMCwgMHhmZmZmLCAwLCAwLCAwXSksIDk2XSxcbiAgICAgIHJmYzYwNTI6IFtuZXcgSVB2NihbMHg2NCwgMHhmZjliLCAwLCAwLCAwLCAwLCAwLCAwXSksIDk2XSxcbiAgICAgICc2dG80JzogW25ldyBJUHY2KFsweDIwMDIsIDAsIDAsIDAsIDAsIDAsIDAsIDBdKSwgMTZdLFxuICAgICAgdGVyZWRvOiBbbmV3IElQdjYoWzB4MjAwMSwgMCwgMCwgMCwgMCwgMCwgMCwgMF0pLCAzMl0sXG4gICAgICByZXNlcnZlZDogW1tuZXcgSVB2NihbMHgyMDAxLCAweGRiOCwgMCwgMCwgMCwgMCwgMCwgMF0pLCAzMl1dXG4gICAgfTtcblxuICAgIElQdjYucHJvdG90eXBlLnJhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gaXBhZGRyLnN1Ym5ldE1hdGNoKHRoaXMsIHRoaXMuU3BlY2lhbFJhbmdlcyk7XG4gICAgfTtcblxuICAgIElQdjYucHJvdG90eXBlLmlzSVB2NE1hcHBlZEFkZHJlc3MgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLnJhbmdlKCkgPT09ICdpcHY0TWFwcGVkJztcbiAgICB9O1xuXG4gICAgSVB2Ni5wcm90b3R5cGUudG9JUHY0QWRkcmVzcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGhpZ2gsIGxvdywgcmVmO1xuICAgICAgaWYgKCF0aGlzLmlzSVB2NE1hcHBlZEFkZHJlc3MoKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpcGFkZHI6IHRyeWluZyB0byBjb252ZXJ0IGEgZ2VuZXJpYyBpcHY2IGFkZHJlc3MgdG8gaXB2NFwiKTtcbiAgICAgIH1cbiAgICAgIHJlZiA9IHRoaXMucGFydHMuc2xpY2UoLTIpLCBoaWdoID0gcmVmWzBdLCBsb3cgPSByZWZbMV07XG4gICAgICByZXR1cm4gbmV3IGlwYWRkci5JUHY0KFtoaWdoID4+IDgsIGhpZ2ggJiAweGZmLCBsb3cgPj4gOCwgbG93ICYgMHhmZl0pO1xuICAgIH07XG5cbiAgICBJUHY2LnByb3RvdHlwZS5wcmVmaXhMZW5ndGhGcm9tU3VibmV0TWFzayA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGNpZHIsIGksIGssIHBhcnQsIHN0b3AsIHplcm9zLCB6ZXJvdGFibGU7XG4gICAgICB6ZXJvdGFibGUgPSB7XG4gICAgICAgIDA6IDE2LFxuICAgICAgICAzMjc2ODogMTUsXG4gICAgICAgIDQ5MTUyOiAxNCxcbiAgICAgICAgNTczNDQ6IDEzLFxuICAgICAgICA2MTQ0MDogMTIsXG4gICAgICAgIDYzNDg4OiAxMSxcbiAgICAgICAgNjQ1MTI6IDEwLFxuICAgICAgICA2NTAyNDogOSxcbiAgICAgICAgNjUyODA6IDgsXG4gICAgICAgIDY1NDA4OiA3LFxuICAgICAgICA2NTQ3MjogNixcbiAgICAgICAgNjU1MDQ6IDUsXG4gICAgICAgIDY1NTIwOiA0LFxuICAgICAgICA2NTUyODogMyxcbiAgICAgICAgNjU1MzI6IDIsXG4gICAgICAgIDY1NTM0OiAxLFxuICAgICAgICA2NTUzNTogMFxuICAgICAgfTtcbiAgICAgIGNpZHIgPSAwO1xuICAgICAgc3RvcCA9IGZhbHNlO1xuICAgICAgZm9yIChpID0gayA9IDc7IGsgPj0gMDsgaSA9IGsgKz0gLTEpIHtcbiAgICAgICAgcGFydCA9IHRoaXMucGFydHNbaV07XG4gICAgICAgIGlmIChwYXJ0IGluIHplcm90YWJsZSkge1xuICAgICAgICAgIHplcm9zID0gemVyb3RhYmxlW3BhcnRdO1xuICAgICAgICAgIGlmIChzdG9wICYmIHplcm9zICE9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHplcm9zICE9PSAxNikge1xuICAgICAgICAgICAgc3RvcCA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNpZHIgKz0gemVyb3M7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiAxMjggLSBjaWRyO1xuICAgIH07XG5cbiAgICByZXR1cm4gSVB2NjtcblxuICB9KSgpO1xuXG4gIGlwdjZQYXJ0ID0gXCIoPzpbMC05YS1mXSs6Oj8pK1wiO1xuXG4gIHpvbmVJbmRleCA9IFwiJVswLTlhLXpdezEsfVwiO1xuXG4gIGlwdjZSZWdleGVzID0ge1xuICAgIHpvbmVJbmRleDogbmV3IFJlZ0V4cCh6b25lSW5kZXgsICdpJyksXG4gICAgXCJuYXRpdmVcIjogbmV3IFJlZ0V4cChcIl4oOjopPyhcIiArIGlwdjZQYXJ0ICsgXCIpPyhbMC05YS1mXSspPyg6Oik/KFwiICsgem9uZUluZGV4ICsgXCIpPyRcIiwgJ2knKSxcbiAgICB0cmFuc2l0aW9uYWw6IG5ldyBSZWdFeHAoKFwiXigoPzpcIiArIGlwdjZQYXJ0ICsgXCIpfCg/Ojo6KSg/OlwiICsgaXB2NlBhcnQgKyBcIik/KVwiKSArIChpcHY0UGFydCArIFwiXFxcXC5cIiArIGlwdjRQYXJ0ICsgXCJcXFxcLlwiICsgaXB2NFBhcnQgKyBcIlxcXFwuXCIgKyBpcHY0UGFydCkgKyAoXCIoXCIgKyB6b25lSW5kZXggKyBcIik/JFwiKSwgJ2knKVxuICB9O1xuXG4gIGV4cGFuZElQdjYgPSBmdW5jdGlvbihzdHJpbmcsIHBhcnRzKSB7XG4gICAgdmFyIGNvbG9uQ291bnQsIGxhc3RDb2xvbiwgcGFydCwgcmVwbGFjZW1lbnQsIHJlcGxhY2VtZW50Q291bnQsIHpvbmVJZDtcbiAgICBpZiAoc3RyaW5nLmluZGV4T2YoJzo6JykgIT09IHN0cmluZy5sYXN0SW5kZXhPZignOjonKSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHpvbmVJZCA9IChzdHJpbmcubWF0Y2goaXB2NlJlZ2V4ZXNbJ3pvbmVJbmRleCddKSB8fCBbXSlbMF07XG4gICAgaWYgKHpvbmVJZCkge1xuICAgICAgem9uZUlkID0gem9uZUlkLnN1YnN0cmluZygxKTtcbiAgICAgIHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKC8lLiskLywgJycpO1xuICAgIH1cbiAgICBjb2xvbkNvdW50ID0gMDtcbiAgICBsYXN0Q29sb24gPSAtMTtcbiAgICB3aGlsZSAoKGxhc3RDb2xvbiA9IHN0cmluZy5pbmRleE9mKCc6JywgbGFzdENvbG9uICsgMSkpID49IDApIHtcbiAgICAgIGNvbG9uQ291bnQrKztcbiAgICB9XG4gICAgaWYgKHN0cmluZy5zdWJzdHIoMCwgMikgPT09ICc6OicpIHtcbiAgICAgIGNvbG9uQ291bnQtLTtcbiAgICB9XG4gICAgaWYgKHN0cmluZy5zdWJzdHIoLTIsIDIpID09PSAnOjonKSB7XG4gICAgICBjb2xvbkNvdW50LS07XG4gICAgfVxuICAgIGlmIChjb2xvbkNvdW50ID4gcGFydHMpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXBsYWNlbWVudENvdW50ID0gcGFydHMgLSBjb2xvbkNvdW50O1xuICAgIHJlcGxhY2VtZW50ID0gJzonO1xuICAgIHdoaWxlIChyZXBsYWNlbWVudENvdW50LS0pIHtcbiAgICAgIHJlcGxhY2VtZW50ICs9ICcwOic7XG4gICAgfVxuICAgIHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKCc6OicsIHJlcGxhY2VtZW50KTtcbiAgICBpZiAoc3RyaW5nWzBdID09PSAnOicpIHtcbiAgICAgIHN0cmluZyA9IHN0cmluZy5zbGljZSgxKTtcbiAgICB9XG4gICAgaWYgKHN0cmluZ1tzdHJpbmcubGVuZ3RoIC0gMV0gPT09ICc6Jykge1xuICAgICAgc3RyaW5nID0gc3RyaW5nLnNsaWNlKDAsIC0xKTtcbiAgICB9XG4gICAgcGFydHMgPSAoZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgaywgbGVuLCByZWYsIHJlc3VsdHM7XG4gICAgICByZWYgPSBzdHJpbmcuc3BsaXQoXCI6XCIpO1xuICAgICAgcmVzdWx0cyA9IFtdO1xuICAgICAgZm9yIChrID0gMCwgbGVuID0gcmVmLmxlbmd0aDsgayA8IGxlbjsgaysrKSB7XG4gICAgICAgIHBhcnQgPSByZWZba107XG4gICAgICAgIHJlc3VsdHMucHVzaChwYXJzZUludChwYXJ0LCAxNikpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgfSkoKTtcbiAgICByZXR1cm4ge1xuICAgICAgcGFydHM6IHBhcnRzLFxuICAgICAgem9uZUlkOiB6b25lSWRcbiAgICB9O1xuICB9O1xuXG4gIGlwYWRkci5JUHY2LnBhcnNlciA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgIHZhciBhZGRyLCBrLCBsZW4sIG1hdGNoLCBvY3RldCwgb2N0ZXRzLCB6b25lSWQ7XG4gICAgaWYgKGlwdjZSZWdleGVzWyduYXRpdmUnXS50ZXN0KHN0cmluZykpIHtcbiAgICAgIHJldHVybiBleHBhbmRJUHY2KHN0cmluZywgOCk7XG4gICAgfSBlbHNlIGlmIChtYXRjaCA9IHN0cmluZy5tYXRjaChpcHY2UmVnZXhlc1sndHJhbnNpdGlvbmFsJ10pKSB7XG4gICAgICB6b25lSWQgPSBtYXRjaFs2XSB8fCAnJztcbiAgICAgIGFkZHIgPSBleHBhbmRJUHY2KG1hdGNoWzFdLnNsaWNlKDAsIC0xKSArIHpvbmVJZCwgNik7XG4gICAgICBpZiAoYWRkci5wYXJ0cykge1xuICAgICAgICBvY3RldHMgPSBbcGFyc2VJbnQobWF0Y2hbMl0pLCBwYXJzZUludChtYXRjaFszXSksIHBhcnNlSW50KG1hdGNoWzRdKSwgcGFyc2VJbnQobWF0Y2hbNV0pXTtcbiAgICAgICAgZm9yIChrID0gMCwgbGVuID0gb2N0ZXRzLmxlbmd0aDsgayA8IGxlbjsgaysrKSB7XG4gICAgICAgICAgb2N0ZXQgPSBvY3RldHNba107XG4gICAgICAgICAgaWYgKCEoKDAgPD0gb2N0ZXQgJiYgb2N0ZXQgPD0gMjU1KSkpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBhZGRyLnBhcnRzLnB1c2gob2N0ZXRzWzBdIDw8IDggfCBvY3RldHNbMV0pO1xuICAgICAgICBhZGRyLnBhcnRzLnB1c2gob2N0ZXRzWzJdIDw8IDggfCBvY3RldHNbM10pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHBhcnRzOiBhZGRyLnBhcnRzLFxuICAgICAgICAgIHpvbmVJZDogYWRkci56b25lSWRcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgaXBhZGRyLklQdjQuaXNJUHY0ID0gaXBhZGRyLklQdjYuaXNJUHY2ID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VyKHN0cmluZykgIT09IG51bGw7XG4gIH07XG5cbiAgaXBhZGRyLklQdjQuaXNWYWxpZCA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgIHZhciBlO1xuICAgIHRyeSB7XG4gICAgICBuZXcgdGhpcyh0aGlzLnBhcnNlcihzdHJpbmcpKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycm9yMSkge1xuICAgICAgZSA9IGVycm9yMTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH07XG5cbiAgaXBhZGRyLklQdjQuaXNWYWxpZEZvdXJQYXJ0RGVjaW1hbCA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgIGlmIChpcGFkZHIuSVB2NC5pc1ZhbGlkKHN0cmluZykgJiYgc3RyaW5nLm1hdGNoKC9eKDB8WzEtOV1cXGQqKShcXC4oMHxbMS05XVxcZCopKXszfSQvKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH07XG5cbiAgaXBhZGRyLklQdjYuaXNWYWxpZCA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgIHZhciBhZGRyLCBlO1xuICAgIGlmICh0eXBlb2Ygc3RyaW5nID09PSBcInN0cmluZ1wiICYmIHN0cmluZy5pbmRleE9mKFwiOlwiKSA9PT0gLTEpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIGFkZHIgPSB0aGlzLnBhcnNlcihzdHJpbmcpO1xuICAgICAgbmV3IHRoaXMoYWRkci5wYXJ0cywgYWRkci56b25lSWQpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZXJyb3IxKSB7XG4gICAgICBlID0gZXJyb3IxO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfTtcblxuICBpcGFkZHIuSVB2NC5wYXJzZSA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgIHZhciBwYXJ0cztcbiAgICBwYXJ0cyA9IHRoaXMucGFyc2VyKHN0cmluZyk7XG4gICAgaWYgKHBhcnRzID09PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpcGFkZHI6IHN0cmluZyBpcyBub3QgZm9ybWF0dGVkIGxpa2UgaXAgYWRkcmVzc1wiKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyB0aGlzKHBhcnRzKTtcbiAgfTtcblxuICBpcGFkZHIuSVB2Ni5wYXJzZSA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgIHZhciBhZGRyO1xuICAgIGFkZHIgPSB0aGlzLnBhcnNlcihzdHJpbmcpO1xuICAgIGlmIChhZGRyLnBhcnRzID09PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpcGFkZHI6IHN0cmluZyBpcyBub3QgZm9ybWF0dGVkIGxpa2UgaXAgYWRkcmVzc1wiKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyB0aGlzKGFkZHIucGFydHMsIGFkZHIuem9uZUlkKTtcbiAgfTtcblxuICBpcGFkZHIuSVB2NC5wYXJzZUNJRFIgPSBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICB2YXIgbWFza0xlbmd0aCwgbWF0Y2gsIHBhcnNlZDtcbiAgICBpZiAobWF0Y2ggPSBzdHJpbmcubWF0Y2goL14oLispXFwvKFxcZCspJC8pKSB7XG4gICAgICBtYXNrTGVuZ3RoID0gcGFyc2VJbnQobWF0Y2hbMl0pO1xuICAgICAgaWYgKG1hc2tMZW5ndGggPj0gMCAmJiBtYXNrTGVuZ3RoIDw9IDMyKSB7XG4gICAgICAgIHBhcnNlZCA9IFt0aGlzLnBhcnNlKG1hdGNoWzFdKSwgbWFza0xlbmd0aF07XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwYXJzZWQsICd0b1N0cmluZycsIHtcbiAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5qb2luKCcvJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHBhcnNlZDtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiaXBhZGRyOiBzdHJpbmcgaXMgbm90IGZvcm1hdHRlZCBsaWtlIGFuIElQdjQgQ0lEUiByYW5nZVwiKTtcbiAgfTtcblxuICBpcGFkZHIuSVB2NC5zdWJuZXRNYXNrRnJvbVByZWZpeExlbmd0aCA9IGZ1bmN0aW9uKHByZWZpeCkge1xuICAgIHZhciBmaWxsZWRPY3RldENvdW50LCBqLCBvY3RldHM7XG4gICAgcHJlZml4ID0gcGFyc2VJbnQocHJlZml4KTtcbiAgICBpZiAocHJlZml4IDwgMCB8fCBwcmVmaXggPiAzMikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpcGFkZHI6IGludmFsaWQgSVB2NCBwcmVmaXggbGVuZ3RoJyk7XG4gICAgfVxuICAgIG9jdGV0cyA9IFswLCAwLCAwLCAwXTtcbiAgICBqID0gMDtcbiAgICBmaWxsZWRPY3RldENvdW50ID0gTWF0aC5mbG9vcihwcmVmaXggLyA4KTtcbiAgICB3aGlsZSAoaiA8IGZpbGxlZE9jdGV0Q291bnQpIHtcbiAgICAgIG9jdGV0c1tqXSA9IDI1NTtcbiAgICAgIGorKztcbiAgICB9XG4gICAgaWYgKGZpbGxlZE9jdGV0Q291bnQgPCA0KSB7XG4gICAgICBvY3RldHNbZmlsbGVkT2N0ZXRDb3VudF0gPSBNYXRoLnBvdygyLCBwcmVmaXggJSA4KSAtIDEgPDwgOCAtIChwcmVmaXggJSA4KTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyB0aGlzKG9jdGV0cyk7XG4gIH07XG5cbiAgaXBhZGRyLklQdjQuYnJvYWRjYXN0QWRkcmVzc0Zyb21DSURSID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgdmFyIGNpZHIsIGVycm9yLCBpLCBpcEludGVyZmFjZU9jdGV0cywgb2N0ZXRzLCBzdWJuZXRNYXNrT2N0ZXRzO1xuICAgIHRyeSB7XG4gICAgICBjaWRyID0gdGhpcy5wYXJzZUNJRFIoc3RyaW5nKTtcbiAgICAgIGlwSW50ZXJmYWNlT2N0ZXRzID0gY2lkclswXS50b0J5dGVBcnJheSgpO1xuICAgICAgc3VibmV0TWFza09jdGV0cyA9IHRoaXMuc3VibmV0TWFza0Zyb21QcmVmaXhMZW5ndGgoY2lkclsxXSkudG9CeXRlQXJyYXkoKTtcbiAgICAgIG9jdGV0cyA9IFtdO1xuICAgICAgaSA9IDA7XG4gICAgICB3aGlsZSAoaSA8IDQpIHtcbiAgICAgICAgb2N0ZXRzLnB1c2gocGFyc2VJbnQoaXBJbnRlcmZhY2VPY3RldHNbaV0sIDEwKSB8IHBhcnNlSW50KHN1Ym5ldE1hc2tPY3RldHNbaV0sIDEwKSBeIDI1NSk7XG4gICAgICAgIGkrKztcbiAgICAgIH1cbiAgICAgIHJldHVybiBuZXcgdGhpcyhvY3RldHMpO1xuICAgIH0gY2F0Y2ggKGVycm9yMSkge1xuICAgICAgZXJyb3IgPSBlcnJvcjE7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2lwYWRkcjogdGhlIGFkZHJlc3MgZG9lcyBub3QgaGF2ZSBJUHY0IENJRFIgZm9ybWF0Jyk7XG4gICAgfVxuICB9O1xuXG4gIGlwYWRkci5JUHY0Lm5ldHdvcmtBZGRyZXNzRnJvbUNJRFIgPSBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICB2YXIgY2lkciwgZXJyb3IsIGksIGlwSW50ZXJmYWNlT2N0ZXRzLCBvY3RldHMsIHN1Ym5ldE1hc2tPY3RldHM7XG4gICAgdHJ5IHtcbiAgICAgIGNpZHIgPSB0aGlzLnBhcnNlQ0lEUihzdHJpbmcpO1xuICAgICAgaXBJbnRlcmZhY2VPY3RldHMgPSBjaWRyWzBdLnRvQnl0ZUFycmF5KCk7XG4gICAgICBzdWJuZXRNYXNrT2N0ZXRzID0gdGhpcy5zdWJuZXRNYXNrRnJvbVByZWZpeExlbmd0aChjaWRyWzFdKS50b0J5dGVBcnJheSgpO1xuICAgICAgb2N0ZXRzID0gW107XG4gICAgICBpID0gMDtcbiAgICAgIHdoaWxlIChpIDwgNCkge1xuICAgICAgICBvY3RldHMucHVzaChwYXJzZUludChpcEludGVyZmFjZU9jdGV0c1tpXSwgMTApICYgcGFyc2VJbnQoc3VibmV0TWFza09jdGV0c1tpXSwgMTApKTtcbiAgICAgICAgaSsrO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ldyB0aGlzKG9jdGV0cyk7XG4gICAgfSBjYXRjaCAoZXJyb3IxKSB7XG4gICAgICBlcnJvciA9IGVycm9yMTtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaXBhZGRyOiB0aGUgYWRkcmVzcyBkb2VzIG5vdCBoYXZlIElQdjQgQ0lEUiBmb3JtYXQnKTtcbiAgICB9XG4gIH07XG5cbiAgaXBhZGRyLklQdjYucGFyc2VDSURSID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgdmFyIG1hc2tMZW5ndGgsIG1hdGNoLCBwYXJzZWQ7XG4gICAgaWYgKG1hdGNoID0gc3RyaW5nLm1hdGNoKC9eKC4rKVxcLyhcXGQrKSQvKSkge1xuICAgICAgbWFza0xlbmd0aCA9IHBhcnNlSW50KG1hdGNoWzJdKTtcbiAgICAgIGlmIChtYXNrTGVuZ3RoID49IDAgJiYgbWFza0xlbmd0aCA8PSAxMjgpIHtcbiAgICAgICAgcGFyc2VkID0gW3RoaXMucGFyc2UobWF0Y2hbMV0pLCBtYXNrTGVuZ3RoXTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHBhcnNlZCwgJ3RvU3RyaW5nJywge1xuICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmpvaW4oJy8nKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcGFyc2VkO1xuICAgICAgfVxuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJpcGFkZHI6IHN0cmluZyBpcyBub3QgZm9ybWF0dGVkIGxpa2UgYW4gSVB2NiBDSURSIHJhbmdlXCIpO1xuICB9O1xuXG4gIGlwYWRkci5pc1ZhbGlkID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgcmV0dXJuIGlwYWRkci5JUHY2LmlzVmFsaWQoc3RyaW5nKSB8fCBpcGFkZHIuSVB2NC5pc1ZhbGlkKHN0cmluZyk7XG4gIH07XG5cbiAgaXBhZGRyLnBhcnNlID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgaWYgKGlwYWRkci5JUHY2LmlzVmFsaWQoc3RyaW5nKSkge1xuICAgICAgcmV0dXJuIGlwYWRkci5JUHY2LnBhcnNlKHN0cmluZyk7XG4gICAgfSBlbHNlIGlmIChpcGFkZHIuSVB2NC5pc1ZhbGlkKHN0cmluZykpIHtcbiAgICAgIHJldHVybiBpcGFkZHIuSVB2NC5wYXJzZShzdHJpbmcpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpcGFkZHI6IHRoZSBhZGRyZXNzIGhhcyBuZWl0aGVyIElQdjYgbm9yIElQdjQgZm9ybWF0XCIpO1xuICAgIH1cbiAgfTtcblxuICBpcGFkZHIucGFyc2VDSURSID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgdmFyIGU7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBpcGFkZHIuSVB2Ni5wYXJzZUNJRFIoc3RyaW5nKTtcbiAgICB9IGNhdGNoIChlcnJvcjEpIHtcbiAgICAgIGUgPSBlcnJvcjE7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gaXBhZGRyLklQdjQucGFyc2VDSURSKHN0cmluZyk7XG4gICAgICB9IGNhdGNoIChlcnJvcjEpIHtcbiAgICAgICAgZSA9IGVycm9yMTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaXBhZGRyOiB0aGUgYWRkcmVzcyBoYXMgbmVpdGhlciBJUHY2IG5vciBJUHY0IENJRFIgZm9ybWF0XCIpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBpcGFkZHIuZnJvbUJ5dGVBcnJheSA9IGZ1bmN0aW9uKGJ5dGVzKSB7XG4gICAgdmFyIGxlbmd0aDtcbiAgICBsZW5ndGggPSBieXRlcy5sZW5ndGg7XG4gICAgaWYgKGxlbmd0aCA9PT0gNCkge1xuICAgICAgcmV0dXJuIG5ldyBpcGFkZHIuSVB2NChieXRlcyk7XG4gICAgfSBlbHNlIGlmIChsZW5ndGggPT09IDE2KSB7XG4gICAgICByZXR1cm4gbmV3IGlwYWRkci5JUHY2KGJ5dGVzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaXBhZGRyOiB0aGUgYmluYXJ5IGlucHV0IGlzIG5laXRoZXIgYW4gSVB2NiBub3IgSVB2NCBhZGRyZXNzXCIpO1xuICAgIH1cbiAgfTtcblxuICBpcGFkZHIucHJvY2VzcyA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgIHZhciBhZGRyO1xuICAgIGFkZHIgPSB0aGlzLnBhcnNlKHN0cmluZyk7XG4gICAgaWYgKGFkZHIua2luZCgpID09PSAnaXB2NicgJiYgYWRkci5pc0lQdjRNYXBwZWRBZGRyZXNzKCkpIHtcbiAgICAgIHJldHVybiBhZGRyLnRvSVB2NEFkZHJlc3MoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGFkZHI7XG4gICAgfVxuICB9O1xuXG59KS5jYWxsKHRoaXMpO1xuIiwiLyohXG4gKiBleHByZXNzXG4gKiBDb3B5cmlnaHQoYykgMjAwOS0yMDEzIFRKIEhvbG93YXljaHVrXG4gKiBDb3B5cmlnaHQoYykgMjAxMyBSb21hbiBTaHR5bG1hblxuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBhY2NlcHRzID0gcmVxdWlyZSgnYWNjZXB0cycpO1xudmFyIGRlcHJlY2F0ZSA9IHJlcXVpcmUoJ2RlcGQnKSgnZXhwcmVzcycpO1xudmFyIGlzSVAgPSByZXF1aXJlKCduZXQnKS5pc0lQO1xudmFyIHR5cGVpcyA9IHJlcXVpcmUoJ3R5cGUtaXMnKTtcbnZhciBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xudmFyIGZyZXNoID0gcmVxdWlyZSgnZnJlc2gnKTtcbnZhciBwYXJzZVJhbmdlID0gcmVxdWlyZSgncmFuZ2UtcGFyc2VyJyk7XG52YXIgcGFyc2UgPSByZXF1aXJlKCdwYXJzZXVybCcpO1xudmFyIHByb3h5YWRkciA9IHJlcXVpcmUoJ3Byb3h5LWFkZHInKTtcblxuLyoqXG4gKiBSZXF1ZXN0IHByb3RvdHlwZS5cbiAqIEBwdWJsaWNcbiAqL1xuXG52YXIgcmVxID0gT2JqZWN0LmNyZWF0ZShodHRwLkluY29taW5nTWVzc2FnZS5wcm90b3R5cGUpXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSByZXFcblxuLyoqXG4gKiBSZXR1cm4gcmVxdWVzdCBoZWFkZXIuXG4gKlxuICogVGhlIGBSZWZlcnJlcmAgaGVhZGVyIGZpZWxkIGlzIHNwZWNpYWwtY2FzZWQsXG4gKiBib3RoIGBSZWZlcnJlcmAgYW5kIGBSZWZlcmVyYCBhcmUgaW50ZXJjaGFuZ2VhYmxlLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgICByZXEuZ2V0KCdDb250ZW50LVR5cGUnKTtcbiAqICAgICAvLyA9PiBcInRleHQvcGxhaW5cIlxuICpcbiAqICAgICByZXEuZ2V0KCdjb250ZW50LXR5cGUnKTtcbiAqICAgICAvLyA9PiBcInRleHQvcGxhaW5cIlxuICpcbiAqICAgICByZXEuZ2V0KCdTb21ldGhpbmcnKTtcbiAqICAgICAvLyA9PiB1bmRlZmluZWRcbiAqXG4gKiBBbGlhc2VkIGFzIGByZXEuaGVhZGVyKClgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAcHVibGljXG4gKi9cblxucmVxLmdldCA9XG5yZXEuaGVhZGVyID0gZnVuY3Rpb24gaGVhZGVyKG5hbWUpIHtcbiAgaWYgKCFuYW1lKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignbmFtZSBhcmd1bWVudCBpcyByZXF1aXJlZCB0byByZXEuZ2V0Jyk7XG4gIH1cblxuICBpZiAodHlwZW9mIG5hbWUgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignbmFtZSBtdXN0IGJlIGEgc3RyaW5nIHRvIHJlcS5nZXQnKTtcbiAgfVxuXG4gIHZhciBsYyA9IG5hbWUudG9Mb3dlckNhc2UoKTtcblxuICBzd2l0Y2ggKGxjKSB7XG4gICAgY2FzZSAncmVmZXJlcic6XG4gICAgY2FzZSAncmVmZXJyZXInOlxuICAgICAgcmV0dXJuIHRoaXMuaGVhZGVycy5yZWZlcnJlclxuICAgICAgICB8fCB0aGlzLmhlYWRlcnMucmVmZXJlcjtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHRoaXMuaGVhZGVyc1tsY107XG4gIH1cbn07XG5cbi8qKlxuICogVG8gZG86IHVwZGF0ZSBkb2NzLlxuICpcbiAqIENoZWNrIGlmIHRoZSBnaXZlbiBgdHlwZShzKWAgaXMgYWNjZXB0YWJsZSwgcmV0dXJuaW5nXG4gKiB0aGUgYmVzdCBtYXRjaCB3aGVuIHRydWUsIG90aGVyd2lzZSBgdW5kZWZpbmVkYCwgaW4gd2hpY2hcbiAqIGNhc2UgeW91IHNob3VsZCByZXNwb25kIHdpdGggNDA2IFwiTm90IEFjY2VwdGFibGVcIi5cbiAqXG4gKiBUaGUgYHR5cGVgIHZhbHVlIG1heSBiZSBhIHNpbmdsZSBNSU1FIHR5cGUgc3RyaW5nXG4gKiBzdWNoIGFzIFwiYXBwbGljYXRpb24vanNvblwiLCBhbiBleHRlbnNpb24gbmFtZVxuICogc3VjaCBhcyBcImpzb25cIiwgYSBjb21tYS1kZWxpbWl0ZWQgbGlzdCBzdWNoIGFzIFwianNvbiwgaHRtbCwgdGV4dC9wbGFpblwiLFxuICogYW4gYXJndW1lbnQgbGlzdCBzdWNoIGFzIGBcImpzb25cIiwgXCJodG1sXCIsIFwidGV4dC9wbGFpblwiYCxcbiAqIG9yIGFuIGFycmF5IGBbXCJqc29uXCIsIFwiaHRtbFwiLCBcInRleHQvcGxhaW5cIl1gLiBXaGVuIGEgbGlzdFxuICogb3IgYXJyYXkgaXMgZ2l2ZW4sIHRoZSBfYmVzdF8gbWF0Y2gsIGlmIGFueSBpcyByZXR1cm5lZC5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICAgLy8gQWNjZXB0OiB0ZXh0L2h0bWxcbiAqICAgICByZXEuYWNjZXB0cygnaHRtbCcpO1xuICogICAgIC8vID0+IFwiaHRtbFwiXG4gKlxuICogICAgIC8vIEFjY2VwdDogdGV4dC8qLCBhcHBsaWNhdGlvbi9qc29uXG4gKiAgICAgcmVxLmFjY2VwdHMoJ2h0bWwnKTtcbiAqICAgICAvLyA9PiBcImh0bWxcIlxuICogICAgIHJlcS5hY2NlcHRzKCd0ZXh0L2h0bWwnKTtcbiAqICAgICAvLyA9PiBcInRleHQvaHRtbFwiXG4gKiAgICAgcmVxLmFjY2VwdHMoJ2pzb24sIHRleHQnKTtcbiAqICAgICAvLyA9PiBcImpzb25cIlxuICogICAgIHJlcS5hY2NlcHRzKCdhcHBsaWNhdGlvbi9qc29uJyk7XG4gKiAgICAgLy8gPT4gXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAqXG4gKiAgICAgLy8gQWNjZXB0OiB0ZXh0LyosIGFwcGxpY2F0aW9uL2pzb25cbiAqICAgICByZXEuYWNjZXB0cygnaW1hZ2UvcG5nJyk7XG4gKiAgICAgcmVxLmFjY2VwdHMoJ3BuZycpO1xuICogICAgIC8vID0+IHVuZGVmaW5lZFxuICpcbiAqICAgICAvLyBBY2NlcHQ6IHRleHQvKjtxPS41LCBhcHBsaWNhdGlvbi9qc29uXG4gKiAgICAgcmVxLmFjY2VwdHMoWydodG1sJywgJ2pzb24nXSk7XG4gKiAgICAgcmVxLmFjY2VwdHMoJ2h0bWwnLCAnanNvbicpO1xuICogICAgIHJlcS5hY2NlcHRzKCdodG1sLCBqc29uJyk7XG4gKiAgICAgLy8gPT4gXCJqc29uXCJcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xBcnJheX0gdHlwZShzKVxuICogQHJldHVybiB7U3RyaW5nfEFycmF5fEJvb2xlYW59XG4gKiBAcHVibGljXG4gKi9cblxucmVxLmFjY2VwdHMgPSBmdW5jdGlvbigpe1xuICB2YXIgYWNjZXB0ID0gYWNjZXB0cyh0aGlzKTtcbiAgcmV0dXJuIGFjY2VwdC50eXBlcy5hcHBseShhY2NlcHQsIGFyZ3VtZW50cyk7XG59O1xuXG4vKipcbiAqIENoZWNrIGlmIHRoZSBnaXZlbiBgZW5jb2RpbmdgcyBhcmUgYWNjZXB0ZWQuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IC4uLmVuY29kaW5nXG4gKiBAcmV0dXJuIHtTdHJpbmd8QXJyYXl9XG4gKiBAcHVibGljXG4gKi9cblxucmVxLmFjY2VwdHNFbmNvZGluZ3MgPSBmdW5jdGlvbigpe1xuICB2YXIgYWNjZXB0ID0gYWNjZXB0cyh0aGlzKTtcbiAgcmV0dXJuIGFjY2VwdC5lbmNvZGluZ3MuYXBwbHkoYWNjZXB0LCBhcmd1bWVudHMpO1xufTtcblxucmVxLmFjY2VwdHNFbmNvZGluZyA9IGRlcHJlY2F0ZS5mdW5jdGlvbihyZXEuYWNjZXB0c0VuY29kaW5ncyxcbiAgJ3JlcS5hY2NlcHRzRW5jb2Rpbmc6IFVzZSBhY2NlcHRzRW5jb2RpbmdzIGluc3RlYWQnKTtcblxuLyoqXG4gKiBDaGVjayBpZiB0aGUgZ2l2ZW4gYGNoYXJzZXRgcyBhcmUgYWNjZXB0YWJsZSxcbiAqIG90aGVyd2lzZSB5b3Ugc2hvdWxkIHJlc3BvbmQgd2l0aCA0MDYgXCJOb3QgQWNjZXB0YWJsZVwiLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSAuLi5jaGFyc2V0XG4gKiBAcmV0dXJuIHtTdHJpbmd8QXJyYXl9XG4gKiBAcHVibGljXG4gKi9cblxucmVxLmFjY2VwdHNDaGFyc2V0cyA9IGZ1bmN0aW9uKCl7XG4gIHZhciBhY2NlcHQgPSBhY2NlcHRzKHRoaXMpO1xuICByZXR1cm4gYWNjZXB0LmNoYXJzZXRzLmFwcGx5KGFjY2VwdCwgYXJndW1lbnRzKTtcbn07XG5cbnJlcS5hY2NlcHRzQ2hhcnNldCA9IGRlcHJlY2F0ZS5mdW5jdGlvbihyZXEuYWNjZXB0c0NoYXJzZXRzLFxuICAncmVxLmFjY2VwdHNDaGFyc2V0OiBVc2UgYWNjZXB0c0NoYXJzZXRzIGluc3RlYWQnKTtcblxuLyoqXG4gKiBDaGVjayBpZiB0aGUgZ2l2ZW4gYGxhbmdgcyBhcmUgYWNjZXB0YWJsZSxcbiAqIG90aGVyd2lzZSB5b3Ugc2hvdWxkIHJlc3BvbmQgd2l0aCA0MDYgXCJOb3QgQWNjZXB0YWJsZVwiLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSAuLi5sYW5nXG4gKiBAcmV0dXJuIHtTdHJpbmd8QXJyYXl9XG4gKiBAcHVibGljXG4gKi9cblxucmVxLmFjY2VwdHNMYW5ndWFnZXMgPSBmdW5jdGlvbigpe1xuICB2YXIgYWNjZXB0ID0gYWNjZXB0cyh0aGlzKTtcbiAgcmV0dXJuIGFjY2VwdC5sYW5ndWFnZXMuYXBwbHkoYWNjZXB0LCBhcmd1bWVudHMpO1xufTtcblxucmVxLmFjY2VwdHNMYW5ndWFnZSA9IGRlcHJlY2F0ZS5mdW5jdGlvbihyZXEuYWNjZXB0c0xhbmd1YWdlcyxcbiAgJ3JlcS5hY2NlcHRzTGFuZ3VhZ2U6IFVzZSBhY2NlcHRzTGFuZ3VhZ2VzIGluc3RlYWQnKTtcblxuLyoqXG4gKiBQYXJzZSBSYW5nZSBoZWFkZXIgZmllbGQsIGNhcHBpbmcgdG8gdGhlIGdpdmVuIGBzaXplYC5cbiAqXG4gKiBVbnNwZWNpZmllZCByYW5nZXMgc3VjaCBhcyBcIjAtXCIgcmVxdWlyZSBrbm93bGVkZ2Ugb2YgeW91ciByZXNvdXJjZSBsZW5ndGguIEluXG4gKiB0aGUgY2FzZSBvZiBhIGJ5dGUgcmFuZ2UgdGhpcyBpcyBvZiBjb3Vyc2UgdGhlIHRvdGFsIG51bWJlciBvZiBieXRlcy4gSWYgdGhlXG4gKiBSYW5nZSBoZWFkZXIgZmllbGQgaXMgbm90IGdpdmVuIGB1bmRlZmluZWRgIGlzIHJldHVybmVkLCBgLTFgIHdoZW4gdW5zYXRpc2ZpYWJsZSxcbiAqIGFuZCBgLTJgIHdoZW4gc3ludGFjdGljYWxseSBpbnZhbGlkLlxuICpcbiAqIFdoZW4gcmFuZ2VzIGFyZSByZXR1cm5lZCwgdGhlIGFycmF5IGhhcyBhIFwidHlwZVwiIHByb3BlcnR5IHdoaWNoIGlzIHRoZSB0eXBlIG9mXG4gKiByYW5nZSB0aGF0IGlzIHJlcXVpcmVkIChtb3N0IGNvbW1vbmx5LCBcImJ5dGVzXCIpLiBFYWNoIGFycmF5IGVsZW1lbnQgaXMgYW4gb2JqZWN0XG4gKiB3aXRoIGEgXCJzdGFydFwiIGFuZCBcImVuZFwiIHByb3BlcnR5IGZvciB0aGUgcG9ydGlvbiBvZiB0aGUgcmFuZ2UuXG4gKlxuICogVGhlIFwiY29tYmluZVwiIG9wdGlvbiBjYW4gYmUgc2V0IHRvIGB0cnVlYCBhbmQgb3ZlcmxhcHBpbmcgJiBhZGphY2VudCByYW5nZXNcbiAqIHdpbGwgYmUgY29tYmluZWQgaW50byBhIHNpbmdsZSByYW5nZS5cbiAqXG4gKiBOT1RFOiByZW1lbWJlciB0aGF0IHJhbmdlcyBhcmUgaW5jbHVzaXZlLCBzbyBmb3IgZXhhbXBsZSBcIlJhbmdlOiB1c2Vycz0wLTNcIlxuICogc2hvdWxkIHJlc3BvbmQgd2l0aCA0IHVzZXJzIHdoZW4gYXZhaWxhYmxlLCBub3QgMy5cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gc2l6ZVxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5jb21iaW5lPWZhbHNlXVxuICogQHJldHVybiB7bnVtYmVyfGFycmF5fVxuICogQHB1YmxpY1xuICovXG5cbnJlcS5yYW5nZSA9IGZ1bmN0aW9uIHJhbmdlKHNpemUsIG9wdGlvbnMpIHtcbiAgdmFyIHJhbmdlID0gdGhpcy5nZXQoJ1JhbmdlJyk7XG4gIGlmICghcmFuZ2UpIHJldHVybjtcbiAgcmV0dXJuIHBhcnNlUmFuZ2Uoc2l6ZSwgcmFuZ2UsIG9wdGlvbnMpO1xufTtcblxuLyoqXG4gKiBSZXR1cm4gdGhlIHZhbHVlIG9mIHBhcmFtIGBuYW1lYCB3aGVuIHByZXNlbnQgb3IgYGRlZmF1bHRWYWx1ZWAuXG4gKlxuICogIC0gQ2hlY2tzIHJvdXRlIHBsYWNlaG9sZGVycywgZXg6IF8vdXNlci86aWRfXG4gKiAgLSBDaGVja3MgYm9keSBwYXJhbXMsIGV4OiBpZD0xMiwge1wiaWRcIjoxMn1cbiAqICAtIENoZWNrcyBxdWVyeSBzdHJpbmcgcGFyYW1zLCBleDogP2lkPTEyXG4gKlxuICogVG8gdXRpbGl6ZSByZXF1ZXN0IGJvZGllcywgYHJlcS5ib2R5YFxuICogc2hvdWxkIGJlIGFuIG9iamVjdC4gVGhpcyBjYW4gYmUgZG9uZSBieSB1c2luZ1xuICogdGhlIGBib2R5UGFyc2VyKClgIG1pZGRsZXdhcmUuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7TWl4ZWR9IFtkZWZhdWx0VmFsdWVdXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAcHVibGljXG4gKi9cblxucmVxLnBhcmFtID0gZnVuY3Rpb24gcGFyYW0obmFtZSwgZGVmYXVsdFZhbHVlKSB7XG4gIHZhciBwYXJhbXMgPSB0aGlzLnBhcmFtcyB8fCB7fTtcbiAgdmFyIGJvZHkgPSB0aGlzLmJvZHkgfHwge307XG4gIHZhciBxdWVyeSA9IHRoaXMucXVlcnkgfHwge307XG5cbiAgdmFyIGFyZ3MgPSBhcmd1bWVudHMubGVuZ3RoID09PSAxXG4gICAgPyAnbmFtZSdcbiAgICA6ICduYW1lLCBkZWZhdWx0JztcbiAgZGVwcmVjYXRlKCdyZXEucGFyYW0oJyArIGFyZ3MgKyAnKTogVXNlIHJlcS5wYXJhbXMsIHJlcS5ib2R5LCBvciByZXEucXVlcnkgaW5zdGVhZCcpO1xuXG4gIGlmIChudWxsICE9IHBhcmFtc1tuYW1lXSAmJiBwYXJhbXMuaGFzT3duUHJvcGVydHkobmFtZSkpIHJldHVybiBwYXJhbXNbbmFtZV07XG4gIGlmIChudWxsICE9IGJvZHlbbmFtZV0pIHJldHVybiBib2R5W25hbWVdO1xuICBpZiAobnVsbCAhPSBxdWVyeVtuYW1lXSkgcmV0dXJuIHF1ZXJ5W25hbWVdO1xuXG4gIHJldHVybiBkZWZhdWx0VmFsdWU7XG59O1xuXG4vKipcbiAqIENoZWNrIGlmIHRoZSBpbmNvbWluZyByZXF1ZXN0IGNvbnRhaW5zIHRoZSBcIkNvbnRlbnQtVHlwZVwiXG4gKiBoZWFkZXIgZmllbGQsIGFuZCBpdCBjb250YWlucyB0aGUgZ2l2ZSBtaW1lIGB0eXBlYC5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICAgIC8vIFdpdGggQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLThcbiAqICAgICAgcmVxLmlzKCdodG1sJyk7XG4gKiAgICAgIHJlcS5pcygndGV4dC9odG1sJyk7XG4gKiAgICAgIHJlcS5pcygndGV4dC8qJyk7XG4gKiAgICAgIC8vID0+IHRydWVcbiAqXG4gKiAgICAgIC8vIFdoZW4gQ29udGVudC1UeXBlIGlzIGFwcGxpY2F0aW9uL2pzb25cbiAqICAgICAgcmVxLmlzKCdqc29uJyk7XG4gKiAgICAgIHJlcS5pcygnYXBwbGljYXRpb24vanNvbicpO1xuICogICAgICByZXEuaXMoJ2FwcGxpY2F0aW9uLyonKTtcbiAqICAgICAgLy8gPT4gdHJ1ZVxuICpcbiAqICAgICAgcmVxLmlzKCdodG1sJyk7XG4gKiAgICAgIC8vID0+IGZhbHNlXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8QXJyYXl9IHR5cGVzLi4uXG4gKiBAcmV0dXJuIHtTdHJpbmd8ZmFsc2V8bnVsbH1cbiAqIEBwdWJsaWNcbiAqL1xuXG5yZXEuaXMgPSBmdW5jdGlvbiBpcyh0eXBlcykge1xuICB2YXIgYXJyID0gdHlwZXM7XG5cbiAgLy8gc3VwcG9ydCBmbGF0dGVuZWQgYXJndW1lbnRzXG4gIGlmICghQXJyYXkuaXNBcnJheSh0eXBlcykpIHtcbiAgICBhcnIgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFycltpXSA9IGFyZ3VtZW50c1tpXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHlwZWlzKHRoaXMsIGFycik7XG59O1xuXG4vKipcbiAqIFJldHVybiB0aGUgcHJvdG9jb2wgc3RyaW5nIFwiaHR0cFwiIG9yIFwiaHR0cHNcIlxuICogd2hlbiByZXF1ZXN0ZWQgd2l0aCBUTFMuIFdoZW4gdGhlIFwidHJ1c3QgcHJveHlcIlxuICogc2V0dGluZyB0cnVzdHMgdGhlIHNvY2tldCBhZGRyZXNzLCB0aGVcbiAqIFwiWC1Gb3J3YXJkZWQtUHJvdG9cIiBoZWFkZXIgZmllbGQgd2lsbCBiZSB0cnVzdGVkXG4gKiBhbmQgdXNlZCBpZiBwcmVzZW50LlxuICpcbiAqIElmIHlvdSdyZSBydW5uaW5nIGJlaGluZCBhIHJldmVyc2UgcHJveHkgdGhhdFxuICogc3VwcGxpZXMgaHR0cHMgZm9yIHlvdSB0aGlzIG1heSBiZSBlbmFibGVkLlxuICpcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBwdWJsaWNcbiAqL1xuXG5kZWZpbmVHZXR0ZXIocmVxLCAncHJvdG9jb2wnLCBmdW5jdGlvbiBwcm90b2NvbCgpe1xuICB2YXIgcHJvdG8gPSB0aGlzLmNvbm5lY3Rpb24uZW5jcnlwdGVkXG4gICAgPyAnaHR0cHMnXG4gICAgOiAnaHR0cCc7XG4gIHZhciB0cnVzdCA9IHRoaXMuYXBwLmdldCgndHJ1c3QgcHJveHkgZm4nKTtcblxuICBpZiAoIXRydXN0KHRoaXMuY29ubmVjdGlvbi5yZW1vdGVBZGRyZXNzLCAwKSkge1xuICAgIHJldHVybiBwcm90bztcbiAgfVxuXG4gIC8vIE5vdGU6IFgtRm9yd2FyZGVkLVByb3RvIGlzIG5vcm1hbGx5IG9ubHkgZXZlciBhXG4gIC8vICAgICAgIHNpbmdsZSB2YWx1ZSwgYnV0IHRoaXMgaXMgdG8gYmUgc2FmZS5cbiAgdmFyIGhlYWRlciA9IHRoaXMuZ2V0KCdYLUZvcndhcmRlZC1Qcm90bycpIHx8IHByb3RvXG4gIHZhciBpbmRleCA9IGhlYWRlci5pbmRleE9mKCcsJylcblxuICByZXR1cm4gaW5kZXggIT09IC0xXG4gICAgPyBoZWFkZXIuc3Vic3RyaW5nKDAsIGluZGV4KS50cmltKClcbiAgICA6IGhlYWRlci50cmltKClcbn0pO1xuXG4vKipcbiAqIFNob3J0LWhhbmQgZm9yOlxuICpcbiAqICAgIHJlcS5wcm90b2NvbCA9PT0gJ2h0dHBzJ1xuICpcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAcHVibGljXG4gKi9cblxuZGVmaW5lR2V0dGVyKHJlcSwgJ3NlY3VyZScsIGZ1bmN0aW9uIHNlY3VyZSgpe1xuICByZXR1cm4gdGhpcy5wcm90b2NvbCA9PT0gJ2h0dHBzJztcbn0pO1xuXG4vKipcbiAqIFJldHVybiB0aGUgcmVtb3RlIGFkZHJlc3MgZnJvbSB0aGUgdHJ1c3RlZCBwcm94eS5cbiAqXG4gKiBUaGUgaXMgdGhlIHJlbW90ZSBhZGRyZXNzIG9uIHRoZSBzb2NrZXQgdW5sZXNzXG4gKiBcInRydXN0IHByb3h5XCIgaXMgc2V0LlxuICpcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBwdWJsaWNcbiAqL1xuXG5kZWZpbmVHZXR0ZXIocmVxLCAnaXAnLCBmdW5jdGlvbiBpcCgpe1xuICB2YXIgdHJ1c3QgPSB0aGlzLmFwcC5nZXQoJ3RydXN0IHByb3h5IGZuJyk7XG4gIHJldHVybiBwcm94eWFkZHIodGhpcywgdHJ1c3QpO1xufSk7XG5cbi8qKlxuICogV2hlbiBcInRydXN0IHByb3h5XCIgaXMgc2V0LCB0cnVzdGVkIHByb3h5IGFkZHJlc3NlcyArIGNsaWVudC5cbiAqXG4gKiBGb3IgZXhhbXBsZSBpZiB0aGUgdmFsdWUgd2VyZSBcImNsaWVudCwgcHJveHkxLCBwcm94eTJcIlxuICogeW91IHdvdWxkIHJlY2VpdmUgdGhlIGFycmF5IGBbXCJjbGllbnRcIiwgXCJwcm94eTFcIiwgXCJwcm94eTJcIl1gXG4gKiB3aGVyZSBcInByb3h5MlwiIGlzIHRoZSBmdXJ0aGVzdCBkb3duLXN0cmVhbSBhbmQgXCJwcm94eTFcIiBhbmRcbiAqIFwicHJveHkyXCIgd2VyZSB0cnVzdGVkLlxuICpcbiAqIEByZXR1cm4ge0FycmF5fVxuICogQHB1YmxpY1xuICovXG5cbmRlZmluZUdldHRlcihyZXEsICdpcHMnLCBmdW5jdGlvbiBpcHMoKSB7XG4gIHZhciB0cnVzdCA9IHRoaXMuYXBwLmdldCgndHJ1c3QgcHJveHkgZm4nKTtcbiAgdmFyIGFkZHJzID0gcHJveHlhZGRyLmFsbCh0aGlzLCB0cnVzdCk7XG5cbiAgLy8gcmV2ZXJzZSB0aGUgb3JkZXIgKHRvIGZhcnRoZXN0IC0+IGNsb3Nlc3QpXG4gIC8vIGFuZCByZW1vdmUgc29ja2V0IGFkZHJlc3NcbiAgYWRkcnMucmV2ZXJzZSgpLnBvcCgpXG5cbiAgcmV0dXJuIGFkZHJzXG59KTtcblxuLyoqXG4gKiBSZXR1cm4gc3ViZG9tYWlucyBhcyBhbiBhcnJheS5cbiAqXG4gKiBTdWJkb21haW5zIGFyZSB0aGUgZG90LXNlcGFyYXRlZCBwYXJ0cyBvZiB0aGUgaG9zdCBiZWZvcmUgdGhlIG1haW4gZG9tYWluIG9mXG4gKiB0aGUgYXBwLiBCeSBkZWZhdWx0LCB0aGUgZG9tYWluIG9mIHRoZSBhcHAgaXMgYXNzdW1lZCB0byBiZSB0aGUgbGFzdCB0d29cbiAqIHBhcnRzIG9mIHRoZSBob3N0LiBUaGlzIGNhbiBiZSBjaGFuZ2VkIGJ5IHNldHRpbmcgXCJzdWJkb21haW4gb2Zmc2V0XCIuXG4gKlxuICogRm9yIGV4YW1wbGUsIGlmIHRoZSBkb21haW4gaXMgXCJ0b2JpLmZlcnJldHMuZXhhbXBsZS5jb21cIjpcbiAqIElmIFwic3ViZG9tYWluIG9mZnNldFwiIGlzIG5vdCBzZXQsIHJlcS5zdWJkb21haW5zIGlzIGBbXCJmZXJyZXRzXCIsIFwidG9iaVwiXWAuXG4gKiBJZiBcInN1YmRvbWFpbiBvZmZzZXRcIiBpcyAzLCByZXEuc3ViZG9tYWlucyBpcyBgW1widG9iaVwiXWAuXG4gKlxuICogQHJldHVybiB7QXJyYXl9XG4gKiBAcHVibGljXG4gKi9cblxuZGVmaW5lR2V0dGVyKHJlcSwgJ3N1YmRvbWFpbnMnLCBmdW5jdGlvbiBzdWJkb21haW5zKCkge1xuICB2YXIgaG9zdG5hbWUgPSB0aGlzLmhvc3RuYW1lO1xuXG4gIGlmICghaG9zdG5hbWUpIHJldHVybiBbXTtcblxuICB2YXIgb2Zmc2V0ID0gdGhpcy5hcHAuZ2V0KCdzdWJkb21haW4gb2Zmc2V0Jyk7XG4gIHZhciBzdWJkb21haW5zID0gIWlzSVAoaG9zdG5hbWUpXG4gICAgPyBob3N0bmFtZS5zcGxpdCgnLicpLnJldmVyc2UoKVxuICAgIDogW2hvc3RuYW1lXTtcblxuICByZXR1cm4gc3ViZG9tYWlucy5zbGljZShvZmZzZXQpO1xufSk7XG5cbi8qKlxuICogU2hvcnQtaGFuZCBmb3IgYHVybC5wYXJzZShyZXEudXJsKS5wYXRobmFtZWAuXG4gKlxuICogQHJldHVybiB7U3RyaW5nfVxuICogQHB1YmxpY1xuICovXG5cbmRlZmluZUdldHRlcihyZXEsICdwYXRoJywgZnVuY3Rpb24gcGF0aCgpIHtcbiAgcmV0dXJuIHBhcnNlKHRoaXMpLnBhdGhuYW1lO1xufSk7XG5cbi8qKlxuICogUGFyc2UgdGhlIFwiSG9zdFwiIGhlYWRlciBmaWVsZCB0byBhIGhvc3RuYW1lLlxuICpcbiAqIFdoZW4gdGhlIFwidHJ1c3QgcHJveHlcIiBzZXR0aW5nIHRydXN0cyB0aGUgc29ja2V0XG4gKiBhZGRyZXNzLCB0aGUgXCJYLUZvcndhcmRlZC1Ib3N0XCIgaGVhZGVyIGZpZWxkIHdpbGxcbiAqIGJlIHRydXN0ZWQuXG4gKlxuICogQHJldHVybiB7U3RyaW5nfVxuICogQHB1YmxpY1xuICovXG5cbmRlZmluZUdldHRlcihyZXEsICdob3N0bmFtZScsIGZ1bmN0aW9uIGhvc3RuYW1lKCl7XG4gIHZhciB0cnVzdCA9IHRoaXMuYXBwLmdldCgndHJ1c3QgcHJveHkgZm4nKTtcbiAgdmFyIGhvc3QgPSB0aGlzLmdldCgnWC1Gb3J3YXJkZWQtSG9zdCcpO1xuXG4gIGlmICghaG9zdCB8fCAhdHJ1c3QodGhpcy5jb25uZWN0aW9uLnJlbW90ZUFkZHJlc3MsIDApKSB7XG4gICAgaG9zdCA9IHRoaXMuZ2V0KCdIb3N0Jyk7XG4gIH1cblxuICBpZiAoIWhvc3QpIHJldHVybjtcblxuICAvLyBJUHY2IGxpdGVyYWwgc3VwcG9ydFxuICB2YXIgb2Zmc2V0ID0gaG9zdFswXSA9PT0gJ1snXG4gICAgPyBob3N0LmluZGV4T2YoJ10nKSArIDFcbiAgICA6IDA7XG4gIHZhciBpbmRleCA9IGhvc3QuaW5kZXhPZignOicsIG9mZnNldCk7XG5cbiAgcmV0dXJuIGluZGV4ICE9PSAtMVxuICAgID8gaG9zdC5zdWJzdHJpbmcoMCwgaW5kZXgpXG4gICAgOiBob3N0O1xufSk7XG5cbi8vIFRPRE86IGNoYW5nZSByZXEuaG9zdCB0byByZXR1cm4gaG9zdCBpbiBuZXh0IG1ham9yXG5cbmRlZmluZUdldHRlcihyZXEsICdob3N0JywgZGVwcmVjYXRlLmZ1bmN0aW9uKGZ1bmN0aW9uIGhvc3QoKXtcbiAgcmV0dXJuIHRoaXMuaG9zdG5hbWU7XG59LCAncmVxLmhvc3Q6IFVzZSByZXEuaG9zdG5hbWUgaW5zdGVhZCcpKTtcblxuLyoqXG4gKiBDaGVjayBpZiB0aGUgcmVxdWVzdCBpcyBmcmVzaCwgYWthXG4gKiBMYXN0LU1vZGlmaWVkIGFuZC9vciB0aGUgRVRhZ1xuICogc3RpbGwgbWF0Y2guXG4gKlxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBwdWJsaWNcbiAqL1xuXG5kZWZpbmVHZXR0ZXIocmVxLCAnZnJlc2gnLCBmdW5jdGlvbigpe1xuICB2YXIgbWV0aG9kID0gdGhpcy5tZXRob2Q7XG4gIHZhciByZXMgPSB0aGlzLnJlc1xuICB2YXIgc3RhdHVzID0gcmVzLnN0YXR1c0NvZGVcblxuICAvLyBHRVQgb3IgSEVBRCBmb3Igd2VhayBmcmVzaG5lc3MgdmFsaWRhdGlvbiBvbmx5XG4gIGlmICgnR0VUJyAhPT0gbWV0aG9kICYmICdIRUFEJyAhPT0gbWV0aG9kKSByZXR1cm4gZmFsc2U7XG5cbiAgLy8gMnh4IG9yIDMwNCBhcyBwZXIgcmZjMjYxNiAxNC4yNlxuICBpZiAoKHN0YXR1cyA+PSAyMDAgJiYgc3RhdHVzIDwgMzAwKSB8fCAzMDQgPT09IHN0YXR1cykge1xuICAgIHJldHVybiBmcmVzaCh0aGlzLmhlYWRlcnMsIHtcbiAgICAgICdldGFnJzogcmVzLmdldCgnRVRhZycpLFxuICAgICAgJ2xhc3QtbW9kaWZpZWQnOiByZXMuZ2V0KCdMYXN0LU1vZGlmaWVkJylcbiAgICB9KVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufSk7XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhlIHJlcXVlc3QgaXMgc3RhbGUsIGFrYVxuICogXCJMYXN0LU1vZGlmaWVkXCIgYW5kIC8gb3IgdGhlIFwiRVRhZ1wiIGZvciB0aGVcbiAqIHJlc291cmNlIGhhcyBjaGFuZ2VkLlxuICpcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAcHVibGljXG4gKi9cblxuZGVmaW5lR2V0dGVyKHJlcSwgJ3N0YWxlJywgZnVuY3Rpb24gc3RhbGUoKXtcbiAgcmV0dXJuICF0aGlzLmZyZXNoO1xufSk7XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhlIHJlcXVlc3Qgd2FzIGFuIF9YTUxIdHRwUmVxdWVzdF8uXG4gKlxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBwdWJsaWNcbiAqL1xuXG5kZWZpbmVHZXR0ZXIocmVxLCAneGhyJywgZnVuY3Rpb24geGhyKCl7XG4gIHZhciB2YWwgPSB0aGlzLmdldCgnWC1SZXF1ZXN0ZWQtV2l0aCcpIHx8ICcnO1xuICByZXR1cm4gdmFsLnRvTG93ZXJDYXNlKCkgPT09ICd4bWxodHRwcmVxdWVzdCc7XG59KTtcblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gZm9yIGNyZWF0aW5nIGEgZ2V0dGVyIG9uIGFuIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZ2V0dGVyXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBkZWZpbmVHZXR0ZXIob2JqLCBuYW1lLCBnZXR0ZXIpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwgbmFtZSwge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZ2V0dGVyXG4gIH0pO1xufVxuIiwiLyohXG4gKiBhY2NlcHRzXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcbiAqIENvcHlyaWdodChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgTmVnb3RpYXRvciA9IHJlcXVpcmUoJ25lZ290aWF0b3InKVxudmFyIG1pbWUgPSByZXF1aXJlKCdtaW1lLXR5cGVzJylcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFjY2VwdHNcblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgQWNjZXB0cyBvYmplY3QgZm9yIHRoZSBnaXZlbiByZXEuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHJlcVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIEFjY2VwdHMgKHJlcSkge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgQWNjZXB0cykpIHtcbiAgICByZXR1cm4gbmV3IEFjY2VwdHMocmVxKVxuICB9XG5cbiAgdGhpcy5oZWFkZXJzID0gcmVxLmhlYWRlcnNcbiAgdGhpcy5uZWdvdGlhdG9yID0gbmV3IE5lZ290aWF0b3IocmVxKVxufVxuXG4vKipcbiAqIENoZWNrIGlmIHRoZSBnaXZlbiBgdHlwZShzKWAgaXMgYWNjZXB0YWJsZSwgcmV0dXJuaW5nXG4gKiB0aGUgYmVzdCBtYXRjaCB3aGVuIHRydWUsIG90aGVyd2lzZSBgdW5kZWZpbmVkYCwgaW4gd2hpY2hcbiAqIGNhc2UgeW91IHNob3VsZCByZXNwb25kIHdpdGggNDA2IFwiTm90IEFjY2VwdGFibGVcIi5cbiAqXG4gKiBUaGUgYHR5cGVgIHZhbHVlIG1heSBiZSBhIHNpbmdsZSBtaW1lIHR5cGUgc3RyaW5nXG4gKiBzdWNoIGFzIFwiYXBwbGljYXRpb24vanNvblwiLCB0aGUgZXh0ZW5zaW9uIG5hbWVcbiAqIHN1Y2ggYXMgXCJqc29uXCIgb3IgYW4gYXJyYXkgYFtcImpzb25cIiwgXCJodG1sXCIsIFwidGV4dC9wbGFpblwiXWAuIFdoZW4gYSBsaXN0XG4gKiBvciBhcnJheSBpcyBnaXZlbiB0aGUgX2Jlc3RfIG1hdGNoLCBpZiBhbnkgaXMgcmV0dXJuZWQuXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgIC8vIEFjY2VwdDogdGV4dC9odG1sXG4gKiAgICAgdGhpcy50eXBlcygnaHRtbCcpO1xuICogICAgIC8vID0+IFwiaHRtbFwiXG4gKlxuICogICAgIC8vIEFjY2VwdDogdGV4dC8qLCBhcHBsaWNhdGlvbi9qc29uXG4gKiAgICAgdGhpcy50eXBlcygnaHRtbCcpO1xuICogICAgIC8vID0+IFwiaHRtbFwiXG4gKiAgICAgdGhpcy50eXBlcygndGV4dC9odG1sJyk7XG4gKiAgICAgLy8gPT4gXCJ0ZXh0L2h0bWxcIlxuICogICAgIHRoaXMudHlwZXMoJ2pzb24nLCAndGV4dCcpO1xuICogICAgIC8vID0+IFwianNvblwiXG4gKiAgICAgdGhpcy50eXBlcygnYXBwbGljYXRpb24vanNvbicpO1xuICogICAgIC8vID0+IFwiYXBwbGljYXRpb24vanNvblwiXG4gKlxuICogICAgIC8vIEFjY2VwdDogdGV4dC8qLCBhcHBsaWNhdGlvbi9qc29uXG4gKiAgICAgdGhpcy50eXBlcygnaW1hZ2UvcG5nJyk7XG4gKiAgICAgdGhpcy50eXBlcygncG5nJyk7XG4gKiAgICAgLy8gPT4gdW5kZWZpbmVkXG4gKlxuICogICAgIC8vIEFjY2VwdDogdGV4dC8qO3E9LjUsIGFwcGxpY2F0aW9uL2pzb25cbiAqICAgICB0aGlzLnR5cGVzKFsnaHRtbCcsICdqc29uJ10pO1xuICogICAgIHRoaXMudHlwZXMoJ2h0bWwnLCAnanNvbicpO1xuICogICAgIC8vID0+IFwianNvblwiXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8QXJyYXl9IHR5cGVzLi4uXG4gKiBAcmV0dXJuIHtTdHJpbmd8QXJyYXl8Qm9vbGVhbn1cbiAqIEBwdWJsaWNcbiAqL1xuXG5BY2NlcHRzLnByb3RvdHlwZS50eXBlID1cbkFjY2VwdHMucHJvdG90eXBlLnR5cGVzID0gZnVuY3Rpb24gKHR5cGVzXykge1xuICB2YXIgdHlwZXMgPSB0eXBlc19cblxuICAvLyBzdXBwb3J0IGZsYXR0ZW5lZCBhcmd1bWVudHNcbiAgaWYgKHR5cGVzICYmICFBcnJheS5pc0FycmF5KHR5cGVzKSkge1xuICAgIHR5cGVzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgpXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0eXBlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdHlwZXNbaV0gPSBhcmd1bWVudHNbaV1cbiAgICB9XG4gIH1cblxuICAvLyBubyB0eXBlcywgcmV0dXJuIGFsbCByZXF1ZXN0ZWQgdHlwZXNcbiAgaWYgKCF0eXBlcyB8fCB0eXBlcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gdGhpcy5uZWdvdGlhdG9yLm1lZGlhVHlwZXMoKVxuICB9XG5cbiAgLy8gbm8gYWNjZXB0IGhlYWRlciwgcmV0dXJuIGZpcnN0IGdpdmVuIHR5cGVcbiAgaWYgKCF0aGlzLmhlYWRlcnMuYWNjZXB0KSB7XG4gICAgcmV0dXJuIHR5cGVzWzBdXG4gIH1cblxuICB2YXIgbWltZXMgPSB0eXBlcy5tYXAoZXh0VG9NaW1lKVxuICB2YXIgYWNjZXB0cyA9IHRoaXMubmVnb3RpYXRvci5tZWRpYVR5cGVzKG1pbWVzLmZpbHRlcih2YWxpZE1pbWUpKVxuICB2YXIgZmlyc3QgPSBhY2NlcHRzWzBdXG5cbiAgcmV0dXJuIGZpcnN0XG4gICAgPyB0eXBlc1ttaW1lcy5pbmRleE9mKGZpcnN0KV1cbiAgICA6IGZhbHNlXG59XG5cbi8qKlxuICogUmV0dXJuIGFjY2VwdGVkIGVuY29kaW5ncyBvciBiZXN0IGZpdCBiYXNlZCBvbiBgZW5jb2RpbmdzYC5cbiAqXG4gKiBHaXZlbiBgQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlYFxuICogYW4gYXJyYXkgc29ydGVkIGJ5IHF1YWxpdHkgaXMgcmV0dXJuZWQ6XG4gKlxuICogICAgIFsnZ3ppcCcsICdkZWZsYXRlJ11cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xBcnJheX0gZW5jb2RpbmdzLi4uXG4gKiBAcmV0dXJuIHtTdHJpbmd8QXJyYXl9XG4gKiBAcHVibGljXG4gKi9cblxuQWNjZXB0cy5wcm90b3R5cGUuZW5jb2RpbmcgPVxuQWNjZXB0cy5wcm90b3R5cGUuZW5jb2RpbmdzID0gZnVuY3Rpb24gKGVuY29kaW5nc18pIHtcbiAgdmFyIGVuY29kaW5ncyA9IGVuY29kaW5nc19cblxuICAvLyBzdXBwb3J0IGZsYXR0ZW5lZCBhcmd1bWVudHNcbiAgaWYgKGVuY29kaW5ncyAmJiAhQXJyYXkuaXNBcnJheShlbmNvZGluZ3MpKSB7XG4gICAgZW5jb2RpbmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgpXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbmNvZGluZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGVuY29kaW5nc1tpXSA9IGFyZ3VtZW50c1tpXVxuICAgIH1cbiAgfVxuXG4gIC8vIG5vIGVuY29kaW5ncywgcmV0dXJuIGFsbCByZXF1ZXN0ZWQgZW5jb2RpbmdzXG4gIGlmICghZW5jb2RpbmdzIHx8IGVuY29kaW5ncy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gdGhpcy5uZWdvdGlhdG9yLmVuY29kaW5ncygpXG4gIH1cblxuICByZXR1cm4gdGhpcy5uZWdvdGlhdG9yLmVuY29kaW5ncyhlbmNvZGluZ3MpWzBdIHx8IGZhbHNlXG59XG5cbi8qKlxuICogUmV0dXJuIGFjY2VwdGVkIGNoYXJzZXRzIG9yIGJlc3QgZml0IGJhc2VkIG9uIGBjaGFyc2V0c2AuXG4gKlxuICogR2l2ZW4gYEFjY2VwdC1DaGFyc2V0OiB1dGYtOCwgaXNvLTg4NTktMTtxPTAuMiwgdXRmLTc7cT0wLjVgXG4gKiBhbiBhcnJheSBzb3J0ZWQgYnkgcXVhbGl0eSBpcyByZXR1cm5lZDpcbiAqXG4gKiAgICAgWyd1dGYtOCcsICd1dGYtNycsICdpc28tODg1OS0xJ11cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xBcnJheX0gY2hhcnNldHMuLi5cbiAqIEByZXR1cm4ge1N0cmluZ3xBcnJheX1cbiAqIEBwdWJsaWNcbiAqL1xuXG5BY2NlcHRzLnByb3RvdHlwZS5jaGFyc2V0ID1cbkFjY2VwdHMucHJvdG90eXBlLmNoYXJzZXRzID0gZnVuY3Rpb24gKGNoYXJzZXRzXykge1xuICB2YXIgY2hhcnNldHMgPSBjaGFyc2V0c19cblxuICAvLyBzdXBwb3J0IGZsYXR0ZW5lZCBhcmd1bWVudHNcbiAgaWYgKGNoYXJzZXRzICYmICFBcnJheS5pc0FycmF5KGNoYXJzZXRzKSkge1xuICAgIGNoYXJzZXRzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgpXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGFyc2V0cy5sZW5ndGg7IGkrKykge1xuICAgICAgY2hhcnNldHNbaV0gPSBhcmd1bWVudHNbaV1cbiAgICB9XG4gIH1cblxuICAvLyBubyBjaGFyc2V0cywgcmV0dXJuIGFsbCByZXF1ZXN0ZWQgY2hhcnNldHNcbiAgaWYgKCFjaGFyc2V0cyB8fCBjaGFyc2V0cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gdGhpcy5uZWdvdGlhdG9yLmNoYXJzZXRzKClcbiAgfVxuXG4gIHJldHVybiB0aGlzLm5lZ290aWF0b3IuY2hhcnNldHMoY2hhcnNldHMpWzBdIHx8IGZhbHNlXG59XG5cbi8qKlxuICogUmV0dXJuIGFjY2VwdGVkIGxhbmd1YWdlcyBvciBiZXN0IGZpdCBiYXNlZCBvbiBgbGFuZ3NgLlxuICpcbiAqIEdpdmVuIGBBY2NlcHQtTGFuZ3VhZ2U6IGVuO3E9MC44LCBlcywgcHRgXG4gKiBhbiBhcnJheSBzb3J0ZWQgYnkgcXVhbGl0eSBpcyByZXR1cm5lZDpcbiAqXG4gKiAgICAgWydlcycsICdwdCcsICdlbiddXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8QXJyYXl9IGxhbmdzLi4uXG4gKiBAcmV0dXJuIHtBcnJheXxTdHJpbmd9XG4gKiBAcHVibGljXG4gKi9cblxuQWNjZXB0cy5wcm90b3R5cGUubGFuZyA9XG5BY2NlcHRzLnByb3RvdHlwZS5sYW5ncyA9XG5BY2NlcHRzLnByb3RvdHlwZS5sYW5ndWFnZSA9XG5BY2NlcHRzLnByb3RvdHlwZS5sYW5ndWFnZXMgPSBmdW5jdGlvbiAobGFuZ3VhZ2VzXykge1xuICB2YXIgbGFuZ3VhZ2VzID0gbGFuZ3VhZ2VzX1xuXG4gIC8vIHN1cHBvcnQgZmxhdHRlbmVkIGFyZ3VtZW50c1xuICBpZiAobGFuZ3VhZ2VzICYmICFBcnJheS5pc0FycmF5KGxhbmd1YWdlcykpIHtcbiAgICBsYW5ndWFnZXMgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aClcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhbmd1YWdlcy5sZW5ndGg7IGkrKykge1xuICAgICAgbGFuZ3VhZ2VzW2ldID0gYXJndW1lbnRzW2ldXG4gICAgfVxuICB9XG5cbiAgLy8gbm8gbGFuZ3VhZ2VzLCByZXR1cm4gYWxsIHJlcXVlc3RlZCBsYW5ndWFnZXNcbiAgaWYgKCFsYW5ndWFnZXMgfHwgbGFuZ3VhZ2VzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB0aGlzLm5lZ290aWF0b3IubGFuZ3VhZ2VzKClcbiAgfVxuXG4gIHJldHVybiB0aGlzLm5lZ290aWF0b3IubGFuZ3VhZ2VzKGxhbmd1YWdlcylbMF0gfHwgZmFsc2Vcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGV4dG5hbWVzIHRvIG1pbWUuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZXh0VG9NaW1lICh0eXBlKSB7XG4gIHJldHVybiB0eXBlLmluZGV4T2YoJy8nKSA9PT0gLTFcbiAgICA/IG1pbWUubG9va3VwKHR5cGUpXG4gICAgOiB0eXBlXG59XG5cbi8qKlxuICogQ2hlY2sgaWYgbWltZSBpcyB2YWxpZC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICogQHJldHVybiB7U3RyaW5nfVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiB2YWxpZE1pbWUgKHR5cGUpIHtcbiAgcmV0dXJuIHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJ1xufVxuIiwiLyohXG4gKiBuZWdvdGlhdG9yXG4gKiBDb3B5cmlnaHQoYykgMjAxMiBGZWRlcmljbyBSb21lcm9cbiAqIENvcHlyaWdodChjKSAyMDEyLTIwMTQgSXNhYWMgWi4gU2NobHVldGVyXG4gKiBDb3B5cmlnaHQoYykgMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENhY2hlZCBsb2FkZWQgc3VibW9kdWxlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIG1vZHVsZXMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gTmVnb3RpYXRvcjtcbm1vZHVsZS5leHBvcnRzLk5lZ290aWF0b3IgPSBOZWdvdGlhdG9yO1xuXG4vKipcbiAqIENyZWF0ZSBhIE5lZ290aWF0b3IgaW5zdGFuY2UgZnJvbSBhIHJlcXVlc3QuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVxdWVzdFxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIE5lZ290aWF0b3IocmVxdWVzdCkge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgTmVnb3RpYXRvcikpIHtcbiAgICByZXR1cm4gbmV3IE5lZ290aWF0b3IocmVxdWVzdCk7XG4gIH1cblxuICB0aGlzLnJlcXVlc3QgPSByZXF1ZXN0O1xufVxuXG5OZWdvdGlhdG9yLnByb3RvdHlwZS5jaGFyc2V0ID0gZnVuY3Rpb24gY2hhcnNldChhdmFpbGFibGUpIHtcbiAgdmFyIHNldCA9IHRoaXMuY2hhcnNldHMoYXZhaWxhYmxlKTtcbiAgcmV0dXJuIHNldCAmJiBzZXRbMF07XG59O1xuXG5OZWdvdGlhdG9yLnByb3RvdHlwZS5jaGFyc2V0cyA9IGZ1bmN0aW9uIGNoYXJzZXRzKGF2YWlsYWJsZSkge1xuICB2YXIgcHJlZmVycmVkQ2hhcnNldHMgPSBsb2FkTW9kdWxlKCdjaGFyc2V0JykucHJlZmVycmVkQ2hhcnNldHM7XG4gIHJldHVybiBwcmVmZXJyZWRDaGFyc2V0cyh0aGlzLnJlcXVlc3QuaGVhZGVyc1snYWNjZXB0LWNoYXJzZXQnXSwgYXZhaWxhYmxlKTtcbn07XG5cbk5lZ290aWF0b3IucHJvdG90eXBlLmVuY29kaW5nID0gZnVuY3Rpb24gZW5jb2RpbmcoYXZhaWxhYmxlKSB7XG4gIHZhciBzZXQgPSB0aGlzLmVuY29kaW5ncyhhdmFpbGFibGUpO1xuICByZXR1cm4gc2V0ICYmIHNldFswXTtcbn07XG5cbk5lZ290aWF0b3IucHJvdG90eXBlLmVuY29kaW5ncyA9IGZ1bmN0aW9uIGVuY29kaW5ncyhhdmFpbGFibGUpIHtcbiAgdmFyIHByZWZlcnJlZEVuY29kaW5ncyA9IGxvYWRNb2R1bGUoJ2VuY29kaW5nJykucHJlZmVycmVkRW5jb2RpbmdzO1xuICByZXR1cm4gcHJlZmVycmVkRW5jb2RpbmdzKHRoaXMucmVxdWVzdC5oZWFkZXJzWydhY2NlcHQtZW5jb2RpbmcnXSwgYXZhaWxhYmxlKTtcbn07XG5cbk5lZ290aWF0b3IucHJvdG90eXBlLmxhbmd1YWdlID0gZnVuY3Rpb24gbGFuZ3VhZ2UoYXZhaWxhYmxlKSB7XG4gIHZhciBzZXQgPSB0aGlzLmxhbmd1YWdlcyhhdmFpbGFibGUpO1xuICByZXR1cm4gc2V0ICYmIHNldFswXTtcbn07XG5cbk5lZ290aWF0b3IucHJvdG90eXBlLmxhbmd1YWdlcyA9IGZ1bmN0aW9uIGxhbmd1YWdlcyhhdmFpbGFibGUpIHtcbiAgdmFyIHByZWZlcnJlZExhbmd1YWdlcyA9IGxvYWRNb2R1bGUoJ2xhbmd1YWdlJykucHJlZmVycmVkTGFuZ3VhZ2VzO1xuICByZXR1cm4gcHJlZmVycmVkTGFuZ3VhZ2VzKHRoaXMucmVxdWVzdC5oZWFkZXJzWydhY2NlcHQtbGFuZ3VhZ2UnXSwgYXZhaWxhYmxlKTtcbn07XG5cbk5lZ290aWF0b3IucHJvdG90eXBlLm1lZGlhVHlwZSA9IGZ1bmN0aW9uIG1lZGlhVHlwZShhdmFpbGFibGUpIHtcbiAgdmFyIHNldCA9IHRoaXMubWVkaWFUeXBlcyhhdmFpbGFibGUpO1xuICByZXR1cm4gc2V0ICYmIHNldFswXTtcbn07XG5cbk5lZ290aWF0b3IucHJvdG90eXBlLm1lZGlhVHlwZXMgPSBmdW5jdGlvbiBtZWRpYVR5cGVzKGF2YWlsYWJsZSkge1xuICB2YXIgcHJlZmVycmVkTWVkaWFUeXBlcyA9IGxvYWRNb2R1bGUoJ21lZGlhVHlwZScpLnByZWZlcnJlZE1lZGlhVHlwZXM7XG4gIHJldHVybiBwcmVmZXJyZWRNZWRpYVR5cGVzKHRoaXMucmVxdWVzdC5oZWFkZXJzLmFjY2VwdCwgYXZhaWxhYmxlKTtcbn07XG5cbi8vIEJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG5OZWdvdGlhdG9yLnByb3RvdHlwZS5wcmVmZXJyZWRDaGFyc2V0ID0gTmVnb3RpYXRvci5wcm90b3R5cGUuY2hhcnNldDtcbk5lZ290aWF0b3IucHJvdG90eXBlLnByZWZlcnJlZENoYXJzZXRzID0gTmVnb3RpYXRvci5wcm90b3R5cGUuY2hhcnNldHM7XG5OZWdvdGlhdG9yLnByb3RvdHlwZS5wcmVmZXJyZWRFbmNvZGluZyA9IE5lZ290aWF0b3IucHJvdG90eXBlLmVuY29kaW5nO1xuTmVnb3RpYXRvci5wcm90b3R5cGUucHJlZmVycmVkRW5jb2RpbmdzID0gTmVnb3RpYXRvci5wcm90b3R5cGUuZW5jb2RpbmdzO1xuTmVnb3RpYXRvci5wcm90b3R5cGUucHJlZmVycmVkTGFuZ3VhZ2UgPSBOZWdvdGlhdG9yLnByb3RvdHlwZS5sYW5ndWFnZTtcbk5lZ290aWF0b3IucHJvdG90eXBlLnByZWZlcnJlZExhbmd1YWdlcyA9IE5lZ290aWF0b3IucHJvdG90eXBlLmxhbmd1YWdlcztcbk5lZ290aWF0b3IucHJvdG90eXBlLnByZWZlcnJlZE1lZGlhVHlwZSA9IE5lZ290aWF0b3IucHJvdG90eXBlLm1lZGlhVHlwZTtcbk5lZ290aWF0b3IucHJvdG90eXBlLnByZWZlcnJlZE1lZGlhVHlwZXMgPSBOZWdvdGlhdG9yLnByb3RvdHlwZS5tZWRpYVR5cGVzO1xuXG4vKipcbiAqIExvYWQgdGhlIGdpdmVuIG1vZHVsZS5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbG9hZE1vZHVsZShtb2R1bGVOYW1lKSB7XG4gIHZhciBtb2R1bGUgPSBtb2R1bGVzW21vZHVsZU5hbWVdO1xuXG4gIGlmIChtb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBtb2R1bGU7XG4gIH1cblxuICAvLyBUaGlzIHVzZXMgYSBzd2l0Y2ggZm9yIHN0YXRpYyByZXF1aXJlIGFuYWx5c2lzXG4gIHN3aXRjaCAobW9kdWxlTmFtZSkge1xuICAgIGNhc2UgJ2NoYXJzZXQnOlxuICAgICAgbW9kdWxlID0gcmVxdWlyZSgnLi9saWIvY2hhcnNldCcpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZW5jb2RpbmcnOlxuICAgICAgbW9kdWxlID0gcmVxdWlyZSgnLi9saWIvZW5jb2RpbmcnKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2xhbmd1YWdlJzpcbiAgICAgIG1vZHVsZSA9IHJlcXVpcmUoJy4vbGliL2xhbmd1YWdlJyk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdtZWRpYVR5cGUnOlxuICAgICAgbW9kdWxlID0gcmVxdWlyZSgnLi9saWIvbWVkaWFUeXBlJyk7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgZmluZCBtb2R1bGUgXFwnJyArIG1vZHVsZU5hbWUgKyAnXFwnJyk7XG4gIH1cblxuICAvLyBTdG9yZSB0byBwcmV2ZW50IGludm9raW5nIHJlcXVpcmUoKVxuICBtb2R1bGVzW21vZHVsZU5hbWVdID0gbW9kdWxlO1xuXG4gIHJldHVybiBtb2R1bGU7XG59XG4iLCIvKipcbiAqIG5lZ290aWF0b3JcbiAqIENvcHlyaWdodChjKSAyMDEyIElzYWFjIFouIFNjaGx1ZXRlclxuICogQ29weXJpZ2h0KGMpIDIwMTQgRmVkZXJpY28gUm9tZXJvXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBwcmVmZXJyZWRDaGFyc2V0cztcbm1vZHVsZS5leHBvcnRzLnByZWZlcnJlZENoYXJzZXRzID0gcHJlZmVycmVkQ2hhcnNldHM7XG5cbi8qKlxuICogTW9kdWxlIHZhcmlhYmxlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIHNpbXBsZUNoYXJzZXRSZWdFeHAgPSAvXlxccyooW15cXHM7XSspXFxzKig/OjsoLiopKT8kLztcblxuLyoqXG4gKiBQYXJzZSB0aGUgQWNjZXB0LUNoYXJzZXQgaGVhZGVyLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZUFjY2VwdENoYXJzZXQoYWNjZXB0KSB7XG4gIHZhciBhY2NlcHRzID0gYWNjZXB0LnNwbGl0KCcsJyk7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGogPSAwOyBpIDwgYWNjZXB0cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBjaGFyc2V0ID0gcGFyc2VDaGFyc2V0KGFjY2VwdHNbaV0udHJpbSgpLCBpKTtcblxuICAgIGlmIChjaGFyc2V0KSB7XG4gICAgICBhY2NlcHRzW2orK10gPSBjaGFyc2V0O1xuICAgIH1cbiAgfVxuXG4gIC8vIHRyaW0gYWNjZXB0c1xuICBhY2NlcHRzLmxlbmd0aCA9IGo7XG5cbiAgcmV0dXJuIGFjY2VwdHM7XG59XG5cbi8qKlxuICogUGFyc2UgYSBjaGFyc2V0IGZyb20gdGhlIEFjY2VwdC1DaGFyc2V0IGhlYWRlci5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGFyc2VDaGFyc2V0KHN0ciwgaSkge1xuICB2YXIgbWF0Y2ggPSBzaW1wbGVDaGFyc2V0UmVnRXhwLmV4ZWMoc3RyKTtcbiAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG5cbiAgdmFyIGNoYXJzZXQgPSBtYXRjaFsxXTtcbiAgdmFyIHEgPSAxO1xuICBpZiAobWF0Y2hbMl0pIHtcbiAgICB2YXIgcGFyYW1zID0gbWF0Y2hbMl0uc3BsaXQoJzsnKVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGFyYW1zLmxlbmd0aDsgaSArKykge1xuICAgICAgdmFyIHAgPSBwYXJhbXNbaV0udHJpbSgpLnNwbGl0KCc9Jyk7XG4gICAgICBpZiAocFswXSA9PT0gJ3EnKSB7XG4gICAgICAgIHEgPSBwYXJzZUZsb2F0KHBbMV0pO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGNoYXJzZXQ6IGNoYXJzZXQsXG4gICAgcTogcSxcbiAgICBpOiBpXG4gIH07XG59XG5cbi8qKlxuICogR2V0IHRoZSBwcmlvcml0eSBvZiBhIGNoYXJzZXQuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGdldENoYXJzZXRQcmlvcml0eShjaGFyc2V0LCBhY2NlcHRlZCwgaW5kZXgpIHtcbiAgdmFyIHByaW9yaXR5ID0ge286IC0xLCBxOiAwLCBzOiAwfTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGFjY2VwdGVkLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNwZWMgPSBzcGVjaWZ5KGNoYXJzZXQsIGFjY2VwdGVkW2ldLCBpbmRleCk7XG5cbiAgICBpZiAoc3BlYyAmJiAocHJpb3JpdHkucyAtIHNwZWMucyB8fCBwcmlvcml0eS5xIC0gc3BlYy5xIHx8IHByaW9yaXR5Lm8gLSBzcGVjLm8pIDwgMCkge1xuICAgICAgcHJpb3JpdHkgPSBzcGVjO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwcmlvcml0eTtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIHNwZWNpZmljaXR5IG9mIHRoZSBjaGFyc2V0LlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBzcGVjaWZ5KGNoYXJzZXQsIHNwZWMsIGluZGV4KSB7XG4gIHZhciBzID0gMDtcbiAgaWYoc3BlYy5jaGFyc2V0LnRvTG93ZXJDYXNlKCkgPT09IGNoYXJzZXQudG9Mb3dlckNhc2UoKSl7XG4gICAgcyB8PSAxO1xuICB9IGVsc2UgaWYgKHNwZWMuY2hhcnNldCAhPT0gJyonICkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICByZXR1cm4ge1xuICAgIGk6IGluZGV4LFxuICAgIG86IHNwZWMuaSxcbiAgICBxOiBzcGVjLnEsXG4gICAgczogc1xuICB9XG59XG5cbi8qKlxuICogR2V0IHRoZSBwcmVmZXJyZWQgY2hhcnNldHMgZnJvbSBhbiBBY2NlcHQtQ2hhcnNldCBoZWFkZXIuXG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gcHJlZmVycmVkQ2hhcnNldHMoYWNjZXB0LCBwcm92aWRlZCkge1xuICAvLyBSRkMgMjYxNiBzZWMgMTQuMjogbm8gaGVhZGVyID0gKlxuICB2YXIgYWNjZXB0cyA9IHBhcnNlQWNjZXB0Q2hhcnNldChhY2NlcHQgPT09IHVuZGVmaW5lZCA/ICcqJyA6IGFjY2VwdCB8fCAnJyk7XG5cbiAgaWYgKCFwcm92aWRlZCkge1xuICAgIC8vIHNvcnRlZCBsaXN0IG9mIGFsbCBjaGFyc2V0c1xuICAgIHJldHVybiBhY2NlcHRzXG4gICAgICAuZmlsdGVyKGlzUXVhbGl0eSlcbiAgICAgIC5zb3J0KGNvbXBhcmVTcGVjcylcbiAgICAgIC5tYXAoZ2V0RnVsbENoYXJzZXQpO1xuICB9XG5cbiAgdmFyIHByaW9yaXRpZXMgPSBwcm92aWRlZC5tYXAoZnVuY3Rpb24gZ2V0UHJpb3JpdHkodHlwZSwgaW5kZXgpIHtcbiAgICByZXR1cm4gZ2V0Q2hhcnNldFByaW9yaXR5KHR5cGUsIGFjY2VwdHMsIGluZGV4KTtcbiAgfSk7XG5cbiAgLy8gc29ydGVkIGxpc3Qgb2YgYWNjZXB0ZWQgY2hhcnNldHNcbiAgcmV0dXJuIHByaW9yaXRpZXMuZmlsdGVyKGlzUXVhbGl0eSkuc29ydChjb21wYXJlU3BlY3MpLm1hcChmdW5jdGlvbiBnZXRDaGFyc2V0KHByaW9yaXR5KSB7XG4gICAgcmV0dXJuIHByb3ZpZGVkW3ByaW9yaXRpZXMuaW5kZXhPZihwcmlvcml0eSldO1xuICB9KTtcbn1cblxuLyoqXG4gKiBDb21wYXJlIHR3byBzcGVjcy5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY29tcGFyZVNwZWNzKGEsIGIpIHtcbiAgcmV0dXJuIChiLnEgLSBhLnEpIHx8IChiLnMgLSBhLnMpIHx8IChhLm8gLSBiLm8pIHx8IChhLmkgLSBiLmkpIHx8IDA7XG59XG5cbi8qKlxuICogR2V0IGZ1bGwgY2hhcnNldCBzdHJpbmcuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGdldEZ1bGxDaGFyc2V0KHNwZWMpIHtcbiAgcmV0dXJuIHNwZWMuY2hhcnNldDtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiBhIHNwZWMgaGFzIGFueSBxdWFsaXR5LlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBpc1F1YWxpdHkoc3BlYykge1xuICByZXR1cm4gc3BlYy5xID4gMDtcbn1cbiIsIi8qKlxuICogbmVnb3RpYXRvclxuICogQ29weXJpZ2h0KGMpIDIwMTIgSXNhYWMgWi4gU2NobHVldGVyXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBGZWRlcmljbyBSb21lcm9cbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHByZWZlcnJlZEVuY29kaW5ncztcbm1vZHVsZS5leHBvcnRzLnByZWZlcnJlZEVuY29kaW5ncyA9IHByZWZlcnJlZEVuY29kaW5ncztcblxuLyoqXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgc2ltcGxlRW5jb2RpbmdSZWdFeHAgPSAvXlxccyooW15cXHM7XSspXFxzKig/OjsoLiopKT8kLztcblxuLyoqXG4gKiBQYXJzZSB0aGUgQWNjZXB0LUVuY29kaW5nIGhlYWRlci5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGFyc2VBY2NlcHRFbmNvZGluZyhhY2NlcHQpIHtcbiAgdmFyIGFjY2VwdHMgPSBhY2NlcHQuc3BsaXQoJywnKTtcbiAgdmFyIGhhc0lkZW50aXR5ID0gZmFsc2U7XG4gIHZhciBtaW5RdWFsaXR5ID0gMTtcblxuICBmb3IgKHZhciBpID0gMCwgaiA9IDA7IGkgPCBhY2NlcHRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGVuY29kaW5nID0gcGFyc2VFbmNvZGluZyhhY2NlcHRzW2ldLnRyaW0oKSwgaSk7XG5cbiAgICBpZiAoZW5jb2RpbmcpIHtcbiAgICAgIGFjY2VwdHNbaisrXSA9IGVuY29kaW5nO1xuICAgICAgaGFzSWRlbnRpdHkgPSBoYXNJZGVudGl0eSB8fCBzcGVjaWZ5KCdpZGVudGl0eScsIGVuY29kaW5nKTtcbiAgICAgIG1pblF1YWxpdHkgPSBNYXRoLm1pbihtaW5RdWFsaXR5LCBlbmNvZGluZy5xIHx8IDEpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghaGFzSWRlbnRpdHkpIHtcbiAgICAvKlxuICAgICAqIElmIGlkZW50aXR5IGRvZXNuJ3QgZXhwbGljaXRseSBhcHBlYXIgaW4gdGhlIGFjY2VwdC1lbmNvZGluZyBoZWFkZXIsXG4gICAgICogaXQncyBhZGRlZCB0byB0aGUgbGlzdCBvZiBhY2NlcHRhYmxlIGVuY29kaW5nIHdpdGggdGhlIGxvd2VzdCBxXG4gICAgICovXG4gICAgYWNjZXB0c1tqKytdID0ge1xuICAgICAgZW5jb2Rpbmc6ICdpZGVudGl0eScsXG4gICAgICBxOiBtaW5RdWFsaXR5LFxuICAgICAgaTogaVxuICAgIH07XG4gIH1cblxuICAvLyB0cmltIGFjY2VwdHNcbiAgYWNjZXB0cy5sZW5ndGggPSBqO1xuXG4gIHJldHVybiBhY2NlcHRzO1xufVxuXG4vKipcbiAqIFBhcnNlIGFuIGVuY29kaW5nIGZyb20gdGhlIEFjY2VwdC1FbmNvZGluZyBoZWFkZXIuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlRW5jb2Rpbmcoc3RyLCBpKSB7XG4gIHZhciBtYXRjaCA9IHNpbXBsZUVuY29kaW5nUmVnRXhwLmV4ZWMoc3RyKTtcbiAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG5cbiAgdmFyIGVuY29kaW5nID0gbWF0Y2hbMV07XG4gIHZhciBxID0gMTtcbiAgaWYgKG1hdGNoWzJdKSB7XG4gICAgdmFyIHBhcmFtcyA9IG1hdGNoWzJdLnNwbGl0KCc7Jyk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXJhbXMubGVuZ3RoOyBpICsrKSB7XG4gICAgICB2YXIgcCA9IHBhcmFtc1tpXS50cmltKCkuc3BsaXQoJz0nKTtcbiAgICAgIGlmIChwWzBdID09PSAncScpIHtcbiAgICAgICAgcSA9IHBhcnNlRmxvYXQocFsxXSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZW5jb2Rpbmc6IGVuY29kaW5nLFxuICAgIHE6IHEsXG4gICAgaTogaVxuICB9O1xufVxuXG4vKipcbiAqIEdldCB0aGUgcHJpb3JpdHkgb2YgYW4gZW5jb2RpbmcuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGdldEVuY29kaW5nUHJpb3JpdHkoZW5jb2RpbmcsIGFjY2VwdGVkLCBpbmRleCkge1xuICB2YXIgcHJpb3JpdHkgPSB7bzogLTEsIHE6IDAsIHM6IDB9O1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYWNjZXB0ZWQubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc3BlYyA9IHNwZWNpZnkoZW5jb2RpbmcsIGFjY2VwdGVkW2ldLCBpbmRleCk7XG5cbiAgICBpZiAoc3BlYyAmJiAocHJpb3JpdHkucyAtIHNwZWMucyB8fCBwcmlvcml0eS5xIC0gc3BlYy5xIHx8IHByaW9yaXR5Lm8gLSBzcGVjLm8pIDwgMCkge1xuICAgICAgcHJpb3JpdHkgPSBzcGVjO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwcmlvcml0eTtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIHNwZWNpZmljaXR5IG9mIHRoZSBlbmNvZGluZy5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc3BlY2lmeShlbmNvZGluZywgc3BlYywgaW5kZXgpIHtcbiAgdmFyIHMgPSAwO1xuICBpZihzcGVjLmVuY29kaW5nLnRvTG93ZXJDYXNlKCkgPT09IGVuY29kaW5nLnRvTG93ZXJDYXNlKCkpe1xuICAgIHMgfD0gMTtcbiAgfSBlbHNlIGlmIChzcGVjLmVuY29kaW5nICE9PSAnKicgKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaTogaW5kZXgsXG4gICAgbzogc3BlYy5pLFxuICAgIHE6IHNwZWMucSxcbiAgICBzOiBzXG4gIH1cbn07XG5cbi8qKlxuICogR2V0IHRoZSBwcmVmZXJyZWQgZW5jb2RpbmdzIGZyb20gYW4gQWNjZXB0LUVuY29kaW5nIGhlYWRlci5cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBwcmVmZXJyZWRFbmNvZGluZ3MoYWNjZXB0LCBwcm92aWRlZCkge1xuICB2YXIgYWNjZXB0cyA9IHBhcnNlQWNjZXB0RW5jb2RpbmcoYWNjZXB0IHx8ICcnKTtcblxuICBpZiAoIXByb3ZpZGVkKSB7XG4gICAgLy8gc29ydGVkIGxpc3Qgb2YgYWxsIGVuY29kaW5nc1xuICAgIHJldHVybiBhY2NlcHRzXG4gICAgICAuZmlsdGVyKGlzUXVhbGl0eSlcbiAgICAgIC5zb3J0KGNvbXBhcmVTcGVjcylcbiAgICAgIC5tYXAoZ2V0RnVsbEVuY29kaW5nKTtcbiAgfVxuXG4gIHZhciBwcmlvcml0aWVzID0gcHJvdmlkZWQubWFwKGZ1bmN0aW9uIGdldFByaW9yaXR5KHR5cGUsIGluZGV4KSB7XG4gICAgcmV0dXJuIGdldEVuY29kaW5nUHJpb3JpdHkodHlwZSwgYWNjZXB0cywgaW5kZXgpO1xuICB9KTtcblxuICAvLyBzb3J0ZWQgbGlzdCBvZiBhY2NlcHRlZCBlbmNvZGluZ3NcbiAgcmV0dXJuIHByaW9yaXRpZXMuZmlsdGVyKGlzUXVhbGl0eSkuc29ydChjb21wYXJlU3BlY3MpLm1hcChmdW5jdGlvbiBnZXRFbmNvZGluZyhwcmlvcml0eSkge1xuICAgIHJldHVybiBwcm92aWRlZFtwcmlvcml0aWVzLmluZGV4T2YocHJpb3JpdHkpXTtcbiAgfSk7XG59XG5cbi8qKlxuICogQ29tcGFyZSB0d28gc3BlY3MuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNvbXBhcmVTcGVjcyhhLCBiKSB7XG4gIHJldHVybiAoYi5xIC0gYS5xKSB8fCAoYi5zIC0gYS5zKSB8fCAoYS5vIC0gYi5vKSB8fCAoYS5pIC0gYi5pKSB8fCAwO1xufVxuXG4vKipcbiAqIEdldCBmdWxsIGVuY29kaW5nIHN0cmluZy5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0RnVsbEVuY29kaW5nKHNwZWMpIHtcbiAgcmV0dXJuIHNwZWMuZW5jb2Rpbmc7XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYSBzcGVjIGhhcyBhbnkgcXVhbGl0eS5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gaXNRdWFsaXR5KHNwZWMpIHtcbiAgcmV0dXJuIHNwZWMucSA+IDA7XG59XG4iLCIvKipcbiAqIG5lZ290aWF0b3JcbiAqIENvcHlyaWdodChjKSAyMDEyIElzYWFjIFouIFNjaGx1ZXRlclxuICogQ29weXJpZ2h0KGMpIDIwMTQgRmVkZXJpY28gUm9tZXJvXG4gKiBDb3B5cmlnaHQoYykgMjAxNC0yMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBwcmVmZXJyZWRMYW5ndWFnZXM7XG5tb2R1bGUuZXhwb3J0cy5wcmVmZXJyZWRMYW5ndWFnZXMgPSBwcmVmZXJyZWRMYW5ndWFnZXM7XG5cbi8qKlxuICogTW9kdWxlIHZhcmlhYmxlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIHNpbXBsZUxhbmd1YWdlUmVnRXhwID0gL15cXHMqKFteXFxzXFwtO10rKSg/Oi0oW15cXHM7XSspKT9cXHMqKD86OyguKikpPyQvO1xuXG4vKipcbiAqIFBhcnNlIHRoZSBBY2NlcHQtTGFuZ3VhZ2UgaGVhZGVyLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZUFjY2VwdExhbmd1YWdlKGFjY2VwdCkge1xuICB2YXIgYWNjZXB0cyA9IGFjY2VwdC5zcGxpdCgnLCcpO1xuXG4gIGZvciAodmFyIGkgPSAwLCBqID0gMDsgaSA8IGFjY2VwdHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgbGFuZ2F1Z2UgPSBwYXJzZUxhbmd1YWdlKGFjY2VwdHNbaV0udHJpbSgpLCBpKTtcblxuICAgIGlmIChsYW5nYXVnZSkge1xuICAgICAgYWNjZXB0c1tqKytdID0gbGFuZ2F1Z2U7XG4gICAgfVxuICB9XG5cbiAgLy8gdHJpbSBhY2NlcHRzXG4gIGFjY2VwdHMubGVuZ3RoID0gajtcblxuICByZXR1cm4gYWNjZXB0cztcbn1cblxuLyoqXG4gKiBQYXJzZSBhIGxhbmd1YWdlIGZyb20gdGhlIEFjY2VwdC1MYW5ndWFnZSBoZWFkZXIuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlTGFuZ3VhZ2Uoc3RyLCBpKSB7XG4gIHZhciBtYXRjaCA9IHNpbXBsZUxhbmd1YWdlUmVnRXhwLmV4ZWMoc3RyKTtcbiAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG5cbiAgdmFyIHByZWZpeCA9IG1hdGNoWzFdLFxuICAgICAgc3VmZml4ID0gbWF0Y2hbMl0sXG4gICAgICBmdWxsID0gcHJlZml4O1xuXG4gIGlmIChzdWZmaXgpIGZ1bGwgKz0gXCItXCIgKyBzdWZmaXg7XG5cbiAgdmFyIHEgPSAxO1xuICBpZiAobWF0Y2hbM10pIHtcbiAgICB2YXIgcGFyYW1zID0gbWF0Y2hbM10uc3BsaXQoJzsnKVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGFyYW1zLmxlbmd0aDsgaSArKykge1xuICAgICAgdmFyIHAgPSBwYXJhbXNbaV0uc3BsaXQoJz0nKTtcbiAgICAgIGlmIChwWzBdID09PSAncScpIHEgPSBwYXJzZUZsb2F0KHBbMV0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcHJlZml4OiBwcmVmaXgsXG4gICAgc3VmZml4OiBzdWZmaXgsXG4gICAgcTogcSxcbiAgICBpOiBpLFxuICAgIGZ1bGw6IGZ1bGxcbiAgfTtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIHByaW9yaXR5IG9mIGEgbGFuZ3VhZ2UuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGdldExhbmd1YWdlUHJpb3JpdHkobGFuZ3VhZ2UsIGFjY2VwdGVkLCBpbmRleCkge1xuICB2YXIgcHJpb3JpdHkgPSB7bzogLTEsIHE6IDAsIHM6IDB9O1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYWNjZXB0ZWQubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc3BlYyA9IHNwZWNpZnkobGFuZ3VhZ2UsIGFjY2VwdGVkW2ldLCBpbmRleCk7XG5cbiAgICBpZiAoc3BlYyAmJiAocHJpb3JpdHkucyAtIHNwZWMucyB8fCBwcmlvcml0eS5xIC0gc3BlYy5xIHx8IHByaW9yaXR5Lm8gLSBzcGVjLm8pIDwgMCkge1xuICAgICAgcHJpb3JpdHkgPSBzcGVjO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwcmlvcml0eTtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIHNwZWNpZmljaXR5IG9mIHRoZSBsYW5ndWFnZS5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc3BlY2lmeShsYW5ndWFnZSwgc3BlYywgaW5kZXgpIHtcbiAgdmFyIHAgPSBwYXJzZUxhbmd1YWdlKGxhbmd1YWdlKVxuICBpZiAoIXApIHJldHVybiBudWxsO1xuICB2YXIgcyA9IDA7XG4gIGlmKHNwZWMuZnVsbC50b0xvd2VyQ2FzZSgpID09PSBwLmZ1bGwudG9Mb3dlckNhc2UoKSl7XG4gICAgcyB8PSA0O1xuICB9IGVsc2UgaWYgKHNwZWMucHJlZml4LnRvTG93ZXJDYXNlKCkgPT09IHAuZnVsbC50b0xvd2VyQ2FzZSgpKSB7XG4gICAgcyB8PSAyO1xuICB9IGVsc2UgaWYgKHNwZWMuZnVsbC50b0xvd2VyQ2FzZSgpID09PSBwLnByZWZpeC50b0xvd2VyQ2FzZSgpKSB7XG4gICAgcyB8PSAxO1xuICB9IGVsc2UgaWYgKHNwZWMuZnVsbCAhPT0gJyonICkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICByZXR1cm4ge1xuICAgIGk6IGluZGV4LFxuICAgIG86IHNwZWMuaSxcbiAgICBxOiBzcGVjLnEsXG4gICAgczogc1xuICB9XG59O1xuXG4vKipcbiAqIEdldCB0aGUgcHJlZmVycmVkIGxhbmd1YWdlcyBmcm9tIGFuIEFjY2VwdC1MYW5ndWFnZSBoZWFkZXIuXG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gcHJlZmVycmVkTGFuZ3VhZ2VzKGFjY2VwdCwgcHJvdmlkZWQpIHtcbiAgLy8gUkZDIDI2MTYgc2VjIDE0LjQ6IG5vIGhlYWRlciA9ICpcbiAgdmFyIGFjY2VwdHMgPSBwYXJzZUFjY2VwdExhbmd1YWdlKGFjY2VwdCA9PT0gdW5kZWZpbmVkID8gJyonIDogYWNjZXB0IHx8ICcnKTtcblxuICBpZiAoIXByb3ZpZGVkKSB7XG4gICAgLy8gc29ydGVkIGxpc3Qgb2YgYWxsIGxhbmd1YWdlc1xuICAgIHJldHVybiBhY2NlcHRzXG4gICAgICAuZmlsdGVyKGlzUXVhbGl0eSlcbiAgICAgIC5zb3J0KGNvbXBhcmVTcGVjcylcbiAgICAgIC5tYXAoZ2V0RnVsbExhbmd1YWdlKTtcbiAgfVxuXG4gIHZhciBwcmlvcml0aWVzID0gcHJvdmlkZWQubWFwKGZ1bmN0aW9uIGdldFByaW9yaXR5KHR5cGUsIGluZGV4KSB7XG4gICAgcmV0dXJuIGdldExhbmd1YWdlUHJpb3JpdHkodHlwZSwgYWNjZXB0cywgaW5kZXgpO1xuICB9KTtcblxuICAvLyBzb3J0ZWQgbGlzdCBvZiBhY2NlcHRlZCBsYW5ndWFnZXNcbiAgcmV0dXJuIHByaW9yaXRpZXMuZmlsdGVyKGlzUXVhbGl0eSkuc29ydChjb21wYXJlU3BlY3MpLm1hcChmdW5jdGlvbiBnZXRMYW5ndWFnZShwcmlvcml0eSkge1xuICAgIHJldHVybiBwcm92aWRlZFtwcmlvcml0aWVzLmluZGV4T2YocHJpb3JpdHkpXTtcbiAgfSk7XG59XG5cbi8qKlxuICogQ29tcGFyZSB0d28gc3BlY3MuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNvbXBhcmVTcGVjcyhhLCBiKSB7XG4gIHJldHVybiAoYi5xIC0gYS5xKSB8fCAoYi5zIC0gYS5zKSB8fCAoYS5vIC0gYi5vKSB8fCAoYS5pIC0gYi5pKSB8fCAwO1xufVxuXG4vKipcbiAqIEdldCBmdWxsIGxhbmd1YWdlIHN0cmluZy5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0RnVsbExhbmd1YWdlKHNwZWMpIHtcbiAgcmV0dXJuIHNwZWMuZnVsbDtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiBhIHNwZWMgaGFzIGFueSBxdWFsaXR5LlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBpc1F1YWxpdHkoc3BlYykge1xuICByZXR1cm4gc3BlYy5xID4gMDtcbn1cbiIsIi8qKlxuICogbmVnb3RpYXRvclxuICogQ29weXJpZ2h0KGMpIDIwMTIgSXNhYWMgWi4gU2NobHVldGVyXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBGZWRlcmljbyBSb21lcm9cbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHByZWZlcnJlZE1lZGlhVHlwZXM7XG5tb2R1bGUuZXhwb3J0cy5wcmVmZXJyZWRNZWRpYVR5cGVzID0gcHJlZmVycmVkTWVkaWFUeXBlcztcblxuLyoqXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgc2ltcGxlTWVkaWFUeXBlUmVnRXhwID0gL15cXHMqKFteXFxzXFwvO10rKVxcLyhbXjtcXHNdKylcXHMqKD86OyguKikpPyQvO1xuXG4vKipcbiAqIFBhcnNlIHRoZSBBY2NlcHQgaGVhZGVyLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZUFjY2VwdChhY2NlcHQpIHtcbiAgdmFyIGFjY2VwdHMgPSBzcGxpdE1lZGlhVHlwZXMoYWNjZXB0KTtcblxuICBmb3IgKHZhciBpID0gMCwgaiA9IDA7IGkgPCBhY2NlcHRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIG1lZGlhVHlwZSA9IHBhcnNlTWVkaWFUeXBlKGFjY2VwdHNbaV0udHJpbSgpLCBpKTtcblxuICAgIGlmIChtZWRpYVR5cGUpIHtcbiAgICAgIGFjY2VwdHNbaisrXSA9IG1lZGlhVHlwZTtcbiAgICB9XG4gIH1cblxuICAvLyB0cmltIGFjY2VwdHNcbiAgYWNjZXB0cy5sZW5ndGggPSBqO1xuXG4gIHJldHVybiBhY2NlcHRzO1xufVxuXG4vKipcbiAqIFBhcnNlIGEgbWVkaWEgdHlwZSBmcm9tIHRoZSBBY2NlcHQgaGVhZGVyLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZU1lZGlhVHlwZShzdHIsIGkpIHtcbiAgdmFyIG1hdGNoID0gc2ltcGxlTWVkaWFUeXBlUmVnRXhwLmV4ZWMoc3RyKTtcbiAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG5cbiAgdmFyIHBhcmFtcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZhciBxID0gMTtcbiAgdmFyIHN1YnR5cGUgPSBtYXRjaFsyXTtcbiAgdmFyIHR5cGUgPSBtYXRjaFsxXTtcblxuICBpZiAobWF0Y2hbM10pIHtcbiAgICB2YXIga3ZwcyA9IHNwbGl0UGFyYW1ldGVycyhtYXRjaFszXSkubWFwKHNwbGl0S2V5VmFsdWVQYWlyKTtcblxuICAgIGZvciAodmFyIGogPSAwOyBqIDwga3Zwcy5sZW5ndGg7IGorKykge1xuICAgICAgdmFyIHBhaXIgPSBrdnBzW2pdO1xuICAgICAgdmFyIGtleSA9IHBhaXJbMF0udG9Mb3dlckNhc2UoKTtcbiAgICAgIHZhciB2YWwgPSBwYWlyWzFdO1xuXG4gICAgICAvLyBnZXQgdGhlIHZhbHVlLCB1bndyYXBwaW5nIHF1b3Rlc1xuICAgICAgdmFyIHZhbHVlID0gdmFsICYmIHZhbFswXSA9PT0gJ1wiJyAmJiB2YWxbdmFsLmxlbmd0aCAtIDFdID09PSAnXCInXG4gICAgICAgID8gdmFsLnN1YnN0cigxLCB2YWwubGVuZ3RoIC0gMilcbiAgICAgICAgOiB2YWw7XG5cbiAgICAgIGlmIChrZXkgPT09ICdxJykge1xuICAgICAgICBxID0gcGFyc2VGbG9hdCh2YWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICAvLyBzdG9yZSBwYXJhbWV0ZXJcbiAgICAgIHBhcmFtc1trZXldID0gdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0eXBlOiB0eXBlLFxuICAgIHN1YnR5cGU6IHN1YnR5cGUsXG4gICAgcGFyYW1zOiBwYXJhbXMsXG4gICAgcTogcSxcbiAgICBpOiBpXG4gIH07XG59XG5cbi8qKlxuICogR2V0IHRoZSBwcmlvcml0eSBvZiBhIG1lZGlhIHR5cGUuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGdldE1lZGlhVHlwZVByaW9yaXR5KHR5cGUsIGFjY2VwdGVkLCBpbmRleCkge1xuICB2YXIgcHJpb3JpdHkgPSB7bzogLTEsIHE6IDAsIHM6IDB9O1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYWNjZXB0ZWQubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc3BlYyA9IHNwZWNpZnkodHlwZSwgYWNjZXB0ZWRbaV0sIGluZGV4KTtcblxuICAgIGlmIChzcGVjICYmIChwcmlvcml0eS5zIC0gc3BlYy5zIHx8IHByaW9yaXR5LnEgLSBzcGVjLnEgfHwgcHJpb3JpdHkubyAtIHNwZWMubykgPCAwKSB7XG4gICAgICBwcmlvcml0eSA9IHNwZWM7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHByaW9yaXR5O1xufVxuXG4vKipcbiAqIEdldCB0aGUgc3BlY2lmaWNpdHkgb2YgdGhlIG1lZGlhIHR5cGUuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHNwZWNpZnkodHlwZSwgc3BlYywgaW5kZXgpIHtcbiAgdmFyIHAgPSBwYXJzZU1lZGlhVHlwZSh0eXBlKTtcbiAgdmFyIHMgPSAwO1xuXG4gIGlmICghcCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgaWYoc3BlYy50eXBlLnRvTG93ZXJDYXNlKCkgPT0gcC50eXBlLnRvTG93ZXJDYXNlKCkpIHtcbiAgICBzIHw9IDRcbiAgfSBlbHNlIGlmKHNwZWMudHlwZSAhPSAnKicpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGlmKHNwZWMuc3VidHlwZS50b0xvd2VyQ2FzZSgpID09IHAuc3VidHlwZS50b0xvd2VyQ2FzZSgpKSB7XG4gICAgcyB8PSAyXG4gIH0gZWxzZSBpZihzcGVjLnN1YnR5cGUgIT0gJyonKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHNwZWMucGFyYW1zKTtcbiAgaWYgKGtleXMubGVuZ3RoID4gMCkge1xuICAgIGlmIChrZXlzLmV2ZXJ5KGZ1bmN0aW9uIChrKSB7XG4gICAgICByZXR1cm4gc3BlYy5wYXJhbXNba10gPT0gJyonIHx8IChzcGVjLnBhcmFtc1trXSB8fCAnJykudG9Mb3dlckNhc2UoKSA9PSAocC5wYXJhbXNba10gfHwgJycpLnRvTG93ZXJDYXNlKCk7XG4gICAgfSkpIHtcbiAgICAgIHMgfD0gMVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaTogaW5kZXgsXG4gICAgbzogc3BlYy5pLFxuICAgIHE6IHNwZWMucSxcbiAgICBzOiBzLFxuICB9XG59XG5cbi8qKlxuICogR2V0IHRoZSBwcmVmZXJyZWQgbWVkaWEgdHlwZXMgZnJvbSBhbiBBY2NlcHQgaGVhZGVyLlxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHByZWZlcnJlZE1lZGlhVHlwZXMoYWNjZXB0LCBwcm92aWRlZCkge1xuICAvLyBSRkMgMjYxNiBzZWMgMTQuMjogbm8gaGVhZGVyID0gKi8qXG4gIHZhciBhY2NlcHRzID0gcGFyc2VBY2NlcHQoYWNjZXB0ID09PSB1bmRlZmluZWQgPyAnKi8qJyA6IGFjY2VwdCB8fCAnJyk7XG5cbiAgaWYgKCFwcm92aWRlZCkge1xuICAgIC8vIHNvcnRlZCBsaXN0IG9mIGFsbCB0eXBlc1xuICAgIHJldHVybiBhY2NlcHRzXG4gICAgICAuZmlsdGVyKGlzUXVhbGl0eSlcbiAgICAgIC5zb3J0KGNvbXBhcmVTcGVjcylcbiAgICAgIC5tYXAoZ2V0RnVsbFR5cGUpO1xuICB9XG5cbiAgdmFyIHByaW9yaXRpZXMgPSBwcm92aWRlZC5tYXAoZnVuY3Rpb24gZ2V0UHJpb3JpdHkodHlwZSwgaW5kZXgpIHtcbiAgICByZXR1cm4gZ2V0TWVkaWFUeXBlUHJpb3JpdHkodHlwZSwgYWNjZXB0cywgaW5kZXgpO1xuICB9KTtcblxuICAvLyBzb3J0ZWQgbGlzdCBvZiBhY2NlcHRlZCB0eXBlc1xuICByZXR1cm4gcHJpb3JpdGllcy5maWx0ZXIoaXNRdWFsaXR5KS5zb3J0KGNvbXBhcmVTcGVjcykubWFwKGZ1bmN0aW9uIGdldFR5cGUocHJpb3JpdHkpIHtcbiAgICByZXR1cm4gcHJvdmlkZWRbcHJpb3JpdGllcy5pbmRleE9mKHByaW9yaXR5KV07XG4gIH0pO1xufVxuXG4vKipcbiAqIENvbXBhcmUgdHdvIHNwZWNzLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjb21wYXJlU3BlY3MoYSwgYikge1xuICByZXR1cm4gKGIucSAtIGEucSkgfHwgKGIucyAtIGEucykgfHwgKGEubyAtIGIubykgfHwgKGEuaSAtIGIuaSkgfHwgMDtcbn1cblxuLyoqXG4gKiBHZXQgZnVsbCB0eXBlIHN0cmluZy5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0RnVsbFR5cGUoc3BlYykge1xuICByZXR1cm4gc3BlYy50eXBlICsgJy8nICsgc3BlYy5zdWJ0eXBlO1xufVxuXG4vKipcbiAqIENoZWNrIGlmIGEgc3BlYyBoYXMgYW55IHF1YWxpdHkuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGlzUXVhbGl0eShzcGVjKSB7XG4gIHJldHVybiBzcGVjLnEgPiAwO1xufVxuXG4vKipcbiAqIENvdW50IHRoZSBudW1iZXIgb2YgcXVvdGVzIGluIGEgc3RyaW5nLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBxdW90ZUNvdW50KHN0cmluZykge1xuICB2YXIgY291bnQgPSAwO1xuICB2YXIgaW5kZXggPSAwO1xuXG4gIHdoaWxlICgoaW5kZXggPSBzdHJpbmcuaW5kZXhPZignXCInLCBpbmRleCkpICE9PSAtMSkge1xuICAgIGNvdW50Kys7XG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIHJldHVybiBjb3VudDtcbn1cblxuLyoqXG4gKiBTcGxpdCBhIGtleSB2YWx1ZSBwYWlyLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBzcGxpdEtleVZhbHVlUGFpcihzdHIpIHtcbiAgdmFyIGluZGV4ID0gc3RyLmluZGV4T2YoJz0nKTtcbiAgdmFyIGtleTtcbiAgdmFyIHZhbDtcblxuICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAga2V5ID0gc3RyO1xuICB9IGVsc2Uge1xuICAgIGtleSA9IHN0ci5zdWJzdHIoMCwgaW5kZXgpO1xuICAgIHZhbCA9IHN0ci5zdWJzdHIoaW5kZXggKyAxKTtcbiAgfVxuXG4gIHJldHVybiBba2V5LCB2YWxdO1xufVxuXG4vKipcbiAqIFNwbGl0IGFuIEFjY2VwdCBoZWFkZXIgaW50byBtZWRpYSB0eXBlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc3BsaXRNZWRpYVR5cGVzKGFjY2VwdCkge1xuICB2YXIgYWNjZXB0cyA9IGFjY2VwdC5zcGxpdCgnLCcpO1xuXG4gIGZvciAodmFyIGkgPSAxLCBqID0gMDsgaSA8IGFjY2VwdHMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAocXVvdGVDb3VudChhY2NlcHRzW2pdKSAlIDIgPT0gMCkge1xuICAgICAgYWNjZXB0c1srK2pdID0gYWNjZXB0c1tpXTtcbiAgICB9IGVsc2Uge1xuICAgICAgYWNjZXB0c1tqXSArPSAnLCcgKyBhY2NlcHRzW2ldO1xuICAgIH1cbiAgfVxuXG4gIC8vIHRyaW0gYWNjZXB0c1xuICBhY2NlcHRzLmxlbmd0aCA9IGogKyAxO1xuXG4gIHJldHVybiBhY2NlcHRzO1xufVxuXG4vKipcbiAqIFNwbGl0IGEgc3RyaW5nIG9mIHBhcmFtZXRlcnMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHNwbGl0UGFyYW1ldGVycyhzdHIpIHtcbiAgdmFyIHBhcmFtZXRlcnMgPSBzdHIuc3BsaXQoJzsnKTtcblxuICBmb3IgKHZhciBpID0gMSwgaiA9IDA7IGkgPCBwYXJhbWV0ZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHF1b3RlQ291bnQocGFyYW1ldGVyc1tqXSkgJSAyID09IDApIHtcbiAgICAgIHBhcmFtZXRlcnNbKytqXSA9IHBhcmFtZXRlcnNbaV07XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhcmFtZXRlcnNbal0gKz0gJzsnICsgcGFyYW1ldGVyc1tpXTtcbiAgICB9XG4gIH1cblxuICAvLyB0cmltIHBhcmFtZXRlcnNcbiAgcGFyYW1ldGVycy5sZW5ndGggPSBqICsgMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhcmFtZXRlcnMubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJhbWV0ZXJzW2ldID0gcGFyYW1ldGVyc1tpXS50cmltKCk7XG4gIH1cblxuICByZXR1cm4gcGFyYW1ldGVycztcbn1cbiIsIi8qIVxuICogZXhwcmVzc1xuICogQ29weXJpZ2h0KGMpIDIwMDktMjAxMyBUSiBIb2xvd2F5Y2h1a1xuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlclxudmFyIGNvbnRlbnREaXNwb3NpdGlvbiA9IHJlcXVpcmUoJ2NvbnRlbnQtZGlzcG9zaXRpb24nKTtcbnZhciBkZXByZWNhdGUgPSByZXF1aXJlKCdkZXBkJykoJ2V4cHJlc3MnKTtcbnZhciBlbmNvZGVVcmwgPSByZXF1aXJlKCdlbmNvZGV1cmwnKTtcbnZhciBlc2NhcGVIdG1sID0gcmVxdWlyZSgnZXNjYXBlLWh0bWwnKTtcbnZhciBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xudmFyIGlzQWJzb2x1dGUgPSByZXF1aXJlKCcuL3V0aWxzJykuaXNBYnNvbHV0ZTtcbnZhciBvbkZpbmlzaGVkID0gcmVxdWlyZSgnb24tZmluaXNoZWQnKTtcbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xudmFyIHN0YXR1c2VzID0gcmVxdWlyZSgnc3RhdHVzZXMnKVxudmFyIG1lcmdlID0gcmVxdWlyZSgndXRpbHMtbWVyZ2UnKTtcbnZhciBzaWduID0gcmVxdWlyZSgnY29va2llLXNpZ25hdHVyZScpLnNpZ247XG52YXIgbm9ybWFsaXplVHlwZSA9IHJlcXVpcmUoJy4vdXRpbHMnKS5ub3JtYWxpemVUeXBlO1xudmFyIG5vcm1hbGl6ZVR5cGVzID0gcmVxdWlyZSgnLi91dGlscycpLm5vcm1hbGl6ZVR5cGVzO1xudmFyIHNldENoYXJzZXQgPSByZXF1aXJlKCcuL3V0aWxzJykuc2V0Q2hhcnNldDtcbnZhciBjb29raWUgPSByZXF1aXJlKCdjb29raWUnKTtcbnZhciBzZW5kID0gcmVxdWlyZSgnc2VuZCcpO1xudmFyIGV4dG5hbWUgPSBwYXRoLmV4dG5hbWU7XG52YXIgbWltZSA9IHNlbmQubWltZTtcbnZhciByZXNvbHZlID0gcGF0aC5yZXNvbHZlO1xudmFyIHZhcnkgPSByZXF1aXJlKCd2YXJ5Jyk7XG5cbi8qKlxuICogUmVzcG9uc2UgcHJvdG90eXBlLlxuICogQHB1YmxpY1xuICovXG5cbnZhciByZXMgPSBPYmplY3QuY3JlYXRlKGh0dHAuU2VydmVyUmVzcG9uc2UucHJvdG90eXBlKVxuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gcmVzXG5cbi8qKlxuICogTW9kdWxlIHZhcmlhYmxlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIGNoYXJzZXRSZWdFeHAgPSAvO1xccypjaGFyc2V0XFxzKj0vO1xuXG4vKipcbiAqIFNldCBzdGF0dXMgYGNvZGVgLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBjb2RlXG4gKiBAcmV0dXJuIHtTZXJ2ZXJSZXNwb25zZX1cbiAqIEBwdWJsaWNcbiAqL1xuXG5yZXMuc3RhdHVzID0gZnVuY3Rpb24gc3RhdHVzKGNvZGUpIHtcbiAgdGhpcy5zdGF0dXNDb2RlID0gY29kZTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFNldCBMaW5rIGhlYWRlciBmaWVsZCB3aXRoIHRoZSBnaXZlbiBgbGlua3NgLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgIHJlcy5saW5rcyh7XG4gKiAgICAgIG5leHQ6ICdodHRwOi8vYXBpLmV4YW1wbGUuY29tL3VzZXJzP3BhZ2U9MicsXG4gKiAgICAgIGxhc3Q6ICdodHRwOi8vYXBpLmV4YW1wbGUuY29tL3VzZXJzP3BhZ2U9NSdcbiAqICAgIH0pO1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBsaW5rc1xuICogQHJldHVybiB7U2VydmVyUmVzcG9uc2V9XG4gKiBAcHVibGljXG4gKi9cblxucmVzLmxpbmtzID0gZnVuY3Rpb24obGlua3Mpe1xuICB2YXIgbGluayA9IHRoaXMuZ2V0KCdMaW5rJykgfHwgJyc7XG4gIGlmIChsaW5rKSBsaW5rICs9ICcsICc7XG4gIHJldHVybiB0aGlzLnNldCgnTGluaycsIGxpbmsgKyBPYmplY3Qua2V5cyhsaW5rcykubWFwKGZ1bmN0aW9uKHJlbCl7XG4gICAgcmV0dXJuICc8JyArIGxpbmtzW3JlbF0gKyAnPjsgcmVsPVwiJyArIHJlbCArICdcIic7XG4gIH0pLmpvaW4oJywgJykpO1xufTtcblxuLyoqXG4gKiBTZW5kIGEgcmVzcG9uc2UuXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgIHJlcy5zZW5kKEJ1ZmZlci5mcm9tKCd3YWhvbycpKTtcbiAqICAgICByZXMuc2VuZCh7IHNvbWU6ICdqc29uJyB9KTtcbiAqICAgICByZXMuc2VuZCgnPHA+c29tZSBodG1sPC9wPicpO1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcnxib29sZWFufG9iamVjdHxCdWZmZXJ9IGJvZHlcbiAqIEBwdWJsaWNcbiAqL1xuXG5yZXMuc2VuZCA9IGZ1bmN0aW9uIHNlbmQoYm9keSkge1xuICB2YXIgY2h1bmsgPSBib2R5O1xuICB2YXIgZW5jb2Rpbmc7XG4gIHZhciByZXEgPSB0aGlzLnJlcTtcbiAgdmFyIHR5cGU7XG5cbiAgLy8gc2V0dGluZ3NcbiAgdmFyIGFwcCA9IHRoaXMuYXBwO1xuXG4gIC8vIGFsbG93IHN0YXR1cyAvIGJvZHlcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIHtcbiAgICAvLyByZXMuc2VuZChib2R5LCBzdGF0dXMpIGJhY2t3YXJkcyBjb21wYXRcbiAgICBpZiAodHlwZW9mIGFyZ3VtZW50c1swXSAhPT0gJ251bWJlcicgJiYgdHlwZW9mIGFyZ3VtZW50c1sxXSA9PT0gJ251bWJlcicpIHtcbiAgICAgIGRlcHJlY2F0ZSgncmVzLnNlbmQoYm9keSwgc3RhdHVzKTogVXNlIHJlcy5zdGF0dXMoc3RhdHVzKS5zZW5kKGJvZHkpIGluc3RlYWQnKTtcbiAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IGFyZ3VtZW50c1sxXTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGVwcmVjYXRlKCdyZXMuc2VuZChzdGF0dXMsIGJvZHkpOiBVc2UgcmVzLnN0YXR1cyhzdGF0dXMpLnNlbmQoYm9keSkgaW5zdGVhZCcpO1xuICAgICAgdGhpcy5zdGF0dXNDb2RlID0gYXJndW1lbnRzWzBdO1xuICAgICAgY2h1bmsgPSBhcmd1bWVudHNbMV07XG4gICAgfVxuICB9XG5cbiAgLy8gZGlzYW1iaWd1YXRlIHJlcy5zZW5kKHN0YXR1cykgYW5kIHJlcy5zZW5kKHN0YXR1cywgbnVtKVxuICBpZiAodHlwZW9mIGNodW5rID09PSAnbnVtYmVyJyAmJiBhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgLy8gcmVzLnNlbmQoc3RhdHVzKSB3aWxsIHNldCBzdGF0dXMgbWVzc2FnZSBhcyB0ZXh0IHN0cmluZ1xuICAgIGlmICghdGhpcy5nZXQoJ0NvbnRlbnQtVHlwZScpKSB7XG4gICAgICB0aGlzLnR5cGUoJ3R4dCcpO1xuICAgIH1cblxuICAgIGRlcHJlY2F0ZSgncmVzLnNlbmQoc3RhdHVzKTogVXNlIHJlcy5zZW5kU3RhdHVzKHN0YXR1cykgaW5zdGVhZCcpO1xuICAgIHRoaXMuc3RhdHVzQ29kZSA9IGNodW5rO1xuICAgIGNodW5rID0gc3RhdHVzZXNbY2h1bmtdXG4gIH1cblxuICBzd2l0Y2ggKHR5cGVvZiBjaHVuaykge1xuICAgIC8vIHN0cmluZyBkZWZhdWx0aW5nIHRvIGh0bWxcbiAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgaWYgKCF0aGlzLmdldCgnQ29udGVudC1UeXBlJykpIHtcbiAgICAgICAgdGhpcy50eXBlKCdodG1sJyk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBjYXNlICdib29sZWFuJzpcbiAgICBjYXNlICdudW1iZXInOlxuICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICBpZiAoY2h1bmsgPT09IG51bGwpIHtcbiAgICAgICAgY2h1bmsgPSAnJztcbiAgICAgIH0gZWxzZSBpZiAoQnVmZmVyLmlzQnVmZmVyKGNodW5rKSkge1xuICAgICAgICBpZiAoIXRoaXMuZ2V0KCdDb250ZW50LVR5cGUnKSkge1xuICAgICAgICAgIHRoaXMudHlwZSgnYmluJyk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLmpzb24oY2h1bmspO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gIH1cblxuICAvLyB3cml0ZSBzdHJpbmdzIGluIHV0Zi04XG4gIGlmICh0eXBlb2YgY2h1bmsgPT09ICdzdHJpbmcnKSB7XG4gICAgZW5jb2RpbmcgPSAndXRmOCc7XG4gICAgdHlwZSA9IHRoaXMuZ2V0KCdDb250ZW50LVR5cGUnKTtcblxuICAgIC8vIHJlZmxlY3QgdGhpcyBpbiBjb250ZW50LXR5cGVcbiAgICBpZiAodHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aGlzLnNldCgnQ29udGVudC1UeXBlJywgc2V0Q2hhcnNldCh0eXBlLCAndXRmLTgnKSk7XG4gICAgfVxuICB9XG5cbiAgLy8gZGV0ZXJtaW5lIGlmIEVUYWcgc2hvdWxkIGJlIGdlbmVyYXRlZFxuICB2YXIgZXRhZ0ZuID0gYXBwLmdldCgnZXRhZyBmbicpXG4gIHZhciBnZW5lcmF0ZUVUYWcgPSAhdGhpcy5nZXQoJ0VUYWcnKSAmJiB0eXBlb2YgZXRhZ0ZuID09PSAnZnVuY3Rpb24nXG5cbiAgLy8gcG9wdWxhdGUgQ29udGVudC1MZW5ndGhcbiAgdmFyIGxlblxuICBpZiAoY2h1bmsgIT09IHVuZGVmaW5lZCkge1xuICAgIGlmIChCdWZmZXIuaXNCdWZmZXIoY2h1bmspKSB7XG4gICAgICAvLyBnZXQgbGVuZ3RoIG9mIEJ1ZmZlclxuICAgICAgbGVuID0gY2h1bmsubGVuZ3RoXG4gICAgfSBlbHNlIGlmICghZ2VuZXJhdGVFVGFnICYmIGNodW5rLmxlbmd0aCA8IDEwMDApIHtcbiAgICAgIC8vIGp1c3QgY2FsY3VsYXRlIGxlbmd0aCB3aGVuIG5vIEVUYWcgKyBzbWFsbCBjaHVua1xuICAgICAgbGVuID0gQnVmZmVyLmJ5dGVMZW5ndGgoY2h1bmssIGVuY29kaW5nKVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBjb252ZXJ0IGNodW5rIHRvIEJ1ZmZlciBhbmQgY2FsY3VsYXRlXG4gICAgICBjaHVuayA9IEJ1ZmZlci5mcm9tKGNodW5rLCBlbmNvZGluZylcbiAgICAgIGVuY29kaW5nID0gdW5kZWZpbmVkO1xuICAgICAgbGVuID0gY2h1bmsubGVuZ3RoXG4gICAgfVxuXG4gICAgdGhpcy5zZXQoJ0NvbnRlbnQtTGVuZ3RoJywgbGVuKTtcbiAgfVxuXG4gIC8vIHBvcHVsYXRlIEVUYWdcbiAgdmFyIGV0YWc7XG4gIGlmIChnZW5lcmF0ZUVUYWcgJiYgbGVuICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAoKGV0YWcgPSBldGFnRm4oY2h1bmssIGVuY29kaW5nKSkpIHtcbiAgICAgIHRoaXMuc2V0KCdFVGFnJywgZXRhZyk7XG4gICAgfVxuICB9XG5cbiAgLy8gZnJlc2huZXNzXG4gIGlmIChyZXEuZnJlc2gpIHRoaXMuc3RhdHVzQ29kZSA9IDMwNDtcblxuICAvLyBzdHJpcCBpcnJlbGV2YW50IGhlYWRlcnNcbiAgaWYgKDIwNCA9PT0gdGhpcy5zdGF0dXNDb2RlIHx8IDMwNCA9PT0gdGhpcy5zdGF0dXNDb2RlKSB7XG4gICAgdGhpcy5yZW1vdmVIZWFkZXIoJ0NvbnRlbnQtVHlwZScpO1xuICAgIHRoaXMucmVtb3ZlSGVhZGVyKCdDb250ZW50LUxlbmd0aCcpO1xuICAgIHRoaXMucmVtb3ZlSGVhZGVyKCdUcmFuc2Zlci1FbmNvZGluZycpO1xuICAgIGNodW5rID0gJyc7XG4gIH1cblxuICBpZiAocmVxLm1ldGhvZCA9PT0gJ0hFQUQnKSB7XG4gICAgLy8gc2tpcCBib2R5IGZvciBIRUFEXG4gICAgdGhpcy5lbmQoKTtcbiAgfSBlbHNlIHtcbiAgICAvLyByZXNwb25kXG4gICAgdGhpcy5lbmQoY2h1bmssIGVuY29kaW5nKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTZW5kIEpTT04gcmVzcG9uc2UuXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgIHJlcy5qc29uKG51bGwpO1xuICogICAgIHJlcy5qc29uKHsgdXNlcjogJ3RqJyB9KTtcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ8Ym9vbGVhbnxvYmplY3R9IG9ialxuICogQHB1YmxpY1xuICovXG5cbnJlcy5qc29uID0gZnVuY3Rpb24ganNvbihvYmopIHtcbiAgdmFyIHZhbCA9IG9iajtcblxuICAvLyBhbGxvdyBzdGF0dXMgLyBib2R5XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG4gICAgLy8gcmVzLmpzb24oYm9keSwgc3RhdHVzKSBiYWNrd2FyZHMgY29tcGF0XG4gICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbMV0gPT09ICdudW1iZXInKSB7XG4gICAgICBkZXByZWNhdGUoJ3Jlcy5qc29uKG9iaiwgc3RhdHVzKTogVXNlIHJlcy5zdGF0dXMoc3RhdHVzKS5qc29uKG9iaikgaW5zdGVhZCcpO1xuICAgICAgdGhpcy5zdGF0dXNDb2RlID0gYXJndW1lbnRzWzFdO1xuICAgIH0gZWxzZSB7XG4gICAgICBkZXByZWNhdGUoJ3Jlcy5qc29uKHN0YXR1cywgb2JqKTogVXNlIHJlcy5zdGF0dXMoc3RhdHVzKS5qc29uKG9iaikgaW5zdGVhZCcpO1xuICAgICAgdGhpcy5zdGF0dXNDb2RlID0gYXJndW1lbnRzWzBdO1xuICAgICAgdmFsID0gYXJndW1lbnRzWzFdO1xuICAgIH1cbiAgfVxuXG4gIC8vIHNldHRpbmdzXG4gIHZhciBhcHAgPSB0aGlzLmFwcDtcbiAgdmFyIGVzY2FwZSA9IGFwcC5nZXQoJ2pzb24gZXNjYXBlJylcbiAgdmFyIHJlcGxhY2VyID0gYXBwLmdldCgnanNvbiByZXBsYWNlcicpO1xuICB2YXIgc3BhY2VzID0gYXBwLmdldCgnanNvbiBzcGFjZXMnKTtcbiAgdmFyIGJvZHkgPSBzdHJpbmdpZnkodmFsLCByZXBsYWNlciwgc3BhY2VzLCBlc2NhcGUpXG5cbiAgLy8gY29udGVudC10eXBlXG4gIGlmICghdGhpcy5nZXQoJ0NvbnRlbnQtVHlwZScpKSB7XG4gICAgdGhpcy5zZXQoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gIH1cblxuICByZXR1cm4gdGhpcy5zZW5kKGJvZHkpO1xufTtcblxuLyoqXG4gKiBTZW5kIEpTT04gcmVzcG9uc2Ugd2l0aCBKU09OUCBjYWxsYmFjayBzdXBwb3J0LlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgICByZXMuanNvbnAobnVsbCk7XG4gKiAgICAgcmVzLmpzb25wKHsgdXNlcjogJ3RqJyB9KTtcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ8Ym9vbGVhbnxvYmplY3R9IG9ialxuICogQHB1YmxpY1xuICovXG5cbnJlcy5qc29ucCA9IGZ1bmN0aW9uIGpzb25wKG9iaikge1xuICB2YXIgdmFsID0gb2JqO1xuXG4gIC8vIGFsbG93IHN0YXR1cyAvIGJvZHlcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIHtcbiAgICAvLyByZXMuanNvbihib2R5LCBzdGF0dXMpIGJhY2t3YXJkcyBjb21wYXRcbiAgICBpZiAodHlwZW9mIGFyZ3VtZW50c1sxXSA9PT0gJ251bWJlcicpIHtcbiAgICAgIGRlcHJlY2F0ZSgncmVzLmpzb25wKG9iaiwgc3RhdHVzKTogVXNlIHJlcy5zdGF0dXMoc3RhdHVzKS5qc29uKG9iaikgaW5zdGVhZCcpO1xuICAgICAgdGhpcy5zdGF0dXNDb2RlID0gYXJndW1lbnRzWzFdO1xuICAgIH0gZWxzZSB7XG4gICAgICBkZXByZWNhdGUoJ3Jlcy5qc29ucChzdGF0dXMsIG9iaik6IFVzZSByZXMuc3RhdHVzKHN0YXR1cykuanNvbnAob2JqKSBpbnN0ZWFkJyk7XG4gICAgICB0aGlzLnN0YXR1c0NvZGUgPSBhcmd1bWVudHNbMF07XG4gICAgICB2YWwgPSBhcmd1bWVudHNbMV07XG4gICAgfVxuICB9XG5cbiAgLy8gc2V0dGluZ3NcbiAgdmFyIGFwcCA9IHRoaXMuYXBwO1xuICB2YXIgZXNjYXBlID0gYXBwLmdldCgnanNvbiBlc2NhcGUnKVxuICB2YXIgcmVwbGFjZXIgPSBhcHAuZ2V0KCdqc29uIHJlcGxhY2VyJyk7XG4gIHZhciBzcGFjZXMgPSBhcHAuZ2V0KCdqc29uIHNwYWNlcycpO1xuICB2YXIgYm9keSA9IHN0cmluZ2lmeSh2YWwsIHJlcGxhY2VyLCBzcGFjZXMsIGVzY2FwZSlcbiAgdmFyIGNhbGxiYWNrID0gdGhpcy5yZXEucXVlcnlbYXBwLmdldCgnanNvbnAgY2FsbGJhY2sgbmFtZScpXTtcblxuICAvLyBjb250ZW50LXR5cGVcbiAgaWYgKCF0aGlzLmdldCgnQ29udGVudC1UeXBlJykpIHtcbiAgICB0aGlzLnNldCgnWC1Db250ZW50LVR5cGUtT3B0aW9ucycsICdub3NuaWZmJyk7XG4gICAgdGhpcy5zZXQoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gIH1cblxuICAvLyBmaXh1cCBjYWxsYmFja1xuICBpZiAoQXJyYXkuaXNBcnJheShjYWxsYmFjaykpIHtcbiAgICBjYWxsYmFjayA9IGNhbGxiYWNrWzBdO1xuICB9XG5cbiAgLy8ganNvbnBcbiAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PT0gJ3N0cmluZycgJiYgY2FsbGJhY2subGVuZ3RoICE9PSAwKSB7XG4gICAgdGhpcy5zZXQoJ1gtQ29udGVudC1UeXBlLU9wdGlvbnMnLCAnbm9zbmlmZicpO1xuICAgIHRoaXMuc2V0KCdDb250ZW50LVR5cGUnLCAndGV4dC9qYXZhc2NyaXB0Jyk7XG5cbiAgICAvLyByZXN0cmljdCBjYWxsYmFjayBjaGFyc2V0XG4gICAgY2FsbGJhY2sgPSBjYWxsYmFjay5yZXBsYWNlKC9bXlxcW1xcXVxcdyQuXS9nLCAnJyk7XG5cbiAgICAvLyByZXBsYWNlIGNoYXJzIG5vdCBhbGxvd2VkIGluIEphdmFTY3JpcHQgdGhhdCBhcmUgaW4gSlNPTlxuICAgIGJvZHkgPSBib2R5XG4gICAgICAucmVwbGFjZSgvXFx1MjAyOC9nLCAnXFxcXHUyMDI4JylcbiAgICAgIC5yZXBsYWNlKC9cXHUyMDI5L2csICdcXFxcdTIwMjknKTtcblxuICAgIC8vIHRoZSAvKiovIGlzIGEgc3BlY2lmaWMgc2VjdXJpdHkgbWl0aWdhdGlvbiBmb3IgXCJSb3NldHRhIEZsYXNoIEpTT05QIGFidXNlXCJcbiAgICAvLyB0aGUgdHlwZW9mIGNoZWNrIGlzIGp1c3QgdG8gcmVkdWNlIGNsaWVudCBlcnJvciBub2lzZVxuICAgIGJvZHkgPSAnLyoqLyB0eXBlb2YgJyArIGNhbGxiYWNrICsgJyA9PT0gXFwnZnVuY3Rpb25cXCcgJiYgJyArIGNhbGxiYWNrICsgJygnICsgYm9keSArICcpOyc7XG4gIH1cblxuICByZXR1cm4gdGhpcy5zZW5kKGJvZHkpO1xufTtcblxuLyoqXG4gKiBTZW5kIGdpdmVuIEhUVFAgc3RhdHVzIGNvZGUuXG4gKlxuICogU2V0cyB0aGUgcmVzcG9uc2Ugc3RhdHVzIHRvIGBzdGF0dXNDb2RlYCBhbmQgdGhlIGJvZHkgb2YgdGhlXG4gKiByZXNwb25zZSB0byB0aGUgc3RhbmRhcmQgZGVzY3JpcHRpb24gZnJvbSBub2RlJ3MgaHR0cC5TVEFUVVNfQ09ERVNcbiAqIG9yIHRoZSBzdGF0dXNDb2RlIG51bWJlciBpZiBubyBkZXNjcmlwdGlvbi5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICAgcmVzLnNlbmRTdGF0dXMoMjAwKTtcbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gc3RhdHVzQ29kZVxuICogQHB1YmxpY1xuICovXG5cbnJlcy5zZW5kU3RhdHVzID0gZnVuY3Rpb24gc2VuZFN0YXR1cyhzdGF0dXNDb2RlKSB7XG4gIHZhciBib2R5ID0gc3RhdHVzZXNbc3RhdHVzQ29kZV0gfHwgU3RyaW5nKHN0YXR1c0NvZGUpXG5cbiAgdGhpcy5zdGF0dXNDb2RlID0gc3RhdHVzQ29kZTtcbiAgdGhpcy50eXBlKCd0eHQnKTtcblxuICByZXR1cm4gdGhpcy5zZW5kKGJvZHkpO1xufTtcblxuLyoqXG4gKiBUcmFuc2ZlciB0aGUgZmlsZSBhdCB0aGUgZ2l2ZW4gYHBhdGhgLlxuICpcbiAqIEF1dG9tYXRpY2FsbHkgc2V0cyB0aGUgX0NvbnRlbnQtVHlwZV8gcmVzcG9uc2UgaGVhZGVyIGZpZWxkLlxuICogVGhlIGNhbGxiYWNrIGBjYWxsYmFjayhlcnIpYCBpcyBpbnZva2VkIHdoZW4gdGhlIHRyYW5zZmVyIGlzIGNvbXBsZXRlXG4gKiBvciB3aGVuIGFuIGVycm9yIG9jY3Vycy4gQmUgc3VyZSB0byBjaGVjayBgcmVzLnNlbnRIZWFkZXJgXG4gKiBpZiB5b3Ugd2lzaCB0byBhdHRlbXB0IHJlc3BvbmRpbmcsIGFzIHRoZSBoZWFkZXIgYW5kIHNvbWUgZGF0YVxuICogbWF5IGhhdmUgYWxyZWFkeSBiZWVuIHRyYW5zZmVycmVkLlxuICpcbiAqIE9wdGlvbnM6XG4gKlxuICogICAtIGBtYXhBZ2VgICAgZGVmYXVsdGluZyB0byAwIChjYW4gYmUgc3RyaW5nIGNvbnZlcnRlZCBieSBgbXNgKVxuICogICAtIGByb290YCAgICAgcm9vdCBkaXJlY3RvcnkgZm9yIHJlbGF0aXZlIGZpbGVuYW1lc1xuICogICAtIGBoZWFkZXJzYCAgb2JqZWN0IG9mIGhlYWRlcnMgdG8gc2VydmUgd2l0aCBmaWxlXG4gKiAgIC0gYGRvdGZpbGVzYCBzZXJ2ZSBkb3RmaWxlcywgZGVmYXVsdGluZyB0byBmYWxzZTsgY2FuIGJlIGBcImFsbG93XCJgIHRvIHNlbmQgdGhlbVxuICpcbiAqIE90aGVyIG9wdGlvbnMgYXJlIHBhc3NlZCBhbG9uZyB0byBgc2VuZGAuXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogIFRoZSBmb2xsb3dpbmcgZXhhbXBsZSBpbGx1c3RyYXRlcyBob3cgYHJlcy5zZW5kRmlsZSgpYCBtYXlcbiAqICBiZSB1c2VkIGFzIGFuIGFsdGVybmF0aXZlIGZvciB0aGUgYHN0YXRpYygpYCBtaWRkbGV3YXJlIGZvclxuICogIGR5bmFtaWMgc2l0dWF0aW9ucy4gVGhlIGNvZGUgYmFja2luZyBgcmVzLnNlbmRGaWxlKClgIGlzIGFjdHVhbGx5XG4gKiAgdGhlIHNhbWUgY29kZSwgc28gSFRUUCBjYWNoZSBzdXBwb3J0IGV0YyBpcyBpZGVudGljYWwuXG4gKlxuICogICAgIGFwcC5nZXQoJy91c2VyLzp1aWQvcGhvdG9zLzpmaWxlJywgZnVuY3Rpb24ocmVxLCByZXMpe1xuICogICAgICAgdmFyIHVpZCA9IHJlcS5wYXJhbXMudWlkXG4gKiAgICAgICAgICwgZmlsZSA9IHJlcS5wYXJhbXMuZmlsZTtcbiAqXG4gKiAgICAgICByZXEudXNlci5tYXlWaWV3RmlsZXNGcm9tKHVpZCwgZnVuY3Rpb24oeWVzKXtcbiAqICAgICAgICAgaWYgKHllcykge1xuICogICAgICAgICAgIHJlcy5zZW5kRmlsZSgnL3VwbG9hZHMvJyArIHVpZCArICcvJyArIGZpbGUpO1xuICogICAgICAgICB9IGVsc2Uge1xuICogICAgICAgICAgIHJlcy5zZW5kKDQwMywgJ1NvcnJ5ISB5b3UgY2FudCBzZWUgdGhhdC4nKTtcbiAqICAgICAgICAgfVxuICogICAgICAgfSk7XG4gKiAgICAgfSk7XG4gKlxuICogQHB1YmxpY1xuICovXG5cbnJlcy5zZW5kRmlsZSA9IGZ1bmN0aW9uIHNlbmRGaWxlKHBhdGgsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIHZhciBkb25lID0gY2FsbGJhY2s7XG4gIHZhciByZXEgPSB0aGlzLnJlcTtcbiAgdmFyIHJlcyA9IHRoaXM7XG4gIHZhciBuZXh0ID0gcmVxLm5leHQ7XG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fTtcblxuICBpZiAoIXBhdGgpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdwYXRoIGFyZ3VtZW50IGlzIHJlcXVpcmVkIHRvIHJlcy5zZW5kRmlsZScpO1xuICB9XG5cbiAgLy8gc3VwcG9ydCBmdW5jdGlvbiBhcyBzZWNvbmQgYXJnXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGRvbmUgPSBvcHRpb25zO1xuICAgIG9wdHMgPSB7fTtcbiAgfVxuXG4gIGlmICghb3B0cy5yb290ICYmICFpc0Fic29sdXRlKHBhdGgpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcigncGF0aCBtdXN0IGJlIGFic29sdXRlIG9yIHNwZWNpZnkgcm9vdCB0byByZXMuc2VuZEZpbGUnKTtcbiAgfVxuXG4gIC8vIGNyZWF0ZSBmaWxlIHN0cmVhbVxuICB2YXIgcGF0aG5hbWUgPSBlbmNvZGVVUkkocGF0aCk7XG4gIHZhciBmaWxlID0gc2VuZChyZXEsIHBhdGhuYW1lLCBvcHRzKTtcblxuICAvLyB0cmFuc2ZlclxuICBzZW5kZmlsZShyZXMsIGZpbGUsIG9wdHMsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICBpZiAoZG9uZSkgcmV0dXJuIGRvbmUoZXJyKTtcbiAgICBpZiAoZXJyICYmIGVyci5jb2RlID09PSAnRUlTRElSJykgcmV0dXJuIG5leHQoKTtcblxuICAgIC8vIG5leHQoKSBhbGwgYnV0IHdyaXRlIGVycm9yc1xuICAgIGlmIChlcnIgJiYgZXJyLmNvZGUgIT09ICdFQ09OTkFCT1JURUQnICYmIGVyci5zeXNjYWxsICE9PSAnd3JpdGUnKSB7XG4gICAgICBuZXh0KGVycik7XG4gICAgfVxuICB9KTtcbn07XG5cbi8qKlxuICogVHJhbnNmZXIgdGhlIGZpbGUgYXQgdGhlIGdpdmVuIGBwYXRoYC5cbiAqXG4gKiBBdXRvbWF0aWNhbGx5IHNldHMgdGhlIF9Db250ZW50LVR5cGVfIHJlc3BvbnNlIGhlYWRlciBmaWVsZC5cbiAqIFRoZSBjYWxsYmFjayBgY2FsbGJhY2soZXJyKWAgaXMgaW52b2tlZCB3aGVuIHRoZSB0cmFuc2ZlciBpcyBjb21wbGV0ZVxuICogb3Igd2hlbiBhbiBlcnJvciBvY2N1cnMuIEJlIHN1cmUgdG8gY2hlY2sgYHJlcy5zZW50SGVhZGVyYFxuICogaWYgeW91IHdpc2ggdG8gYXR0ZW1wdCByZXNwb25kaW5nLCBhcyB0aGUgaGVhZGVyIGFuZCBzb21lIGRhdGFcbiAqIG1heSBoYXZlIGFscmVhZHkgYmVlbiB0cmFuc2ZlcnJlZC5cbiAqXG4gKiBPcHRpb25zOlxuICpcbiAqICAgLSBgbWF4QWdlYCAgIGRlZmF1bHRpbmcgdG8gMCAoY2FuIGJlIHN0cmluZyBjb252ZXJ0ZWQgYnkgYG1zYClcbiAqICAgLSBgcm9vdGAgICAgIHJvb3QgZGlyZWN0b3J5IGZvciByZWxhdGl2ZSBmaWxlbmFtZXNcbiAqICAgLSBgaGVhZGVyc2AgIG9iamVjdCBvZiBoZWFkZXJzIHRvIHNlcnZlIHdpdGggZmlsZVxuICogICAtIGBkb3RmaWxlc2Agc2VydmUgZG90ZmlsZXMsIGRlZmF1bHRpbmcgdG8gZmFsc2U7IGNhbiBiZSBgXCJhbGxvd1wiYCB0byBzZW5kIHRoZW1cbiAqXG4gKiBPdGhlciBvcHRpb25zIGFyZSBwYXNzZWQgYWxvbmcgdG8gYHNlbmRgLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICBUaGUgZm9sbG93aW5nIGV4YW1wbGUgaWxsdXN0cmF0ZXMgaG93IGByZXMuc2VuZGZpbGUoKWAgbWF5XG4gKiAgYmUgdXNlZCBhcyBhbiBhbHRlcm5hdGl2ZSBmb3IgdGhlIGBzdGF0aWMoKWAgbWlkZGxld2FyZSBmb3JcbiAqICBkeW5hbWljIHNpdHVhdGlvbnMuIFRoZSBjb2RlIGJhY2tpbmcgYHJlcy5zZW5kZmlsZSgpYCBpcyBhY3R1YWxseVxuICogIHRoZSBzYW1lIGNvZGUsIHNvIEhUVFAgY2FjaGUgc3VwcG9ydCBldGMgaXMgaWRlbnRpY2FsLlxuICpcbiAqICAgICBhcHAuZ2V0KCcvdXNlci86dWlkL3Bob3Rvcy86ZmlsZScsIGZ1bmN0aW9uKHJlcSwgcmVzKXtcbiAqICAgICAgIHZhciB1aWQgPSByZXEucGFyYW1zLnVpZFxuICogICAgICAgICAsIGZpbGUgPSByZXEucGFyYW1zLmZpbGU7XG4gKlxuICogICAgICAgcmVxLnVzZXIubWF5Vmlld0ZpbGVzRnJvbSh1aWQsIGZ1bmN0aW9uKHllcyl7XG4gKiAgICAgICAgIGlmICh5ZXMpIHtcbiAqICAgICAgICAgICByZXMuc2VuZGZpbGUoJy91cGxvYWRzLycgKyB1aWQgKyAnLycgKyBmaWxlKTtcbiAqICAgICAgICAgfSBlbHNlIHtcbiAqICAgICAgICAgICByZXMuc2VuZCg0MDMsICdTb3JyeSEgeW91IGNhbnQgc2VlIHRoYXQuJyk7XG4gKiAgICAgICAgIH1cbiAqICAgICAgIH0pO1xuICogICAgIH0pO1xuICpcbiAqIEBwdWJsaWNcbiAqL1xuXG5yZXMuc2VuZGZpbGUgPSBmdW5jdGlvbiAocGF0aCwgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgdmFyIGRvbmUgPSBjYWxsYmFjaztcbiAgdmFyIHJlcSA9IHRoaXMucmVxO1xuICB2YXIgcmVzID0gdGhpcztcbiAgdmFyIG5leHQgPSByZXEubmV4dDtcbiAgdmFyIG9wdHMgPSBvcHRpb25zIHx8IHt9O1xuXG4gIC8vIHN1cHBvcnQgZnVuY3Rpb24gYXMgc2Vjb25kIGFyZ1xuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBkb25lID0gb3B0aW9ucztcbiAgICBvcHRzID0ge307XG4gIH1cblxuICAvLyBjcmVhdGUgZmlsZSBzdHJlYW1cbiAgdmFyIGZpbGUgPSBzZW5kKHJlcSwgcGF0aCwgb3B0cyk7XG5cbiAgLy8gdHJhbnNmZXJcbiAgc2VuZGZpbGUocmVzLCBmaWxlLCBvcHRzLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgaWYgKGRvbmUpIHJldHVybiBkb25lKGVycik7XG4gICAgaWYgKGVyciAmJiBlcnIuY29kZSA9PT0gJ0VJU0RJUicpIHJldHVybiBuZXh0KCk7XG5cbiAgICAvLyBuZXh0KCkgYWxsIGJ1dCB3cml0ZSBlcnJvcnNcbiAgICBpZiAoZXJyICYmIGVyci5jb2RlICE9PSAnRUNPTk5BQk9SVEVEJyAmJiBlcnIuc3lzY2FsbCAhPT0gJ3dyaXRlJykge1xuICAgICAgbmV4dChlcnIpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5yZXMuc2VuZGZpbGUgPSBkZXByZWNhdGUuZnVuY3Rpb24ocmVzLnNlbmRmaWxlLFxuICAncmVzLnNlbmRmaWxlOiBVc2UgcmVzLnNlbmRGaWxlIGluc3RlYWQnKTtcblxuLyoqXG4gKiBUcmFuc2ZlciB0aGUgZmlsZSBhdCB0aGUgZ2l2ZW4gYHBhdGhgIGFzIGFuIGF0dGFjaG1lbnQuXG4gKlxuICogT3B0aW9uYWxseSBwcm92aWRpbmcgYW4gYWx0ZXJuYXRlIGF0dGFjaG1lbnQgYGZpbGVuYW1lYCxcbiAqIGFuZCBvcHRpb25hbCBjYWxsYmFjayBgY2FsbGJhY2soZXJyKWAuIFRoZSBjYWxsYmFjayBpcyBpbnZva2VkXG4gKiB3aGVuIHRoZSBkYXRhIHRyYW5zZmVyIGlzIGNvbXBsZXRlLCBvciB3aGVuIGFuIGVycm9yIGhhc1xuICogb2N1cnJlZC4gQmUgc3VyZSB0byBjaGVjayBgcmVzLmhlYWRlcnNTZW50YCBpZiB5b3UgcGxhbiB0byByZXNwb25kLlxuICpcbiAqIE9wdGlvbmFsbHkgcHJvdmlkaW5nIGFuIGBvcHRpb25zYCBvYmplY3QgdG8gdXNlIHdpdGggYHJlcy5zZW5kRmlsZSgpYC5cbiAqIFRoaXMgZnVuY3Rpb24gd2lsbCBzZXQgdGhlIGBDb250ZW50LURpc3Bvc2l0aW9uYCBoZWFkZXIsIG92ZXJyaWRpbmdcbiAqIGFueSBgQ29udGVudC1EaXNwb3NpdGlvbmAgaGVhZGVyIHBhc3NlZCBhcyBoZWFkZXIgb3B0aW9ucyBpbiBvcmRlclxuICogdG8gc2V0IHRoZSBhdHRhY2htZW50IGFuZCBmaWxlbmFtZS5cbiAqXG4gKiBUaGlzIG1ldGhvZCB1c2VzIGByZXMuc2VuZEZpbGUoKWAuXG4gKlxuICogQHB1YmxpY1xuICovXG5cbnJlcy5kb3dubG9hZCA9IGZ1bmN0aW9uIGRvd25sb2FkIChwYXRoLCBmaWxlbmFtZSwgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgdmFyIGRvbmUgPSBjYWxsYmFjaztcbiAgdmFyIG5hbWUgPSBmaWxlbmFtZTtcbiAgdmFyIG9wdHMgPSBvcHRpb25zIHx8IG51bGxcblxuICAvLyBzdXBwb3J0IGZ1bmN0aW9uIGFzIHNlY29uZCBvciB0aGlyZCBhcmdcbiAgaWYgKHR5cGVvZiBmaWxlbmFtZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGRvbmUgPSBmaWxlbmFtZTtcbiAgICBuYW1lID0gbnVsbDtcbiAgICBvcHRzID0gbnVsbFxuICB9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZG9uZSA9IG9wdGlvbnNcbiAgICBvcHRzID0gbnVsbFxuICB9XG5cbiAgLy8gc2V0IENvbnRlbnQtRGlzcG9zaXRpb24gd2hlbiBmaWxlIGlzIHNlbnRcbiAgdmFyIGhlYWRlcnMgPSB7XG4gICAgJ0NvbnRlbnQtRGlzcG9zaXRpb24nOiBjb250ZW50RGlzcG9zaXRpb24obmFtZSB8fCBwYXRoKVxuICB9O1xuXG4gIC8vIG1lcmdlIHVzZXItcHJvdmlkZWQgaGVhZGVyc1xuICBpZiAob3B0cyAmJiBvcHRzLmhlYWRlcnMpIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9wdHMuaGVhZGVycylcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldXG4gICAgICBpZiAoa2V5LnRvTG93ZXJDYXNlKCkgIT09ICdjb250ZW50LWRpc3Bvc2l0aW9uJykge1xuICAgICAgICBoZWFkZXJzW2tleV0gPSBvcHRzLmhlYWRlcnNba2V5XVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIG1lcmdlIHVzZXItcHJvdmlkZWQgb3B0aW9uc1xuICBvcHRzID0gT2JqZWN0LmNyZWF0ZShvcHRzKVxuICBvcHRzLmhlYWRlcnMgPSBoZWFkZXJzXG5cbiAgLy8gUmVzb2x2ZSB0aGUgZnVsbCBwYXRoIGZvciBzZW5kRmlsZVxuICB2YXIgZnVsbFBhdGggPSByZXNvbHZlKHBhdGgpO1xuXG4gIC8vIHNlbmQgZmlsZVxuICByZXR1cm4gdGhpcy5zZW5kRmlsZShmdWxsUGF0aCwgb3B0cywgZG9uZSlcbn07XG5cbi8qKlxuICogU2V0IF9Db250ZW50LVR5cGVfIHJlc3BvbnNlIGhlYWRlciB3aXRoIGB0eXBlYCB0aHJvdWdoIGBtaW1lLmxvb2t1cCgpYFxuICogd2hlbiBpdCBkb2VzIG5vdCBjb250YWluIFwiL1wiLCBvciBzZXQgdGhlIENvbnRlbnQtVHlwZSB0byBgdHlwZWAgb3RoZXJ3aXNlLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgICByZXMudHlwZSgnLmh0bWwnKTtcbiAqICAgICByZXMudHlwZSgnaHRtbCcpO1xuICogICAgIHJlcy50eXBlKCdqc29uJyk7XG4gKiAgICAgcmVzLnR5cGUoJ2FwcGxpY2F0aW9uL2pzb24nKTtcbiAqICAgICByZXMudHlwZSgncG5nJyk7XG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAqIEByZXR1cm4ge1NlcnZlclJlc3BvbnNlfSBmb3IgY2hhaW5pbmdcbiAqIEBwdWJsaWNcbiAqL1xuXG5yZXMuY29udGVudFR5cGUgPVxucmVzLnR5cGUgPSBmdW5jdGlvbiBjb250ZW50VHlwZSh0eXBlKSB7XG4gIHZhciBjdCA9IHR5cGUuaW5kZXhPZignLycpID09PSAtMVxuICAgID8gbWltZS5sb29rdXAodHlwZSlcbiAgICA6IHR5cGU7XG5cbiAgcmV0dXJuIHRoaXMuc2V0KCdDb250ZW50LVR5cGUnLCBjdCk7XG59O1xuXG4vKipcbiAqIFJlc3BvbmQgdG8gdGhlIEFjY2VwdGFibGUgZm9ybWF0cyB1c2luZyBhbiBgb2JqYFxuICogb2YgbWltZS10eXBlIGNhbGxiYWNrcy5cbiAqXG4gKiBUaGlzIG1ldGhvZCB1c2VzIGByZXEuYWNjZXB0ZWRgLCBhbiBhcnJheSBvZlxuICogYWNjZXB0YWJsZSB0eXBlcyBvcmRlcmVkIGJ5IHRoZWlyIHF1YWxpdHkgdmFsdWVzLlxuICogV2hlbiBcIkFjY2VwdFwiIGlzIG5vdCBwcmVzZW50IHRoZSBfZmlyc3RfIGNhbGxiYWNrXG4gKiBpcyBpbnZva2VkLCBvdGhlcndpc2UgdGhlIGZpcnN0IG1hdGNoIGlzIHVzZWQuIFdoZW5cbiAqIG5vIG1hdGNoIGlzIHBlcmZvcm1lZCB0aGUgc2VydmVyIHJlc3BvbmRzIHdpdGhcbiAqIDQwNiBcIk5vdCBBY2NlcHRhYmxlXCIuXG4gKlxuICogQ29udGVudC1UeXBlIGlzIHNldCBmb3IgeW91LCBob3dldmVyIGlmIHlvdSBjaG9vc2VcbiAqIHlvdSBtYXkgYWx0ZXIgdGhpcyB3aXRoaW4gdGhlIGNhbGxiYWNrIHVzaW5nIGByZXMudHlwZSgpYFxuICogb3IgYHJlcy5zZXQoJ0NvbnRlbnQtVHlwZScsIC4uLilgLlxuICpcbiAqICAgIHJlcy5mb3JtYXQoe1xuICogICAgICAndGV4dC9wbGFpbic6IGZ1bmN0aW9uKCl7XG4gKiAgICAgICAgcmVzLnNlbmQoJ2hleScpO1xuICogICAgICB9LFxuICpcbiAqICAgICAgJ3RleHQvaHRtbCc6IGZ1bmN0aW9uKCl7XG4gKiAgICAgICAgcmVzLnNlbmQoJzxwPmhleTwvcD4nKTtcbiAqICAgICAgfSxcbiAqXG4gKiAgICAgICdhcHBsaWF0aW9uL2pzb24nOiBmdW5jdGlvbigpe1xuICogICAgICAgIHJlcy5zZW5kKHsgbWVzc2FnZTogJ2hleScgfSk7XG4gKiAgICAgIH1cbiAqICAgIH0pO1xuICpcbiAqIEluIGFkZGl0aW9uIHRvIGNhbm9uaWNhbGl6ZWQgTUlNRSB0eXBlcyB5b3UgbWF5XG4gKiBhbHNvIHVzZSBleHRuYW1lcyBtYXBwZWQgdG8gdGhlc2UgdHlwZXM6XG4gKlxuICogICAgcmVzLmZvcm1hdCh7XG4gKiAgICAgIHRleHQ6IGZ1bmN0aW9uKCl7XG4gKiAgICAgICAgcmVzLnNlbmQoJ2hleScpO1xuICogICAgICB9LFxuICpcbiAqICAgICAgaHRtbDogZnVuY3Rpb24oKXtcbiAqICAgICAgICByZXMuc2VuZCgnPHA+aGV5PC9wPicpO1xuICogICAgICB9LFxuICpcbiAqICAgICAganNvbjogZnVuY3Rpb24oKXtcbiAqICAgICAgICByZXMuc2VuZCh7IG1lc3NhZ2U6ICdoZXknIH0pO1xuICogICAgICB9XG4gKiAgICB9KTtcbiAqXG4gKiBCeSBkZWZhdWx0IEV4cHJlc3MgcGFzc2VzIGFuIGBFcnJvcmBcbiAqIHdpdGggYSBgLnN0YXR1c2Agb2YgNDA2IHRvIGBuZXh0KGVycilgXG4gKiBpZiBhIG1hdGNoIGlzIG5vdCBtYWRlLiBJZiB5b3UgcHJvdmlkZVxuICogYSBgLmRlZmF1bHRgIGNhbGxiYWNrIGl0IHdpbGwgYmUgaW52b2tlZFxuICogaW5zdGVhZC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcmV0dXJuIHtTZXJ2ZXJSZXNwb25zZX0gZm9yIGNoYWluaW5nXG4gKiBAcHVibGljXG4gKi9cblxucmVzLmZvcm1hdCA9IGZ1bmN0aW9uKG9iail7XG4gIHZhciByZXEgPSB0aGlzLnJlcTtcbiAgdmFyIG5leHQgPSByZXEubmV4dDtcblxuICB2YXIgZm4gPSBvYmouZGVmYXVsdDtcbiAgaWYgKGZuKSBkZWxldGUgb2JqLmRlZmF1bHQ7XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcblxuICB2YXIga2V5ID0ga2V5cy5sZW5ndGggPiAwXG4gICAgPyByZXEuYWNjZXB0cyhrZXlzKVxuICAgIDogZmFsc2U7XG5cbiAgdGhpcy52YXJ5KFwiQWNjZXB0XCIpO1xuXG4gIGlmIChrZXkpIHtcbiAgICB0aGlzLnNldCgnQ29udGVudC1UeXBlJywgbm9ybWFsaXplVHlwZShrZXkpLnZhbHVlKTtcbiAgICBvYmpba2V5XShyZXEsIHRoaXMsIG5leHQpO1xuICB9IGVsc2UgaWYgKGZuKSB7XG4gICAgZm4oKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdOb3QgQWNjZXB0YWJsZScpO1xuICAgIGVyci5zdGF0dXMgPSBlcnIuc3RhdHVzQ29kZSA9IDQwNjtcbiAgICBlcnIudHlwZXMgPSBub3JtYWxpemVUeXBlcyhrZXlzKS5tYXAoZnVuY3Rpb24obyl7IHJldHVybiBvLnZhbHVlIH0pO1xuICAgIG5leHQoZXJyKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTZXQgX0NvbnRlbnQtRGlzcG9zaXRpb25fIGhlYWRlciB0byBfYXR0YWNobWVudF8gd2l0aCBvcHRpb25hbCBgZmlsZW5hbWVgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBmaWxlbmFtZVxuICogQHJldHVybiB7U2VydmVyUmVzcG9uc2V9XG4gKiBAcHVibGljXG4gKi9cblxucmVzLmF0dGFjaG1lbnQgPSBmdW5jdGlvbiBhdHRhY2htZW50KGZpbGVuYW1lKSB7XG4gIGlmIChmaWxlbmFtZSkge1xuICAgIHRoaXMudHlwZShleHRuYW1lKGZpbGVuYW1lKSk7XG4gIH1cblxuICB0aGlzLnNldCgnQ29udGVudC1EaXNwb3NpdGlvbicsIGNvbnRlbnREaXNwb3NpdGlvbihmaWxlbmFtZSkpO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBBcHBlbmQgYWRkaXRpb25hbCBoZWFkZXIgYGZpZWxkYCB3aXRoIHZhbHVlIGB2YWxgLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogICAgcmVzLmFwcGVuZCgnTGluaycsIFsnPGh0dHA6Ly9sb2NhbGhvc3QvPicsICc8aHR0cDovL2xvY2FsaG9zdDozMDAwLz4nXSk7XG4gKiAgICByZXMuYXBwZW5kKCdTZXQtQ29va2llJywgJ2Zvbz1iYXI7IFBhdGg9LzsgSHR0cE9ubHknKTtcbiAqICAgIHJlcy5hcHBlbmQoJ1dhcm5pbmcnLCAnMTk5IE1pc2NlbGxhbmVvdXMgd2FybmluZycpO1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBmaWVsZFxuICogQHBhcmFtIHtTdHJpbmd8QXJyYXl9IHZhbFxuICogQHJldHVybiB7U2VydmVyUmVzcG9uc2V9IGZvciBjaGFpbmluZ1xuICogQHB1YmxpY1xuICovXG5cbnJlcy5hcHBlbmQgPSBmdW5jdGlvbiBhcHBlbmQoZmllbGQsIHZhbCkge1xuICB2YXIgcHJldiA9IHRoaXMuZ2V0KGZpZWxkKTtcbiAgdmFyIHZhbHVlID0gdmFsO1xuXG4gIGlmIChwcmV2KSB7XG4gICAgLy8gY29uY2F0IHRoZSBuZXcgYW5kIHByZXYgdmFsc1xuICAgIHZhbHVlID0gQXJyYXkuaXNBcnJheShwcmV2KSA/IHByZXYuY29uY2F0KHZhbClcbiAgICAgIDogQXJyYXkuaXNBcnJheSh2YWwpID8gW3ByZXZdLmNvbmNhdCh2YWwpXG4gICAgICA6IFtwcmV2LCB2YWxdO1xuICB9XG5cbiAgcmV0dXJuIHRoaXMuc2V0KGZpZWxkLCB2YWx1ZSk7XG59O1xuXG4vKipcbiAqIFNldCBoZWFkZXIgYGZpZWxkYCB0byBgdmFsYCwgb3IgcGFzc1xuICogYW4gb2JqZWN0IG9mIGhlYWRlciBmaWVsZHMuXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgcmVzLnNldCgnRm9vJywgWydiYXInLCAnYmF6J10pO1xuICogICAgcmVzLnNldCgnQWNjZXB0JywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbiAqICAgIHJlcy5zZXQoeyBBY2NlcHQ6ICd0ZXh0L3BsYWluJywgJ1gtQVBJLUtleSc6ICd0b2JpJyB9KTtcbiAqXG4gKiBBbGlhc2VkIGFzIGByZXMuaGVhZGVyKClgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfE9iamVjdH0gZmllbGRcbiAqIEBwYXJhbSB7U3RyaW5nfEFycmF5fSB2YWxcbiAqIEByZXR1cm4ge1NlcnZlclJlc3BvbnNlfSBmb3IgY2hhaW5pbmdcbiAqIEBwdWJsaWNcbiAqL1xuXG5yZXMuc2V0ID1cbnJlcy5oZWFkZXIgPSBmdW5jdGlvbiBoZWFkZXIoZmllbGQsIHZhbCkge1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMikge1xuICAgIHZhciB2YWx1ZSA9IEFycmF5LmlzQXJyYXkodmFsKVxuICAgICAgPyB2YWwubWFwKFN0cmluZylcbiAgICAgIDogU3RyaW5nKHZhbCk7XG5cbiAgICAvLyBhZGQgY2hhcnNldCB0byBjb250ZW50LXR5cGVcbiAgICBpZiAoZmllbGQudG9Mb3dlckNhc2UoKSA9PT0gJ2NvbnRlbnQtdHlwZScpIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDb250ZW50LVR5cGUgY2Fubm90IGJlIHNldCB0byBhbiBBcnJheScpO1xuICAgICAgfVxuICAgICAgaWYgKCFjaGFyc2V0UmVnRXhwLnRlc3QodmFsdWUpKSB7XG4gICAgICAgIHZhciBjaGFyc2V0ID0gbWltZS5jaGFyc2V0cy5sb29rdXAodmFsdWUuc3BsaXQoJzsnKVswXSk7XG4gICAgICAgIGlmIChjaGFyc2V0KSB2YWx1ZSArPSAnOyBjaGFyc2V0PScgKyBjaGFyc2V0LnRvTG93ZXJDYXNlKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5zZXRIZWFkZXIoZmllbGQsIHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gZmllbGQpIHtcbiAgICAgIHRoaXMuc2V0KGtleSwgZmllbGRba2V5XSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBHZXQgdmFsdWUgZm9yIGhlYWRlciBgZmllbGRgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBmaWVsZFxuICogQHJldHVybiB7U3RyaW5nfVxuICogQHB1YmxpY1xuICovXG5cbnJlcy5nZXQgPSBmdW5jdGlvbihmaWVsZCl7XG4gIHJldHVybiB0aGlzLmdldEhlYWRlcihmaWVsZCk7XG59O1xuXG4vKipcbiAqIENsZWFyIGNvb2tpZSBgbmFtZWAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm4ge1NlcnZlclJlc3BvbnNlfSBmb3IgY2hhaW5pbmdcbiAqIEBwdWJsaWNcbiAqL1xuXG5yZXMuY2xlYXJDb29raWUgPSBmdW5jdGlvbiBjbGVhckNvb2tpZShuYW1lLCBvcHRpb25zKSB7XG4gIHZhciBvcHRzID0gbWVyZ2UoeyBleHBpcmVzOiBuZXcgRGF0ZSgxKSwgcGF0aDogJy8nIH0sIG9wdGlvbnMpO1xuXG4gIHJldHVybiB0aGlzLmNvb2tpZShuYW1lLCAnJywgb3B0cyk7XG59O1xuXG4vKipcbiAqIFNldCBjb29raWUgYG5hbWVgIHRvIGB2YWx1ZWAsIHdpdGggdGhlIGdpdmVuIGBvcHRpb25zYC5cbiAqXG4gKiBPcHRpb25zOlxuICpcbiAqICAgIC0gYG1heEFnZWAgICBtYXgtYWdlIGluIG1pbGxpc2Vjb25kcywgY29udmVydGVkIHRvIGBleHBpcmVzYFxuICogICAgLSBgc2lnbmVkYCAgIHNpZ24gdGhlIGNvb2tpZVxuICogICAgLSBgcGF0aGAgICAgIGRlZmF1bHRzIHRvIFwiL1wiXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgLy8gXCJSZW1lbWJlciBNZVwiIGZvciAxNSBtaW51dGVzXG4gKiAgICByZXMuY29va2llKCdyZW1lbWJlcm1lJywgJzEnLCB7IGV4cGlyZXM6IG5ldyBEYXRlKERhdGUubm93KCkgKyA5MDAwMDApLCBodHRwT25seTogdHJ1ZSB9KTtcbiAqXG4gKiAgICAvLyBzYXZlIGFzIGFib3ZlXG4gKiAgICByZXMuY29va2llKCdyZW1lbWJlcm1lJywgJzEnLCB7IG1heEFnZTogOTAwMDAwLCBodHRwT25seTogdHJ1ZSB9KVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gKiBAcGFyYW0ge1N0cmluZ3xPYmplY3R9IHZhbHVlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiBAcmV0dXJuIHtTZXJ2ZXJSZXNwb25zZX0gZm9yIGNoYWluaW5nXG4gKiBAcHVibGljXG4gKi9cblxucmVzLmNvb2tpZSA9IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSwgb3B0aW9ucykge1xuICB2YXIgb3B0cyA9IG1lcmdlKHt9LCBvcHRpb25zKTtcbiAgdmFyIHNlY3JldCA9IHRoaXMucmVxLnNlY3JldDtcbiAgdmFyIHNpZ25lZCA9IG9wdHMuc2lnbmVkO1xuXG4gIGlmIChzaWduZWQgJiYgIXNlY3JldCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY29va2llUGFyc2VyKFwic2VjcmV0XCIpIHJlcXVpcmVkIGZvciBzaWduZWQgY29va2llcycpO1xuICB9XG5cbiAgdmFyIHZhbCA9IHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCdcbiAgICA/ICdqOicgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSlcbiAgICA6IFN0cmluZyh2YWx1ZSk7XG5cbiAgaWYgKHNpZ25lZCkge1xuICAgIHZhbCA9ICdzOicgKyBzaWduKHZhbCwgc2VjcmV0KTtcbiAgfVxuXG4gIGlmICgnbWF4QWdlJyBpbiBvcHRzKSB7XG4gICAgb3B0cy5leHBpcmVzID0gbmV3IERhdGUoRGF0ZS5ub3coKSArIG9wdHMubWF4QWdlKTtcbiAgICBvcHRzLm1heEFnZSAvPSAxMDAwO1xuICB9XG5cbiAgaWYgKG9wdHMucGF0aCA9PSBudWxsKSB7XG4gICAgb3B0cy5wYXRoID0gJy8nO1xuICB9XG5cbiAgdGhpcy5hcHBlbmQoJ1NldC1Db29raWUnLCBjb29raWUuc2VyaWFsaXplKG5hbWUsIFN0cmluZyh2YWwpLCBvcHRzKSk7XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFNldCB0aGUgbG9jYXRpb24gaGVhZGVyIHRvIGB1cmxgLlxuICpcbiAqIFRoZSBnaXZlbiBgdXJsYCBjYW4gYWxzbyBiZSBcImJhY2tcIiwgd2hpY2ggcmVkaXJlY3RzXG4gKiB0byB0aGUgX1JlZmVycmVyXyBvciBfUmVmZXJlcl8gaGVhZGVycyBvciBcIi9cIi5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICByZXMubG9jYXRpb24oJy9mb28vYmFyJykuO1xuICogICAgcmVzLmxvY2F0aW9uKCdodHRwOi8vZXhhbXBsZS5jb20nKTtcbiAqICAgIHJlcy5sb2NhdGlvbignLi4vbG9naW4nKTtcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXJsXG4gKiBAcmV0dXJuIHtTZXJ2ZXJSZXNwb25zZX0gZm9yIGNoYWluaW5nXG4gKiBAcHVibGljXG4gKi9cblxucmVzLmxvY2F0aW9uID0gZnVuY3Rpb24gbG9jYXRpb24odXJsKSB7XG4gIHZhciBsb2MgPSB1cmw7XG5cbiAgLy8gXCJiYWNrXCIgaXMgYW4gYWxpYXMgZm9yIHRoZSByZWZlcnJlclxuICBpZiAodXJsID09PSAnYmFjaycpIHtcbiAgICBsb2MgPSB0aGlzLnJlcS5nZXQoJ1JlZmVycmVyJykgfHwgJy8nO1xuICB9XG5cbiAgLy8gc2V0IGxvY2F0aW9uXG4gIHJldHVybiB0aGlzLnNldCgnTG9jYXRpb24nLCBlbmNvZGVVcmwobG9jKSk7XG59O1xuXG4vKipcbiAqIFJlZGlyZWN0IHRvIHRoZSBnaXZlbiBgdXJsYCB3aXRoIG9wdGlvbmFsIHJlc3BvbnNlIGBzdGF0dXNgXG4gKiBkZWZhdWx0aW5nIHRvIDMwMi5cbiAqXG4gKiBUaGUgcmVzdWx0aW5nIGB1cmxgIGlzIGRldGVybWluZWQgYnkgYHJlcy5sb2NhdGlvbigpYCwgc29cbiAqIGl0IHdpbGwgcGxheSBuaWNlbHkgd2l0aCBtb3VudGVkIGFwcHMsIHJlbGF0aXZlIHBhdGhzLFxuICogYFwiYmFja1wiYCBldGMuXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgcmVzLnJlZGlyZWN0KCcvZm9vL2JhcicpO1xuICogICAgcmVzLnJlZGlyZWN0KCdodHRwOi8vZXhhbXBsZS5jb20nKTtcbiAqICAgIHJlcy5yZWRpcmVjdCgzMDEsICdodHRwOi8vZXhhbXBsZS5jb20nKTtcbiAqICAgIHJlcy5yZWRpcmVjdCgnLi4vbG9naW4nKTsgLy8gL2Jsb2cvcG9zdC8xIC0+IC9ibG9nL2xvZ2luXG4gKlxuICogQHB1YmxpY1xuICovXG5cbnJlcy5yZWRpcmVjdCA9IGZ1bmN0aW9uIHJlZGlyZWN0KHVybCkge1xuICB2YXIgYWRkcmVzcyA9IHVybDtcbiAgdmFyIGJvZHk7XG4gIHZhciBzdGF0dXMgPSAzMDI7XG5cbiAgLy8gYWxsb3cgc3RhdHVzIC8gdXJsXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG4gICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbMF0gPT09ICdudW1iZXInKSB7XG4gICAgICBzdGF0dXMgPSBhcmd1bWVudHNbMF07XG4gICAgICBhZGRyZXNzID0gYXJndW1lbnRzWzFdO1xuICAgIH0gZWxzZSB7XG4gICAgICBkZXByZWNhdGUoJ3Jlcy5yZWRpcmVjdCh1cmwsIHN0YXR1cyk6IFVzZSByZXMucmVkaXJlY3Qoc3RhdHVzLCB1cmwpIGluc3RlYWQnKTtcbiAgICAgIHN0YXR1cyA9IGFyZ3VtZW50c1sxXTtcbiAgICB9XG4gIH1cblxuICAvLyBTZXQgbG9jYXRpb24gaGVhZGVyXG4gIGFkZHJlc3MgPSB0aGlzLmxvY2F0aW9uKGFkZHJlc3MpLmdldCgnTG9jYXRpb24nKTtcblxuICAvLyBTdXBwb3J0IHRleHQve3BsYWluLGh0bWx9IGJ5IGRlZmF1bHRcbiAgdGhpcy5mb3JtYXQoe1xuICAgIHRleHQ6IGZ1bmN0aW9uKCl7XG4gICAgICBib2R5ID0gc3RhdHVzZXNbc3RhdHVzXSArICcuIFJlZGlyZWN0aW5nIHRvICcgKyBhZGRyZXNzXG4gICAgfSxcblxuICAgIGh0bWw6IGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgdSA9IGVzY2FwZUh0bWwoYWRkcmVzcyk7XG4gICAgICBib2R5ID0gJzxwPicgKyBzdGF0dXNlc1tzdGF0dXNdICsgJy4gUmVkaXJlY3RpbmcgdG8gPGEgaHJlZj1cIicgKyB1ICsgJ1wiPicgKyB1ICsgJzwvYT48L3A+J1xuICAgIH0sXG5cbiAgICBkZWZhdWx0OiBmdW5jdGlvbigpe1xuICAgICAgYm9keSA9ICcnO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gUmVzcG9uZFxuICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXM7XG4gIHRoaXMuc2V0KCdDb250ZW50LUxlbmd0aCcsIEJ1ZmZlci5ieXRlTGVuZ3RoKGJvZHkpKTtcblxuICBpZiAodGhpcy5yZXEubWV0aG9kID09PSAnSEVBRCcpIHtcbiAgICB0aGlzLmVuZCgpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuZW5kKGJvZHkpO1xuICB9XG59O1xuXG4vKipcbiAqIEFkZCBgZmllbGRgIHRvIFZhcnkuIElmIGFscmVhZHkgcHJlc2VudCBpbiB0aGUgVmFyeSBzZXQsIHRoZW5cbiAqIHRoaXMgY2FsbCBpcyBzaW1wbHkgaWdub3JlZC5cbiAqXG4gKiBAcGFyYW0ge0FycmF5fFN0cmluZ30gZmllbGRcbiAqIEByZXR1cm4ge1NlcnZlclJlc3BvbnNlfSBmb3IgY2hhaW5pbmdcbiAqIEBwdWJsaWNcbiAqL1xuXG5yZXMudmFyeSA9IGZ1bmN0aW9uKGZpZWxkKXtcbiAgLy8gY2hlY2tzIGZvciBiYWNrLWNvbXBhdFxuICBpZiAoIWZpZWxkIHx8IChBcnJheS5pc0FycmF5KGZpZWxkKSAmJiAhZmllbGQubGVuZ3RoKSkge1xuICAgIGRlcHJlY2F0ZSgncmVzLnZhcnkoKTogUHJvdmlkZSBhIGZpZWxkIG5hbWUnKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHZhcnkodGhpcywgZmllbGQpO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBSZW5kZXIgYHZpZXdgIHdpdGggdGhlIGdpdmVuIGBvcHRpb25zYCBhbmQgb3B0aW9uYWwgY2FsbGJhY2sgYGZuYC5cbiAqIFdoZW4gYSBjYWxsYmFjayBmdW5jdGlvbiBpcyBnaXZlbiBhIHJlc3BvbnNlIHdpbGwgX25vdF8gYmUgbWFkZVxuICogYXV0b21hdGljYWxseSwgb3RoZXJ3aXNlIGEgcmVzcG9uc2Ugb2YgXzIwMF8gYW5kIF90ZXh0L2h0bWxfIGlzIGdpdmVuLlxuICpcbiAqIE9wdGlvbnM6XG4gKlxuICogIC0gYGNhY2hlYCAgICAgYm9vbGVhbiBoaW50aW5nIHRvIHRoZSBlbmdpbmUgaXQgc2hvdWxkIGNhY2hlXG4gKiAgLSBgZmlsZW5hbWVgICBmaWxlbmFtZSBvZiB0aGUgdmlldyBiZWluZyByZW5kZXJlZFxuICpcbiAqIEBwdWJsaWNcbiAqL1xuXG5yZXMucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKHZpZXcsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gIHZhciBhcHAgPSB0aGlzLnJlcS5hcHA7XG4gIHZhciBkb25lID0gY2FsbGJhY2s7XG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIHJlcSA9IHRoaXMucmVxO1xuICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgLy8gc3VwcG9ydCBjYWxsYmFjayBmdW5jdGlvbiBhcyBzZWNvbmQgYXJnXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGRvbmUgPSBvcHRpb25zO1xuICAgIG9wdHMgPSB7fTtcbiAgfVxuXG4gIC8vIG1lcmdlIHJlcy5sb2NhbHNcbiAgb3B0cy5fbG9jYWxzID0gc2VsZi5sb2NhbHM7XG5cbiAgLy8gZGVmYXVsdCBjYWxsYmFjayB0byByZXNwb25kXG4gIGRvbmUgPSBkb25lIHx8IGZ1bmN0aW9uIChlcnIsIHN0cikge1xuICAgIGlmIChlcnIpIHJldHVybiByZXEubmV4dChlcnIpO1xuICAgIHNlbGYuc2VuZChzdHIpO1xuICB9O1xuXG4gIC8vIHJlbmRlclxuICBhcHAucmVuZGVyKHZpZXcsIG9wdHMsIGRvbmUpO1xufTtcblxuLy8gcGlwZSB0aGUgc2VuZCBmaWxlIHN0cmVhbVxuZnVuY3Rpb24gc2VuZGZpbGUocmVzLCBmaWxlLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICB2YXIgZG9uZSA9IGZhbHNlO1xuICB2YXIgc3RyZWFtaW5nO1xuXG4gIC8vIHJlcXVlc3QgYWJvcnRlZFxuICBmdW5jdGlvbiBvbmFib3J0ZWQoKSB7XG4gICAgaWYgKGRvbmUpIHJldHVybjtcbiAgICBkb25lID0gdHJ1ZTtcblxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoJ1JlcXVlc3QgYWJvcnRlZCcpO1xuICAgIGVyci5jb2RlID0gJ0VDT05OQUJPUlRFRCc7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfVxuXG4gIC8vIGRpcmVjdG9yeVxuICBmdW5jdGlvbiBvbmRpcmVjdG9yeSgpIHtcbiAgICBpZiAoZG9uZSkgcmV0dXJuO1xuICAgIGRvbmUgPSB0cnVlO1xuXG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcignRUlTRElSLCByZWFkJyk7XG4gICAgZXJyLmNvZGUgPSAnRUlTRElSJztcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9XG5cbiAgLy8gZXJyb3JzXG4gIGZ1bmN0aW9uIG9uZXJyb3IoZXJyKSB7XG4gICAgaWYgKGRvbmUpIHJldHVybjtcbiAgICBkb25lID0gdHJ1ZTtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9XG5cbiAgLy8gZW5kZWRcbiAgZnVuY3Rpb24gb25lbmQoKSB7XG4gICAgaWYgKGRvbmUpIHJldHVybjtcbiAgICBkb25lID0gdHJ1ZTtcbiAgICBjYWxsYmFjaygpO1xuICB9XG5cbiAgLy8gZmlsZVxuICBmdW5jdGlvbiBvbmZpbGUoKSB7XG4gICAgc3RyZWFtaW5nID0gZmFsc2U7XG4gIH1cblxuICAvLyBmaW5pc2hlZFxuICBmdW5jdGlvbiBvbmZpbmlzaChlcnIpIHtcbiAgICBpZiAoZXJyICYmIGVyci5jb2RlID09PSAnRUNPTk5SRVNFVCcpIHJldHVybiBvbmFib3J0ZWQoKTtcbiAgICBpZiAoZXJyKSByZXR1cm4gb25lcnJvcihlcnIpO1xuICAgIGlmIChkb25lKSByZXR1cm47XG5cbiAgICBzZXRJbW1lZGlhdGUoZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHN0cmVhbWluZyAhPT0gZmFsc2UgJiYgIWRvbmUpIHtcbiAgICAgICAgb25hYm9ydGVkKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGRvbmUpIHJldHVybjtcbiAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgY2FsbGJhY2soKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8vIHN0cmVhbWluZ1xuICBmdW5jdGlvbiBvbnN0cmVhbSgpIHtcbiAgICBzdHJlYW1pbmcgPSB0cnVlO1xuICB9XG5cbiAgZmlsZS5vbignZGlyZWN0b3J5Jywgb25kaXJlY3RvcnkpO1xuICBmaWxlLm9uKCdlbmQnLCBvbmVuZCk7XG4gIGZpbGUub24oJ2Vycm9yJywgb25lcnJvcik7XG4gIGZpbGUub24oJ2ZpbGUnLCBvbmZpbGUpO1xuICBmaWxlLm9uKCdzdHJlYW0nLCBvbnN0cmVhbSk7XG4gIG9uRmluaXNoZWQocmVzLCBvbmZpbmlzaCk7XG5cbiAgaWYgKG9wdGlvbnMuaGVhZGVycykge1xuICAgIC8vIHNldCBoZWFkZXJzIG9uIHN1Y2Nlc3NmdWwgdHJhbnNmZXJcbiAgICBmaWxlLm9uKCdoZWFkZXJzJywgZnVuY3Rpb24gaGVhZGVycyhyZXMpIHtcbiAgICAgIHZhciBvYmogPSBvcHRpb25zLmhlYWRlcnM7XG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgayA9IGtleXNbaV07XG4gICAgICAgIHJlcy5zZXRIZWFkZXIoaywgb2JqW2tdKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8vIHBpcGVcbiAgZmlsZS5waXBlKHJlcyk7XG59XG5cbi8qKlxuICogU3RyaW5naWZ5IEpTT04sIGxpa2UgSlNPTi5zdHJpbmdpZnksIGJ1dCB2OCBvcHRpbWl6ZWQsIHdpdGggdGhlXG4gKiBhYmlsaXR5IHRvIGVzY2FwZSBjaGFyYWN0ZXJzIHRoYXQgY2FuIHRyaWdnZXIgSFRNTCBzbmlmZmluZy5cbiAqXG4gKiBAcGFyYW0geyp9IHZhbHVlXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSByZXBsYWNlc1xuICogQHBhcmFtIHtudW1iZXJ9IHNwYWNlc1xuICogQHBhcmFtIHtib29sZWFufSBlc2NhcGVcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHN0cmluZ2lmeSAodmFsdWUsIHJlcGxhY2VyLCBzcGFjZXMsIGVzY2FwZSkge1xuICAvLyB2OCBjaGVja3MgYXJndW1lbnRzLmxlbmd0aCBmb3Igb3B0aW1pemluZyBzaW1wbGUgY2FsbFxuICAvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00NzMwXG4gIHZhciBqc29uID0gcmVwbGFjZXIgfHwgc3BhY2VzXG4gICAgPyBKU09OLnN0cmluZ2lmeSh2YWx1ZSwgcmVwbGFjZXIsIHNwYWNlcylcbiAgICA6IEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcblxuICBpZiAoZXNjYXBlKSB7XG4gICAganNvbiA9IGpzb24ucmVwbGFjZSgvWzw+Jl0vZywgZnVuY3Rpb24gKGMpIHtcbiAgICAgIHN3aXRjaCAoYy5jaGFyQ29kZUF0KDApKSB7XG4gICAgICAgIGNhc2UgMHgzYzpcbiAgICAgICAgICByZXR1cm4gJ1xcXFx1MDAzYydcbiAgICAgICAgY2FzZSAweDNlOlxuICAgICAgICAgIHJldHVybiAnXFxcXHUwMDNlJ1xuICAgICAgICBjYXNlIDB4MjY6XG4gICAgICAgICAgcmV0dXJuICdcXFxcdTAwMjYnXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcmV0dXJuIGNcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgcmV0dXJuIGpzb25cbn1cbiIsIi8qIVxuICogdmFyeVxuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNyBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSB2YXJ5XG5tb2R1bGUuZXhwb3J0cy5hcHBlbmQgPSBhcHBlbmRcblxuLyoqXG4gKiBSZWdFeHAgdG8gbWF0Y2ggZmllbGQtbmFtZSBpbiBSRkMgNzIzMCBzZWMgMy4yXG4gKlxuICogZmllbGQtbmFtZSAgICA9IHRva2VuXG4gKiB0b2tlbiAgICAgICAgID0gMSp0Y2hhclxuICogdGNoYXIgICAgICAgICA9IFwiIVwiIC8gXCIjXCIgLyBcIiRcIiAvIFwiJVwiIC8gXCImXCIgLyBcIidcIiAvIFwiKlwiXG4gKiAgICAgICAgICAgICAgIC8gXCIrXCIgLyBcIi1cIiAvIFwiLlwiIC8gXCJeXCIgLyBcIl9cIiAvIFwiYFwiIC8gXCJ8XCIgLyBcIn5cIlxuICogICAgICAgICAgICAgICAvIERJR0lUIC8gQUxQSEFcbiAqICAgICAgICAgICAgICAgOyBhbnkgVkNIQVIsIGV4Y2VwdCBkZWxpbWl0ZXJzXG4gKi9cblxudmFyIEZJRUxEX05BTUVfUkVHRVhQID0gL15bISMkJSYnKitcXC0uXl9gfH4wLTlBLVphLXpdKyQvXG5cbi8qKlxuICogQXBwZW5kIGEgZmllbGQgdG8gYSB2YXJ5IGhlYWRlci5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gaGVhZGVyXG4gKiBAcGFyYW0ge1N0cmluZ3xBcnJheX0gZmllbGRcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBhcHBlbmQgKGhlYWRlciwgZmllbGQpIHtcbiAgaWYgKHR5cGVvZiBoZWFkZXIgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaGVhZGVyIGFyZ3VtZW50IGlzIHJlcXVpcmVkJylcbiAgfVxuXG4gIGlmICghZmllbGQpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdmaWVsZCBhcmd1bWVudCBpcyByZXF1aXJlZCcpXG4gIH1cblxuICAvLyBnZXQgZmllbGRzIGFycmF5XG4gIHZhciBmaWVsZHMgPSAhQXJyYXkuaXNBcnJheShmaWVsZClcbiAgICA/IHBhcnNlKFN0cmluZyhmaWVsZCkpXG4gICAgOiBmaWVsZFxuXG4gIC8vIGFzc2VydCBvbiBpbnZhbGlkIGZpZWxkIG5hbWVzXG4gIGZvciAodmFyIGogPSAwOyBqIDwgZmllbGRzLmxlbmd0aDsgaisrKSB7XG4gICAgaWYgKCFGSUVMRF9OQU1FX1JFR0VYUC50ZXN0KGZpZWxkc1tqXSkpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ZpZWxkIGFyZ3VtZW50IGNvbnRhaW5zIGFuIGludmFsaWQgaGVhZGVyIG5hbWUnKVxuICAgIH1cbiAgfVxuXG4gIC8vIGV4aXN0aW5nLCB1bnNwZWNpZmllZCB2YXJ5XG4gIGlmIChoZWFkZXIgPT09ICcqJykge1xuICAgIHJldHVybiBoZWFkZXJcbiAgfVxuXG4gIC8vIGVudW1lcmF0ZSBjdXJyZW50IHZhbHVlc1xuICB2YXIgdmFsID0gaGVhZGVyXG4gIHZhciB2YWxzID0gcGFyc2UoaGVhZGVyLnRvTG93ZXJDYXNlKCkpXG5cbiAgLy8gdW5zcGVjaWZpZWQgdmFyeVxuICBpZiAoZmllbGRzLmluZGV4T2YoJyonKSAhPT0gLTEgfHwgdmFscy5pbmRleE9mKCcqJykgIT09IC0xKSB7XG4gICAgcmV0dXJuICcqJ1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBmaWVsZHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZmxkID0gZmllbGRzW2ldLnRvTG93ZXJDYXNlKClcblxuICAgIC8vIGFwcGVuZCB2YWx1ZSAoY2FzZS1wcmVzZXJ2aW5nKVxuICAgIGlmICh2YWxzLmluZGV4T2YoZmxkKSA9PT0gLTEpIHtcbiAgICAgIHZhbHMucHVzaChmbGQpXG4gICAgICB2YWwgPSB2YWxcbiAgICAgICAgPyB2YWwgKyAnLCAnICsgZmllbGRzW2ldXG4gICAgICAgIDogZmllbGRzW2ldXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHZhbFxufVxuXG4vKipcbiAqIFBhcnNlIGEgdmFyeSBoZWFkZXIgaW50byBhbiBhcnJheS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gaGVhZGVyXG4gKiBAcmV0dXJuIHtBcnJheX1cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGFyc2UgKGhlYWRlcikge1xuICB2YXIgZW5kID0gMFxuICB2YXIgbGlzdCA9IFtdXG4gIHZhciBzdGFydCA9IDBcblxuICAvLyBnYXRoZXIgdG9rZW5zXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBoZWFkZXIubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBzd2l0Y2ggKGhlYWRlci5jaGFyQ29kZUF0KGkpKSB7XG4gICAgICBjYXNlIDB4MjA6IC8qICAgKi9cbiAgICAgICAgaWYgKHN0YXJ0ID09PSBlbmQpIHtcbiAgICAgICAgICBzdGFydCA9IGVuZCA9IGkgKyAxXG4gICAgICAgIH1cbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgMHgyYzogLyogLCAqL1xuICAgICAgICBsaXN0LnB1c2goaGVhZGVyLnN1YnN0cmluZyhzdGFydCwgZW5kKSlcbiAgICAgICAgc3RhcnQgPSBlbmQgPSBpICsgMVxuICAgICAgICBicmVha1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgZW5kID0gaSArIDFcbiAgICAgICAgYnJlYWtcbiAgICB9XG4gIH1cblxuICAvLyBmaW5hbCB0b2tlblxuICBsaXN0LnB1c2goaGVhZGVyLnN1YnN0cmluZyhzdGFydCwgZW5kKSlcblxuICByZXR1cm4gbGlzdFxufVxuXG4vKipcbiAqIE1hcmsgdGhhdCBhIHJlcXVlc3QgaXMgdmFyaWVkIG9uIGEgaGVhZGVyIGZpZWxkLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSByZXNcbiAqIEBwYXJhbSB7U3RyaW5nfEFycmF5fSBmaWVsZFxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHZhcnkgKHJlcywgZmllbGQpIHtcbiAgaWYgKCFyZXMgfHwgIXJlcy5nZXRIZWFkZXIgfHwgIXJlcy5zZXRIZWFkZXIpIHtcbiAgICAvLyBxdWFjayBxdWFja1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3JlcyBhcmd1bWVudCBpcyByZXF1aXJlZCcpXG4gIH1cblxuICAvLyBnZXQgZXhpc3RpbmcgaGVhZGVyXG4gIHZhciB2YWwgPSByZXMuZ2V0SGVhZGVyKCdWYXJ5JykgfHwgJydcbiAgdmFyIGhlYWRlciA9IEFycmF5LmlzQXJyYXkodmFsKVxuICAgID8gdmFsLmpvaW4oJywgJylcbiAgICA6IFN0cmluZyh2YWwpXG5cbiAgLy8gc2V0IG5ldyBoZWFkZXJcbiAgaWYgKCh2YWwgPSBhcHBlbmQoaGVhZGVyLCBmaWVsZCkpKSB7XG4gICAgcmVzLnNldEhlYWRlcignVmFyeScsIHZhbClcbiAgfVxufVxuIiwiLyohXG4gKiBzZXJ2ZS1zdGF0aWNcbiAqIENvcHlyaWdodChjKSAyMDEwIFNlbmNoYSBJbmMuXG4gKiBDb3B5cmlnaHQoYykgMjAxMSBUSiBIb2xvd2F5Y2h1a1xuICogQ29weXJpZ2h0KGMpIDIwMTQtMjAxNiBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIGVuY29kZVVybCA9IHJlcXVpcmUoJ2VuY29kZXVybCcpXG52YXIgZXNjYXBlSHRtbCA9IHJlcXVpcmUoJ2VzY2FwZS1odG1sJylcbnZhciBwYXJzZVVybCA9IHJlcXVpcmUoJ3BhcnNldXJsJylcbnZhciByZXNvbHZlID0gcmVxdWlyZSgncGF0aCcpLnJlc29sdmVcbnZhciBzZW5kID0gcmVxdWlyZSgnc2VuZCcpXG52YXIgdXJsID0gcmVxdWlyZSgndXJsJylcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNlcnZlU3RhdGljXG5tb2R1bGUuZXhwb3J0cy5taW1lID0gc2VuZC5taW1lXG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHJvb3RcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHNlcnZlU3RhdGljIChyb290LCBvcHRpb25zKSB7XG4gIGlmICghcm9vdCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3Jvb3QgcGF0aCByZXF1aXJlZCcpXG4gIH1cblxuICBpZiAodHlwZW9mIHJvb3QgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcigncm9vdCBwYXRoIG11c3QgYmUgYSBzdHJpbmcnKVxuICB9XG5cbiAgLy8gY29weSBvcHRpb25zIG9iamVjdFxuICB2YXIgb3B0cyA9IE9iamVjdC5jcmVhdGUob3B0aW9ucyB8fCBudWxsKVxuXG4gIC8vIGZhbGwtdGhvdWdoXG4gIHZhciBmYWxsdGhyb3VnaCA9IG9wdHMuZmFsbHRocm91Z2ggIT09IGZhbHNlXG5cbiAgLy8gZGVmYXVsdCByZWRpcmVjdFxuICB2YXIgcmVkaXJlY3QgPSBvcHRzLnJlZGlyZWN0ICE9PSBmYWxzZVxuXG4gIC8vIGhlYWRlcnMgbGlzdGVuZXJcbiAgdmFyIHNldEhlYWRlcnMgPSBvcHRzLnNldEhlYWRlcnNcblxuICBpZiAoc2V0SGVhZGVycyAmJiB0eXBlb2Ygc2V0SGVhZGVycyAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBzZXRIZWFkZXJzIG11c3QgYmUgZnVuY3Rpb24nKVxuICB9XG5cbiAgLy8gc2V0dXAgb3B0aW9ucyBmb3Igc2VuZFxuICBvcHRzLm1heGFnZSA9IG9wdHMubWF4YWdlIHx8IG9wdHMubWF4QWdlIHx8IDBcbiAgb3B0cy5yb290ID0gcmVzb2x2ZShyb290KVxuXG4gIC8vIGNvbnN0cnVjdCBkaXJlY3RvcnkgbGlzdGVuZXJcbiAgdmFyIG9uRGlyZWN0b3J5ID0gcmVkaXJlY3RcbiAgICA/IGNyZWF0ZVJlZGlyZWN0RGlyZWN0b3J5TGlzdGVuZXIoKVxuICAgIDogY3JlYXRlTm90Rm91bmREaXJlY3RvcnlMaXN0ZW5lcigpXG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHNlcnZlU3RhdGljIChyZXEsIHJlcywgbmV4dCkge1xuICAgIGlmIChyZXEubWV0aG9kICE9PSAnR0VUJyAmJiByZXEubWV0aG9kICE9PSAnSEVBRCcpIHtcbiAgICAgIGlmIChmYWxsdGhyb3VnaCkge1xuICAgICAgICByZXR1cm4gbmV4dCgpXG4gICAgICB9XG5cbiAgICAgIC8vIG1ldGhvZCBub3QgYWxsb3dlZFxuICAgICAgcmVzLnN0YXR1c0NvZGUgPSA0MDVcbiAgICAgIHJlcy5zZXRIZWFkZXIoJ0FsbG93JywgJ0dFVCwgSEVBRCcpXG4gICAgICByZXMuc2V0SGVhZGVyKCdDb250ZW50LUxlbmd0aCcsICcwJylcbiAgICAgIHJlcy5lbmQoKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgdmFyIGZvcndhcmRFcnJvciA9ICFmYWxsdGhyb3VnaFxuICAgIHZhciBvcmlnaW5hbFVybCA9IHBhcnNlVXJsLm9yaWdpbmFsKHJlcSlcbiAgICB2YXIgcGF0aCA9IHBhcnNlVXJsKHJlcSkucGF0aG5hbWVcblxuICAgIC8vIG1ha2Ugc3VyZSByZWRpcmVjdCBvY2N1cnMgYXQgbW91bnRcbiAgICBpZiAocGF0aCA9PT0gJy8nICYmIG9yaWdpbmFsVXJsLnBhdGhuYW1lLnN1YnN0cigtMSkgIT09ICcvJykge1xuICAgICAgcGF0aCA9ICcnXG4gICAgfVxuXG4gICAgLy8gY3JlYXRlIHNlbmQgc3RyZWFtXG4gICAgdmFyIHN0cmVhbSA9IHNlbmQocmVxLCBwYXRoLCBvcHRzKVxuXG4gICAgLy8gYWRkIGRpcmVjdG9yeSBoYW5kbGVyXG4gICAgc3RyZWFtLm9uKCdkaXJlY3RvcnknLCBvbkRpcmVjdG9yeSlcblxuICAgIC8vIGFkZCBoZWFkZXJzIGxpc3RlbmVyXG4gICAgaWYgKHNldEhlYWRlcnMpIHtcbiAgICAgIHN0cmVhbS5vbignaGVhZGVycycsIHNldEhlYWRlcnMpXG4gICAgfVxuXG4gICAgLy8gYWRkIGZpbGUgbGlzdGVuZXIgZm9yIGZhbGx0aHJvdWdoXG4gICAgaWYgKGZhbGx0aHJvdWdoKSB7XG4gICAgICBzdHJlYW0ub24oJ2ZpbGUnLCBmdW5jdGlvbiBvbkZpbGUgKCkge1xuICAgICAgICAvLyBvbmNlIGZpbGUgaXMgZGV0ZXJtaW5lZCwgYWx3YXlzIGZvcndhcmQgZXJyb3JcbiAgICAgICAgZm9yd2FyZEVycm9yID0gdHJ1ZVxuICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyBmb3J3YXJkIGVycm9yc1xuICAgIHN0cmVhbS5vbignZXJyb3InLCBmdW5jdGlvbiBlcnJvciAoZXJyKSB7XG4gICAgICBpZiAoZm9yd2FyZEVycm9yIHx8ICEoZXJyLnN0YXR1c0NvZGUgPCA1MDApKSB7XG4gICAgICAgIG5leHQoZXJyKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgbmV4dCgpXG4gICAgfSlcblxuICAgIC8vIHBpcGVcbiAgICBzdHJlYW0ucGlwZShyZXMpXG4gIH1cbn1cblxuLyoqXG4gKiBDb2xsYXBzZSBhbGwgbGVhZGluZyBzbGFzaGVzIGludG8gYSBzaW5nbGUgc2xhc2hcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGNvbGxhcHNlTGVhZGluZ1NsYXNoZXMgKHN0cikge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHIuY2hhckNvZGVBdChpKSAhPT0gMHgyZiAvKiAvICovKSB7XG4gICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBpID4gMVxuICAgID8gJy8nICsgc3RyLnN1YnN0cihpKVxuICAgIDogc3RyXG59XG5cbiAvKipcbiAqIENyZWF0ZSBhIG1pbmltYWwgSFRNTCBkb2N1bWVudC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdGl0bGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBib2R5XG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZUh0bWxEb2N1bWVudCAodGl0bGUsIGJvZHkpIHtcbiAgcmV0dXJuICc8IURPQ1RZUEUgaHRtbD5cXG4nICtcbiAgICAnPGh0bWwgbGFuZz1cImVuXCI+XFxuJyArXG4gICAgJzxoZWFkPlxcbicgK1xuICAgICc8bWV0YSBjaGFyc2V0PVwidXRmLThcIj5cXG4nICtcbiAgICAnPHRpdGxlPicgKyB0aXRsZSArICc8L3RpdGxlPlxcbicgK1xuICAgICc8L2hlYWQ+XFxuJyArXG4gICAgJzxib2R5PlxcbicgK1xuICAgICc8cHJlPicgKyBib2R5ICsgJzwvcHJlPlxcbicgK1xuICAgICc8L2JvZHk+XFxuJyArXG4gICAgJzwvaHRtbD5cXG4nXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgZGlyZWN0b3J5IGxpc3RlbmVyIHRoYXQganVzdCA0MDRzLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVOb3RGb3VuZERpcmVjdG9yeUxpc3RlbmVyICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIG5vdEZvdW5kICgpIHtcbiAgICB0aGlzLmVycm9yKDQwNClcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIGRpcmVjdG9yeSBsaXN0ZW5lciB0aGF0IHBlcmZvcm1zIGEgcmVkaXJlY3QuXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZVJlZGlyZWN0RGlyZWN0b3J5TGlzdGVuZXIgKCkge1xuICByZXR1cm4gZnVuY3Rpb24gcmVkaXJlY3QgKHJlcykge1xuICAgIGlmICh0aGlzLmhhc1RyYWlsaW5nU2xhc2goKSkge1xuICAgICAgdGhpcy5lcnJvcig0MDQpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyBnZXQgb3JpZ2luYWwgVVJMXG4gICAgdmFyIG9yaWdpbmFsVXJsID0gcGFyc2VVcmwub3JpZ2luYWwodGhpcy5yZXEpXG5cbiAgICAvLyBhcHBlbmQgdHJhaWxpbmcgc2xhc2hcbiAgICBvcmlnaW5hbFVybC5wYXRoID0gbnVsbFxuICAgIG9yaWdpbmFsVXJsLnBhdGhuYW1lID0gY29sbGFwc2VMZWFkaW5nU2xhc2hlcyhvcmlnaW5hbFVybC5wYXRobmFtZSArICcvJylcblxuICAgIC8vIHJlZm9ybWF0IHRoZSBVUkxcbiAgICB2YXIgbG9jID0gZW5jb2RlVXJsKHVybC5mb3JtYXQob3JpZ2luYWxVcmwpKVxuICAgIHZhciBkb2MgPSBjcmVhdGVIdG1sRG9jdW1lbnQoJ1JlZGlyZWN0aW5nJywgJ1JlZGlyZWN0aW5nIHRvIDxhIGhyZWY9XCInICsgZXNjYXBlSHRtbChsb2MpICsgJ1wiPicgK1xuICAgICAgZXNjYXBlSHRtbChsb2MpICsgJzwvYT4nKVxuXG4gICAgLy8gc2VuZCByZWRpcmVjdCByZXNwb25zZVxuICAgIHJlcy5zdGF0dXNDb2RlID0gMzAxXG4gICAgcmVzLnNldEhlYWRlcignQ29udGVudC1UeXBlJywgJ3RleHQvaHRtbDsgY2hhcnNldD1VVEYtOCcpXG4gICAgcmVzLnNldEhlYWRlcignQ29udGVudC1MZW5ndGgnLCBCdWZmZXIuYnl0ZUxlbmd0aChkb2MpKVxuICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtU2VjdXJpdHktUG9saWN5JywgXCJkZWZhdWx0LXNyYyAnc2VsZidcIilcbiAgICByZXMuc2V0SGVhZGVyKCdYLUNvbnRlbnQtVHlwZS1PcHRpb25zJywgJ25vc25pZmYnKVxuICAgIHJlcy5zZXRIZWFkZXIoJ0xvY2F0aW9uJywgbG9jKVxuICAgIHJlcy5lbmQoZG9jKVxuICB9XG59XG4iLCIvKiFcbiAqIGNvb2tpZS1wYXJzZXJcbiAqIENvcHlyaWdodChjKSAyMDE0IFRKIEhvbG93YXljaHVrXG4gKiBDb3B5cmlnaHQoYykgMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIGNvb2tpZSA9IHJlcXVpcmUoJ2Nvb2tpZScpXG52YXIgc2lnbmF0dXJlID0gcmVxdWlyZSgnY29va2llLXNpZ25hdHVyZScpXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBjb29raWVQYXJzZXJcbm1vZHVsZS5leHBvcnRzLkpTT05Db29raWUgPSBKU09OQ29va2llXG5tb2R1bGUuZXhwb3J0cy5KU09OQ29va2llcyA9IEpTT05Db29raWVzXG5tb2R1bGUuZXhwb3J0cy5zaWduZWRDb29raWUgPSBzaWduZWRDb29raWVcbm1vZHVsZS5leHBvcnRzLnNpZ25lZENvb2tpZXMgPSBzaWduZWRDb29raWVzXG5cbi8qKlxuICogUGFyc2UgQ29va2llIGhlYWRlciBhbmQgcG9wdWxhdGUgYHJlcS5jb29raWVzYFxuICogd2l0aCBhbiBvYmplY3Qga2V5ZWQgYnkgdGhlIGNvb2tpZSBuYW1lcy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ3xhcnJheX0gW3NlY3JldF0gQSBzdHJpbmcgKG9yIGFycmF5IG9mIHN0cmluZ3MpIHJlcHJlc2VudGluZyBjb29raWUgc2lnbmluZyBzZWNyZXQocykuXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBjb29raWVQYXJzZXIgKHNlY3JldCwgb3B0aW9ucykge1xuICB2YXIgc2VjcmV0cyA9ICFzZWNyZXQgfHwgQXJyYXkuaXNBcnJheShzZWNyZXQpXG4gICAgPyAoc2VjcmV0IHx8IFtdKVxuICAgIDogW3NlY3JldF1cblxuICByZXR1cm4gZnVuY3Rpb24gY29va2llUGFyc2VyIChyZXEsIHJlcywgbmV4dCkge1xuICAgIGlmIChyZXEuY29va2llcykge1xuICAgICAgcmV0dXJuIG5leHQoKVxuICAgIH1cblxuICAgIHZhciBjb29raWVzID0gcmVxLmhlYWRlcnMuY29va2llXG5cbiAgICByZXEuc2VjcmV0ID0gc2VjcmV0c1swXVxuICAgIHJlcS5jb29raWVzID0gT2JqZWN0LmNyZWF0ZShudWxsKVxuICAgIHJlcS5zaWduZWRDb29raWVzID0gT2JqZWN0LmNyZWF0ZShudWxsKVxuXG4gICAgLy8gbm8gY29va2llc1xuICAgIGlmICghY29va2llcykge1xuICAgICAgcmV0dXJuIG5leHQoKVxuICAgIH1cblxuICAgIHJlcS5jb29raWVzID0gY29va2llLnBhcnNlKGNvb2tpZXMsIG9wdGlvbnMpXG5cbiAgICAvLyBwYXJzZSBzaWduZWQgY29va2llc1xuICAgIGlmIChzZWNyZXRzLmxlbmd0aCAhPT0gMCkge1xuICAgICAgcmVxLnNpZ25lZENvb2tpZXMgPSBzaWduZWRDb29raWVzKHJlcS5jb29raWVzLCBzZWNyZXRzKVxuICAgICAgcmVxLnNpZ25lZENvb2tpZXMgPSBKU09OQ29va2llcyhyZXEuc2lnbmVkQ29va2llcylcbiAgICB9XG5cbiAgICAvLyBwYXJzZSBKU09OIGNvb2tpZXNcbiAgICByZXEuY29va2llcyA9IEpTT05Db29raWVzKHJlcS5jb29raWVzKVxuXG4gICAgbmV4dCgpXG4gIH1cbn1cblxuLyoqXG4gKiBQYXJzZSBKU09OIGNvb2tpZSBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7T2JqZWN0fSBQYXJzZWQgb2JqZWN0IG9yIHVuZGVmaW5lZCBpZiBub3QganNvbiBjb29raWVcbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBKU09OQ29va2llIChzdHIpIHtcbiAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnIHx8IHN0ci5zdWJzdHIoMCwgMikgIT09ICdqOicpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cblxuICB0cnkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKHN0ci5zbGljZSgyKSlcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9XG59XG5cbi8qKlxuICogUGFyc2UgSlNPTiBjb29raWVzLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBKU09OQ29va2llcyAob2JqKSB7XG4gIHZhciBjb29raWVzID0gT2JqZWN0LmtleXMob2JqKVxuICB2YXIga2V5XG4gIHZhciB2YWxcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGNvb2tpZXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBjb29raWVzW2ldXG4gICAgdmFsID0gSlNPTkNvb2tpZShvYmpba2V5XSlcblxuICAgIGlmICh2YWwpIHtcbiAgICAgIG9ialtrZXldID0gdmFsXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG9ialxufVxuXG4vKipcbiAqIFBhcnNlIGEgc2lnbmVkIGNvb2tpZSBzdHJpbmcsIHJldHVybiB0aGUgZGVjb2RlZCB2YWx1ZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyIHNpZ25lZCBjb29raWUgc3RyaW5nXG4gKiBAcGFyYW0ge3N0cmluZ3xhcnJheX0gc2VjcmV0XG4gKiBAcmV0dXJuIHtTdHJpbmd9IGRlY29kZWQgdmFsdWVcbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBzaWduZWRDb29raWUgKHN0ciwgc2VjcmV0KSB7XG4gIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxuXG4gIGlmIChzdHIuc3Vic3RyKDAsIDIpICE9PSAnczonKSB7XG4gICAgcmV0dXJuIHN0clxuICB9XG5cbiAgdmFyIHNlY3JldHMgPSAhc2VjcmV0IHx8IEFycmF5LmlzQXJyYXkoc2VjcmV0KVxuICAgID8gKHNlY3JldCB8fCBbXSlcbiAgICA6IFtzZWNyZXRdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWNyZXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHZhbCA9IHNpZ25hdHVyZS51bnNpZ24oc3RyLnNsaWNlKDIpLCBzZWNyZXRzW2ldKVxuXG4gICAgaWYgKHZhbCAhPT0gZmFsc2UpIHtcbiAgICAgIHJldHVybiB2YWxcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmFsc2Vcbn1cblxuLyoqXG4gKiBQYXJzZSBzaWduZWQgY29va2llcywgcmV0dXJuaW5nIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSBkZWNvZGVkIGtleS92YWx1ZVxuICogcGFpcnMsIHdoaWxlIHJlbW92aW5nIHRoZSBzaWduZWQga2V5IGZyb20gb2JqLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEBwYXJhbSB7c3RyaW5nfGFycmF5fSBzZWNyZXRcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBzaWduZWRDb29raWVzIChvYmosIHNlY3JldCkge1xuICB2YXIgY29va2llcyA9IE9iamVjdC5rZXlzKG9iailcbiAgdmFyIGRlY1xuICB2YXIga2V5XG4gIHZhciByZXQgPSBPYmplY3QuY3JlYXRlKG51bGwpXG4gIHZhciB2YWxcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGNvb2tpZXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBjb29raWVzW2ldXG4gICAgdmFsID0gb2JqW2tleV1cbiAgICBkZWMgPSBzaWduZWRDb29raWUodmFsLCBzZWNyZXQpXG5cbiAgICBpZiAodmFsICE9PSBkZWMpIHtcbiAgICAgIHJldFtrZXldID0gZGVjXG4gICAgICBkZWxldGUgb2JqW2tleV1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmV0XG59XG4iLCIvKiFcbiAqIG1vcmdhblxuICogQ29weXJpZ2h0KGMpIDIwMTAgU2VuY2hhIEluYy5cbiAqIENvcHlyaWdodChjKSAyMDExIFRKIEhvbG93YXljaHVrXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcbiAqIENvcHlyaWdodChjKSAyMDE0LTIwMTcgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gbW9yZ2FuXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMuZm9ybWF0ID0gZm9ybWF0XG5tb2R1bGUuZXhwb3J0cy50b2tlbiA9IHRva2VuXG5cbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIGF1dGggPSByZXF1aXJlKCdiYXNpYy1hdXRoJylcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ21vcmdhbicpXG52YXIgZGVwcmVjYXRlID0gcmVxdWlyZSgnZGVwZCcpKCdtb3JnYW4nKVxudmFyIG9uRmluaXNoZWQgPSByZXF1aXJlKCdvbi1maW5pc2hlZCcpXG52YXIgb25IZWFkZXJzID0gcmVxdWlyZSgnb24taGVhZGVycycpXG5cbi8qKlxuICogQXJyYXkgb2YgQ0xGIG1vbnRoIG5hbWVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgQ0xGX01PTlRIID0gW1xuICAnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01heScsICdKdW4nLFxuICAnSnVsJywgJ0F1ZycsICdTZXAnLCAnT2N0JywgJ05vdicsICdEZWMnXG5dXG5cbi8qKlxuICogRGVmYXVsdCBsb2cgYnVmZmVyIGR1cmF0aW9uLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgREVGQVVMVF9CVUZGRVJfRFVSQVRJT04gPSAxMDAwXG5cbi8qKlxuICogQ3JlYXRlIGEgbG9nZ2VyIG1pZGRsZXdhcmUuXG4gKlxuICogQHB1YmxpY1xuICogQHBhcmFtIHtTdHJpbmd8RnVuY3Rpb259IGZvcm1hdFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHJldHVybiB7RnVuY3Rpb259IG1pZGRsZXdhcmVcbiAqL1xuXG5mdW5jdGlvbiBtb3JnYW4gKGZvcm1hdCwgb3B0aW9ucykge1xuICB2YXIgZm10ID0gZm9ybWF0XG4gIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChmb3JtYXQgJiYgdHlwZW9mIGZvcm1hdCA9PT0gJ29iamVjdCcpIHtcbiAgICBvcHRzID0gZm9ybWF0XG4gICAgZm10ID0gb3B0cy5mb3JtYXQgfHwgJ2RlZmF1bHQnXG5cbiAgICAvLyBzbWFydCBkZXByZWNhdGlvbiBtZXNzYWdlXG4gICAgZGVwcmVjYXRlKCdtb3JnYW4ob3B0aW9ucyk6IHVzZSBtb3JnYW4oJyArICh0eXBlb2YgZm10ID09PSAnc3RyaW5nJyA/IEpTT04uc3RyaW5naWZ5KGZtdCkgOiAnZm9ybWF0JykgKyAnLCBvcHRpb25zKSBpbnN0ZWFkJylcbiAgfVxuXG4gIGlmIChmbXQgPT09IHVuZGVmaW5lZCkge1xuICAgIGRlcHJlY2F0ZSgndW5kZWZpbmVkIGZvcm1hdDogc3BlY2lmeSBhIGZvcm1hdCcpXG4gIH1cblxuICAvLyBvdXRwdXQgb24gcmVxdWVzdCBpbnN0ZWFkIG9mIHJlc3BvbnNlXG4gIHZhciBpbW1lZGlhdGUgPSBvcHRzLmltbWVkaWF0ZVxuXG4gIC8vIGNoZWNrIGlmIGxvZyBlbnRyeSBzaG91bGQgYmUgc2tpcHBlZFxuICB2YXIgc2tpcCA9IG9wdHMuc2tpcCB8fCBmYWxzZVxuXG4gIC8vIGZvcm1hdCBmdW5jdGlvblxuICB2YXIgZm9ybWF0TGluZSA9IHR5cGVvZiBmbXQgIT09ICdmdW5jdGlvbidcbiAgICA/IGdldEZvcm1hdEZ1bmN0aW9uKGZtdClcbiAgICA6IGZtdFxuXG4gIC8vIHN0cmVhbVxuICB2YXIgYnVmZmVyID0gb3B0cy5idWZmZXJcbiAgdmFyIHN0cmVhbSA9IG9wdHMuc3RyZWFtIHx8IHByb2Nlc3Muc3Rkb3V0XG5cbiAgLy8gYnVmZmVyaW5nIHN1cHBvcnRcbiAgaWYgKGJ1ZmZlcikge1xuICAgIGRlcHJlY2F0ZSgnYnVmZmVyIG9wdGlvbicpXG5cbiAgICAvLyBmbHVzaCBpbnRlcnZhbFxuICAgIHZhciBpbnRlcnZhbCA9IHR5cGVvZiBidWZmZXIgIT09ICdudW1iZXInXG4gICAgICA/IERFRkFVTFRfQlVGRkVSX0RVUkFUSU9OXG4gICAgICA6IGJ1ZmZlclxuXG4gICAgLy8gc3dhcCB0aGUgc3RyZWFtXG4gICAgc3RyZWFtID0gY3JlYXRlQnVmZmVyU3RyZWFtKHN0cmVhbSwgaW50ZXJ2YWwpXG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gbG9nZ2VyIChyZXEsIHJlcywgbmV4dCkge1xuICAgIC8vIHJlcXVlc3QgZGF0YVxuICAgIHJlcS5fc3RhcnRBdCA9IHVuZGVmaW5lZFxuICAgIHJlcS5fc3RhcnRUaW1lID0gdW5kZWZpbmVkXG4gICAgcmVxLl9yZW1vdGVBZGRyZXNzID0gZ2V0aXAocmVxKVxuXG4gICAgLy8gcmVzcG9uc2UgZGF0YVxuICAgIHJlcy5fc3RhcnRBdCA9IHVuZGVmaW5lZFxuICAgIHJlcy5fc3RhcnRUaW1lID0gdW5kZWZpbmVkXG5cbiAgICAvLyByZWNvcmQgcmVxdWVzdCBzdGFydFxuICAgIHJlY29yZFN0YXJ0VGltZS5jYWxsKHJlcSlcblxuICAgIGZ1bmN0aW9uIGxvZ1JlcXVlc3QgKCkge1xuICAgICAgaWYgKHNraXAgIT09IGZhbHNlICYmIHNraXAocmVxLCByZXMpKSB7XG4gICAgICAgIGRlYnVnKCdza2lwIHJlcXVlc3QnKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgdmFyIGxpbmUgPSBmb3JtYXRMaW5lKG1vcmdhbiwgcmVxLCByZXMpXG5cbiAgICAgIGlmIChsaW5lID09IG51bGwpIHtcbiAgICAgICAgZGVidWcoJ3NraXAgbGluZScpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBkZWJ1ZygnbG9nIHJlcXVlc3QnKVxuICAgICAgc3RyZWFtLndyaXRlKGxpbmUgKyAnXFxuJylcbiAgICB9O1xuXG4gICAgaWYgKGltbWVkaWF0ZSkge1xuICAgICAgLy8gaW1tZWRpYXRlIGxvZ1xuICAgICAgbG9nUmVxdWVzdCgpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHJlY29yZCByZXNwb25zZSBzdGFydFxuICAgICAgb25IZWFkZXJzKHJlcywgcmVjb3JkU3RhcnRUaW1lKVxuXG4gICAgICAvLyBsb2cgd2hlbiByZXNwb25zZSBmaW5pc2hlZFxuICAgICAgb25GaW5pc2hlZChyZXMsIGxvZ1JlcXVlc3QpXG4gICAgfVxuXG4gICAgbmV4dCgpXG4gIH1cbn1cblxuLyoqXG4gKiBBcGFjaGUgY29tYmluZWQgbG9nIGZvcm1hdC5cbiAqL1xuXG5tb3JnYW4uZm9ybWF0KCdjb21iaW5lZCcsICc6cmVtb3RlLWFkZHIgLSA6cmVtb3RlLXVzZXIgWzpkYXRlW2NsZl1dIFwiOm1ldGhvZCA6dXJsIEhUVFAvOmh0dHAtdmVyc2lvblwiIDpzdGF0dXMgOnJlc1tjb250ZW50LWxlbmd0aF0gXCI6cmVmZXJyZXJcIiBcIjp1c2VyLWFnZW50XCInKVxuXG4vKipcbiAqIEFwYWNoZSBjb21tb24gbG9nIGZvcm1hdC5cbiAqL1xuXG5tb3JnYW4uZm9ybWF0KCdjb21tb24nLCAnOnJlbW90ZS1hZGRyIC0gOnJlbW90ZS11c2VyIFs6ZGF0ZVtjbGZdXSBcIjptZXRob2QgOnVybCBIVFRQLzpodHRwLXZlcnNpb25cIiA6c3RhdHVzIDpyZXNbY29udGVudC1sZW5ndGhdJylcblxuLyoqXG4gKiBEZWZhdWx0IGZvcm1hdC5cbiAqL1xuXG5tb3JnYW4uZm9ybWF0KCdkZWZhdWx0JywgJzpyZW1vdGUtYWRkciAtIDpyZW1vdGUtdXNlciBbOmRhdGVdIFwiOm1ldGhvZCA6dXJsIEhUVFAvOmh0dHAtdmVyc2lvblwiIDpzdGF0dXMgOnJlc1tjb250ZW50LWxlbmd0aF0gXCI6cmVmZXJyZXJcIiBcIjp1c2VyLWFnZW50XCInKVxuZGVwcmVjYXRlLnByb3BlcnR5KG1vcmdhbiwgJ2RlZmF1bHQnLCAnZGVmYXVsdCBmb3JtYXQ6IHVzZSBjb21iaW5lZCBmb3JtYXQnKVxuXG4vKipcbiAqIFNob3J0IGZvcm1hdC5cbiAqL1xuXG5tb3JnYW4uZm9ybWF0KCdzaG9ydCcsICc6cmVtb3RlLWFkZHIgOnJlbW90ZS11c2VyIDptZXRob2QgOnVybCBIVFRQLzpodHRwLXZlcnNpb24gOnN0YXR1cyA6cmVzW2NvbnRlbnQtbGVuZ3RoXSAtIDpyZXNwb25zZS10aW1lIG1zJylcblxuLyoqXG4gKiBUaW55IGZvcm1hdC5cbiAqL1xuXG5tb3JnYW4uZm9ybWF0KCd0aW55JywgJzptZXRob2QgOnVybCA6c3RhdHVzIDpyZXNbY29udGVudC1sZW5ndGhdIC0gOnJlc3BvbnNlLXRpbWUgbXMnKVxuXG4vKipcbiAqIGRldiAoY29sb3JlZClcbiAqL1xuXG5tb3JnYW4uZm9ybWF0KCdkZXYnLCBmdW5jdGlvbiBkZXZlbG9wbWVudEZvcm1hdExpbmUgKHRva2VucywgcmVxLCByZXMpIHtcbiAgLy8gZ2V0IHRoZSBzdGF0dXMgY29kZSBpZiByZXNwb25zZSB3cml0dGVuXG4gIHZhciBzdGF0dXMgPSBoZWFkZXJzU2VudChyZXMpXG4gICAgPyByZXMuc3RhdHVzQ29kZVxuICAgIDogdW5kZWZpbmVkXG5cbiAgLy8gZ2V0IHN0YXR1cyBjb2xvclxuICB2YXIgY29sb3IgPSBzdGF0dXMgPj0gNTAwID8gMzEgLy8gcmVkXG4gICAgOiBzdGF0dXMgPj0gNDAwID8gMzMgLy8geWVsbG93XG4gICAgICA6IHN0YXR1cyA+PSAzMDAgPyAzNiAvLyBjeWFuXG4gICAgICAgIDogc3RhdHVzID49IDIwMCA/IDMyIC8vIGdyZWVuXG4gICAgICAgICAgOiAwIC8vIG5vIGNvbG9yXG5cbiAgLy8gZ2V0IGNvbG9yZWQgZnVuY3Rpb25cbiAgdmFyIGZuID0gZGV2ZWxvcG1lbnRGb3JtYXRMaW5lW2NvbG9yXVxuXG4gIGlmICghZm4pIHtcbiAgICAvLyBjb21waWxlXG4gICAgZm4gPSBkZXZlbG9wbWVudEZvcm1hdExpbmVbY29sb3JdID0gY29tcGlsZSgnXFx4MWJbMG06bWV0aG9kIDp1cmwgXFx4MWJbJyArXG4gICAgICBjb2xvciArICdtOnN0YXR1cyBcXHgxYlswbTpyZXNwb25zZS10aW1lIG1zIC0gOnJlc1tjb250ZW50LWxlbmd0aF1cXHgxYlswbScpXG4gIH1cblxuICByZXR1cm4gZm4odG9rZW5zLCByZXEsIHJlcylcbn0pXG5cbi8qKlxuICogcmVxdWVzdCB1cmxcbiAqL1xuXG5tb3JnYW4udG9rZW4oJ3VybCcsIGZ1bmN0aW9uIGdldFVybFRva2VuIChyZXEpIHtcbiAgcmV0dXJuIHJlcS5vcmlnaW5hbFVybCB8fCByZXEudXJsXG59KVxuXG4vKipcbiAqIHJlcXVlc3QgbWV0aG9kXG4gKi9cblxubW9yZ2FuLnRva2VuKCdtZXRob2QnLCBmdW5jdGlvbiBnZXRNZXRob2RUb2tlbiAocmVxKSB7XG4gIHJldHVybiByZXEubWV0aG9kXG59KVxuXG4vKipcbiAqIHJlc3BvbnNlIHRpbWUgaW4gbWlsbGlzZWNvbmRzXG4gKi9cblxubW9yZ2FuLnRva2VuKCdyZXNwb25zZS10aW1lJywgZnVuY3Rpb24gZ2V0UmVzcG9uc2VUaW1lVG9rZW4gKHJlcSwgcmVzLCBkaWdpdHMpIHtcbiAgaWYgKCFyZXEuX3N0YXJ0QXQgfHwgIXJlcy5fc3RhcnRBdCkge1xuICAgIC8vIG1pc3NpbmcgcmVxdWVzdCBhbmQvb3IgcmVzcG9uc2Ugc3RhcnQgdGltZVxuICAgIHJldHVyblxuICB9XG5cbiAgLy8gY2FsY3VsYXRlIGRpZmZcbiAgdmFyIG1zID0gKHJlcy5fc3RhcnRBdFswXSAtIHJlcS5fc3RhcnRBdFswXSkgKiAxZTMgK1xuICAgIChyZXMuX3N0YXJ0QXRbMV0gLSByZXEuX3N0YXJ0QXRbMV0pICogMWUtNlxuXG4gIC8vIHJldHVybiB0cnVuY2F0ZWQgdmFsdWVcbiAgcmV0dXJuIG1zLnRvRml4ZWQoZGlnaXRzID09PSB1bmRlZmluZWQgPyAzIDogZGlnaXRzKVxufSlcblxuLyoqXG4gKiBjdXJyZW50IGRhdGVcbiAqL1xuXG5tb3JnYW4udG9rZW4oJ2RhdGUnLCBmdW5jdGlvbiBnZXREYXRlVG9rZW4gKHJlcSwgcmVzLCBmb3JtYXQpIHtcbiAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgpXG5cbiAgc3dpdGNoIChmb3JtYXQgfHwgJ3dlYicpIHtcbiAgICBjYXNlICdjbGYnOlxuICAgICAgcmV0dXJuIGNsZmRhdGUoZGF0ZSlcbiAgICBjYXNlICdpc28nOlxuICAgICAgcmV0dXJuIGRhdGUudG9JU09TdHJpbmcoKVxuICAgIGNhc2UgJ3dlYic6XG4gICAgICByZXR1cm4gZGF0ZS50b1VUQ1N0cmluZygpXG4gIH1cbn0pXG5cbi8qKlxuICogcmVzcG9uc2Ugc3RhdHVzIGNvZGVcbiAqL1xuXG5tb3JnYW4udG9rZW4oJ3N0YXR1cycsIGZ1bmN0aW9uIGdldFN0YXR1c1Rva2VuIChyZXEsIHJlcykge1xuICByZXR1cm4gaGVhZGVyc1NlbnQocmVzKVxuICAgID8gU3RyaW5nKHJlcy5zdGF0dXNDb2RlKVxuICAgIDogdW5kZWZpbmVkXG59KVxuXG4vKipcbiAqIG5vcm1hbGl6ZWQgcmVmZXJyZXJcbiAqL1xuXG5tb3JnYW4udG9rZW4oJ3JlZmVycmVyJywgZnVuY3Rpb24gZ2V0UmVmZXJyZXJUb2tlbiAocmVxKSB7XG4gIHJldHVybiByZXEuaGVhZGVyc1sncmVmZXJlciddIHx8IHJlcS5oZWFkZXJzWydyZWZlcnJlciddXG59KVxuXG4vKipcbiAqIHJlbW90ZSBhZGRyZXNzXG4gKi9cblxubW9yZ2FuLnRva2VuKCdyZW1vdGUtYWRkcicsIGdldGlwKVxuXG4vKipcbiAqIHJlbW90ZSB1c2VyXG4gKi9cblxubW9yZ2FuLnRva2VuKCdyZW1vdGUtdXNlcicsIGZ1bmN0aW9uIGdldFJlbW90ZVVzZXJUb2tlbiAocmVxKSB7XG4gIC8vIHBhcnNlIGJhc2ljIGNyZWRlbnRpYWxzXG4gIHZhciBjcmVkZW50aWFscyA9IGF1dGgocmVxKVxuXG4gIC8vIHJldHVybiB1c2VybmFtZVxuICByZXR1cm4gY3JlZGVudGlhbHNcbiAgICA/IGNyZWRlbnRpYWxzLm5hbWVcbiAgICA6IHVuZGVmaW5lZFxufSlcblxuLyoqXG4gKiBIVFRQIHZlcnNpb25cbiAqL1xuXG5tb3JnYW4udG9rZW4oJ2h0dHAtdmVyc2lvbicsIGZ1bmN0aW9uIGdldEh0dHBWZXJzaW9uVG9rZW4gKHJlcSkge1xuICByZXR1cm4gcmVxLmh0dHBWZXJzaW9uTWFqb3IgKyAnLicgKyByZXEuaHR0cFZlcnNpb25NaW5vclxufSlcblxuLyoqXG4gKiBVQSBzdHJpbmdcbiAqL1xuXG5tb3JnYW4udG9rZW4oJ3VzZXItYWdlbnQnLCBmdW5jdGlvbiBnZXRVc2VyQWdlbnRUb2tlbiAocmVxKSB7XG4gIHJldHVybiByZXEuaGVhZGVyc1sndXNlci1hZ2VudCddXG59KVxuXG4vKipcbiAqIHJlcXVlc3QgaGVhZGVyXG4gKi9cblxubW9yZ2FuLnRva2VuKCdyZXEnLCBmdW5jdGlvbiBnZXRSZXF1ZXN0VG9rZW4gKHJlcSwgcmVzLCBmaWVsZCkge1xuICAvLyBnZXQgaGVhZGVyXG4gIHZhciBoZWFkZXIgPSByZXEuaGVhZGVyc1tmaWVsZC50b0xvd2VyQ2FzZSgpXVxuXG4gIHJldHVybiBBcnJheS5pc0FycmF5KGhlYWRlcilcbiAgICA/IGhlYWRlci5qb2luKCcsICcpXG4gICAgOiBoZWFkZXJcbn0pXG5cbi8qKlxuICogcmVzcG9uc2UgaGVhZGVyXG4gKi9cblxubW9yZ2FuLnRva2VuKCdyZXMnLCBmdW5jdGlvbiBnZXRSZXNwb25zZUhlYWRlciAocmVxLCByZXMsIGZpZWxkKSB7XG4gIGlmICghaGVhZGVyc1NlbnQocmVzKSkge1xuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxuXG4gIC8vIGdldCBoZWFkZXJcbiAgdmFyIGhlYWRlciA9IHJlcy5nZXRIZWFkZXIoZmllbGQpXG5cbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoaGVhZGVyKVxuICAgID8gaGVhZGVyLmpvaW4oJywgJylcbiAgICA6IGhlYWRlclxufSlcblxuLyoqXG4gKiBGb3JtYXQgYSBEYXRlIGluIHRoZSBjb21tb24gbG9nIGZvcm1hdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtEYXRlfSBkYXRlVGltZVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5cbmZ1bmN0aW9uIGNsZmRhdGUgKGRhdGVUaW1lKSB7XG4gIHZhciBkYXRlID0gZGF0ZVRpbWUuZ2V0VVRDRGF0ZSgpXG4gIHZhciBob3VyID0gZGF0ZVRpbWUuZ2V0VVRDSG91cnMoKVxuICB2YXIgbWlucyA9IGRhdGVUaW1lLmdldFVUQ01pbnV0ZXMoKVxuICB2YXIgc2VjcyA9IGRhdGVUaW1lLmdldFVUQ1NlY29uZHMoKVxuICB2YXIgeWVhciA9IGRhdGVUaW1lLmdldFVUQ0Z1bGxZZWFyKClcblxuICB2YXIgbW9udGggPSBDTEZfTU9OVEhbZGF0ZVRpbWUuZ2V0VVRDTW9udGgoKV1cblxuICByZXR1cm4gcGFkMihkYXRlKSArICcvJyArIG1vbnRoICsgJy8nICsgeWVhciArXG4gICAgJzonICsgcGFkMihob3VyKSArICc6JyArIHBhZDIobWlucykgKyAnOicgKyBwYWQyKHNlY3MpICtcbiAgICAnICswMDAwJ1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBmb3JtYXQgc3RyaW5nIGludG8gYSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gZm9ybWF0XG4gKiBAcmV0dXJuIHtmdW5jdGlvbn1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBjb21waWxlIChmb3JtYXQpIHtcbiAgaWYgKHR5cGVvZiBmb3JtYXQgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgZm9ybWF0IG11c3QgYmUgYSBzdHJpbmcnKVxuICB9XG5cbiAgdmFyIGZtdCA9IFN0cmluZyhKU09OLnN0cmluZ2lmeShmb3JtYXQpKVxuICB2YXIganMgPSAnICBcInVzZSBzdHJpY3RcIlxcbiAgcmV0dXJuICcgKyBmbXQucmVwbGFjZSgvOihbLVxcd117Mix9KSg/OlxcWyhbXlxcXV0rKVxcXSk/L2csIGZ1bmN0aW9uIChfLCBuYW1lLCBhcmcpIHtcbiAgICB2YXIgdG9rZW5Bcmd1bWVudHMgPSAncmVxLCByZXMnXG4gICAgdmFyIHRva2VuRnVuY3Rpb24gPSAndG9rZW5zWycgKyBTdHJpbmcoSlNPTi5zdHJpbmdpZnkobmFtZSkpICsgJ10nXG5cbiAgICBpZiAoYXJnICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRva2VuQXJndW1lbnRzICs9ICcsICcgKyBTdHJpbmcoSlNPTi5zdHJpbmdpZnkoYXJnKSlcbiAgICB9XG5cbiAgICByZXR1cm4gJ1wiICtcXG4gICAgKCcgKyB0b2tlbkZ1bmN0aW9uICsgJygnICsgdG9rZW5Bcmd1bWVudHMgKyAnKSB8fCBcIi1cIikgKyBcIidcbiAgfSlcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgcmV0dXJuIG5ldyBGdW5jdGlvbigndG9rZW5zLCByZXEsIHJlcycsIGpzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIGJhc2ljIGJ1ZmZlcmluZyBzdHJlYW0uXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHN0cmVhbVxuICogQHBhcmFtIHtudW1iZXJ9IGludGVydmFsXG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlQnVmZmVyU3RyZWFtIChzdHJlYW0sIGludGVydmFsKSB7XG4gIHZhciBidWYgPSBbXVxuICB2YXIgdGltZXIgPSBudWxsXG5cbiAgLy8gZmx1c2ggZnVuY3Rpb25cbiAgZnVuY3Rpb24gZmx1c2ggKCkge1xuICAgIHRpbWVyID0gbnVsbFxuICAgIHN0cmVhbS53cml0ZShidWYuam9pbignJykpXG4gICAgYnVmLmxlbmd0aCA9IDBcbiAgfVxuXG4gIC8vIHdyaXRlIGZ1bmN0aW9uXG4gIGZ1bmN0aW9uIHdyaXRlIChzdHIpIHtcbiAgICBpZiAodGltZXIgPT09IG51bGwpIHtcbiAgICAgIHRpbWVyID0gc2V0VGltZW91dChmbHVzaCwgaW50ZXJ2YWwpXG4gICAgfVxuXG4gICAgYnVmLnB1c2goc3RyKVxuICB9XG5cbiAgLy8gcmV0dXJuIGEgbWluaW1hbCBcInN0cmVhbVwiXG4gIHJldHVybiB7IHdyaXRlOiB3cml0ZSB9XG59XG5cbi8qKlxuICogRGVmaW5lIGEgZm9ybWF0IHdpdGggdGhlIGdpdmVuIG5hbWUuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7c3RyaW5nfGZ1bmN0aW9ufSBmbXRcbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBmb3JtYXQgKG5hbWUsIGZtdCkge1xuICBtb3JnYW5bbmFtZV0gPSBmbXRcbiAgcmV0dXJuIHRoaXNcbn1cblxuLyoqXG4gKiBMb29rdXAgYW5kIGNvbXBpbGUgYSBuYW1lZCBmb3JtYXQgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEByZXR1cm4ge2Z1bmN0aW9ufVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGdldEZvcm1hdEZ1bmN0aW9uIChuYW1lKSB7XG4gIC8vIGxvb2t1cCBmb3JtYXRcbiAgdmFyIGZtdCA9IG1vcmdhbltuYW1lXSB8fCBuYW1lIHx8IG1vcmdhbi5kZWZhdWx0XG5cbiAgLy8gcmV0dXJuIGNvbXBpbGVkIGZvcm1hdFxuICByZXR1cm4gdHlwZW9mIGZtdCAhPT0gJ2Z1bmN0aW9uJ1xuICAgID8gY29tcGlsZShmbXQpXG4gICAgOiBmbXRcbn1cblxuLyoqXG4gKiBHZXQgcmVxdWVzdCBJUCBhZGRyZXNzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0luY29taW5nTWVzc2FnZX0gcmVxXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cblxuZnVuY3Rpb24gZ2V0aXAgKHJlcSkge1xuICByZXR1cm4gcmVxLmlwIHx8XG4gICAgcmVxLl9yZW1vdGVBZGRyZXNzIHx8XG4gICAgKHJlcS5jb25uZWN0aW9uICYmIHJlcS5jb25uZWN0aW9uLnJlbW90ZUFkZHJlc3MpIHx8XG4gICAgdW5kZWZpbmVkXG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHRoZSByZXNwb25zZSBoZWFkZXJzIGhhdmUgYmVlbiBzZW50LlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXNcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBoZWFkZXJzU2VudCAocmVzKSB7XG4gIHJldHVybiB0eXBlb2YgcmVzLmhlYWRlcnNTZW50ICE9PSAnYm9vbGVhbidcbiAgICA/IEJvb2xlYW4ocmVzLl9oZWFkZXIpXG4gICAgOiByZXMuaGVhZGVyc1NlbnRcbn1cblxuLyoqXG4gKiBQYWQgbnVtYmVyIHRvIHR3byBkaWdpdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7bnVtYmVyfSBudW1cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuXG5mdW5jdGlvbiBwYWQyIChudW0pIHtcbiAgdmFyIHN0ciA9IFN0cmluZyhudW0pXG5cbiAgcmV0dXJuIChzdHIubGVuZ3RoID09PSAxID8gJzAnIDogJycpICsgc3RyXG59XG5cbi8qKlxuICogUmVjb3JkIHRoZSBzdGFydCB0aW1lLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiByZWNvcmRTdGFydFRpbWUgKCkge1xuICB0aGlzLl9zdGFydEF0ID0gcHJvY2Vzcy5ocnRpbWUoKVxuICB0aGlzLl9zdGFydFRpbWUgPSBuZXcgRGF0ZSgpXG59XG5cbi8qKlxuICogRGVmaW5lIGEgdG9rZW4gZnVuY3Rpb24gd2l0aCB0aGUgZ2l2ZW4gbmFtZSxcbiAqIGFuZCBjYWxsYmFjayBmbihyZXEsIHJlcykuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGZuXG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gdG9rZW4gKG5hbWUsIGZuKSB7XG4gIG1vcmdhbltuYW1lXSA9IGZuXG4gIHJldHVybiB0aGlzXG59XG4iLCIvKiFcbiAqIGJhc2ljLWF1dGhcbiAqIENvcHlyaWdodChjKSAyMDEzIFRKIEhvbG93YXljaHVrXG4gKiBDb3B5cmlnaHQoYykgMjAxNCBKb25hdGhhbiBPbmdcbiAqIENvcHlyaWdodChjKSAyMDE1LTIwMTYgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlclxuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gYXV0aFxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZVxuXG4vKipcbiAqIFJlZ0V4cCBmb3IgYmFzaWMgYXV0aCBjcmVkZW50aWFsc1xuICpcbiAqIGNyZWRlbnRpYWxzID0gYXV0aC1zY2hlbWUgMSpTUCB0b2tlbjY4XG4gKiBhdXRoLXNjaGVtZSA9IFwiQmFzaWNcIiA7IGNhc2UgaW5zZW5zaXRpdmVcbiAqIHRva2VuNjggICAgID0gMSooIEFMUEhBIC8gRElHSVQgLyBcIi1cIiAvIFwiLlwiIC8gXCJfXCIgLyBcIn5cIiAvIFwiK1wiIC8gXCIvXCIgKSAqXCI9XCJcbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIENSRURFTlRJQUxTX1JFR0VYUCA9IC9eICooPzpbQmJdW0FhXVtTc11bSWldW0NjXSkgKyhbQS1aYS16MC05Ll9+Ky8tXSs9KikgKiQvXG5cbi8qKlxuICogUmVnRXhwIGZvciBiYXNpYyBhdXRoIHVzZXIvcGFzc1xuICpcbiAqIHVzZXItcGFzcyAgID0gdXNlcmlkIFwiOlwiIHBhc3N3b3JkXG4gKiB1c2VyaWQgICAgICA9ICo8VEVYVCBleGNsdWRpbmcgXCI6XCI+XG4gKiBwYXNzd29yZCAgICA9ICpURVhUXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBVU0VSX1BBU1NfUkVHRVhQID0gL14oW146XSopOiguKikkL1xuXG4vKipcbiAqIFBhcnNlIHRoZSBBdXRob3JpemF0aW9uIGhlYWRlciBmaWVsZCBvZiBhIHJlcXVlc3QuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHJlcVxuICogQHJldHVybiB7b2JqZWN0fSB3aXRoIC5uYW1lIGFuZCAucGFzc1xuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGF1dGggKHJlcSkge1xuICBpZiAoIXJlcSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IHJlcSBpcyByZXF1aXJlZCcpXG4gIH1cblxuICBpZiAodHlwZW9mIHJlcSAhPT0gJ29iamVjdCcpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCByZXEgaXMgcmVxdWlyZWQgdG8gYmUgYW4gb2JqZWN0JylcbiAgfVxuXG4gIC8vIGdldCBoZWFkZXJcbiAgdmFyIGhlYWRlciA9IGdldEF1dGhvcml6YXRpb24ocmVxKVxuXG4gIC8vIHBhcnNlIGhlYWRlclxuICByZXR1cm4gcGFyc2UoaGVhZGVyKVxufVxuXG4vKipcbiAqIERlY29kZSBiYXNlNjQgc3RyaW5nLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBkZWNvZGVCYXNlNjQgKHN0cikge1xuICByZXR1cm4gQnVmZmVyLmZyb20oc3RyLCAnYmFzZTY0JykudG9TdHJpbmcoKVxufVxuXG4vKipcbiAqIEdldCB0aGUgQXV0aG9yaXphdGlvbiBoZWFkZXIgZnJvbSByZXF1ZXN0IG9iamVjdC5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZ2V0QXV0aG9yaXphdGlvbiAocmVxKSB7XG4gIGlmICghcmVxLmhlYWRlcnMgfHwgdHlwZW9mIHJlcS5oZWFkZXJzICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IHJlcSBpcyByZXF1aXJlZCB0byBoYXZlIGhlYWRlcnMgcHJvcGVydHknKVxuICB9XG5cbiAgcmV0dXJuIHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb25cbn1cblxuLyoqXG4gKiBQYXJzZSBiYXNpYyBhdXRoIHRvIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gcGFyc2UgKHN0cmluZykge1xuICBpZiAodHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cblxuICAvLyBwYXJzZSBoZWFkZXJcbiAgdmFyIG1hdGNoID0gQ1JFREVOVElBTFNfUkVHRVhQLmV4ZWMoc3RyaW5nKVxuXG4gIGlmICghbWF0Y2gpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cblxuICAvLyBkZWNvZGUgdXNlciBwYXNzXG4gIHZhciB1c2VyUGFzcyA9IFVTRVJfUEFTU19SRUdFWFAuZXhlYyhkZWNvZGVCYXNlNjQobWF0Y2hbMV0pKVxuXG4gIGlmICghdXNlclBhc3MpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cblxuICAvLyByZXR1cm4gY3JlZGVudGlhbHMgb2JqZWN0XG4gIHJldHVybiBuZXcgQ3JlZGVudGlhbHModXNlclBhc3NbMV0sIHVzZXJQYXNzWzJdKVxufVxuXG4vKipcbiAqIE9iamVjdCB0byByZXByZXNlbnQgdXNlciBjcmVkZW50aWFscy5cbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gQ3JlZGVudGlhbHMgKG5hbWUsIHBhc3MpIHtcbiAgdGhpcy5uYW1lID0gbmFtZVxuICB0aGlzLnBhc3MgPSBwYXNzXG59XG4iLCIvKiFcbiAqIG9uLWhlYWRlcnNcbiAqIENvcHlyaWdodChjKSAyMDE0IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IG9uSGVhZGVyc1xuXG4vKipcbiAqIENyZWF0ZSBhIHJlcGxhY2VtZW50IHdyaXRlSGVhZCBtZXRob2QuXG4gKlxuICogQHBhcmFtIHtmdW5jdGlvbn0gcHJldldyaXRlSGVhZFxuICogQHBhcmFtIHtmdW5jdGlvbn0gbGlzdGVuZXJcbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlV3JpdGVIZWFkIChwcmV2V3JpdGVIZWFkLCBsaXN0ZW5lcikge1xuICB2YXIgZmlyZWQgPSBmYWxzZVxuXG4gIC8vIHJldHVybiBmdW5jdGlvbiB3aXRoIGNvcmUgbmFtZSBhbmQgYXJndW1lbnQgbGlzdFxuICByZXR1cm4gZnVuY3Rpb24gd3JpdGVIZWFkIChzdGF0dXNDb2RlKSB7XG4gICAgLy8gc2V0IGhlYWRlcnMgZnJvbSBhcmd1bWVudHNcbiAgICB2YXIgYXJncyA9IHNldFdyaXRlSGVhZEhlYWRlcnMuYXBwbHkodGhpcywgYXJndW1lbnRzKVxuXG4gICAgLy8gZmlyZSBsaXN0ZW5lclxuICAgIGlmICghZmlyZWQpIHtcbiAgICAgIGZpcmVkID0gdHJ1ZVxuICAgICAgbGlzdGVuZXIuY2FsbCh0aGlzKVxuXG4gICAgICAvLyBwYXNzLWFsb25nIGFuIHVwZGF0ZWQgc3RhdHVzIGNvZGVcbiAgICAgIGlmICh0eXBlb2YgYXJnc1swXSA9PT0gJ251bWJlcicgJiYgdGhpcy5zdGF0dXNDb2RlICE9PSBhcmdzWzBdKSB7XG4gICAgICAgIGFyZ3NbMF0gPSB0aGlzLnN0YXR1c0NvZGVcbiAgICAgICAgYXJncy5sZW5ndGggPSAxXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHByZXZXcml0ZUhlYWQuYXBwbHkodGhpcywgYXJncylcbiAgfVxufVxuXG4vKipcbiAqIEV4ZWN1dGUgYSBsaXN0ZW5lciB3aGVuIGEgcmVzcG9uc2UgaXMgYWJvdXQgdG8gd3JpdGUgaGVhZGVycy5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzXG4gKiBAcmV0dXJuIHtmdW5jdGlvbn0gbGlzdGVuZXJcbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBvbkhlYWRlcnMgKHJlcywgbGlzdGVuZXIpIHtcbiAgaWYgKCFyZXMpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCByZXMgaXMgcmVxdWlyZWQnKVxuICB9XG5cbiAgaWYgKHR5cGVvZiBsaXN0ZW5lciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IGxpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpXG4gIH1cblxuICByZXMud3JpdGVIZWFkID0gY3JlYXRlV3JpdGVIZWFkKHJlcy53cml0ZUhlYWQsIGxpc3RlbmVyKVxufVxuXG4vKipcbiAqIFNldCBoZWFkZXJzIGNvbnRhaW5lZCBpbiBhcnJheSBvbiB0aGUgcmVzcG9uc2Ugb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXNcbiAqIEBwYXJhbSB7YXJyYXl9IGhlYWRlcnNcbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2V0SGVhZGVyc0Zyb21BcnJheSAocmVzLCBoZWFkZXJzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgaGVhZGVycy5sZW5ndGg7IGkrKykge1xuICAgIHJlcy5zZXRIZWFkZXIoaGVhZGVyc1tpXVswXSwgaGVhZGVyc1tpXVsxXSlcbiAgfVxufVxuXG4vKipcbiAqIFNldCBoZWFkZXJzIGNvbnRhaW5lZCBpbiBvYmplY3Qgb24gdGhlIHJlc3BvbnNlIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzXG4gKiBAcGFyYW0ge29iamVjdH0gaGVhZGVyc1xuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBzZXRIZWFkZXJzRnJvbU9iamVjdCAocmVzLCBoZWFkZXJzKSB7XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMoaGVhZGVycylcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGsgPSBrZXlzW2ldXG4gICAgaWYgKGspIHJlcy5zZXRIZWFkZXIoaywgaGVhZGVyc1trXSlcbiAgfVxufVxuXG4vKipcbiAqIFNldCBoZWFkZXJzIGFuZCBvdGhlciBwcm9wZXJ0aWVzIG9uIHRoZSByZXNwb25zZSBvYmplY3QuXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IHN0YXR1c0NvZGVcbiAqIEBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2V0V3JpdGVIZWFkSGVhZGVycyAoc3RhdHVzQ29kZSkge1xuICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aFxuICB2YXIgaGVhZGVySW5kZXggPSBsZW5ndGggPiAxICYmIHR5cGVvZiBhcmd1bWVudHNbMV0gPT09ICdzdHJpbmcnXG4gICAgPyAyXG4gICAgOiAxXG5cbiAgdmFyIGhlYWRlcnMgPSBsZW5ndGggPj0gaGVhZGVySW5kZXggKyAxXG4gICAgPyBhcmd1bWVudHNbaGVhZGVySW5kZXhdXG4gICAgOiB1bmRlZmluZWRcblxuICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlXG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoaGVhZGVycykpIHtcbiAgICAvLyBoYW5kbGUgYXJyYXkgY2FzZVxuICAgIHNldEhlYWRlcnNGcm9tQXJyYXkodGhpcywgaGVhZGVycylcbiAgfSBlbHNlIGlmIChoZWFkZXJzKSB7XG4gICAgLy8gaGFuZGxlIG9iamVjdCBjYXNlXG4gICAgc2V0SGVhZGVyc0Zyb21PYmplY3QodGhpcywgaGVhZGVycylcbiAgfVxuXG4gIC8vIGNvcHkgbGVhZGluZyBhcmd1bWVudHNcbiAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoTWF0aC5taW4obGVuZ3RoLCBoZWFkZXJJbmRleCkpXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV1cbiAgfVxuXG4gIHJldHVybiBhcmdzXG59XG4iLCIndXNlIHN0cmljdCdcbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEwLTIwMTcgQnJpYW4gQ2FybHNvbiAoYnJpYW4ubS5jYXJsc29uQGdtYWlsLmNvbSlcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBSRUFETUUubWQgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG52YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKVxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG52YXIgcGdQYXNzID0gcmVxdWlyZSgncGdwYXNzJylcbnZhciBUeXBlT3ZlcnJpZGVzID0gcmVxdWlyZSgnLi90eXBlLW92ZXJyaWRlcycpXG5cbnZhciBDb25uZWN0aW9uUGFyYW1ldGVycyA9IHJlcXVpcmUoJy4vY29ubmVjdGlvbi1wYXJhbWV0ZXJzJylcbnZhciBRdWVyeSA9IHJlcXVpcmUoJy4vcXVlcnknKVxudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpXG52YXIgQ29ubmVjdGlvbiA9IHJlcXVpcmUoJy4vY29ubmVjdGlvbicpXG5cbnZhciBDbGllbnQgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpXG5cbiAgdGhpcy5jb25uZWN0aW9uUGFyYW1ldGVycyA9IG5ldyBDb25uZWN0aW9uUGFyYW1ldGVycyhjb25maWcpXG4gIHRoaXMudXNlciA9IHRoaXMuY29ubmVjdGlvblBhcmFtZXRlcnMudXNlclxuICB0aGlzLmRhdGFiYXNlID0gdGhpcy5jb25uZWN0aW9uUGFyYW1ldGVycy5kYXRhYmFzZVxuICB0aGlzLnBvcnQgPSB0aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzLnBvcnRcbiAgdGhpcy5ob3N0ID0gdGhpcy5jb25uZWN0aW9uUGFyYW1ldGVycy5ob3N0XG4gIHRoaXMucGFzc3dvcmQgPSB0aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzLnBhc3N3b3JkXG4gIHRoaXMucmVwbGljYXRpb24gPSB0aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzLnJlcGxpY2F0aW9uXG5cbiAgdmFyIGMgPSBjb25maWcgfHwge31cblxuICB0aGlzLl9Qcm9taXNlID0gYy5Qcm9taXNlIHx8IGdsb2JhbC5Qcm9taXNlXG4gIHRoaXMuX3R5cGVzID0gbmV3IFR5cGVPdmVycmlkZXMoYy50eXBlcylcbiAgdGhpcy5fZW5kaW5nID0gZmFsc2VcbiAgdGhpcy5fY29ubmVjdGluZyA9IGZhbHNlXG4gIHRoaXMuX2Nvbm5lY3RlZCA9IGZhbHNlXG4gIHRoaXMuX2Nvbm5lY3Rpb25FcnJvciA9IGZhbHNlXG4gIHRoaXMuX3F1ZXJ5YWJsZSA9IHRydWVcblxuICB0aGlzLmNvbm5lY3Rpb24gPSBjLmNvbm5lY3Rpb24gfHwgbmV3IENvbm5lY3Rpb24oe1xuICAgIHN0cmVhbTogYy5zdHJlYW0sXG4gICAgc3NsOiB0aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzLnNzbCxcbiAgICBrZWVwQWxpdmU6IGMua2VlcEFsaXZlIHx8IGZhbHNlLFxuICAgIGVuY29kaW5nOiB0aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzLmNsaWVudF9lbmNvZGluZyB8fCAndXRmOCdcbiAgfSlcbiAgdGhpcy5xdWVyeVF1ZXVlID0gW11cbiAgdGhpcy5iaW5hcnkgPSBjLmJpbmFyeSB8fCBkZWZhdWx0cy5iaW5hcnlcbiAgdGhpcy5wcm9jZXNzSUQgPSBudWxsXG4gIHRoaXMuc2VjcmV0S2V5ID0gbnVsbFxuICB0aGlzLnNzbCA9IHRoaXMuY29ubmVjdGlvblBhcmFtZXRlcnMuc3NsIHx8IGZhbHNlXG59XG5cbnV0aWwuaW5oZXJpdHMoQ2xpZW50LCBFdmVudEVtaXR0ZXIpXG5cbkNsaWVudC5wcm90b3R5cGUuX2Vycm9yQWxsUXVlcmllcyA9IGZ1bmN0aW9uIChlcnIpIHtcbiAgY29uc3QgZW5xdWV1ZUVycm9yID0gKHF1ZXJ5KSA9PiB7XG4gICAgcHJvY2Vzcy5uZXh0VGljaygoKSA9PiB7XG4gICAgICBxdWVyeS5oYW5kbGVFcnJvcihlcnIsIHRoaXMuY29ubmVjdGlvbilcbiAgICB9KVxuICB9XG5cbiAgaWYgKHRoaXMuYWN0aXZlUXVlcnkpIHtcbiAgICBlbnF1ZXVlRXJyb3IodGhpcy5hY3RpdmVRdWVyeSlcbiAgICB0aGlzLmFjdGl2ZVF1ZXJ5ID0gbnVsbFxuICB9XG5cbiAgdGhpcy5xdWVyeVF1ZXVlLmZvckVhY2goZW5xdWV1ZUVycm9yKVxuICB0aGlzLnF1ZXJ5UXVldWUubGVuZ3RoID0gMFxufVxuXG5DbGllbnQucHJvdG90eXBlLl9jb25uZWN0ID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gIHZhciBzZWxmID0gdGhpc1xuICB2YXIgY29uID0gdGhpcy5jb25uZWN0aW9uXG4gIGlmICh0aGlzLl9jb25uZWN0aW5nIHx8IHRoaXMuX2Nvbm5lY3RlZCkge1xuICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcignQ2xpZW50IGhhcyBhbHJlYWR5IGJlZW4gY29ubmVjdGVkLiBZb3UgY2Fubm90IHJldXNlIGEgY2xpZW50LicpXG4gICAgcHJvY2Vzcy5uZXh0VGljaygoKSA9PiB7XG4gICAgICBjYWxsYmFjayhlcnIpXG4gICAgfSlcbiAgICByZXR1cm5cbiAgfVxuICB0aGlzLl9jb25uZWN0aW5nID0gdHJ1ZVxuXG4gIGlmICh0aGlzLmhvc3QgJiYgdGhpcy5ob3N0LmluZGV4T2YoJy8nKSA9PT0gMCkge1xuICAgIGNvbi5jb25uZWN0KHRoaXMuaG9zdCArICcvLnMuUEdTUUwuJyArIHRoaXMucG9ydClcbiAgfSBlbHNlIHtcbiAgICBjb24uY29ubmVjdCh0aGlzLnBvcnQsIHRoaXMuaG9zdClcbiAgfVxuXG4gIC8vIG9uY2UgY29ubmVjdGlvbiBpcyBlc3RhYmxpc2hlZCBzZW5kIHN0YXJ0dXAgbWVzc2FnZVxuICBjb24ub24oJ2Nvbm5lY3QnLCBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHNlbGYuc3NsKSB7XG4gICAgICBjb24ucmVxdWVzdFNzbCgpXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbi5zdGFydHVwKHNlbGYuZ2V0U3RhcnR1cENvbmYoKSlcbiAgICB9XG4gIH0pXG5cbiAgY29uLm9uKCdzc2xjb25uZWN0JywgZnVuY3Rpb24gKCkge1xuICAgIGNvbi5zdGFydHVwKHNlbGYuZ2V0U3RhcnR1cENvbmYoKSlcbiAgfSlcblxuICBmdW5jdGlvbiBjaGVja1BnUGFzcyAoY2IpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKG1zZykge1xuICAgICAgaWYgKHNlbGYucGFzc3dvcmQgIT09IG51bGwpIHtcbiAgICAgICAgY2IobXNnKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGdQYXNzKHNlbGYuY29ubmVjdGlvblBhcmFtZXRlcnMsIGZ1bmN0aW9uIChwYXNzKSB7XG4gICAgICAgICAgaWYgKHVuZGVmaW5lZCAhPT0gcGFzcykge1xuICAgICAgICAgICAgc2VsZi5jb25uZWN0aW9uUGFyYW1ldGVycy5wYXNzd29yZCA9IHNlbGYucGFzc3dvcmQgPSBwYXNzXG4gICAgICAgICAgfVxuICAgICAgICAgIGNiKG1zZylcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBwYXNzd29yZCByZXF1ZXN0IGhhbmRsaW5nXG4gIGNvbi5vbignYXV0aGVudGljYXRpb25DbGVhcnRleHRQYXNzd29yZCcsIGNoZWNrUGdQYXNzKGZ1bmN0aW9uICgpIHtcbiAgICBjb24ucGFzc3dvcmQoc2VsZi5wYXNzd29yZClcbiAgfSkpXG5cbiAgLy8gcGFzc3dvcmQgcmVxdWVzdCBoYW5kbGluZ1xuICBjb24ub24oJ2F1dGhlbnRpY2F0aW9uTUQ1UGFzc3dvcmQnLCBjaGVja1BnUGFzcyhmdW5jdGlvbiAobXNnKSB7XG4gICAgY29uLnBhc3N3b3JkKHV0aWxzLnBvc3RncmVzTWQ1UGFzc3dvcmRIYXNoKHNlbGYudXNlciwgc2VsZi5wYXNzd29yZCwgbXNnLnNhbHQpKVxuICB9KSlcblxuICBjb24ub25jZSgnYmFja2VuZEtleURhdGEnLCBmdW5jdGlvbiAobXNnKSB7XG4gICAgc2VsZi5wcm9jZXNzSUQgPSBtc2cucHJvY2Vzc0lEXG4gICAgc2VsZi5zZWNyZXRLZXkgPSBtc2cuc2VjcmV0S2V5XG4gIH0pXG5cbiAgY29uc3QgY29ubmVjdGluZ0Vycm9ySGFuZGxlciA9IChlcnIpID0+IHtcbiAgICBpZiAodGhpcy5fY29ubmVjdGlvbkVycm9yKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgdGhpcy5fY29ubmVjdGlvbkVycm9yID0gdHJ1ZVxuICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgcmV0dXJuIGNhbGxiYWNrKGVycilcbiAgICB9XG4gICAgdGhpcy5lbWl0KCdlcnJvcicsIGVycilcbiAgfVxuXG4gIGNvbnN0IGNvbm5lY3RlZEVycm9ySGFuZGxlciA9IChlcnIpID0+IHtcbiAgICB0aGlzLl9xdWVyeWFibGUgPSBmYWxzZVxuICAgIHRoaXMuX2Vycm9yQWxsUXVlcmllcyhlcnIpXG4gICAgdGhpcy5lbWl0KCdlcnJvcicsIGVycilcbiAgfVxuXG4gIGNvbnN0IGNvbm5lY3RlZEVycm9yTWVzc2FnZUhhbmRsZXIgPSAobXNnKSA9PiB7XG4gICAgY29uc3QgYWN0aXZlUXVlcnkgPSB0aGlzLmFjdGl2ZVF1ZXJ5XG5cbiAgICBpZiAoIWFjdGl2ZVF1ZXJ5KSB7XG4gICAgICBjb25uZWN0ZWRFcnJvckhhbmRsZXIobXNnKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgdGhpcy5hY3RpdmVRdWVyeSA9IG51bGxcbiAgICBhY3RpdmVRdWVyeS5oYW5kbGVFcnJvcihtc2csIGNvbilcbiAgfVxuXG4gIGNvbi5vbignZXJyb3InLCBjb25uZWN0aW5nRXJyb3JIYW5kbGVyKVxuICBjb24ub24oJ2Vycm9yTWVzc2FnZScsIGNvbm5lY3RpbmdFcnJvckhhbmRsZXIpXG5cbiAgLy8gaG9vayB1cCBxdWVyeSBoYW5kbGluZyBldmVudHMgdG8gY29ubmVjdGlvblxuICAvLyBhZnRlciB0aGUgY29ubmVjdGlvbiBpbml0aWFsbHkgYmVjb21lcyByZWFkeSBmb3IgcXVlcmllc1xuICBjb24ub25jZSgncmVhZHlGb3JRdWVyeScsIGZ1bmN0aW9uICgpIHtcbiAgICBzZWxmLl9jb25uZWN0aW5nID0gZmFsc2VcbiAgICBzZWxmLl9jb25uZWN0ZWQgPSB0cnVlXG4gICAgc2VsZi5fYXR0YWNoTGlzdGVuZXJzKGNvbilcbiAgICBjb24ucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgY29ubmVjdGluZ0Vycm9ySGFuZGxlcilcbiAgICBjb24ucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yTWVzc2FnZScsIGNvbm5lY3RpbmdFcnJvckhhbmRsZXIpXG4gICAgY29uLm9uKCdlcnJvcicsIGNvbm5lY3RlZEVycm9ySGFuZGxlcilcbiAgICBjb24ub24oJ2Vycm9yTWVzc2FnZScsIGNvbm5lY3RlZEVycm9yTWVzc2FnZUhhbmRsZXIpXG5cbiAgICAvLyBwcm9jZXNzIHBvc3NpYmxlIGNhbGxiYWNrIGFyZ3VtZW50IHRvIENsaWVudCNjb25uZWN0XG4gICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICBjYWxsYmFjayhudWxsLCBzZWxmKVxuICAgICAgLy8gcmVtb3ZlIGNhbGxiYWNrIGZvciBwcm9wZXIgZXJyb3IgaGFuZGxpbmdcbiAgICAgIC8vIGFmdGVyIHRoZSBjb25uZWN0IGV2ZW50XG4gICAgICBjYWxsYmFjayA9IG51bGxcbiAgICB9XG4gICAgc2VsZi5lbWl0KCdjb25uZWN0JylcbiAgfSlcblxuICBjb24ub24oJ3JlYWR5Rm9yUXVlcnknLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGFjdGl2ZVF1ZXJ5ID0gc2VsZi5hY3RpdmVRdWVyeVxuICAgIHNlbGYuYWN0aXZlUXVlcnkgPSBudWxsXG4gICAgc2VsZi5yZWFkeUZvclF1ZXJ5ID0gdHJ1ZVxuICAgIGlmIChhY3RpdmVRdWVyeSkge1xuICAgICAgYWN0aXZlUXVlcnkuaGFuZGxlUmVhZHlGb3JRdWVyeShjb24pXG4gICAgfVxuICAgIHNlbGYuX3B1bHNlUXVlcnlRdWV1ZSgpXG4gIH0pXG5cbiAgY29uLm9uY2UoJ2VuZCcsICgpID0+IHtcbiAgICBjb25zdCBlcnJvciA9IHRoaXMuX2VuZGluZ1xuICAgICAgPyBuZXcgRXJyb3IoJ0Nvbm5lY3Rpb24gdGVybWluYXRlZCcpXG4gICAgICA6IG5ldyBFcnJvcignQ29ubmVjdGlvbiB0ZXJtaW5hdGVkIHVuZXhwZWN0ZWRseScpXG5cbiAgICB0aGlzLl9lcnJvckFsbFF1ZXJpZXMoZXJyb3IpXG5cbiAgICBpZiAoIXRoaXMuX2VuZGluZykge1xuICAgICAgLy8gaWYgdGhlIGNvbm5lY3Rpb24gaXMgZW5kZWQgd2l0aG91dCB1cyBjYWxsaW5nIC5lbmQoKVxuICAgICAgLy8gb24gdGhpcyBjbGllbnQgdGhlbiB3ZSBoYXZlIGFuIHVuZXhwZWN0ZWQgZGlzY29ubmVjdGlvblxuICAgICAgLy8gdHJlYXQgdGhpcyBhcyBhbiBlcnJvciB1bmxlc3Mgd2UndmUgYWxyZWFkeSBlbWl0dGVkIGFuIGVycm9yXG4gICAgICAvLyBkdXJpbmcgY29ubmVjdGlvbi5cbiAgICAgIGlmICh0aGlzLl9jb25uZWN0aW5nICYmICF0aGlzLl9jb25uZWN0aW9uRXJyb3IpIHtcbiAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgY2FsbGJhY2soZXJyb3IpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29ubmVjdGVkRXJyb3JIYW5kbGVyKGVycm9yKVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKCF0aGlzLl9jb25uZWN0aW9uRXJyb3IpIHtcbiAgICAgICAgY29ubmVjdGVkRXJyb3JIYW5kbGVyKGVycm9yKVxuICAgICAgfVxuICAgIH1cblxuICAgIHByb2Nlc3MubmV4dFRpY2soKCkgPT4ge1xuICAgICAgdGhpcy5lbWl0KCdlbmQnKVxuICAgIH0pXG4gIH0pXG5cbiAgY29uLm9uKCdub3RpY2UnLCBmdW5jdGlvbiAobXNnKSB7XG4gICAgc2VsZi5lbWl0KCdub3RpY2UnLCBtc2cpXG4gIH0pXG59XG5cbkNsaWVudC5wcm90b3R5cGUuY29ubmVjdCA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICBpZiAoY2FsbGJhY2spIHtcbiAgICB0aGlzLl9jb25uZWN0KGNhbGxiYWNrKVxuICAgIHJldHVyblxuICB9XG5cbiAgcmV0dXJuIG5ldyB0aGlzLl9Qcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB0aGlzLl9jb25uZWN0KChlcnJvcikgPT4ge1xuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc29sdmUoKVxuICAgICAgfVxuICAgIH0pXG4gIH0pXG59XG5cbkNsaWVudC5wcm90b3R5cGUuX2F0dGFjaExpc3RlbmVycyA9IGZ1bmN0aW9uIChjb24pIHtcbiAgY29uc3Qgc2VsZiA9IHRoaXNcbiAgLy8gZGVsZWdhdGUgcm93RGVzY3JpcHRpb24gdG8gYWN0aXZlIHF1ZXJ5XG4gIGNvbi5vbigncm93RGVzY3JpcHRpb24nLCBmdW5jdGlvbiAobXNnKSB7XG4gICAgc2VsZi5hY3RpdmVRdWVyeS5oYW5kbGVSb3dEZXNjcmlwdGlvbihtc2cpXG4gIH0pXG5cbiAgLy8gZGVsZWdhdGUgZGF0YVJvdyB0byBhY3RpdmUgcXVlcnlcbiAgY29uLm9uKCdkYXRhUm93JywgZnVuY3Rpb24gKG1zZykge1xuICAgIHNlbGYuYWN0aXZlUXVlcnkuaGFuZGxlRGF0YVJvdyhtc2cpXG4gIH0pXG5cbiAgLy8gZGVsZWdhdGUgcG9ydGFsU3VzcGVuZGVkIHRvIGFjdGl2ZSBxdWVyeVxuICBjb24ub24oJ3BvcnRhbFN1c3BlbmRlZCcsIGZ1bmN0aW9uIChtc2cpIHtcbiAgICBzZWxmLmFjdGl2ZVF1ZXJ5LmhhbmRsZVBvcnRhbFN1c3BlbmRlZChjb24pXG4gIH0pXG5cbiAgLy8gZGVsZXRhZ2F0ZSBlbXB0eVF1ZXJ5IHRvIGFjdGl2ZSBxdWVyeVxuICBjb24ub24oJ2VtcHR5UXVlcnknLCBmdW5jdGlvbiAobXNnKSB7XG4gICAgc2VsZi5hY3RpdmVRdWVyeS5oYW5kbGVFbXB0eVF1ZXJ5KGNvbilcbiAgfSlcblxuICAvLyBkZWxlZ2F0ZSBjb21tYW5kQ29tcGxldGUgdG8gYWN0aXZlIHF1ZXJ5XG4gIGNvbi5vbignY29tbWFuZENvbXBsZXRlJywgZnVuY3Rpb24gKG1zZykge1xuICAgIHNlbGYuYWN0aXZlUXVlcnkuaGFuZGxlQ29tbWFuZENvbXBsZXRlKG1zZywgY29uKVxuICB9KVxuXG4gIC8vIGlmIGEgcHJlcGFyZWQgc3RhdGVtZW50IGhhcyBhIG5hbWUgYW5kIHByb3Blcmx5IHBhcnNlc1xuICAvLyB3ZSB0cmFjayB0aGF0IGl0cyBhbHJlYWR5IGJlZW4gZXhlY3V0ZWQgc28gd2UgZG9uJ3QgcGFyc2VcbiAgLy8gaXQgYWdhaW4gb24gdGhlIHNhbWUgY2xpZW50XG4gIGNvbi5vbigncGFyc2VDb21wbGV0ZScsIGZ1bmN0aW9uIChtc2cpIHtcbiAgICBpZiAoc2VsZi5hY3RpdmVRdWVyeS5uYW1lKSB7XG4gICAgICBjb24ucGFyc2VkU3RhdGVtZW50c1tzZWxmLmFjdGl2ZVF1ZXJ5Lm5hbWVdID0gdHJ1ZVxuICAgIH1cbiAgfSlcblxuICBjb24ub24oJ2NvcHlJblJlc3BvbnNlJywgZnVuY3Rpb24gKG1zZykge1xuICAgIHNlbGYuYWN0aXZlUXVlcnkuaGFuZGxlQ29weUluUmVzcG9uc2Uoc2VsZi5jb25uZWN0aW9uKVxuICB9KVxuXG4gIGNvbi5vbignY29weURhdGEnLCBmdW5jdGlvbiAobXNnKSB7XG4gICAgc2VsZi5hY3RpdmVRdWVyeS5oYW5kbGVDb3B5RGF0YShtc2csIHNlbGYuY29ubmVjdGlvbilcbiAgfSlcblxuICBjb24ub24oJ25vdGlmaWNhdGlvbicsIGZ1bmN0aW9uIChtc2cpIHtcbiAgICBzZWxmLmVtaXQoJ25vdGlmaWNhdGlvbicsIG1zZylcbiAgfSlcbn1cblxuQ2xpZW50LnByb3RvdHlwZS5nZXRTdGFydHVwQ29uZiA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHBhcmFtcyA9IHRoaXMuY29ubmVjdGlvblBhcmFtZXRlcnNcblxuICB2YXIgZGF0YSA9IHtcbiAgICB1c2VyOiBwYXJhbXMudXNlcixcbiAgICBkYXRhYmFzZTogcGFyYW1zLmRhdGFiYXNlXG4gIH1cblxuICB2YXIgYXBwTmFtZSA9IHBhcmFtcy5hcHBsaWNhdGlvbl9uYW1lIHx8IHBhcmFtcy5mYWxsYmFja19hcHBsaWNhdGlvbl9uYW1lXG4gIGlmIChhcHBOYW1lKSB7XG4gICAgZGF0YS5hcHBsaWNhdGlvbl9uYW1lID0gYXBwTmFtZVxuICB9XG4gIGlmIChwYXJhbXMucmVwbGljYXRpb24pIHtcbiAgICBkYXRhLnJlcGxpY2F0aW9uID0gJycgKyBwYXJhbXMucmVwbGljYXRpb25cbiAgfVxuICBpZiAocGFyYW1zLnN0YXRlbWVudF90aW1lb3V0KSB7XG4gICAgZGF0YS5zdGF0ZW1lbnRfdGltZW91dCA9IFN0cmluZyhwYXJzZUludChwYXJhbXMuc3RhdGVtZW50X3RpbWVvdXQsIDEwKSlcbiAgfVxuXG4gIHJldHVybiBkYXRhXG59XG5cbkNsaWVudC5wcm90b3R5cGUuY2FuY2VsID0gZnVuY3Rpb24gKGNsaWVudCwgcXVlcnkpIHtcbiAgaWYgKGNsaWVudC5hY3RpdmVRdWVyeSA9PT0gcXVlcnkpIHtcbiAgICB2YXIgY29uID0gdGhpcy5jb25uZWN0aW9uXG5cbiAgICBpZiAodGhpcy5ob3N0ICYmIHRoaXMuaG9zdC5pbmRleE9mKCcvJykgPT09IDApIHtcbiAgICAgIGNvbi5jb25uZWN0KHRoaXMuaG9zdCArICcvLnMuUEdTUUwuJyArIHRoaXMucG9ydClcbiAgICB9IGVsc2Uge1xuICAgICAgY29uLmNvbm5lY3QodGhpcy5wb3J0LCB0aGlzLmhvc3QpXG4gICAgfVxuXG4gICAgLy8gb25jZSBjb25uZWN0aW9uIGlzIGVzdGFibGlzaGVkIHNlbmQgY2FuY2VsIG1lc3NhZ2VcbiAgICBjb24ub24oJ2Nvbm5lY3QnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBjb24uY2FuY2VsKGNsaWVudC5wcm9jZXNzSUQsIGNsaWVudC5zZWNyZXRLZXkpXG4gICAgfSlcbiAgfSBlbHNlIGlmIChjbGllbnQucXVlcnlRdWV1ZS5pbmRleE9mKHF1ZXJ5KSAhPT0gLTEpIHtcbiAgICBjbGllbnQucXVlcnlRdWV1ZS5zcGxpY2UoY2xpZW50LnF1ZXJ5UXVldWUuaW5kZXhPZihxdWVyeSksIDEpXG4gIH1cbn1cblxuQ2xpZW50LnByb3RvdHlwZS5zZXRUeXBlUGFyc2VyID0gZnVuY3Rpb24gKG9pZCwgZm9ybWF0LCBwYXJzZUZuKSB7XG4gIHJldHVybiB0aGlzLl90eXBlcy5zZXRUeXBlUGFyc2VyKG9pZCwgZm9ybWF0LCBwYXJzZUZuKVxufVxuXG5DbGllbnQucHJvdG90eXBlLmdldFR5cGVQYXJzZXIgPSBmdW5jdGlvbiAob2lkLCBmb3JtYXQpIHtcbiAgcmV0dXJuIHRoaXMuX3R5cGVzLmdldFR5cGVQYXJzZXIob2lkLCBmb3JtYXQpXG59XG5cbi8vIFBvcnRlZCBmcm9tIFBvc3RncmVTUUwgOS4yLjQgc291cmNlIGNvZGUgaW4gc3JjL2ludGVyZmFjZXMvbGlicHEvZmUtZXhlYy5jXG5DbGllbnQucHJvdG90eXBlLmVzY2FwZUlkZW50aWZpZXIgPSBmdW5jdGlvbiAoc3RyKSB7XG4gIHJldHVybiAnXCInICsgc3RyLnJlcGxhY2UoL1wiL2csICdcIlwiJykgKyAnXCInXG59XG5cbi8vIFBvcnRlZCBmcm9tIFBvc3RncmVTUUwgOS4yLjQgc291cmNlIGNvZGUgaW4gc3JjL2ludGVyZmFjZXMvbGlicHEvZmUtZXhlYy5jXG5DbGllbnQucHJvdG90eXBlLmVzY2FwZUxpdGVyYWwgPSBmdW5jdGlvbiAoc3RyKSB7XG4gIHZhciBoYXNCYWNrc2xhc2ggPSBmYWxzZVxuICB2YXIgZXNjYXBlZCA9ICdcXCcnXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgYyA9IHN0cltpXVxuICAgIGlmIChjID09PSAnXFwnJykge1xuICAgICAgZXNjYXBlZCArPSBjICsgY1xuICAgIH0gZWxzZSBpZiAoYyA9PT0gJ1xcXFwnKSB7XG4gICAgICBlc2NhcGVkICs9IGMgKyBjXG4gICAgICBoYXNCYWNrc2xhc2ggPSB0cnVlXG4gICAgfSBlbHNlIHtcbiAgICAgIGVzY2FwZWQgKz0gY1xuICAgIH1cbiAgfVxuXG4gIGVzY2FwZWQgKz0gJ1xcJydcblxuICBpZiAoaGFzQmFja3NsYXNoID09PSB0cnVlKSB7XG4gICAgZXNjYXBlZCA9ICcgRScgKyBlc2NhcGVkXG4gIH1cblxuICByZXR1cm4gZXNjYXBlZFxufVxuXG5DbGllbnQucHJvdG90eXBlLl9wdWxzZVF1ZXJ5UXVldWUgPSBmdW5jdGlvbiAoKSB7XG4gIGlmICh0aGlzLnJlYWR5Rm9yUXVlcnkgPT09IHRydWUpIHtcbiAgICB0aGlzLmFjdGl2ZVF1ZXJ5ID0gdGhpcy5xdWVyeVF1ZXVlLnNoaWZ0KClcbiAgICBpZiAodGhpcy5hY3RpdmVRdWVyeSkge1xuICAgICAgdGhpcy5yZWFkeUZvclF1ZXJ5ID0gZmFsc2VcbiAgICAgIHRoaXMuaGFzRXhlY3V0ZWQgPSB0cnVlXG5cbiAgICAgIGNvbnN0IHF1ZXJ5RXJyb3IgPSB0aGlzLmFjdGl2ZVF1ZXJ5LnN1Ym1pdCh0aGlzLmNvbm5lY3Rpb24pXG4gICAgICBpZiAocXVlcnlFcnJvcikge1xuICAgICAgICBwcm9jZXNzLm5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgICB0aGlzLmFjdGl2ZVF1ZXJ5LmhhbmRsZUVycm9yKHF1ZXJ5RXJyb3IsIHRoaXMuY29ubmVjdGlvbilcbiAgICAgICAgICB0aGlzLnJlYWR5Rm9yUXVlcnkgPSB0cnVlXG4gICAgICAgICAgdGhpcy5fcHVsc2VRdWVyeVF1ZXVlKClcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHRoaXMuaGFzRXhlY3V0ZWQpIHtcbiAgICAgIHRoaXMuYWN0aXZlUXVlcnkgPSBudWxsXG4gICAgICB0aGlzLmVtaXQoJ2RyYWluJylcbiAgICB9XG4gIH1cbn1cblxuQ2xpZW50LnByb3RvdHlwZS5xdWVyeSA9IGZ1bmN0aW9uIChjb25maWcsIHZhbHVlcywgY2FsbGJhY2spIHtcbiAgLy8gY2FuIHRha2UgaW4gc3RyaW5ncywgY29uZmlnIG9iamVjdCBvciBxdWVyeSBvYmplY3RcbiAgdmFyIHF1ZXJ5XG4gIHZhciByZXN1bHRcbiAgdmFyIHJlYWRUaW1lb3V0XG4gIHZhciByZWFkVGltZW91dFRpbWVyXG4gIHZhciBxdWVyeUNhbGxiYWNrXG5cbiAgaWYgKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0NsaWVudCB3YXMgcGFzc2VkIGEgbnVsbCBvciB1bmRlZmluZWQgcXVlcnknKVxuICB9IGVsc2UgaWYgKHR5cGVvZiBjb25maWcuc3VibWl0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmVhZFRpbWVvdXQgPSBjb25maWcucXVlcnlfdGltZW91dCB8fCB0aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzLnF1ZXJ5X3RpbWVvdXRcbiAgICByZXN1bHQgPSBxdWVyeSA9IGNvbmZpZ1xuICAgIGlmICh0eXBlb2YgdmFsdWVzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBxdWVyeS5jYWxsYmFjayA9IHF1ZXJ5LmNhbGxiYWNrIHx8IHZhbHVlc1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZWFkVGltZW91dCA9IHRoaXMuY29ubmVjdGlvblBhcmFtZXRlcnMucXVlcnlfdGltZW91dFxuICAgIHF1ZXJ5ID0gbmV3IFF1ZXJ5KGNvbmZpZywgdmFsdWVzLCBjYWxsYmFjaylcbiAgICBpZiAoIXF1ZXJ5LmNhbGxiYWNrKSB7XG4gICAgICByZXN1bHQgPSBuZXcgdGhpcy5fUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIHF1ZXJ5LmNhbGxiYWNrID0gKGVyciwgcmVzKSA9PiBlcnIgPyByZWplY3QoZXJyKSA6IHJlc29sdmUocmVzKVxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBpZiAocmVhZFRpbWVvdXQpIHtcbiAgICBxdWVyeUNhbGxiYWNrID0gcXVlcnkuY2FsbGJhY2tcblxuICAgIHJlYWRUaW1lb3V0VGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHZhciBlcnJvciA9IG5ldyBFcnJvcignUXVlcnkgcmVhZCB0aW1lb3V0JylcblxuICAgICAgcHJvY2Vzcy5uZXh0VGljaygoKSA9PiB7XG4gICAgICAgIHF1ZXJ5LmhhbmRsZUVycm9yKGVycm9yLCB0aGlzLmNvbm5lY3Rpb24pXG4gICAgICB9KVxuXG4gICAgICBxdWVyeUNhbGxiYWNrKGVycm9yKVxuXG4gICAgICAvLyB3ZSBhbHJlYWR5IHJldHVybmVkIGFuIGVycm9yLFxuICAgICAgLy8ganVzdCBkbyBub3RoaW5nIGlmIHF1ZXJ5IGNvbXBsZXRlc1xuICAgICAgcXVlcnkuY2FsbGJhY2sgPSAoKSA9PiB7fVxuXG4gICAgICAvLyBSZW1vdmUgZnJvbSBxdWV1ZVxuICAgICAgdmFyIGluZGV4ID0gdGhpcy5xdWVyeVF1ZXVlLmluZGV4T2YocXVlcnkpXG4gICAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICB0aGlzLnF1ZXJ5UXVldWUuc3BsaWNlKGluZGV4LCAxKVxuICAgICAgfVxuXG4gICAgICB0aGlzLl9wdWxzZVF1ZXJ5UXVldWUoKVxuICAgIH0sIHJlYWRUaW1lb3V0KVxuXG4gICAgcXVlcnkuY2FsbGJhY2sgPSAoZXJyLCByZXMpID0+IHtcbiAgICAgIGNsZWFyVGltZW91dChyZWFkVGltZW91dFRpbWVyKVxuICAgICAgcXVlcnlDYWxsYmFjayhlcnIsIHJlcylcbiAgICB9XG4gIH1cblxuICBpZiAodGhpcy5iaW5hcnkgJiYgIXF1ZXJ5LmJpbmFyeSkge1xuICAgIHF1ZXJ5LmJpbmFyeSA9IHRydWVcbiAgfVxuICBpZiAocXVlcnkuX3Jlc3VsdCkge1xuICAgIHF1ZXJ5Ll9yZXN1bHQuX2dldFR5cGVQYXJzZXIgPSB0aGlzLl90eXBlcy5nZXRUeXBlUGFyc2VyLmJpbmQodGhpcy5fdHlwZXMpXG4gIH1cblxuICBpZiAoIXRoaXMuX3F1ZXJ5YWJsZSkge1xuICAgIHByb2Nlc3MubmV4dFRpY2soKCkgPT4ge1xuICAgICAgcXVlcnkuaGFuZGxlRXJyb3IobmV3IEVycm9yKCdDbGllbnQgaGFzIGVuY291bnRlcmVkIGEgY29ubmVjdGlvbiBlcnJvciBhbmQgaXMgbm90IHF1ZXJ5YWJsZScpLCB0aGlzLmNvbm5lY3Rpb24pXG4gICAgfSlcbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cblxuICBpZiAodGhpcy5fZW5kaW5nKSB7XG4gICAgcHJvY2Vzcy5uZXh0VGljaygoKSA9PiB7XG4gICAgICBxdWVyeS5oYW5kbGVFcnJvcihuZXcgRXJyb3IoJ0NsaWVudCB3YXMgY2xvc2VkIGFuZCBpcyBub3QgcXVlcnlhYmxlJyksIHRoaXMuY29ubmVjdGlvbilcbiAgICB9KVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIHRoaXMucXVlcnlRdWV1ZS5wdXNoKHF1ZXJ5KVxuICB0aGlzLl9wdWxzZVF1ZXJ5UXVldWUoKVxuICByZXR1cm4gcmVzdWx0XG59XG5cbkNsaWVudC5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24gKGNiKSB7XG4gIHRoaXMuX2VuZGluZyA9IHRydWVcblxuICBpZiAodGhpcy5hY3RpdmVRdWVyeSkge1xuICAgIC8vIGlmIHdlIGhhdmUgYW4gYWN0aXZlIHF1ZXJ5IHdlIG5lZWQgdG8gZm9yY2UgYSBkaXNjb25uZWN0XG4gICAgLy8gb24gdGhlIHNvY2tldCAtIG90aGVyd2lzZSBhIGh1bmcgcXVlcnkgY291bGQgYmxvY2sgZW5kIGZvcmV2ZXJcbiAgICB0aGlzLmNvbm5lY3Rpb24uc3RyZWFtLmRlc3Ryb3koKVxuICB9IGVsc2Uge1xuICAgIHRoaXMuY29ubmVjdGlvbi5lbmQoKVxuICB9XG5cbiAgaWYgKGNiKSB7XG4gICAgdGhpcy5jb25uZWN0aW9uLm9uY2UoJ2VuZCcsIGNiKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBuZXcgdGhpcy5fUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgdGhpcy5jb25uZWN0aW9uLm9uY2UoJ2VuZCcsIHJlc29sdmUpXG4gICAgfSlcbiAgfVxufVxuXG4vLyBleHBvc2UgYSBRdWVyeSBjb25zdHJ1Y3RvclxuQ2xpZW50LlF1ZXJ5ID0gUXVlcnlcblxubW9kdWxlLmV4cG9ydHMgPSBDbGllbnRcbiIsInZhciBhcnJheSA9IHJlcXVpcmUoJ3Bvc3RncmVzLWFycmF5JylcbnZhciBhcnJheVBhcnNlciA9IHJlcXVpcmUoJy4vYXJyYXlQYXJzZXInKTtcbnZhciBwYXJzZURhdGUgPSByZXF1aXJlKCdwb3N0Z3Jlcy1kYXRlJyk7XG52YXIgcGFyc2VJbnRlcnZhbCA9IHJlcXVpcmUoJ3Bvc3RncmVzLWludGVydmFsJyk7XG52YXIgcGFyc2VCeXRlQSA9IHJlcXVpcmUoJ3Bvc3RncmVzLWJ5dGVhJyk7XG5cbmZ1bmN0aW9uIGFsbG93TnVsbCAoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIG51bGxBbGxvd2VkICh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkgcmV0dXJuIHZhbHVlXG4gICAgcmV0dXJuIGZuKHZhbHVlKVxuICB9XG59XG5cbmZ1bmN0aW9uIHBhcnNlQm9vbCAodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09PSBudWxsKSByZXR1cm4gdmFsdWVcbiAgcmV0dXJuIHZhbHVlID09PSAnVFJVRScgfHxcbiAgICB2YWx1ZSA9PT0gJ3QnIHx8XG4gICAgdmFsdWUgPT09ICd0cnVlJyB8fFxuICAgIHZhbHVlID09PSAneScgfHxcbiAgICB2YWx1ZSA9PT0gJ3llcycgfHxcbiAgICB2YWx1ZSA9PT0gJ29uJyB8fFxuICAgIHZhbHVlID09PSAnMSc7XG59XG5cbmZ1bmN0aW9uIHBhcnNlQm9vbEFycmF5ICh2YWx1ZSkge1xuICBpZiAoIXZhbHVlKSByZXR1cm4gbnVsbFxuICByZXR1cm4gYXJyYXkucGFyc2UodmFsdWUsIHBhcnNlQm9vbClcbn1cblxuZnVuY3Rpb24gcGFyc2VCYXNlVGVuSW50IChzdHJpbmcpIHtcbiAgcmV0dXJuIHBhcnNlSW50KHN0cmluZywgMTApXG59XG5cbmZ1bmN0aW9uIHBhcnNlSW50ZWdlckFycmF5ICh2YWx1ZSkge1xuICBpZiAoIXZhbHVlKSByZXR1cm4gbnVsbFxuICByZXR1cm4gYXJyYXkucGFyc2UodmFsdWUsIGFsbG93TnVsbChwYXJzZUJhc2VUZW5JbnQpKVxufVxuXG5mdW5jdGlvbiBwYXJzZUJpZ0ludGVnZXJBcnJheSAodmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSkgcmV0dXJuIG51bGxcbiAgcmV0dXJuIGFycmF5LnBhcnNlKHZhbHVlLCBhbGxvd051bGwoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIHBhcnNlQmlnSW50ZWdlcihlbnRyeSkudHJpbSgpXG4gIH0pKVxufVxuXG52YXIgcGFyc2VQb2ludEFycmF5ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgaWYoIXZhbHVlKSB7IHJldHVybiBudWxsOyB9XG4gIHZhciBwID0gYXJyYXlQYXJzZXIuY3JlYXRlKHZhbHVlLCBmdW5jdGlvbihlbnRyeSkge1xuICAgIGlmKGVudHJ5ICE9PSBudWxsKSB7XG4gICAgICBlbnRyeSA9IHBhcnNlUG9pbnQoZW50cnkpO1xuICAgIH1cbiAgICByZXR1cm4gZW50cnk7XG4gIH0pO1xuXG4gIHJldHVybiBwLnBhcnNlKCk7XG59O1xuXG52YXIgcGFyc2VGbG9hdEFycmF5ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgaWYoIXZhbHVlKSB7IHJldHVybiBudWxsOyB9XG4gIHZhciBwID0gYXJyYXlQYXJzZXIuY3JlYXRlKHZhbHVlLCBmdW5jdGlvbihlbnRyeSkge1xuICAgIGlmKGVudHJ5ICE9PSBudWxsKSB7XG4gICAgICBlbnRyeSA9IHBhcnNlRmxvYXQoZW50cnkpO1xuICAgIH1cbiAgICByZXR1cm4gZW50cnk7XG4gIH0pO1xuXG4gIHJldHVybiBwLnBhcnNlKCk7XG59O1xuXG52YXIgcGFyc2VTdHJpbmdBcnJheSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGlmKCF2YWx1ZSkgeyByZXR1cm4gbnVsbDsgfVxuXG4gIHZhciBwID0gYXJyYXlQYXJzZXIuY3JlYXRlKHZhbHVlKTtcbiAgcmV0dXJuIHAucGFyc2UoKTtcbn07XG5cbnZhciBwYXJzZURhdGVBcnJheSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGlmICghdmFsdWUpIHsgcmV0dXJuIG51bGw7IH1cblxuICB2YXIgcCA9IGFycmF5UGFyc2VyLmNyZWF0ZSh2YWx1ZSwgZnVuY3Rpb24oZW50cnkpIHtcbiAgICBpZiAoZW50cnkgIT09IG51bGwpIHtcbiAgICAgIGVudHJ5ID0gcGFyc2VEYXRlKGVudHJ5KTtcbiAgICB9XG4gICAgcmV0dXJuIGVudHJ5O1xuICB9KTtcblxuICByZXR1cm4gcC5wYXJzZSgpO1xufTtcblxudmFyIHBhcnNlSW50ZXJ2YWxBcnJheSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGlmICghdmFsdWUpIHsgcmV0dXJuIG51bGw7IH1cblxuICB2YXIgcCA9IGFycmF5UGFyc2VyLmNyZWF0ZSh2YWx1ZSwgZnVuY3Rpb24oZW50cnkpIHtcbiAgICBpZiAoZW50cnkgIT09IG51bGwpIHtcbiAgICAgIGVudHJ5ID0gcGFyc2VJbnRlcnZhbChlbnRyeSk7XG4gICAgfVxuICAgIHJldHVybiBlbnRyeTtcbiAgfSk7XG5cbiAgcmV0dXJuIHAucGFyc2UoKTtcbn07XG5cbnZhciBwYXJzZUJ5dGVBQXJyYXkgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBpZiAoIXZhbHVlKSB7IHJldHVybiBudWxsOyB9XG5cbiAgcmV0dXJuIGFycmF5LnBhcnNlKHZhbHVlLCBhbGxvd051bGwocGFyc2VCeXRlQSkpO1xufTtcblxudmFyIHBhcnNlSW50ZWdlciA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBwYXJzZUludCh2YWx1ZSwgMTApO1xufTtcblxudmFyIHBhcnNlQmlnSW50ZWdlciA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciB2YWxTdHIgPSBTdHJpbmcodmFsdWUpO1xuICBpZiAoL15cXGQrJC8udGVzdCh2YWxTdHIpKSB7IHJldHVybiB2YWxTdHI7IH1cbiAgcmV0dXJuIHZhbHVlO1xufTtcblxudmFyIHBhcnNlSnNvbkFycmF5ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSkgeyByZXR1cm4gbnVsbDsgfVxuXG4gIHJldHVybiBhcnJheS5wYXJzZSh2YWx1ZSwgYWxsb3dOdWxsKEpTT04ucGFyc2UpKTtcbn07XG5cbnZhciBwYXJzZVBvaW50ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgaWYgKHZhbHVlWzBdICE9PSAnKCcpIHsgcmV0dXJuIG51bGw7IH1cblxuICB2YWx1ZSA9IHZhbHVlLnN1YnN0cmluZyggMSwgdmFsdWUubGVuZ3RoIC0gMSApLnNwbGl0KCcsJyk7XG5cbiAgcmV0dXJuIHtcbiAgICB4OiBwYXJzZUZsb2F0KHZhbHVlWzBdKVxuICAsIHk6IHBhcnNlRmxvYXQodmFsdWVbMV0pXG4gIH07XG59O1xuXG52YXIgcGFyc2VDaXJjbGUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBpZiAodmFsdWVbMF0gIT09ICc8JyAmJiB2YWx1ZVsxXSAhPT0gJygnKSB7IHJldHVybiBudWxsOyB9XG5cbiAgdmFyIHBvaW50ID0gJygnO1xuICB2YXIgcmFkaXVzID0gJyc7XG4gIHZhciBwb2ludFBhcnNlZCA9IGZhbHNlO1xuICBmb3IgKHZhciBpID0gMjsgaSA8IHZhbHVlLmxlbmd0aCAtIDE7IGkrKyl7XG4gICAgaWYgKCFwb2ludFBhcnNlZCkge1xuICAgICAgcG9pbnQgKz0gdmFsdWVbaV07XG4gICAgfVxuXG4gICAgaWYgKHZhbHVlW2ldID09PSAnKScpIHtcbiAgICAgIHBvaW50UGFyc2VkID0gdHJ1ZTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH0gZWxzZSBpZiAoIXBvaW50UGFyc2VkKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAodmFsdWVbaV0gPT09ICcsJyl7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICByYWRpdXMgKz0gdmFsdWVbaV07XG4gIH1cbiAgdmFyIHJlc3VsdCA9IHBhcnNlUG9pbnQocG9pbnQpO1xuICByZXN1bHQucmFkaXVzID0gcGFyc2VGbG9hdChyYWRpdXMpO1xuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG52YXIgaW5pdCA9IGZ1bmN0aW9uKHJlZ2lzdGVyKSB7XG4gIHJlZ2lzdGVyKDIwLCBwYXJzZUJpZ0ludGVnZXIpOyAvLyBpbnQ4XG4gIHJlZ2lzdGVyKDIxLCBwYXJzZUludGVnZXIpOyAvLyBpbnQyXG4gIHJlZ2lzdGVyKDIzLCBwYXJzZUludGVnZXIpOyAvLyBpbnQ0XG4gIHJlZ2lzdGVyKDI2LCBwYXJzZUludGVnZXIpOyAvLyBvaWRcbiAgcmVnaXN0ZXIoNzAwLCBwYXJzZUZsb2F0KTsgLy8gZmxvYXQ0L3JlYWxcbiAgcmVnaXN0ZXIoNzAxLCBwYXJzZUZsb2F0KTsgLy8gZmxvYXQ4L2RvdWJsZVxuICByZWdpc3RlcigxNiwgcGFyc2VCb29sKTtcbiAgcmVnaXN0ZXIoMTA4MiwgcGFyc2VEYXRlKTsgLy8gZGF0ZVxuICByZWdpc3RlcigxMTE0LCBwYXJzZURhdGUpOyAvLyB0aW1lc3RhbXAgd2l0aG91dCB0aW1lem9uZVxuICByZWdpc3RlcigxMTg0LCBwYXJzZURhdGUpOyAvLyB0aW1lc3RhbXBcbiAgcmVnaXN0ZXIoNjAwLCBwYXJzZVBvaW50KTsgLy8gcG9pbnRcbiAgcmVnaXN0ZXIoNjUxLCBwYXJzZVN0cmluZ0FycmF5KTsgLy8gY2lkcltdXG4gIHJlZ2lzdGVyKDcxOCwgcGFyc2VDaXJjbGUpOyAvLyBjaXJjbGVcbiAgcmVnaXN0ZXIoMTAwMCwgcGFyc2VCb29sQXJyYXkpO1xuICByZWdpc3RlcigxMDAxLCBwYXJzZUJ5dGVBQXJyYXkpO1xuICByZWdpc3RlcigxMDA1LCBwYXJzZUludGVnZXJBcnJheSk7IC8vIF9pbnQyXG4gIHJlZ2lzdGVyKDEwMDcsIHBhcnNlSW50ZWdlckFycmF5KTsgLy8gX2ludDRcbiAgcmVnaXN0ZXIoMTAyOCwgcGFyc2VJbnRlZ2VyQXJyYXkpOyAvLyBvaWRbXVxuICByZWdpc3RlcigxMDE2LCBwYXJzZUJpZ0ludGVnZXJBcnJheSk7IC8vIF9pbnQ4XG4gIHJlZ2lzdGVyKDEwMTcsIHBhcnNlUG9pbnRBcnJheSk7IC8vIHBvaW50W11cbiAgcmVnaXN0ZXIoMTAyMSwgcGFyc2VGbG9hdEFycmF5KTsgLy8gX2Zsb2F0NFxuICByZWdpc3RlcigxMDIyLCBwYXJzZUZsb2F0QXJyYXkpOyAvLyBfZmxvYXQ4XG4gIHJlZ2lzdGVyKDEyMzEsIHBhcnNlRmxvYXRBcnJheSk7IC8vIF9udW1lcmljXG4gIHJlZ2lzdGVyKDEwMTQsIHBhcnNlU3RyaW5nQXJyYXkpOyAvL2NoYXJcbiAgcmVnaXN0ZXIoMTAxNSwgcGFyc2VTdHJpbmdBcnJheSk7IC8vdmFyY2hhclxuICByZWdpc3RlcigxMDA4LCBwYXJzZVN0cmluZ0FycmF5KTtcbiAgcmVnaXN0ZXIoMTAwOSwgcGFyc2VTdHJpbmdBcnJheSk7XG4gIHJlZ2lzdGVyKDEwNDAsIHBhcnNlU3RyaW5nQXJyYXkpOyAvLyBtYWNhZGRyW11cbiAgcmVnaXN0ZXIoMTA0MSwgcGFyc2VTdHJpbmdBcnJheSk7IC8vIGluZXRbXVxuICByZWdpc3RlcigxMTE1LCBwYXJzZURhdGVBcnJheSk7IC8vIHRpbWVzdGFtcCB3aXRob3V0IHRpbWUgem9uZVtdXG4gIHJlZ2lzdGVyKDExODIsIHBhcnNlRGF0ZUFycmF5KTsgLy8gX2RhdGVcbiAgcmVnaXN0ZXIoMTE4NSwgcGFyc2VEYXRlQXJyYXkpOyAvLyB0aW1lc3RhbXAgd2l0aCB0aW1lIHpvbmVbXVxuICByZWdpc3RlcigxMTg2LCBwYXJzZUludGVydmFsKTtcbiAgcmVnaXN0ZXIoMTE4NywgcGFyc2VJbnRlcnZhbEFycmF5KTtcbiAgcmVnaXN0ZXIoMTcsIHBhcnNlQnl0ZUEpO1xuICByZWdpc3RlcigxMTQsIEpTT04ucGFyc2UuYmluZChKU09OKSk7IC8vIGpzb25cbiAgcmVnaXN0ZXIoMzgwMiwgSlNPTi5wYXJzZS5iaW5kKEpTT04pKTsgLy8ganNvbmJcbiAgcmVnaXN0ZXIoMTk5LCBwYXJzZUpzb25BcnJheSk7IC8vIGpzb25bXVxuICByZWdpc3RlcigzODA3LCBwYXJzZUpzb25BcnJheSk7IC8vIGpzb25iW11cbiAgcmVnaXN0ZXIoMzkwNywgcGFyc2VTdHJpbmdBcnJheSk7IC8vIG51bXJhbmdlW11cbiAgcmVnaXN0ZXIoMjk1MSwgcGFyc2VTdHJpbmdBcnJheSk7IC8vIHV1aWRbXVxuICByZWdpc3Rlcig3OTEsIHBhcnNlU3RyaW5nQXJyYXkpOyAvLyBtb25leVtdXG4gIHJlZ2lzdGVyKDExODMsIHBhcnNlU3RyaW5nQXJyYXkpOyAvLyB0aW1lW11cbiAgcmVnaXN0ZXIoMTI3MCwgcGFyc2VTdHJpbmdBcnJheSk7IC8vIHRpbWV0eltdXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaW5pdDogaW5pdFxufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZXh0ZW5kXG5cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmZ1bmN0aW9uIGV4dGVuZCh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldXG5cbiAgICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldFxufVxuIiwidmFyIHBhcnNlSW50NjQgPSByZXF1aXJlKCdwZy1pbnQ4Jyk7XG5cbnZhciBwYXJzZUJpdHMgPSBmdW5jdGlvbihkYXRhLCBiaXRzLCBvZmZzZXQsIGludmVydCwgY2FsbGJhY2spIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG4gIGludmVydCA9IGludmVydCB8fCBmYWxzZTtcbiAgY2FsbGJhY2sgPSBjYWxsYmFjayB8fCBmdW5jdGlvbihsYXN0VmFsdWUsIG5ld1ZhbHVlLCBiaXRzKSB7IHJldHVybiAobGFzdFZhbHVlICogTWF0aC5wb3coMiwgYml0cykpICsgbmV3VmFsdWU7IH07XG4gIHZhciBvZmZzZXRCeXRlcyA9IG9mZnNldCA+PiAzO1xuXG4gIHZhciBpbnYgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIGlmIChpbnZlcnQpIHtcbiAgICAgIHJldHVybiB+dmFsdWUgJiAweGZmO1xuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZTtcbiAgfTtcblxuICAvLyByZWFkIGZpcnN0IChtYXliZSBwYXJ0aWFsKSBieXRlXG4gIHZhciBtYXNrID0gMHhmZjtcbiAgdmFyIGZpcnN0Qml0cyA9IDggLSAob2Zmc2V0ICUgOCk7XG4gIGlmIChiaXRzIDwgZmlyc3RCaXRzKSB7XG4gICAgbWFzayA9ICgweGZmIDw8ICg4IC0gYml0cykpICYgMHhmZjtcbiAgICBmaXJzdEJpdHMgPSBiaXRzO1xuICB9XG5cbiAgaWYgKG9mZnNldCkge1xuICAgIG1hc2sgPSBtYXNrID4+IChvZmZzZXQgJSA4KTtcbiAgfVxuXG4gIHZhciByZXN1bHQgPSAwO1xuICBpZiAoKG9mZnNldCAlIDgpICsgYml0cyA+PSA4KSB7XG4gICAgcmVzdWx0ID0gY2FsbGJhY2soMCwgaW52KGRhdGFbb2Zmc2V0Qnl0ZXNdKSAmIG1hc2ssIGZpcnN0Qml0cyk7XG4gIH1cblxuICAvLyByZWFkIGJ5dGVzXG4gIHZhciBieXRlcyA9IChiaXRzICsgb2Zmc2V0KSA+PiAzO1xuICBmb3IgKHZhciBpID0gb2Zmc2V0Qnl0ZXMgKyAxOyBpIDwgYnl0ZXM7IGkrKykge1xuICAgIHJlc3VsdCA9IGNhbGxiYWNrKHJlc3VsdCwgaW52KGRhdGFbaV0pLCA4KTtcbiAgfVxuXG4gIC8vIGJpdHMgdG8gcmVhZCwgdGhhdCBhcmUgbm90IGEgY29tcGxldGUgYnl0ZVxuICB2YXIgbGFzdEJpdHMgPSAoYml0cyArIG9mZnNldCkgJSA4O1xuICBpZiAobGFzdEJpdHMgPiAwKSB7XG4gICAgcmVzdWx0ID0gY2FsbGJhY2socmVzdWx0LCBpbnYoZGF0YVtieXRlc10pID4+ICg4IC0gbGFzdEJpdHMpLCBsYXN0Qml0cyk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufTtcblxudmFyIHBhcnNlRmxvYXRGcm9tQml0cyA9IGZ1bmN0aW9uKGRhdGEsIHByZWNpc2lvbkJpdHMsIGV4cG9uZW50Qml0cykge1xuICB2YXIgYmlhcyA9IE1hdGgucG93KDIsIGV4cG9uZW50Qml0cyAtIDEpIC0gMTtcbiAgdmFyIHNpZ24gPSBwYXJzZUJpdHMoZGF0YSwgMSk7XG4gIHZhciBleHBvbmVudCA9IHBhcnNlQml0cyhkYXRhLCBleHBvbmVudEJpdHMsIDEpO1xuXG4gIGlmIChleHBvbmVudCA9PT0gMCkge1xuICAgIHJldHVybiAwO1xuICB9XG5cbiAgLy8gcGFyc2UgbWFudGlzc2FcbiAgdmFyIHByZWNpc2lvbkJpdHNDb3VudGVyID0gMTtcbiAgdmFyIHBhcnNlUHJlY2lzaW9uQml0cyA9IGZ1bmN0aW9uKGxhc3RWYWx1ZSwgbmV3VmFsdWUsIGJpdHMpIHtcbiAgICBpZiAobGFzdFZhbHVlID09PSAwKSB7XG4gICAgICBsYXN0VmFsdWUgPSAxO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAxOyBpIDw9IGJpdHM7IGkrKykge1xuICAgICAgcHJlY2lzaW9uQml0c0NvdW50ZXIgLz0gMjtcbiAgICAgIGlmICgobmV3VmFsdWUgJiAoMHgxIDw8IChiaXRzIC0gaSkpKSA+IDApIHtcbiAgICAgICAgbGFzdFZhbHVlICs9IHByZWNpc2lvbkJpdHNDb3VudGVyO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBsYXN0VmFsdWU7XG4gIH07XG5cbiAgdmFyIG1hbnRpc3NhID0gcGFyc2VCaXRzKGRhdGEsIHByZWNpc2lvbkJpdHMsIGV4cG9uZW50Qml0cyArIDEsIGZhbHNlLCBwYXJzZVByZWNpc2lvbkJpdHMpO1xuXG4gIC8vIHNwZWNpYWwgY2FzZXNcbiAgaWYgKGV4cG9uZW50ID09IChNYXRoLnBvdygyLCBleHBvbmVudEJpdHMgKyAxKSAtIDEpKSB7XG4gICAgaWYgKG1hbnRpc3NhID09PSAwKSB7XG4gICAgICByZXR1cm4gKHNpZ24gPT09IDApID8gSW5maW5pdHkgOiAtSW5maW5pdHk7XG4gICAgfVxuXG4gICAgcmV0dXJuIE5hTjtcbiAgfVxuXG4gIC8vIG5vcm1hbGUgbnVtYmVyXG4gIHJldHVybiAoKHNpZ24gPT09IDApID8gMSA6IC0xKSAqIE1hdGgucG93KDIsIGV4cG9uZW50IC0gYmlhcykgKiBtYW50aXNzYTtcbn07XG5cbnZhciBwYXJzZUludDE2ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgaWYgKHBhcnNlQml0cyh2YWx1ZSwgMSkgPT0gMSkge1xuICAgIHJldHVybiAtMSAqIChwYXJzZUJpdHModmFsdWUsIDE1LCAxLCB0cnVlKSArIDEpO1xuICB9XG5cbiAgcmV0dXJuIHBhcnNlQml0cyh2YWx1ZSwgMTUsIDEpO1xufTtcblxudmFyIHBhcnNlSW50MzIgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBpZiAocGFyc2VCaXRzKHZhbHVlLCAxKSA9PSAxKSB7XG4gICAgcmV0dXJuIC0xICogKHBhcnNlQml0cyh2YWx1ZSwgMzEsIDEsIHRydWUpICsgMSk7XG4gIH1cblxuICByZXR1cm4gcGFyc2VCaXRzKHZhbHVlLCAzMSwgMSk7XG59O1xuXG52YXIgcGFyc2VGbG9hdDMyID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIHBhcnNlRmxvYXRGcm9tQml0cyh2YWx1ZSwgMjMsIDgpO1xufTtcblxudmFyIHBhcnNlRmxvYXQ2NCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBwYXJzZUZsb2F0RnJvbUJpdHModmFsdWUsIDUyLCAxMSk7XG59O1xuXG52YXIgcGFyc2VOdW1lcmljID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIHNpZ24gPSBwYXJzZUJpdHModmFsdWUsIDE2LCAzMik7XG4gIGlmIChzaWduID09IDB4YzAwMCkge1xuICAgIHJldHVybiBOYU47XG4gIH1cblxuICB2YXIgd2VpZ2h0ID0gTWF0aC5wb3coMTAwMDAsIHBhcnNlQml0cyh2YWx1ZSwgMTYsIDE2KSk7XG4gIHZhciByZXN1bHQgPSAwO1xuXG4gIHZhciBkaWdpdHMgPSBbXTtcbiAgdmFyIG5kaWdpdHMgPSBwYXJzZUJpdHModmFsdWUsIDE2KTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZGlnaXRzOyBpKyspIHtcbiAgICByZXN1bHQgKz0gcGFyc2VCaXRzKHZhbHVlLCAxNiwgNjQgKyAoMTYgKiBpKSkgKiB3ZWlnaHQ7XG4gICAgd2VpZ2h0IC89IDEwMDAwO1xuICB9XG5cbiAgdmFyIHNjYWxlID0gTWF0aC5wb3coMTAsIHBhcnNlQml0cyh2YWx1ZSwgMTYsIDQ4KSk7XG4gIHJldHVybiAoKHNpZ24gPT09IDApID8gMSA6IC0xKSAqIE1hdGgucm91bmQocmVzdWx0ICogc2NhbGUpIC8gc2NhbGU7XG59O1xuXG52YXIgcGFyc2VEYXRlID0gZnVuY3Rpb24oaXNVVEMsIHZhbHVlKSB7XG4gIHZhciBzaWduID0gcGFyc2VCaXRzKHZhbHVlLCAxKTtcbiAgdmFyIHJhd1ZhbHVlID0gcGFyc2VCaXRzKHZhbHVlLCA2MywgMSk7XG5cbiAgLy8gZGlzY2FyZCB1c2VjcyBhbmQgc2hpZnQgZnJvbSAyMDAwIHRvIDE5NzBcbiAgdmFyIHJlc3VsdCA9IG5ldyBEYXRlKCgoKHNpZ24gPT09IDApID8gMSA6IC0xKSAqIHJhd1ZhbHVlIC8gMTAwMCkgKyA5NDY2ODQ4MDAwMDApO1xuXG4gIGlmICghaXNVVEMpIHtcbiAgICByZXN1bHQuc2V0VGltZShyZXN1bHQuZ2V0VGltZSgpICsgcmVzdWx0LmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MDAwMCk7XG4gIH1cblxuICAvLyBhZGQgbWljcm9zZWNvbmRzIHRvIHRoZSBkYXRlXG4gIHJlc3VsdC51c2VjID0gcmF3VmFsdWUgJSAxMDAwO1xuICByZXN1bHQuZ2V0TWljcm9TZWNvbmRzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMudXNlYztcbiAgfTtcbiAgcmVzdWx0LnNldE1pY3JvU2Vjb25kcyA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgdGhpcy51c2VjID0gdmFsdWU7XG4gIH07XG4gIHJlc3VsdC5nZXRVVENNaWNyb1NlY29uZHMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy51c2VjO1xuICB9O1xuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG52YXIgcGFyc2VBcnJheSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciBkaW0gPSBwYXJzZUJpdHModmFsdWUsIDMyKTtcblxuICB2YXIgZmxhZ3MgPSBwYXJzZUJpdHModmFsdWUsIDMyLCAzMik7XG4gIHZhciBlbGVtZW50VHlwZSA9IHBhcnNlQml0cyh2YWx1ZSwgMzIsIDY0KTtcblxuICB2YXIgb2Zmc2V0ID0gOTY7XG4gIHZhciBkaW1zID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZGltOyBpKyspIHtcbiAgICAvLyBwYXJzZSBkaW1lbnNpb25cbiAgICBkaW1zW2ldID0gcGFyc2VCaXRzKHZhbHVlLCAzMiwgb2Zmc2V0KTtcbiAgICBvZmZzZXQgKz0gMzI7XG5cbiAgICAvLyBpZ25vcmUgbG93ZXIgYm91bmRzXG4gICAgb2Zmc2V0ICs9IDMyO1xuICB9XG5cbiAgdmFyIHBhcnNlRWxlbWVudCA9IGZ1bmN0aW9uKGVsZW1lbnRUeXBlKSB7XG4gICAgLy8gcGFyc2UgY29udGVudCBsZW5ndGhcbiAgICB2YXIgbGVuZ3RoID0gcGFyc2VCaXRzKHZhbHVlLCAzMiwgb2Zmc2V0KTtcbiAgICBvZmZzZXQgKz0gMzI7XG5cbiAgICAvLyBwYXJzZSBudWxsIHZhbHVlc1xuICAgIGlmIChsZW5ndGggPT0gMHhmZmZmZmZmZikge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHJlc3VsdDtcbiAgICBpZiAoKGVsZW1lbnRUeXBlID09IDB4MTcpIHx8IChlbGVtZW50VHlwZSA9PSAweDE0KSkge1xuICAgICAgLy8gaW50L2JpZ2ludFxuICAgICAgcmVzdWx0ID0gcGFyc2VCaXRzKHZhbHVlLCBsZW5ndGggKiA4LCBvZmZzZXQpO1xuICAgICAgb2Zmc2V0ICs9IGxlbmd0aCAqIDg7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBlbHNlIGlmIChlbGVtZW50VHlwZSA9PSAweDE5KSB7XG4gICAgICAvLyBzdHJpbmdcbiAgICAgIHJlc3VsdCA9IHZhbHVlLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcsIG9mZnNldCA+PiAzLCAob2Zmc2V0ICs9IChsZW5ndGggPDwgMykpID4+IDMpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkVSUk9SOiBFbGVtZW50VHlwZSBub3QgaW1wbGVtZW50ZWQ6IFwiICsgZWxlbWVudFR5cGUpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcGFyc2UgPSBmdW5jdGlvbihkaW1lbnNpb24sIGVsZW1lbnRUeXBlKSB7XG4gICAgdmFyIGFycmF5ID0gW107XG4gICAgdmFyIGk7XG5cbiAgICBpZiAoZGltZW5zaW9uLmxlbmd0aCA+IDEpIHtcbiAgICAgIHZhciBjb3VudCA9IGRpbWVuc2lvbi5zaGlmdCgpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICAgICAgYXJyYXlbaV0gPSBwYXJzZShkaW1lbnNpb24sIGVsZW1lbnRUeXBlKTtcbiAgICAgIH1cbiAgICAgIGRpbWVuc2lvbi51bnNoaWZ0KGNvdW50KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgZGltZW5zaW9uWzBdOyBpKyspIHtcbiAgICAgICAgYXJyYXlbaV0gPSBwYXJzZUVsZW1lbnQoZWxlbWVudFR5cGUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBhcnJheTtcbiAgfTtcblxuICByZXR1cm4gcGFyc2UoZGltcywgZWxlbWVudFR5cGUpO1xufTtcblxudmFyIHBhcnNlVGV4dCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZS50b1N0cmluZygndXRmOCcpO1xufTtcblxudmFyIHBhcnNlQm9vbCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGlmKHZhbHVlID09PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIChwYXJzZUJpdHModmFsdWUsIDgpID4gMCk7XG59O1xuXG52YXIgaW5pdCA9IGZ1bmN0aW9uKHJlZ2lzdGVyKSB7XG4gIHJlZ2lzdGVyKDIwLCBwYXJzZUludDY0KTtcbiAgcmVnaXN0ZXIoMjEsIHBhcnNlSW50MTYpO1xuICByZWdpc3RlcigyMywgcGFyc2VJbnQzMik7XG4gIHJlZ2lzdGVyKDI2LCBwYXJzZUludDMyKTtcbiAgcmVnaXN0ZXIoMTcwMCwgcGFyc2VOdW1lcmljKTtcbiAgcmVnaXN0ZXIoNzAwLCBwYXJzZUZsb2F0MzIpO1xuICByZWdpc3Rlcig3MDEsIHBhcnNlRmxvYXQ2NCk7XG4gIHJlZ2lzdGVyKDE2LCBwYXJzZUJvb2wpO1xuICByZWdpc3RlcigxMTE0LCBwYXJzZURhdGUuYmluZChudWxsLCBmYWxzZSkpO1xuICByZWdpc3RlcigxMTg0LCBwYXJzZURhdGUuYmluZChudWxsLCB0cnVlKSk7XG4gIHJlZ2lzdGVyKDEwMDAsIHBhcnNlQXJyYXkpO1xuICByZWdpc3RlcigxMDA3LCBwYXJzZUFycmF5KTtcbiAgcmVnaXN0ZXIoMTAxNiwgcGFyc2VBcnJheSk7XG4gIHJlZ2lzdGVyKDEwMDgsIHBhcnNlQXJyYXkpO1xuICByZWdpc3RlcigxMDA5LCBwYXJzZUFycmF5KTtcbiAgcmVnaXN0ZXIoMjUsIHBhcnNlVGV4dCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaW5pdDogaW5pdFxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJylcbiAgLCBmcyA9IHJlcXVpcmUoJ2ZzJylcbiAgLCBoZWxwZXIgPSByZXF1aXJlKCcuL2hlbHBlci5qcycpXG47XG5cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjb25uSW5mbywgY2IpIHtcbiAgICB2YXIgZmlsZSA9IGhlbHBlci5nZXRGaWxlTmFtZSgpO1xuICAgIFxuICAgIGZzLnN0YXQoZmlsZSwgZnVuY3Rpb24oZXJyLCBzdGF0KXtcbiAgICAgICAgaWYgKGVyciB8fCAhaGVscGVyLnVzZVBnUGFzcyhzdGF0LCBmaWxlKSkge1xuICAgICAgICAgICAgcmV0dXJuIGNiKHVuZGVmaW5lZCk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgc3QgPSBmcy5jcmVhdGVSZWFkU3RyZWFtKGZpbGUpO1xuXG4gICAgICAgIGhlbHBlci5nZXRQYXNzd29yZChjb25uSW5mbywgc3QsIGNiKTtcbiAgICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLndhcm5UbyA9IGhlbHBlci53YXJuVG87XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG4gICwgU3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJykuU3RyZWFtXG4gICwgU3BsaXQgPSByZXF1aXJlKCdzcGxpdCcpXG4gICwgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKVxuICAsIGRlZmF1bHRQb3J0ID0gNTQzMlxuICAsIGlzV2luID0gKHByb2Nlc3MucGxhdGZvcm0gPT09ICd3aW4zMicpXG4gICwgd2FyblN0cmVhbSA9IHByb2Nlc3Muc3RkZXJyXG47XG5cblxudmFyIFNfSVJXWEcgPSA1NiAgICAgLy8gICAgMDAwNzAoOClcbiAgLCBTX0lSV1hPID0gNyAgICAgIC8vICAgIDAwMDA3KDgpXG4gICwgU19JRk1UICA9IDYxNDQwICAvLyAwMDE3MDAwMCg4KVxuICAsIFNfSUZSRUcgPSAzMjc2OCAgLy8gIDAxMDAwMDAoOClcbjtcbmZ1bmN0aW9uIGlzUmVnRmlsZShtb2RlKSB7XG4gICAgcmV0dXJuICgobW9kZSAmIFNfSUZNVCkgPT0gU19JRlJFRyk7XG59XG5cbnZhciBmaWVsZE5hbWVzID0gWyAnaG9zdCcsICdwb3J0JywgJ2RhdGFiYXNlJywgJ3VzZXInLCAncGFzc3dvcmQnIF07XG52YXIgbnJPZkZpZWxkcyA9IGZpZWxkTmFtZXMubGVuZ3RoO1xudmFyIHBhc3NLZXkgPSBmaWVsZE5hbWVzWyBuck9mRmllbGRzIC0xIF07XG5cblxuZnVuY3Rpb24gd2FybigpIHtcbiAgICB2YXIgaXNXcml0YWJsZSA9IChcbiAgICAgICAgd2FyblN0cmVhbSBpbnN0YW5jZW9mIFN0cmVhbSAmJlxuICAgICAgICAgIHRydWUgPT09IHdhcm5TdHJlYW0ud3JpdGFibGVcbiAgICApO1xuXG4gICAgaWYgKGlzV3JpdGFibGUpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpLmNvbmNhdChcIlxcblwiKTtcbiAgICAgICAgd2FyblN0cmVhbS53cml0ZSggdXRpbC5mb3JtYXQuYXBwbHkodXRpbCwgYXJncykgKTtcbiAgICB9XG59XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZS5leHBvcnRzLCAnaXNXaW4nLCB7XG4gICAgZ2V0IDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBpc1dpbjtcbiAgICB9ICxcbiAgICBzZXQgOiBmdW5jdGlvbih2YWwpIHtcbiAgICAgICAgaXNXaW4gPSB2YWw7XG4gICAgfVxufSk7XG5cblxubW9kdWxlLmV4cG9ydHMud2FyblRvID0gZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgdmFyIG9sZCA9IHdhcm5TdHJlYW07XG4gICAgd2FyblN0cmVhbSA9IHN0cmVhbTtcbiAgICByZXR1cm4gb2xkO1xufTtcblxubW9kdWxlLmV4cG9ydHMuZ2V0RmlsZU5hbWUgPSBmdW5jdGlvbihlbnYpe1xuICAgIGVudiA9IGVudiB8fCBwcm9jZXNzLmVudjtcbiAgICB2YXIgZmlsZSA9IGVudi5QR1BBU1NGSUxFIHx8IChcbiAgICAgICAgaXNXaW4gP1xuICAgICAgICAgIHBhdGguam9pbiggZW52LkFQUERBVEEgLCAncG9zdGdyZXNxbCcsICdwZ3Bhc3MuY29uZicgKSA6XG4gICAgICAgICAgcGF0aC5qb2luKCBlbnYuSE9NRSwgJy5wZ3Bhc3MnIClcbiAgICApO1xuICAgIHJldHVybiBmaWxlO1xufTtcblxubW9kdWxlLmV4cG9ydHMudXNlUGdQYXNzID0gZnVuY3Rpb24oc3RhdHMsIGZuYW1lKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChwcm9jZXNzLmVudiwgJ1BHUEFTU1dPUkQnKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKGlzV2luKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGZuYW1lID0gZm5hbWUgfHwgJzx1bmtuPic7XG5cbiAgICBpZiAoISBpc1JlZ0ZpbGUoc3RhdHMubW9kZSkpIHtcbiAgICAgICAgd2FybignV0FSTklORzogcGFzc3dvcmQgZmlsZSBcIiVzXCIgaXMgbm90IGEgcGxhaW4gZmlsZScsIGZuYW1lKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmIChzdGF0cy5tb2RlICYgKFNfSVJXWEcgfCBTX0lSV1hPKSkge1xuICAgICAgICAvKiBJZiBwYXNzd29yZCBmaWxlIGlzIGluc2VjdXJlLCBhbGVydCB0aGUgdXNlciBhbmQgaWdub3JlIGl0LiAqL1xuICAgICAgICB3YXJuKCdXQVJOSU5HOiBwYXNzd29yZCBmaWxlIFwiJXNcIiBoYXMgZ3JvdXAgb3Igd29ybGQgYWNjZXNzOyBwZXJtaXNzaW9ucyBzaG91bGQgYmUgdT1ydyAoMDYwMCkgb3IgbGVzcycsIGZuYW1lKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xufTtcblxuXG52YXIgbWF0Y2hlciA9IG1vZHVsZS5leHBvcnRzLm1hdGNoID0gZnVuY3Rpb24oY29ubkluZm8sIGVudHJ5KSB7XG4gICAgcmV0dXJuIGZpZWxkTmFtZXMuc2xpY2UoMCwgLTEpLnJlZHVjZShmdW5jdGlvbihwcmV2LCBmaWVsZCwgaWR4KXtcbiAgICAgICAgaWYgKGlkeCA9PSAxKSB7XG4gICAgICAgICAgICAvLyB0aGUgcG9ydFxuICAgICAgICAgICAgaWYgKCBOdW1iZXIoIGNvbm5JbmZvW2ZpZWxkXSB8fCBkZWZhdWx0UG9ydCApID09PSBOdW1iZXIoIGVudHJ5W2ZpZWxkXSApICkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcmV2ICYmIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHByZXYgJiYgKFxuICAgICAgICAgICAgZW50cnlbZmllbGRdID09PSAnKicgfHxcbiAgICAgICAgICAgICAgZW50cnlbZmllbGRdID09PSBjb25uSW5mb1tmaWVsZF1cbiAgICAgICAgKTtcbiAgICB9LCB0cnVlKTtcbn07XG5cblxubW9kdWxlLmV4cG9ydHMuZ2V0UGFzc3dvcmQgPSBmdW5jdGlvbihjb25uSW5mbywgc3RyZWFtLCBjYikge1xuICAgIHZhciBwYXNzO1xuICAgIHZhciBsaW5lU3RyZWFtID0gc3RyZWFtLnBpcGUobmV3IFNwbGl0KCkpO1xuXG4gICAgZnVuY3Rpb24gb25MaW5lKGxpbmUpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gcGFyc2VMaW5lKGxpbmUpO1xuICAgICAgICBpZiAoZW50cnkgJiYgaXNWYWxpZEVudHJ5KGVudHJ5KSAmJiBtYXRjaGVyKGNvbm5JbmZvLCBlbnRyeSkpIHtcbiAgICAgICAgICAgIHBhc3MgPSBlbnRyeVtwYXNzS2V5XTtcbiAgICAgICAgICAgIGxpbmVTdHJlYW0uZW5kKCk7IC8vIC0+IGNhbGxzIG9uRW5kKCksIGJ1dCBwYXNzIGlzIHNldCBub3dcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHZhciBvbkVuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0uZGVzdHJveSgpO1xuICAgICAgICBjYihwYXNzKTtcbiAgICB9O1xuXG4gICAgdmFyIG9uRXJyID0gZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIHN0cmVhbS5kZXN0cm95KCk7XG4gICAgICAgIHdhcm4oJ1dBUk5JTkc6IGVycm9yIG9uIHJlYWRpbmcgZmlsZTogJXMnLCBlcnIpO1xuICAgICAgICBjYih1bmRlZmluZWQpO1xuICAgIH07XG5cbiAgICBzdHJlYW0ub24oJ2Vycm9yJywgb25FcnIpO1xuICAgIGxpbmVTdHJlYW1cbiAgICAgICAgLm9uKCdkYXRhJywgb25MaW5lKVxuICAgICAgICAub24oJ2VuZCcsIG9uRW5kKVxuICAgICAgICAub24oJ2Vycm9yJywgb25FcnIpXG4gICAgO1xuXG59O1xuXG5cbnZhciBwYXJzZUxpbmUgPSBtb2R1bGUuZXhwb3J0cy5wYXJzZUxpbmUgPSBmdW5jdGlvbihsaW5lKSB7XG4gICAgaWYgKGxpbmUubGVuZ3RoIDwgMTEgfHwgbGluZS5tYXRjaCgvXlxccysjLykpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIGN1ckNoYXIgPSAnJztcbiAgICB2YXIgcHJldkNoYXIgPSAnJztcbiAgICB2YXIgZmllbGRJZHggPSAwO1xuICAgIHZhciBzdGFydElkeCA9IDA7XG4gICAgdmFyIGVuZElkeCA9IDA7XG4gICAgdmFyIG9iaiA9IHt9O1xuICAgIHZhciBpc0xhc3RGaWVsZCA9IGZhbHNlO1xuICAgIHZhciBhZGRUb09iaiA9IGZ1bmN0aW9uKGlkeCwgaTAsIGkxKSB7XG4gICAgICAgIHZhciBmaWVsZCA9IGxpbmUuc3Vic3RyaW5nKGkwLCBpMSk7XG5cbiAgICAgICAgaWYgKCEgT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwocHJvY2Vzcy5lbnYsICdQR1BBU1NfTk9fREVFU0NBUEUnKSkge1xuICAgICAgICAgICAgZmllbGQgPSBmaWVsZC5yZXBsYWNlKC9cXFxcKFs6XFxcXF0pL2csICckMScpO1xuICAgICAgICB9XG5cbiAgICAgICAgb2JqWyBmaWVsZE5hbWVzW2lkeF0gXSA9IGZpZWxkO1xuICAgIH07XG5cbiAgICBmb3IgKHZhciBpID0gMCA7IGkgPCBsaW5lLmxlbmd0aC0xIDsgaSArPSAxKSB7XG4gICAgICAgIGN1ckNoYXIgPSBsaW5lLmNoYXJBdChpKzEpO1xuICAgICAgICBwcmV2Q2hhciA9IGxpbmUuY2hhckF0KGkpO1xuXG4gICAgICAgIGlzTGFzdEZpZWxkID0gKGZpZWxkSWR4ID09IG5yT2ZGaWVsZHMtMSk7XG5cbiAgICAgICAgaWYgKGlzTGFzdEZpZWxkKSB7XG4gICAgICAgICAgICBhZGRUb09iaihmaWVsZElkeCwgc3RhcnRJZHgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaSA+PSAwICYmIGN1ckNoYXIgPT0gJzonICYmIHByZXZDaGFyICE9PSAnXFxcXCcpIHtcbiAgICAgICAgICAgIGFkZFRvT2JqKGZpZWxkSWR4LCBzdGFydElkeCwgaSsxKTtcblxuICAgICAgICAgICAgc3RhcnRJZHggPSBpKzI7XG4gICAgICAgICAgICBmaWVsZElkeCArPSAxO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgb2JqID0gKCBPYmplY3Qua2V5cyhvYmopLmxlbmd0aCA9PT0gbnJPZkZpZWxkcyApID8gb2JqIDogbnVsbDtcblxuICAgIHJldHVybiBvYmo7XG59O1xuXG5cbnZhciBpc1ZhbGlkRW50cnkgPSBtb2R1bGUuZXhwb3J0cy5pc1ZhbGlkRW50cnkgPSBmdW5jdGlvbihlbnRyeSl7XG4gICAgdmFyIHJ1bGVzID0ge1xuICAgICAgICAvLyBob3N0XG4gICAgICAgIDAgOiBmdW5jdGlvbih4KXtcbiAgICAgICAgICAgIHJldHVybiB4Lmxlbmd0aCA+IDA7XG4gICAgICAgIH0gLFxuICAgICAgICAvLyBwb3J0XG4gICAgICAgIDEgOiBmdW5jdGlvbih4KXtcbiAgICAgICAgICAgIGlmICh4ID09PSAnKicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHggPSBOdW1iZXIoeCk7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIGlzRmluaXRlKHgpICYmXG4gICAgICAgICAgICAgICAgICB4ID4gMCAmJlxuICAgICAgICAgICAgICAgICAgeCA8IDkwMDcxOTkyNTQ3NDA5OTIgJiZcbiAgICAgICAgICAgICAgICAgIE1hdGguZmxvb3IoeCkgPT09IHhcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0gLFxuICAgICAgICAvLyBkYXRhYmFzZVxuICAgICAgICAyIDogZnVuY3Rpb24oeCl7XG4gICAgICAgICAgICByZXR1cm4geC5sZW5ndGggPiAwO1xuICAgICAgICB9ICxcbiAgICAgICAgLy8gdXNlcm5hbWVcbiAgICAgICAgMyA6IGZ1bmN0aW9uKHgpe1xuICAgICAgICAgICAgcmV0dXJuIHgubGVuZ3RoID4gMDtcbiAgICAgICAgfSAsXG4gICAgICAgIC8vIHBhc3N3b3JkXG4gICAgICAgIDQgOiBmdW5jdGlvbih4KXtcbiAgICAgICAgICAgIHJldHVybiB4Lmxlbmd0aCA+IDA7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgZm9yICh2YXIgaWR4ID0gMCA7IGlkeCA8IGZpZWxkTmFtZXMubGVuZ3RoIDsgaWR4ICs9IDEpIHtcbiAgICAgICAgdmFyIHJ1bGUgPSBydWxlc1tpZHhdO1xuICAgICAgICB2YXIgdmFsdWUgPSBlbnRyeVsgZmllbGROYW1lc1tpZHhdIF0gfHwgJyc7XG5cbiAgICAgICAgdmFyIHJlcyA9IHJ1bGUodmFsdWUpO1xuICAgICAgICBpZiAoIXJlcykge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG59O1xuXG4iLCIvL2ZpbHRlciB3aWxsIHJlZW1pdCB0aGUgZGF0YSBpZiBjYihlcnIscGFzcykgcGFzcyBpcyB0cnV0aHlcblxuLy8gcmVkdWNlIGlzIG1vcmUgdHJpY2t5XG4vLyBtYXliZSB3ZSB3YW50IHRvIGdyb3VwIHRoZSByZWR1Y3Rpb25zIG9yIGVtaXQgcHJvZ3Jlc3MgdXBkYXRlcyBvY2Nhc2lvbmFsbHlcbi8vIHRoZSBtb3N0IGJhc2ljIHJlZHVjZSBqdXN0IGVtaXRzIG9uZSAnZGF0YScgZXZlbnQgYWZ0ZXIgaXQgaGFzIHJlY2lldmVkICdlbmQnXG5cblxudmFyIHRocm91Z2ggPSByZXF1aXJlKCd0aHJvdWdoJylcbnZhciBEZWNvZGVyID0gcmVxdWlyZSgnc3RyaW5nX2RlY29kZXInKS5TdHJpbmdEZWNvZGVyXG5cbm1vZHVsZS5leHBvcnRzID0gc3BsaXRcblxuLy9UT0RPIHBhc3MgaW4gYSBmdW5jdGlvbiB0byBtYXAgYWNyb3NzIHRoZSBsaW5lcy5cblxuZnVuY3Rpb24gc3BsaXQgKG1hdGNoZXIsIG1hcHBlciwgb3B0aW9ucykge1xuICB2YXIgZGVjb2RlciA9IG5ldyBEZWNvZGVyKClcbiAgdmFyIHNvRmFyID0gJydcbiAgdmFyIG1heExlbmd0aCA9IG9wdGlvbnMgJiYgb3B0aW9ucy5tYXhMZW5ndGg7XG4gIHZhciB0cmFpbGluZyA9IG9wdGlvbnMgJiYgb3B0aW9ucy50cmFpbGluZyA9PT0gZmFsc2UgPyBmYWxzZSA6IHRydWVcbiAgaWYoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIG1hdGNoZXIpXG4gICAgbWFwcGVyID0gbWF0Y2hlciwgbWF0Y2hlciA9IG51bGxcbiAgaWYgKCFtYXRjaGVyKVxuICAgIG1hdGNoZXIgPSAvXFxyP1xcbi9cblxuICBmdW5jdGlvbiBlbWl0KHN0cmVhbSwgcGllY2UpIHtcbiAgICBpZihtYXBwZXIpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHBpZWNlID0gbWFwcGVyKHBpZWNlKVxuICAgICAgfVxuICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICByZXR1cm4gc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXJyKVxuICAgICAgfVxuICAgICAgaWYoJ3VuZGVmaW5lZCcgIT09IHR5cGVvZiBwaWVjZSlcbiAgICAgICAgc3RyZWFtLnF1ZXVlKHBpZWNlKVxuICAgIH1cbiAgICBlbHNlXG4gICAgICBzdHJlYW0ucXVldWUocGllY2UpXG4gIH1cblxuICBmdW5jdGlvbiBuZXh0IChzdHJlYW0sIGJ1ZmZlcikge1xuICAgIHZhciBwaWVjZXMgPSAoKHNvRmFyICE9IG51bGwgPyBzb0ZhciA6ICcnKSArIGJ1ZmZlcikuc3BsaXQobWF0Y2hlcilcbiAgICBzb0ZhciA9IHBpZWNlcy5wb3AoKVxuXG4gICAgaWYgKG1heExlbmd0aCAmJiBzb0Zhci5sZW5ndGggPiBtYXhMZW5ndGgpXG4gICAgICByZXR1cm4gc3RyZWFtLmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKCdtYXhpbXVtIGJ1ZmZlciByZWFjaGVkJykpXG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBpZWNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHBpZWNlID0gcGllY2VzW2ldXG4gICAgICBlbWl0KHN0cmVhbSwgcGllY2UpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRocm91Z2goZnVuY3Rpb24gKGIpIHtcbiAgICBuZXh0KHRoaXMsIGRlY29kZXIud3JpdGUoYikpXG4gIH0sXG4gIGZ1bmN0aW9uICgpIHtcbiAgICBpZihkZWNvZGVyLmVuZClcbiAgICAgIG5leHQodGhpcywgZGVjb2Rlci5lbmQoKSlcbiAgICBpZih0cmFpbGluZyAmJiBzb0ZhciAhPSBudWxsKVxuICAgICAgZW1pdCh0aGlzLCBzb0ZhcilcbiAgICB0aGlzLnF1ZXVlKG51bGwpXG4gIH0pXG59XG4iLCJ2YXIgU3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJylcblxuLy8gdGhyb3VnaFxuLy9cbi8vIGEgc3RyZWFtIHRoYXQgZG9lcyBub3RoaW5nIGJ1dCByZS1lbWl0IHRoZSBpbnB1dC5cbi8vIHVzZWZ1bCBmb3IgYWdncmVnYXRpbmcgYSBzZXJpZXMgb2YgY2hhbmdpbmcgYnV0IG5vdCBlbmRpbmcgc3RyZWFtcyBpbnRvIG9uZSBzdHJlYW0pXG5cbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHRocm91Z2hcbnRocm91Z2gudGhyb3VnaCA9IHRocm91Z2hcblxuLy9jcmVhdGUgYSByZWFkYWJsZSB3cml0YWJsZSBzdHJlYW0uXG5cbmZ1bmN0aW9uIHRocm91Z2ggKHdyaXRlLCBlbmQsIG9wdHMpIHtcbiAgd3JpdGUgPSB3cml0ZSB8fCBmdW5jdGlvbiAoZGF0YSkgeyB0aGlzLnF1ZXVlKGRhdGEpIH1cbiAgZW5kID0gZW5kIHx8IGZ1bmN0aW9uICgpIHsgdGhpcy5xdWV1ZShudWxsKSB9XG5cbiAgdmFyIGVuZGVkID0gZmFsc2UsIGRlc3Ryb3llZCA9IGZhbHNlLCBidWZmZXIgPSBbXSwgX2VuZGVkID0gZmFsc2VcbiAgdmFyIHN0cmVhbSA9IG5ldyBTdHJlYW0oKVxuICBzdHJlYW0ucmVhZGFibGUgPSBzdHJlYW0ud3JpdGFibGUgPSB0cnVlXG4gIHN0cmVhbS5wYXVzZWQgPSBmYWxzZVxuXG4vLyAgc3RyZWFtLmF1dG9QYXVzZSAgID0gIShvcHRzICYmIG9wdHMuYXV0b1BhdXNlICAgPT09IGZhbHNlKVxuICBzdHJlYW0uYXV0b0Rlc3Ryb3kgPSAhKG9wdHMgJiYgb3B0cy5hdXRvRGVzdHJveSA9PT0gZmFsc2UpXG5cbiAgc3RyZWFtLndyaXRlID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICB3cml0ZS5jYWxsKHRoaXMsIGRhdGEpXG4gICAgcmV0dXJuICFzdHJlYW0ucGF1c2VkXG4gIH1cblxuICBmdW5jdGlvbiBkcmFpbigpIHtcbiAgICB3aGlsZShidWZmZXIubGVuZ3RoICYmICFzdHJlYW0ucGF1c2VkKSB7XG4gICAgICB2YXIgZGF0YSA9IGJ1ZmZlci5zaGlmdCgpXG4gICAgICBpZihudWxsID09PSBkYXRhKVxuICAgICAgICByZXR1cm4gc3RyZWFtLmVtaXQoJ2VuZCcpXG4gICAgICBlbHNlXG4gICAgICAgIHN0cmVhbS5lbWl0KCdkYXRhJywgZGF0YSlcbiAgICB9XG4gIH1cblxuICBzdHJlYW0ucXVldWUgPSBzdHJlYW0ucHVzaCA9IGZ1bmN0aW9uIChkYXRhKSB7XG4vLyAgICBjb25zb2xlLmVycm9yKGVuZGVkKVxuICAgIGlmKF9lbmRlZCkgcmV0dXJuIHN0cmVhbVxuICAgIGlmKGRhdGEgPT09IG51bGwpIF9lbmRlZCA9IHRydWVcbiAgICBidWZmZXIucHVzaChkYXRhKVxuICAgIGRyYWluKClcbiAgICByZXR1cm4gc3RyZWFtXG4gIH1cblxuICAvL3RoaXMgd2lsbCBiZSByZWdpc3RlcmVkIGFzIHRoZSBmaXJzdCAnZW5kJyBsaXN0ZW5lclxuICAvL211c3QgY2FsbCBkZXN0cm95IG5leHQgdGljaywgdG8gbWFrZSBzdXJlIHdlJ3JlIGFmdGVyIGFueVxuICAvL3N0cmVhbSBwaXBlZCBmcm9tIGhlcmUuXG4gIC8vdGhpcyBpcyBvbmx5IGEgcHJvYmxlbSBpZiBlbmQgaXMgbm90IGVtaXR0ZWQgc3luY2hyb25vdXNseS5cbiAgLy9hIG5pY2VyIHdheSB0byBkbyB0aGlzIGlzIHRvIG1ha2Ugc3VyZSB0aGlzIGlzIHRoZSBsYXN0IGxpc3RlbmVyIGZvciAnZW5kJ1xuXG4gIHN0cmVhbS5vbignZW5kJywgZnVuY3Rpb24gKCkge1xuICAgIHN0cmVhbS5yZWFkYWJsZSA9IGZhbHNlXG4gICAgaWYoIXN0cmVhbS53cml0YWJsZSAmJiBzdHJlYW0uYXV0b0Rlc3Ryb3kpXG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc3RyZWFtLmRlc3Ryb3koKVxuICAgICAgfSlcbiAgfSlcblxuICBmdW5jdGlvbiBfZW5kICgpIHtcbiAgICBzdHJlYW0ud3JpdGFibGUgPSBmYWxzZVxuICAgIGVuZC5jYWxsKHN0cmVhbSlcbiAgICBpZighc3RyZWFtLnJlYWRhYmxlICYmIHN0cmVhbS5hdXRvRGVzdHJveSlcbiAgICAgIHN0cmVhbS5kZXN0cm95KClcbiAgfVxuXG4gIHN0cmVhbS5lbmQgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgIGlmKGVuZGVkKSByZXR1cm5cbiAgICBlbmRlZCA9IHRydWVcbiAgICBpZihhcmd1bWVudHMubGVuZ3RoKSBzdHJlYW0ud3JpdGUoZGF0YSlcbiAgICBfZW5kKCkgLy8gd2lsbCBlbWl0IG9yIHF1ZXVlXG4gICAgcmV0dXJuIHN0cmVhbVxuICB9XG5cbiAgc3RyZWFtLmRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYoZGVzdHJveWVkKSByZXR1cm5cbiAgICBkZXN0cm95ZWQgPSB0cnVlXG4gICAgZW5kZWQgPSB0cnVlXG4gICAgYnVmZmVyLmxlbmd0aCA9IDBcbiAgICBzdHJlYW0ud3JpdGFibGUgPSBzdHJlYW0ucmVhZGFibGUgPSBmYWxzZVxuICAgIHN0cmVhbS5lbWl0KCdjbG9zZScpXG4gICAgcmV0dXJuIHN0cmVhbVxuICB9XG5cbiAgc3RyZWFtLnBhdXNlID0gZnVuY3Rpb24gKCkge1xuICAgIGlmKHN0cmVhbS5wYXVzZWQpIHJldHVyblxuICAgIHN0cmVhbS5wYXVzZWQgPSB0cnVlXG4gICAgcmV0dXJuIHN0cmVhbVxuICB9XG5cbiAgc3RyZWFtLnJlc3VtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZihzdHJlYW0ucGF1c2VkKSB7XG4gICAgICBzdHJlYW0ucGF1c2VkID0gZmFsc2VcbiAgICAgIHN0cmVhbS5lbWl0KCdyZXN1bWUnKVxuICAgIH1cbiAgICBkcmFpbigpXG4gICAgLy9tYXkgaGF2ZSBiZWNvbWUgcGF1c2VkIGFnYWluLFxuICAgIC8vYXMgZHJhaW4gZW1pdHMgJ2RhdGEnLlxuICAgIGlmKCFzdHJlYW0ucGF1c2VkKVxuICAgICAgc3RyZWFtLmVtaXQoJ2RyYWluJylcbiAgICByZXR1cm4gc3RyZWFtXG4gIH1cbiAgcmV0dXJuIHN0cmVhbVxufVxuXG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJkbnNcIik7IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXJsID0gcmVxdWlyZSgndXJsJyk7XG5cbi8vUGFyc2UgbWV0aG9kIGNvcGllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9icmlhbmMvbm9kZS1wb3N0Z3Jlc1xuLy9Db3B5cmlnaHQgKGMpIDIwMTAtMjAxNCBCcmlhbiBDYXJsc29uIChicmlhbi5tLmNhcmxzb25AZ21haWwuY29tKVxuLy9NSVQgTGljZW5zZVxuXG4vL3BhcnNlcyBhIGNvbm5lY3Rpb24gc3RyaW5nXG5mdW5jdGlvbiBwYXJzZShzdHIpIHtcbiAgdmFyIGNvbmZpZztcbiAgLy91bml4IHNvY2tldFxuICBpZihzdHIuY2hhckF0KDApID09PSAnLycpIHtcbiAgICBjb25maWcgPSBzdHIuc3BsaXQoJyAnKTtcbiAgICByZXR1cm4geyBob3N0OiBjb25maWdbMF0sIGRhdGFiYXNlOiBjb25maWdbMV0gfTtcbiAgfVxuICAvLyB1cmwgcGFyc2UgZXhwZWN0cyBzcGFjZXMgZW5jb2RlZCBhcyAlMjBcbiAgaWYoLyB8JVteYS1mMC05XXwlW2EtZjAtOV1bXmEtZjAtOV0vaS50ZXN0KHN0cikpIHtcbiAgICBzdHIgPSBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9cXCUyNShcXGRcXGQpL2csIFwiJSQxXCIpO1xuICB9XG4gIHZhciByZXN1bHQgPSB1cmwucGFyc2Uoc3RyLCB0cnVlKTtcbiAgY29uZmlnID0ge307XG5cbiAgaWYgKHJlc3VsdC5xdWVyeS5hcHBsaWNhdGlvbl9uYW1lKSB7XG4gICAgY29uZmlnLmFwcGxpY2F0aW9uX25hbWUgPSByZXN1bHQucXVlcnkuYXBwbGljYXRpb25fbmFtZTtcbiAgfVxuICBpZiAocmVzdWx0LnF1ZXJ5LmZhbGxiYWNrX2FwcGxpY2F0aW9uX25hbWUpIHtcbiAgICBjb25maWcuZmFsbGJhY2tfYXBwbGljYXRpb25fbmFtZSA9IHJlc3VsdC5xdWVyeS5mYWxsYmFja19hcHBsaWNhdGlvbl9uYW1lO1xuICB9XG5cbiAgY29uZmlnLnBvcnQgPSByZXN1bHQucG9ydDtcbiAgaWYocmVzdWx0LnByb3RvY29sID09ICdzb2NrZXQ6Jykge1xuICAgIGNvbmZpZy5ob3N0ID0gZGVjb2RlVVJJKHJlc3VsdC5wYXRobmFtZSk7XG4gICAgY29uZmlnLmRhdGFiYXNlID0gcmVzdWx0LnF1ZXJ5LmRiO1xuICAgIGNvbmZpZy5jbGllbnRfZW5jb2RpbmcgPSByZXN1bHQucXVlcnkuZW5jb2Rpbmc7XG4gICAgcmV0dXJuIGNvbmZpZztcbiAgfVxuICBjb25maWcuaG9zdCA9IHJlc3VsdC5ob3N0bmFtZTtcblxuICAvLyByZXN1bHQucGF0aG5hbWUgaXMgbm90IGFsd2F5cyBndWFyYW50ZWVkIHRvIGhhdmUgYSAnLycgcHJlZml4IChlLmcuIHJlbGF0aXZlIHVybHMpXG4gIC8vIG9ubHkgc3RyaXAgdGhlIHNsYXNoIGlmIGl0IGlzIHByZXNlbnQuXG4gIHZhciBwYXRobmFtZSA9IHJlc3VsdC5wYXRobmFtZTtcbiAgaWYgKHBhdGhuYW1lICYmIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nKSB7XG4gICAgcGF0aG5hbWUgPSByZXN1bHQucGF0aG5hbWUuc2xpY2UoMSkgfHwgbnVsbDtcbiAgfVxuICBjb25maWcuZGF0YWJhc2UgPSBwYXRobmFtZSAmJiBkZWNvZGVVUkkocGF0aG5hbWUpO1xuXG4gIHZhciBhdXRoID0gKHJlc3VsdC5hdXRoIHx8ICc6Jykuc3BsaXQoJzonKTtcbiAgY29uZmlnLnVzZXIgPSBhdXRoWzBdO1xuICBjb25maWcucGFzc3dvcmQgPSBhdXRoLnNwbGljZSgxKS5qb2luKCc6Jyk7XG5cbiAgdmFyIHNzbCA9IHJlc3VsdC5xdWVyeS5zc2w7XG4gIGlmIChzc2wgPT09ICd0cnVlJyB8fCBzc2wgPT09ICcxJykge1xuICAgIGNvbmZpZy5zc2wgPSB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIGNvbmZpZztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHBhcnNlOiBwYXJzZVxufTtcbiIsIid1c2Ugc3RyaWN0J1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTAtMjAxNyBCcmlhbiBDYXJsc29uIChicmlhbi5tLmNhcmxzb25AZ21haWwuY29tKVxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIFJFQURNRS5tZCBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbnZhciB1dGlsID0gcmVxdWlyZSgndXRpbCcpXG5cbnZhciBSZXN1bHQgPSByZXF1aXJlKCcuL3Jlc3VsdCcpXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJylcblxudmFyIFF1ZXJ5ID0gZnVuY3Rpb24gKGNvbmZpZywgdmFsdWVzLCBjYWxsYmFjaykge1xuICAvLyB1c2Ugb2YgXCJuZXdcIiBvcHRpb25hbFxuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUXVlcnkpKSB7IHJldHVybiBuZXcgUXVlcnkoY29uZmlnLCB2YWx1ZXMsIGNhbGxiYWNrKSB9XG5cbiAgY29uZmlnID0gdXRpbHMubm9ybWFsaXplUXVlcnlDb25maWcoY29uZmlnLCB2YWx1ZXMsIGNhbGxiYWNrKVxuXG4gIHRoaXMudGV4dCA9IGNvbmZpZy50ZXh0XG4gIHRoaXMudmFsdWVzID0gY29uZmlnLnZhbHVlc1xuICB0aGlzLnJvd3MgPSBjb25maWcucm93c1xuICB0aGlzLnR5cGVzID0gY29uZmlnLnR5cGVzXG4gIHRoaXMubmFtZSA9IGNvbmZpZy5uYW1lXG4gIHRoaXMuYmluYXJ5ID0gY29uZmlnLmJpbmFyeVxuICAvLyB1c2UgdW5pcXVlIHBvcnRhbCBuYW1lIGVhY2ggdGltZVxuICB0aGlzLnBvcnRhbCA9IGNvbmZpZy5wb3J0YWwgfHwgJydcbiAgdGhpcy5jYWxsYmFjayA9IGNvbmZpZy5jYWxsYmFja1xuICB0aGlzLl9yb3dNb2RlID0gY29uZmlnLnJvd01vZGVcbiAgaWYgKHByb2Nlc3MuZG9tYWluICYmIGNvbmZpZy5jYWxsYmFjaykge1xuICAgIHRoaXMuY2FsbGJhY2sgPSBwcm9jZXNzLmRvbWFpbi5iaW5kKGNvbmZpZy5jYWxsYmFjaylcbiAgfVxuICB0aGlzLl9yZXN1bHQgPSBuZXcgUmVzdWx0KHRoaXMuX3Jvd01vZGUsIHRoaXMudHlwZXMpXG5cbiAgLy8gcG90ZW50aWFsIGZvciBtdWx0aXBsZSByZXN1bHRzXG4gIHRoaXMuX3Jlc3VsdHMgPSB0aGlzLl9yZXN1bHRcbiAgdGhpcy5pc1ByZXBhcmVkU3RhdGVtZW50ID0gZmFsc2VcbiAgdGhpcy5fY2FuY2VsZWREdWVUb0Vycm9yID0gZmFsc2VcbiAgdGhpcy5fcHJvbWlzZSA9IG51bGxcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcylcbn1cblxudXRpbC5pbmhlcml0cyhRdWVyeSwgRXZlbnRFbWl0dGVyKVxuXG5RdWVyeS5wcm90b3R5cGUucmVxdWlyZXNQcmVwYXJhdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gbmFtZWQgcXVlcmllcyBtdXN0IGFsd2F5cyBiZSBwcmVwYXJlZFxuICBpZiAodGhpcy5uYW1lKSB7IHJldHVybiB0cnVlIH1cbiAgLy8gYWx3YXlzIHByZXBhcmUgaWYgdGhlcmUgYXJlIG1heCBudW1iZXIgb2Ygcm93cyBleHBlY3RlZCBwZXJcbiAgLy8gcG9ydGFsIGV4ZWN1dGlvblxuICBpZiAodGhpcy5yb3dzKSB7IHJldHVybiB0cnVlIH1cbiAgLy8gZG9uJ3QgcHJlcGFyZSBlbXB0eSB0ZXh0IHF1ZXJpZXNcbiAgaWYgKCF0aGlzLnRleHQpIHsgcmV0dXJuIGZhbHNlIH1cbiAgLy8gcHJlcGFyZSBpZiB0aGVyZSBhcmUgdmFsdWVzXG4gIGlmICghdGhpcy52YWx1ZXMpIHsgcmV0dXJuIGZhbHNlIH1cbiAgcmV0dXJuIHRoaXMudmFsdWVzLmxlbmd0aCA+IDBcbn1cblxuUXVlcnkucHJvdG90eXBlLl9jaGVja0Zvck11bHRpcm93ID0gZnVuY3Rpb24gKCkge1xuICAvLyBpZiB3ZSBhbHJlYWR5IGhhdmUgYSByZXN1bHQgd2l0aCBhIGNvbW1hbmQgcHJvcGVydHlcbiAgLy8gdGhlbiB3ZSd2ZSBhbHJlYWR5IGV4ZWN1dGVkIG9uZSBxdWVyeSBpbiBhIG11bHRpLXN0YXRlbWVudCBzaW1wbGUgcXVlcnlcbiAgLy8gdHVybiBvdXIgcmVzdWx0cyBpbnRvIGFuIGFycmF5IG9mIHJlc3VsdHNcbiAgaWYgKHRoaXMuX3Jlc3VsdC5jb21tYW5kKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHRoaXMuX3Jlc3VsdHMpKSB7XG4gICAgICB0aGlzLl9yZXN1bHRzID0gW3RoaXMuX3Jlc3VsdF1cbiAgICB9XG4gICAgdGhpcy5fcmVzdWx0ID0gbmV3IFJlc3VsdCh0aGlzLl9yb3dNb2RlLCB0aGlzLnR5cGVzKVxuICAgIHRoaXMuX3Jlc3VsdHMucHVzaCh0aGlzLl9yZXN1bHQpXG4gIH1cbn1cblxuLy8gYXNzb2NpYXRlcyByb3cgbWV0YWRhdGEgZnJvbSB0aGUgc3VwcGxpZWRcbi8vIG1lc3NhZ2Ugd2l0aCB0aGlzIHF1ZXJ5IG9iamVjdFxuLy8gbWV0YWRhdGEgdXNlZCB3aGVuIHBhcnNpbmcgcm93IHJlc3VsdHNcblF1ZXJ5LnByb3RvdHlwZS5oYW5kbGVSb3dEZXNjcmlwdGlvbiA9IGZ1bmN0aW9uIChtc2cpIHtcbiAgdGhpcy5fY2hlY2tGb3JNdWx0aXJvdygpXG4gIHRoaXMuX3Jlc3VsdC5hZGRGaWVsZHMobXNnLmZpZWxkcylcbiAgdGhpcy5fYWNjdW11bGF0ZVJvd3MgPSB0aGlzLmNhbGxiYWNrIHx8ICF0aGlzLmxpc3RlbmVycygncm93JykubGVuZ3RoXG59XG5cblF1ZXJ5LnByb3RvdHlwZS5oYW5kbGVEYXRhUm93ID0gZnVuY3Rpb24gKG1zZykge1xuICB2YXIgcm93XG5cbiAgaWYgKHRoaXMuX2NhbmNlbGVkRHVlVG9FcnJvcikge1xuICAgIHJldHVyblxuICB9XG5cbiAgdHJ5IHtcbiAgICByb3cgPSB0aGlzLl9yZXN1bHQucGFyc2VSb3cobXNnLmZpZWxkcylcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgdGhpcy5fY2FuY2VsZWREdWVUb0Vycm9yID0gZXJyXG4gICAgcmV0dXJuXG4gIH1cblxuICB0aGlzLmVtaXQoJ3JvdycsIHJvdywgdGhpcy5fcmVzdWx0KVxuICBpZiAodGhpcy5fYWNjdW11bGF0ZVJvd3MpIHtcbiAgICB0aGlzLl9yZXN1bHQuYWRkUm93KHJvdylcbiAgfVxufVxuXG5RdWVyeS5wcm90b3R5cGUuaGFuZGxlQ29tbWFuZENvbXBsZXRlID0gZnVuY3Rpb24gKG1zZywgY29uKSB7XG4gIHRoaXMuX2NoZWNrRm9yTXVsdGlyb3coKVxuICB0aGlzLl9yZXN1bHQuYWRkQ29tbWFuZENvbXBsZXRlKG1zZylcbiAgLy8gbmVlZCB0byBzeW5jIGFmdGVyIGVhY2ggY29tbWFuZCBjb21wbGV0ZSBvZiBhIHByZXBhcmVkIHN0YXRlbWVudFxuICBpZiAodGhpcy5pc1ByZXBhcmVkU3RhdGVtZW50KSB7XG4gICAgY29uLnN5bmMoKVxuICB9XG59XG5cbi8vIGlmIGEgbmFtZWQgcHJlcGFyZWQgc3RhdGVtZW50IGlzIGNyZWF0ZWQgd2l0aCBlbXB0eSBxdWVyeSB0ZXh0XG4vLyB0aGUgYmFja2VuZCB3aWxsIHNlbmQgYW4gZW1wdHlRdWVyeSBtZXNzYWdlIGJ1dCAqbm90KiBhIGNvbW1hbmQgY29tcGxldGUgbWVzc2FnZVxuLy8gZXhlY3V0aW9uIG9uIHRoZSBjb25uZWN0aW9uIHdpbGwgaGFuZyB1bnRpbCB0aGUgYmFja2VuZCByZWNlaXZlcyBhIHN5bmMgbWVzc2FnZVxuUXVlcnkucHJvdG90eXBlLmhhbmRsZUVtcHR5UXVlcnkgPSBmdW5jdGlvbiAoY29uKSB7XG4gIGlmICh0aGlzLmlzUHJlcGFyZWRTdGF0ZW1lbnQpIHtcbiAgICBjb24uc3luYygpXG4gIH1cbn1cblxuUXVlcnkucHJvdG90eXBlLmhhbmRsZVJlYWR5Rm9yUXVlcnkgPSBmdW5jdGlvbiAoY29uKSB7XG4gIGlmICh0aGlzLl9jYW5jZWxlZER1ZVRvRXJyb3IpIHtcbiAgICByZXR1cm4gdGhpcy5oYW5kbGVFcnJvcih0aGlzLl9jYW5jZWxlZER1ZVRvRXJyb3IsIGNvbilcbiAgfVxuICBpZiAodGhpcy5jYWxsYmFjaykge1xuICAgIHRoaXMuY2FsbGJhY2sobnVsbCwgdGhpcy5fcmVzdWx0cylcbiAgfVxuICB0aGlzLmVtaXQoJ2VuZCcsIHRoaXMuX3Jlc3VsdHMpXG59XG5cblF1ZXJ5LnByb3RvdHlwZS5oYW5kbGVFcnJvciA9IGZ1bmN0aW9uIChlcnIsIGNvbm5lY3Rpb24pIHtcbiAgLy8gbmVlZCB0byBzeW5jIGFmdGVyIGVycm9yIGR1cmluZyBhIHByZXBhcmVkIHN0YXRlbWVudFxuICBpZiAodGhpcy5pc1ByZXBhcmVkU3RhdGVtZW50KSB7XG4gICAgY29ubmVjdGlvbi5zeW5jKClcbiAgfVxuICBpZiAodGhpcy5fY2FuY2VsZWREdWVUb0Vycm9yKSB7XG4gICAgZXJyID0gdGhpcy5fY2FuY2VsZWREdWVUb0Vycm9yXG4gICAgdGhpcy5fY2FuY2VsZWREdWVUb0Vycm9yID0gZmFsc2VcbiAgfVxuICAvLyBpZiBjYWxsYmFjayBzdXBwbGllZCBkbyBub3QgZW1pdCBlcnJvciBldmVudCBhcyB1bmNhdWdodCBlcnJvclxuICAvLyBldmVudHMgd2lsbCBidWJibGUgdXAgdG8gbm9kZSBwcm9jZXNzXG4gIGlmICh0aGlzLmNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHRoaXMuY2FsbGJhY2soZXJyKVxuICB9XG4gIHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpXG59XG5cblF1ZXJ5LnByb3RvdHlwZS5zdWJtaXQgPSBmdW5jdGlvbiAoY29ubmVjdGlvbikge1xuICBpZiAodHlwZW9mIHRoaXMudGV4dCAhPT0gJ3N0cmluZycgJiYgdHlwZW9mIHRoaXMubmFtZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbmV3IEVycm9yKCdBIHF1ZXJ5IG11c3QgaGF2ZSBlaXRoZXIgdGV4dCBvciBhIG5hbWUuIFN1cHBseWluZyBuZWl0aGVyIGlzIHVuc3VwcG9ydGVkLicpXG4gIH1cbiAgaWYgKHRoaXMudmFsdWVzICYmICFBcnJheS5pc0FycmF5KHRoaXMudmFsdWVzKSkge1xuICAgIHJldHVybiBuZXcgRXJyb3IoJ1F1ZXJ5IHZhbHVlcyBtdXN0IGJlIGFuIGFycmF5JylcbiAgfVxuICBpZiAodGhpcy5yZXF1aXJlc1ByZXBhcmF0aW9uKCkpIHtcbiAgICB0aGlzLnByZXBhcmUoY29ubmVjdGlvbilcbiAgfSBlbHNlIHtcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHRoaXMudGV4dClcbiAgfVxuICByZXR1cm4gbnVsbFxufVxuXG5RdWVyeS5wcm90b3R5cGUuaGFzQmVlblBhcnNlZCA9IGZ1bmN0aW9uIChjb25uZWN0aW9uKSB7XG4gIHJldHVybiB0aGlzLm5hbWUgJiYgY29ubmVjdGlvbi5wYXJzZWRTdGF0ZW1lbnRzW3RoaXMubmFtZV1cbn1cblxuUXVlcnkucHJvdG90eXBlLmhhbmRsZVBvcnRhbFN1c3BlbmRlZCA9IGZ1bmN0aW9uIChjb25uZWN0aW9uKSB7XG4gIHRoaXMuX2dldFJvd3MoY29ubmVjdGlvbiwgdGhpcy5yb3dzKVxufVxuXG5RdWVyeS5wcm90b3R5cGUuX2dldFJvd3MgPSBmdW5jdGlvbiAoY29ubmVjdGlvbiwgcm93cykge1xuICBjb25uZWN0aW9uLmV4ZWN1dGUoe1xuICAgIHBvcnRhbDogdGhpcy5wb3J0YWwsXG4gICAgcm93czogcm93c1xuICB9LCB0cnVlKVxuICBjb25uZWN0aW9uLmZsdXNoKClcbn1cblxuUXVlcnkucHJvdG90eXBlLnByZXBhcmUgPSBmdW5jdGlvbiAoY29ubmVjdGlvbikge1xuICB2YXIgc2VsZiA9IHRoaXNcbiAgLy8gcHJlcGFyZWQgc3RhdGVtZW50cyBuZWVkIHN5bmMgdG8gYmUgY2FsbGVkIGFmdGVyIGVhY2ggY29tbWFuZFxuICAvLyBjb21wbGV0ZSBvciB3aGVuIGFuIGVycm9yIGlzIGVuY291bnRlcmVkXG4gIHRoaXMuaXNQcmVwYXJlZFN0YXRlbWVudCA9IHRydWVcbiAgLy8gVE9ETyByZWZhY3RvciB0aGlzIHBvb3IgZW5jYXBzdWxhdGlvblxuICBpZiAoIXRoaXMuaGFzQmVlblBhcnNlZChjb25uZWN0aW9uKSkge1xuICAgIGNvbm5lY3Rpb24ucGFyc2Uoe1xuICAgICAgdGV4dDogc2VsZi50ZXh0LFxuICAgICAgbmFtZTogc2VsZi5uYW1lLFxuICAgICAgdHlwZXM6IHNlbGYudHlwZXNcbiAgICB9LCB0cnVlKVxuICB9XG5cbiAgaWYgKHNlbGYudmFsdWVzKSB7XG4gICAgc2VsZi52YWx1ZXMgPSBzZWxmLnZhbHVlcy5tYXAodXRpbHMucHJlcGFyZVZhbHVlKVxuICB9XG5cbiAgLy8gaHR0cDovL2RldmVsb3Blci5wb3N0Z3Jlc3FsLm9yZy9wZ2RvY3MvcG9zdGdyZXMvcHJvdG9jb2wtZmxvdy5odG1sI1BST1RPQ09MLUZMT1ctRVhULVFVRVJZXG4gIGNvbm5lY3Rpb24uYmluZCh7XG4gICAgcG9ydGFsOiBzZWxmLnBvcnRhbCxcbiAgICBzdGF0ZW1lbnQ6IHNlbGYubmFtZSxcbiAgICB2YWx1ZXM6IHNlbGYudmFsdWVzLFxuICAgIGJpbmFyeTogc2VsZi5iaW5hcnlcbiAgfSwgdHJ1ZSlcblxuICBjb25uZWN0aW9uLmRlc2NyaWJlKHtcbiAgICB0eXBlOiAnUCcsXG4gICAgbmFtZTogc2VsZi5wb3J0YWwgfHwgJydcbiAgfSwgdHJ1ZSlcblxuICB0aGlzLl9nZXRSb3dzKGNvbm5lY3Rpb24sIHRoaXMucm93cylcbn1cblxuUXVlcnkucHJvdG90eXBlLmhhbmRsZUNvcHlJblJlc3BvbnNlID0gZnVuY3Rpb24gKGNvbm5lY3Rpb24pIHtcbiAgY29ubmVjdGlvbi5zZW5kQ29weUZhaWwoJ05vIHNvdXJjZSBzdHJlYW0gZGVmaW5lZCcpXG59XG5cblF1ZXJ5LnByb3RvdHlwZS5oYW5kbGVDb3B5RGF0YSA9IGZ1bmN0aW9uIChtc2csIGNvbm5lY3Rpb24pIHtcbiAgLy8gbm9vcFxufVxubW9kdWxlLmV4cG9ydHMgPSBRdWVyeVxuIiwiJ3VzZSBzdHJpY3QnXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMC0yMDE3IEJyaWFuIENhcmxzb24gKGJyaWFuLm0uY2FybHNvbkBnbWFpbC5jb20pXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogUkVBRE1FLm1kIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIHR5cGVzID0gcmVxdWlyZSgncGctdHlwZXMnKVxuXG4vLyByZXN1bHQgb2JqZWN0IHJldHVybmVkIGZyb20gcXVlcnlcbi8vIGluIHRoZSAnZW5kJyBldmVudCBhbmQgYWxzb1xuLy8gcGFzc2VkIGFzIHNlY29uZCBhcmd1bWVudCB0byBwcm92aWRlZCBjYWxsYmFja1xudmFyIFJlc3VsdCA9IGZ1bmN0aW9uIChyb3dNb2RlKSB7XG4gIHRoaXMuY29tbWFuZCA9IG51bGxcbiAgdGhpcy5yb3dDb3VudCA9IG51bGxcbiAgdGhpcy5vaWQgPSBudWxsXG4gIHRoaXMucm93cyA9IFtdXG4gIHRoaXMuZmllbGRzID0gW11cbiAgdGhpcy5fcGFyc2VycyA9IFtdXG4gIHRoaXMuUm93Q3RvciA9IG51bGxcbiAgdGhpcy5yb3dBc0FycmF5ID0gcm93TW9kZSA9PT0gJ2FycmF5J1xuICBpZiAodGhpcy5yb3dBc0FycmF5KSB7XG4gICAgdGhpcy5wYXJzZVJvdyA9IHRoaXMuX3BhcnNlUm93QXNBcnJheVxuICB9XG59XG5cbnZhciBtYXRjaFJlZ2V4cCA9IC9eKFtBLVphLXpdKykoPzogKFxcZCspKT8oPzogKFxcZCspKT8vXG5cbi8vIGFkZHMgYSBjb21tYW5kIGNvbXBsZXRlIG1lc3NhZ2VcblJlc3VsdC5wcm90b3R5cGUuYWRkQ29tbWFuZENvbXBsZXRlID0gZnVuY3Rpb24gKG1zZykge1xuICB2YXIgbWF0Y2hcbiAgaWYgKG1zZy50ZXh0KSB7XG4gICAgLy8gcHVyZSBqYXZhc2NyaXB0XG4gICAgbWF0Y2ggPSBtYXRjaFJlZ2V4cC5leGVjKG1zZy50ZXh0KVxuICB9IGVsc2Uge1xuICAgIC8vIG5hdGl2ZSBiaW5kaW5nc1xuICAgIG1hdGNoID0gbWF0Y2hSZWdleHAuZXhlYyhtc2cuY29tbWFuZClcbiAgfVxuICBpZiAobWF0Y2gpIHtcbiAgICB0aGlzLmNvbW1hbmQgPSBtYXRjaFsxXVxuICAgIGlmIChtYXRjaFszXSkge1xuICAgICAgLy8gQ09NTU1BTkQgT0lEIFJPV1NcbiAgICAgIHRoaXMub2lkID0gcGFyc2VJbnQobWF0Y2hbMl0sIDEwKVxuICAgICAgdGhpcy5yb3dDb3VudCA9IHBhcnNlSW50KG1hdGNoWzNdLCAxMClcbiAgICB9IGVsc2UgaWYgKG1hdGNoWzJdKSB7XG4gICAgICAvLyBDT01NQU5EIFJPV1NcbiAgICAgIHRoaXMucm93Q291bnQgPSBwYXJzZUludChtYXRjaFsyXSwgMTApXG4gICAgfVxuICB9XG59XG5cblJlc3VsdC5wcm90b3R5cGUuX3BhcnNlUm93QXNBcnJheSA9IGZ1bmN0aW9uIChyb3dEYXRhKSB7XG4gIHZhciByb3cgPSBbXVxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gcm93RGF0YS5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIHZhciByYXdWYWx1ZSA9IHJvd0RhdGFbaV1cbiAgICBpZiAocmF3VmFsdWUgIT09IG51bGwpIHtcbiAgICAgIHJvdy5wdXNoKHRoaXMuX3BhcnNlcnNbaV0ocmF3VmFsdWUpKVxuICAgIH0gZWxzZSB7XG4gICAgICByb3cucHVzaChudWxsKVxuICAgIH1cbiAgfVxuICByZXR1cm4gcm93XG59XG5cblJlc3VsdC5wcm90b3R5cGUucGFyc2VSb3cgPSBmdW5jdGlvbiAocm93RGF0YSkge1xuICB2YXIgcm93ID0ge31cbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHJvd0RhdGEubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICB2YXIgcmF3VmFsdWUgPSByb3dEYXRhW2ldXG4gICAgdmFyIGZpZWxkID0gdGhpcy5maWVsZHNbaV0ubmFtZVxuICAgIGlmIChyYXdWYWx1ZSAhPT0gbnVsbCkge1xuICAgICAgcm93W2ZpZWxkXSA9IHRoaXMuX3BhcnNlcnNbaV0ocmF3VmFsdWUpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJvd1tmaWVsZF0gPSBudWxsXG4gICAgfVxuICB9XG4gIHJldHVybiByb3dcbn1cblxuUmVzdWx0LnByb3RvdHlwZS5hZGRSb3cgPSBmdW5jdGlvbiAocm93KSB7XG4gIHRoaXMucm93cy5wdXNoKHJvdylcbn1cblxuUmVzdWx0LnByb3RvdHlwZS5hZGRGaWVsZHMgPSBmdW5jdGlvbiAoZmllbGREZXNjcmlwdGlvbnMpIHtcbiAgLy8gY2xlYXJzIGZpZWxkIGRlZmluaXRpb25zXG4gIC8vIG11bHRpcGxlIHF1ZXJ5IHN0YXRlbWVudHMgaW4gMSBhY3Rpb24gY2FuIHJlc3VsdCBpbiBtdWx0aXBsZSBzZXRzXG4gIC8vIG9mIHJvd0Rlc2NyaXB0aW9ucy4uLmVnOiAnc2VsZWN0IE5PVygpOyBzZWxlY3QgMTo6aW50OydcbiAgLy8geW91IG5lZWQgdG8gcmVzZXQgdGhlIGZpZWxkc1xuICBpZiAodGhpcy5maWVsZHMubGVuZ3RoKSB7XG4gICAgdGhpcy5maWVsZHMgPSBbXVxuICAgIHRoaXMuX3BhcnNlcnMgPSBbXVxuICB9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZmllbGREZXNjcmlwdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzYyA9IGZpZWxkRGVzY3JpcHRpb25zW2ldXG4gICAgdGhpcy5maWVsZHMucHVzaChkZXNjKVxuICAgIHZhciBwYXJzZXIgPSB0aGlzLl9nZXRUeXBlUGFyc2VyKGRlc2MuZGF0YVR5cGVJRCwgZGVzYy5mb3JtYXQgfHwgJ3RleHQnKVxuICAgIHRoaXMuX3BhcnNlcnMucHVzaChwYXJzZXIpXG4gIH1cbn1cblxuUmVzdWx0LnByb3RvdHlwZS5fZ2V0VHlwZVBhcnNlciA9IHR5cGVzLmdldFR5cGVQYXJzZXJcblxubW9kdWxlLmV4cG9ydHMgPSBSZXN1bHRcbiIsIi8vYmluYXJ5IGRhdGEgd3JpdGVyIHR1bmVkIGZvciBjcmVhdGluZ1xuLy9wb3N0Z3JlcyBtZXNzYWdlIHBhY2tldHMgYXMgZWZmZWNpZW50bHkgYXMgcG9zc2libGUgYnkgcmV1c2luZyB0aGVcbi8vc2FtZSBidWZmZXIgdG8gYXZvaWQgbWVtY3B5IGFuZCBsaW1pdCBtZW1vcnkgYWxsb2NhdGlvbnNcbnZhciBXcml0ZXIgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIHRoaXMuc2l6ZSA9IHNpemUgfHwgMTAyNDtcbiAgdGhpcy5idWZmZXIgPSBCdWZmZXIuYWxsb2ModGhpcy5zaXplICsgNSk7XG4gIHRoaXMub2Zmc2V0ID0gNTtcbiAgdGhpcy5oZWFkZXJQb3NpdGlvbiA9IDA7XG59O1xuXG4vL3Jlc2l6ZXMgaW50ZXJuYWwgYnVmZmVyIGlmIG5vdCBlbm91Z2ggc2l6ZSBsZWZ0XG5Xcml0ZXIucHJvdG90eXBlLl9lbnN1cmUgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICB2YXIgcmVtYWluaW5nID0gdGhpcy5idWZmZXIubGVuZ3RoIC0gdGhpcy5vZmZzZXQ7XG4gIGlmIChyZW1haW5pbmcgPCBzaXplKSB7XG4gICAgdmFyIG9sZEJ1ZmZlciA9IHRoaXMuYnVmZmVyO1xuICAgIC8vIGV4cG9uZW50aWFsIGdyb3d0aCBmYWN0b3Igb2YgYXJvdW5kIH4gMS41XG4gICAgLy8gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjI2OTA2My9idWZmZXItZ3Jvd3RoLXN0cmF0ZWd5XG4gICAgdmFyIG5ld1NpemUgPSBvbGRCdWZmZXIubGVuZ3RoICsgKG9sZEJ1ZmZlci5sZW5ndGggPj4gMSkgKyBzaXplO1xuICAgIHRoaXMuYnVmZmVyID0gQnVmZmVyLmFsbG9jKG5ld1NpemUpO1xuICAgIG9sZEJ1ZmZlci5jb3B5KHRoaXMuYnVmZmVyKTtcbiAgfVxufTtcblxuV3JpdGVyLnByb3RvdHlwZS5hZGRJbnQzMiA9IGZ1bmN0aW9uIChudW0pIHtcbiAgdGhpcy5fZW5zdXJlKDQpO1xuICB0aGlzLmJ1ZmZlclt0aGlzLm9mZnNldCsrXSA9IChudW0gPj4+IDI0ICYgMHhGRik7XG4gIHRoaXMuYnVmZmVyW3RoaXMub2Zmc2V0KytdID0gKG51bSA+Pj4gMTYgJiAweEZGKTtcbiAgdGhpcy5idWZmZXJbdGhpcy5vZmZzZXQrK10gPSAobnVtID4+PiA4ICYgMHhGRik7XG4gIHRoaXMuYnVmZmVyW3RoaXMub2Zmc2V0KytdID0gKG51bSA+Pj4gMCAmIDB4RkYpO1xuICByZXR1cm4gdGhpcztcbn07XG5cbldyaXRlci5wcm90b3R5cGUuYWRkSW50MTYgPSBmdW5jdGlvbiAobnVtKSB7XG4gIHRoaXMuX2Vuc3VyZSgyKTtcbiAgdGhpcy5idWZmZXJbdGhpcy5vZmZzZXQrK10gPSAobnVtID4+PiA4ICYgMHhGRik7XG4gIHRoaXMuYnVmZmVyW3RoaXMub2Zmc2V0KytdID0gKG51bSA+Pj4gMCAmIDB4RkYpO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8vZm9yIHZlcnNpb25zIG9mIG5vZGUgcmVxdWlyaW5nICdsZW5ndGgnIGFzIDNyZCBhcmd1bWVudCB0byBidWZmZXIud3JpdGVcbnZhciB3cml0ZVN0cmluZyA9IGZ1bmN0aW9uIChidWZmZXIsIHN0cmluZywgb2Zmc2V0LCBsZW4pIHtcbiAgYnVmZmVyLndyaXRlKHN0cmluZywgb2Zmc2V0LCBsZW4pO1xufTtcblxuLy9vdmVyd3JpdGUgZnVuY3Rpb24gZm9yIG9sZGVyIHZlcnNpb25zIG9mIG5vZGVcbmlmIChCdWZmZXIucHJvdG90eXBlLndyaXRlLmxlbmd0aCA9PT0gMykge1xuICB3cml0ZVN0cmluZyA9IGZ1bmN0aW9uIChidWZmZXIsIHN0cmluZywgb2Zmc2V0LCBsZW4pIHtcbiAgICBidWZmZXIud3JpdGUoc3RyaW5nLCBvZmZzZXQpO1xuICB9O1xufVxuXG5Xcml0ZXIucHJvdG90eXBlLmFkZENTdHJpbmcgPSBmdW5jdGlvbiAoc3RyaW5nKSB7XG4gIC8vanVzdCB3cml0ZSBhIDAgZm9yIGVtcHR5IG9yIG51bGwgc3RyaW5nc1xuICBpZiAoIXN0cmluZykge1xuICAgIHRoaXMuX2Vuc3VyZSgxKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbGVuID0gQnVmZmVyLmJ5dGVMZW5ndGgoc3RyaW5nKTtcbiAgICB0aGlzLl9lbnN1cmUobGVuICsgMSk7IC8vKzEgZm9yIG51bGwgdGVybWluYXRvclxuICAgIHdyaXRlU3RyaW5nKHRoaXMuYnVmZmVyLCBzdHJpbmcsIHRoaXMub2Zmc2V0LCBsZW4pO1xuICAgIHRoaXMub2Zmc2V0ICs9IGxlbjtcbiAgfVxuXG4gIHRoaXMuYnVmZmVyW3RoaXMub2Zmc2V0KytdID0gMDsgLy8gbnVsbCB0ZXJtaW5hdG9yXG4gIHJldHVybiB0aGlzO1xufTtcblxuV3JpdGVyLnByb3RvdHlwZS5hZGRDaGFyID0gZnVuY3Rpb24gKGMpIHtcbiAgdGhpcy5fZW5zdXJlKDEpO1xuICB3cml0ZVN0cmluZyh0aGlzLmJ1ZmZlciwgYywgdGhpcy5vZmZzZXQsIDEpO1xuICB0aGlzLm9mZnNldCsrO1xuICByZXR1cm4gdGhpcztcbn07XG5cbldyaXRlci5wcm90b3R5cGUuYWRkU3RyaW5nID0gZnVuY3Rpb24gKHN0cmluZykge1xuICBzdHJpbmcgPSBzdHJpbmcgfHwgXCJcIjtcbiAgdmFyIGxlbiA9IEJ1ZmZlci5ieXRlTGVuZ3RoKHN0cmluZyk7XG4gIHRoaXMuX2Vuc3VyZShsZW4pO1xuICB0aGlzLmJ1ZmZlci53cml0ZShzdHJpbmcsIHRoaXMub2Zmc2V0KTtcbiAgdGhpcy5vZmZzZXQgKz0gbGVuO1xuICByZXR1cm4gdGhpcztcbn07XG5cbldyaXRlci5wcm90b3R5cGUuZ2V0Qnl0ZUxlbmd0aCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMub2Zmc2V0IC0gNTtcbn07XG5cbldyaXRlci5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKG90aGVyQnVmZmVyKSB7XG4gIHRoaXMuX2Vuc3VyZShvdGhlckJ1ZmZlci5sZW5ndGgpO1xuICBvdGhlckJ1ZmZlci5jb3B5KHRoaXMuYnVmZmVyLCB0aGlzLm9mZnNldCk7XG4gIHRoaXMub2Zmc2V0ICs9IG90aGVyQnVmZmVyLmxlbmd0aDtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5Xcml0ZXIucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLm9mZnNldCA9IDU7XG4gIHRoaXMuaGVhZGVyUG9zaXRpb24gPSAwO1xuICB0aGlzLmxhc3RFbmQgPSAwO1xufTtcblxuLy9hcHBlbmRzIGEgaGVhZGVyIGJsb2NrIHRvIGFsbCB0aGUgd3JpdHRlbiBkYXRhIHNpbmNlIHRoZSBsYXN0XG4vL3N1YnNlcXVlbnQgaGVhZGVyIG9yIHRvIHRoZSBiZWdpbm5pbmcgaWYgdGhlcmUgaXMgb25seSBvbmUgZGF0YSBibG9ja1xuV3JpdGVyLnByb3RvdHlwZS5hZGRIZWFkZXIgPSBmdW5jdGlvbiAoY29kZSwgbGFzdCkge1xuICB2YXIgb3JpZ09mZnNldCA9IHRoaXMub2Zmc2V0O1xuICB0aGlzLm9mZnNldCA9IHRoaXMuaGVhZGVyUG9zaXRpb247XG4gIHRoaXMuYnVmZmVyW3RoaXMub2Zmc2V0KytdID0gY29kZTtcbiAgLy9sZW5ndGggaXMgZXZlcnl0aGluZyBpbiB0aGlzIHBhY2tldCBtaW51cyB0aGUgY29kZVxuICB0aGlzLmFkZEludDMyKG9yaWdPZmZzZXQgLSAodGhpcy5oZWFkZXJQb3NpdGlvbiArIDEpKTtcbiAgLy9zZXQgbmV4dCBoZWFkZXIgcG9zaXRpb25cbiAgdGhpcy5oZWFkZXJQb3NpdGlvbiA9IG9yaWdPZmZzZXQ7XG4gIC8vbWFrZSBzcGFjZSBmb3IgbmV4dCBoZWFkZXJcbiAgdGhpcy5vZmZzZXQgPSBvcmlnT2Zmc2V0O1xuICBpZiAoIWxhc3QpIHtcbiAgICB0aGlzLl9lbnN1cmUoNSk7XG4gICAgdGhpcy5vZmZzZXQgKz0gNTtcbiAgfVxufTtcblxuV3JpdGVyLnByb3RvdHlwZS5qb2luID0gZnVuY3Rpb24gKGNvZGUpIHtcbiAgaWYgKGNvZGUpIHtcbiAgICB0aGlzLmFkZEhlYWRlcihjb2RlLCB0cnVlKTtcbiAgfVxuICByZXR1cm4gdGhpcy5idWZmZXIuc2xpY2UoY29kZSA/IDAgOiA1LCB0aGlzLm9mZnNldCk7XG59O1xuXG5Xcml0ZXIucHJvdG90eXBlLmZsdXNoID0gZnVuY3Rpb24gKGNvZGUpIHtcbiAgdmFyIHJlc3VsdCA9IHRoaXMuam9pbihjb2RlKTtcbiAgdGhpcy5jbGVhcigpO1xuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsInZhciBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKVxuXG52YXIgUmVhZGVyID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gIC8vVE9ETyAtIHJlbW92ZSBmb3IgdmVyc2lvbiAxLjBcbiAgaWYodHlwZW9mIG9wdGlvbnMgPT0gJ251bWJlcicpIHtcbiAgICBvcHRpb25zID0geyBoZWFkZXJTaXplOiBvcHRpb25zIH1cbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuICB0aGlzLm9mZnNldCA9IDBcbiAgdGhpcy5sYXN0Q2h1bmsgPSBmYWxzZVxuICB0aGlzLmNodW5rID0gbnVsbFxuICB0aGlzLmNodW5rTGVuZ3RoID0gMFxuICB0aGlzLmhlYWRlclNpemUgPSBvcHRpb25zLmhlYWRlclNpemUgfHwgMFxuICB0aGlzLmxlbmd0aFBhZGRpbmcgPSBvcHRpb25zLmxlbmd0aFBhZGRpbmcgfHwgMFxuICB0aGlzLmhlYWRlciA9IG51bGxcbiAgYXNzZXJ0KHRoaXMuaGVhZGVyU2l6ZSA8IDIsICdwcmUtbGVuZ3RoIGhlYWRlciBvZiBtb3JlIHRoYW4gMSBieXRlIGxlbmd0aCBub3QgY3VycmVudGx5IHN1cHBvcnRlZCcpXG59XG5cblJlYWRlci5wcm90b3R5cGUuYWRkQ2h1bmsgPSBmdW5jdGlvbihjaHVuaykge1xuICBpZiAoIXRoaXMuY2h1bmsgfHwgdGhpcy5vZmZzZXQgPT09IHRoaXMuY2h1bmtMZW5ndGgpIHtcbiAgICB0aGlzLmNodW5rID0gY2h1bmtcbiAgICB0aGlzLmNodW5rTGVuZ3RoID0gY2h1bmsubGVuZ3RoXG4gICAgdGhpcy5vZmZzZXQgPSAwXG4gICAgcmV0dXJuXG4gIH1cblxuICB2YXIgbmV3Q2h1bmtMZW5ndGggPSBjaHVuay5sZW5ndGhcbiAgdmFyIG5ld0xlbmd0aCA9IHRoaXMuY2h1bmtMZW5ndGggKyBuZXdDaHVua0xlbmd0aFxuXG4gIGlmIChuZXdMZW5ndGggPiB0aGlzLmNodW5rLmxlbmd0aCkge1xuICAgIHZhciBuZXdCdWZmZXJMZW5ndGggPSB0aGlzLmNodW5rLmxlbmd0aCAqIDJcbiAgICB3aGlsZSAobmV3TGVuZ3RoID49IG5ld0J1ZmZlckxlbmd0aCkge1xuICAgICAgbmV3QnVmZmVyTGVuZ3RoICo9IDJcbiAgICB9XG4gICAgdmFyIG5ld0J1ZmZlciA9IEJ1ZmZlci5hbGxvYyhuZXdCdWZmZXJMZW5ndGgpXG4gICAgdGhpcy5jaHVuay5jb3B5KG5ld0J1ZmZlcilcbiAgICB0aGlzLmNodW5rID0gbmV3QnVmZmVyXG4gIH1cbiAgY2h1bmsuY29weSh0aGlzLmNodW5rLCB0aGlzLmNodW5rTGVuZ3RoKVxuICB0aGlzLmNodW5rTGVuZ3RoID0gbmV3TGVuZ3RoXG59XG5cblJlYWRlci5wcm90b3R5cGUucmVhZCA9IGZ1bmN0aW9uKCkge1xuICBpZih0aGlzLmNodW5rTGVuZ3RoIDwgKHRoaXMuaGVhZGVyU2l6ZSArIDQgKyB0aGlzLm9mZnNldCkpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIGlmKHRoaXMuaGVhZGVyU2l6ZSkge1xuICAgIHRoaXMuaGVhZGVyID0gdGhpcy5jaHVua1t0aGlzLm9mZnNldF1cbiAgfVxuXG4gIC8vcmVhZCBsZW5ndGggb2YgbmV4dCBpdGVtXG4gIHZhciBsZW5ndGggPSB0aGlzLmNodW5rLnJlYWRVSW50MzJCRSh0aGlzLm9mZnNldCArIHRoaXMuaGVhZGVyU2l6ZSkgKyB0aGlzLmxlbmd0aFBhZGRpbmdcblxuICAvL25leHQgaXRlbSBzcGFucyBtb3JlIGNodW5rcyB0aGFuIHdlIGhhdmVcbiAgdmFyIHJlbWFpbmluZyA9IHRoaXMuY2h1bmtMZW5ndGggLSAodGhpcy5vZmZzZXQgKyA0ICsgdGhpcy5oZWFkZXJTaXplKVxuICBpZihsZW5ndGggPiByZW1haW5pbmcpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIHRoaXMub2Zmc2V0ICs9ICh0aGlzLmhlYWRlclNpemUgKyA0KVxuICB2YXIgcmVzdWx0ID0gdGhpcy5jaHVuay5zbGljZSh0aGlzLm9mZnNldCwgdGhpcy5vZmZzZXQgKyBsZW5ndGgpXG4gIHRoaXMub2Zmc2V0ICs9IGxlbmd0aFxuICByZXR1cm4gcmVzdWx0XG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJ0bHNcIik7IiwiJ3VzZSBzdHJpY3QnXG5jb25zdCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcblxuY29uc3QgTk9PUCA9IGZ1bmN0aW9uICgpIHsgfVxuXG5jb25zdCByZW1vdmVXaGVyZSA9IChsaXN0LCBwcmVkaWNhdGUpID0+IHtcbiAgY29uc3QgaSA9IGxpc3QuZmluZEluZGV4KHByZWRpY2F0ZSlcblxuICByZXR1cm4gaSA9PT0gLTFcbiAgICA/IHVuZGVmaW5lZFxuICAgIDogbGlzdC5zcGxpY2UoaSwgMSlbMF1cbn1cblxuY2xhc3MgSWRsZUl0ZW0ge1xuICBjb25zdHJ1Y3RvciAoY2xpZW50LCB0aW1lb3V0SWQpIHtcbiAgICB0aGlzLmNsaWVudCA9IGNsaWVudFxuICAgIHRoaXMudGltZW91dElkID0gdGltZW91dElkXG4gIH1cbn1cblxuY2xhc3MgUGVuZGluZ0l0ZW0ge1xuICBjb25zdHJ1Y3RvciAoY2FsbGJhY2spIHtcbiAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2tcbiAgfVxufVxuXG5mdW5jdGlvbiB0aHJvd09uUmVsZWFzZSAoKSB7XG4gIHRocm93IG5ldyBFcnJvcignUmVsZWFzZSBjYWxsZWQgb24gY2xpZW50IHdoaWNoIGhhcyBhbHJlYWR5IGJlZW4gcmVsZWFzZWQgdG8gdGhlIHBvb2wuJylcbn1cblxuZnVuY3Rpb24gcmVsZWFzZSAoY2xpZW50LCBlcnIpIHtcbiAgY2xpZW50LnJlbGVhc2UgPSB0aHJvd09uUmVsZWFzZVxuICBpZiAoZXJyIHx8IHRoaXMuZW5kaW5nKSB7XG4gICAgdGhpcy5fcmVtb3ZlKGNsaWVudClcbiAgICB0aGlzLl9wdWxzZVF1ZXVlKClcbiAgICByZXR1cm5cbiAgfVxuXG4gIC8vIGlkbGUgdGltZW91dFxuICBsZXQgdGlkXG4gIGlmICh0aGlzLm9wdGlvbnMuaWRsZVRpbWVvdXRNaWxsaXMpIHtcbiAgICB0aWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMubG9nKCdyZW1vdmUgaWRsZSBjbGllbnQnKVxuICAgICAgdGhpcy5fcmVtb3ZlKGNsaWVudClcbiAgICB9LCB0aGlzLm9wdGlvbnMuaWRsZVRpbWVvdXRNaWxsaXMpXG4gIH1cblxuICB0aGlzLl9pZGxlLnB1c2gobmV3IElkbGVJdGVtKGNsaWVudCwgdGlkKSlcbiAgdGhpcy5fcHVsc2VRdWV1ZSgpXG59XG5cbmZ1bmN0aW9uIHByb21pc2lmeSAoUHJvbWlzZSwgY2FsbGJhY2spIHtcbiAgaWYgKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHsgY2FsbGJhY2s6IGNhbGxiYWNrLCByZXN1bHQ6IHVuZGVmaW5lZCB9XG4gIH1cbiAgbGV0IHJlalxuICBsZXQgcmVzXG4gIGNvbnN0IGNiID0gZnVuY3Rpb24gKGVyciwgY2xpZW50KSB7XG4gICAgZXJyID8gcmVqKGVycikgOiByZXMoY2xpZW50KVxuICB9XG4gIGNvbnN0IHJlc3VsdCA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICByZXMgPSByZXNvbHZlXG4gICAgcmVqID0gcmVqZWN0XG4gIH0pXG4gIHJldHVybiB7IGNhbGxiYWNrOiBjYiwgcmVzdWx0OiByZXN1bHQgfVxufVxuXG5mdW5jdGlvbiBtYWtlSWRsZUxpc3RlbmVyIChwb29sLCBjbGllbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGlkbGVMaXN0ZW5lciAoZXJyKSB7XG4gICAgZXJyLmNsaWVudCA9IGNsaWVudFxuICAgIGNsaWVudC5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBpZGxlTGlzdGVuZXIpXG4gICAgY2xpZW50Lm9uKCdlcnJvcicsICgpID0+IHtcbiAgICAgIHBvb2wubG9nKCdhZGRpdGlvbmFsIGNsaWVudCBlcnJvciBhZnRlciBkaXNjb25uZWN0aW9uIGR1ZSB0byBlcnJvcicsIGVycilcbiAgICB9KVxuICAgIHBvb2wuX3JlbW92ZShjbGllbnQpXG4gICAgLy8gVE9ETyAtIGRvY3VtZW50IHRoYXQgb25jZSB0aGUgcG9vbCBlbWl0cyBhbiBlcnJvclxuICAgIC8vIHRoZSBjbGllbnQgaGFzIGFscmVhZHkgYmVlbiBjbG9zZWQgJiBwdXJnZWQgYW5kIGlzIHVudXNhYmxlXG4gICAgcG9vbC5lbWl0KCdlcnJvcicsIGVyciwgY2xpZW50KVxuICB9XG59XG5cbmNsYXNzIFBvb2wgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICBjb25zdHJ1Y3RvciAob3B0aW9ucywgQ2xpZW50KSB7XG4gICAgc3VwZXIoKVxuICAgIHRoaXMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpXG4gICAgdGhpcy5vcHRpb25zLm1heCA9IHRoaXMub3B0aW9ucy5tYXggfHwgdGhpcy5vcHRpb25zLnBvb2xTaXplIHx8IDEwXG4gICAgdGhpcy5sb2cgPSB0aGlzLm9wdGlvbnMubG9nIHx8IGZ1bmN0aW9uICgpIHsgfVxuICAgIHRoaXMuQ2xpZW50ID0gdGhpcy5vcHRpb25zLkNsaWVudCB8fCBDbGllbnQgfHwgcmVxdWlyZSgncGcnKS5DbGllbnRcbiAgICB0aGlzLlByb21pc2UgPSB0aGlzLm9wdGlvbnMuUHJvbWlzZSB8fCBnbG9iYWwuUHJvbWlzZVxuXG4gICAgaWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMuaWRsZVRpbWVvdXRNaWxsaXMgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aGlzLm9wdGlvbnMuaWRsZVRpbWVvdXRNaWxsaXMgPSAxMDAwMFxuICAgIH1cblxuICAgIHRoaXMuX2NsaWVudHMgPSBbXVxuICAgIHRoaXMuX2lkbGUgPSBbXVxuICAgIHRoaXMuX3BlbmRpbmdRdWV1ZSA9IFtdXG4gICAgdGhpcy5fZW5kQ2FsbGJhY2sgPSB1bmRlZmluZWRcbiAgICB0aGlzLmVuZGluZyA9IGZhbHNlXG4gICAgdGhpcy5lbmRlZCA9IGZhbHNlXG4gIH1cblxuICBfaXNGdWxsICgpIHtcbiAgICByZXR1cm4gdGhpcy5fY2xpZW50cy5sZW5ndGggPj0gdGhpcy5vcHRpb25zLm1heFxuICB9XG5cbiAgX3B1bHNlUXVldWUgKCkge1xuICAgIHRoaXMubG9nKCdwdWxzZSBxdWV1ZScpXG4gICAgaWYgKHRoaXMuZW5kZWQpIHtcbiAgICAgIHRoaXMubG9nKCdwdWxzZSBxdWV1ZSBlbmRlZCcpXG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgaWYgKHRoaXMuZW5kaW5nKSB7XG4gICAgICB0aGlzLmxvZygncHVsc2UgcXVldWUgb24gZW5kaW5nJylcbiAgICAgIGlmICh0aGlzLl9pZGxlLmxlbmd0aCkge1xuICAgICAgICB0aGlzLl9pZGxlLnNsaWNlKCkubWFwKGl0ZW0gPT4ge1xuICAgICAgICAgIHRoaXMuX3JlbW92ZShpdGVtLmNsaWVudClcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICAgIGlmICghdGhpcy5fY2xpZW50cy5sZW5ndGgpIHtcbiAgICAgICAgdGhpcy5lbmRlZCA9IHRydWVcbiAgICAgICAgdGhpcy5fZW5kQ2FsbGJhY2soKVxuICAgICAgfVxuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIC8vIGlmIHdlIGRvbid0IGhhdmUgYW55IHdhaXRpbmcsIGRvIG5vdGhpbmdcbiAgICBpZiAoIXRoaXMuX3BlbmRpbmdRdWV1ZS5sZW5ndGgpIHtcbiAgICAgIHRoaXMubG9nKCdubyBxdWV1ZWQgcmVxdWVzdHMnKVxuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIC8vIGlmIHdlIGRvbid0IGhhdmUgYW55IGlkbGUgY2xpZW50cyBhbmQgd2UgaGF2ZSBubyBtb3JlIHJvb20gZG8gbm90aGluZ1xuICAgIGlmICghdGhpcy5faWRsZS5sZW5ndGggJiYgdGhpcy5faXNGdWxsKCkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBjb25zdCB3YWl0ZXIgPSB0aGlzLl9wZW5kaW5nUXVldWUuc2hpZnQoKVxuICAgIGlmICh0aGlzLl9pZGxlLmxlbmd0aCkge1xuICAgICAgY29uc3QgaWRsZUl0ZW0gPSB0aGlzLl9pZGxlLnBvcCgpXG4gICAgICBjbGVhclRpbWVvdXQoaWRsZUl0ZW0udGltZW91dElkKVxuICAgICAgY29uc3QgY2xpZW50ID0gaWRsZUl0ZW0uY2xpZW50XG4gICAgICBjbGllbnQucmVsZWFzZSA9IHJlbGVhc2UuYmluZCh0aGlzLCBjbGllbnQpXG4gICAgICB0aGlzLmVtaXQoJ2FjcXVpcmUnLCBjbGllbnQpXG4gICAgICByZXR1cm4gd2FpdGVyLmNhbGxiYWNrKHVuZGVmaW5lZCwgY2xpZW50LCBjbGllbnQucmVsZWFzZSlcbiAgICB9XG4gICAgaWYgKCF0aGlzLl9pc0Z1bGwoKSkge1xuICAgICAgcmV0dXJuIHRoaXMubmV3Q2xpZW50KHdhaXRlcilcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1bmV4cGVjdGVkIGNvbmRpdGlvbicpXG4gIH1cblxuICBfcmVtb3ZlIChjbGllbnQpIHtcbiAgICBjb25zdCByZW1vdmVkID0gcmVtb3ZlV2hlcmUoXG4gICAgICB0aGlzLl9pZGxlLFxuICAgICAgaXRlbSA9PiBpdGVtLmNsaWVudCA9PT0gY2xpZW50XG4gICAgKVxuXG4gICAgaWYgKHJlbW92ZWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHJlbW92ZWQudGltZW91dElkKVxuICAgIH1cblxuICAgIHRoaXMuX2NsaWVudHMgPSB0aGlzLl9jbGllbnRzLmZpbHRlcihjID0+IGMgIT09IGNsaWVudClcbiAgICBjbGllbnQuZW5kKClcbiAgICB0aGlzLmVtaXQoJ3JlbW92ZScsIGNsaWVudClcbiAgfVxuXG4gIGNvbm5lY3QgKGNiKSB7XG4gICAgaWYgKHRoaXMuZW5kaW5nKSB7XG4gICAgICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoJ0Nhbm5vdCB1c2UgYSBwb29sIGFmdGVyIGNhbGxpbmcgZW5kIG9uIHRoZSBwb29sJylcbiAgICAgIHJldHVybiBjYiA/IGNiKGVycikgOiB0aGlzLlByb21pc2UucmVqZWN0KGVycilcbiAgICB9XG5cbiAgICBjb25zdCByZXNwb25zZSA9IHByb21pc2lmeSh0aGlzLlByb21pc2UsIGNiKVxuICAgIGNvbnN0IHJlc3VsdCA9IHJlc3BvbnNlLnJlc3VsdFxuXG4gICAgLy8gaWYgd2UgZG9uJ3QgaGF2ZSB0byBjb25uZWN0IGEgbmV3IGNsaWVudCwgZG9uJ3QgZG8gc29cbiAgICBpZiAodGhpcy5fY2xpZW50cy5sZW5ndGggPj0gdGhpcy5vcHRpb25zLm1heCB8fCB0aGlzLl9pZGxlLmxlbmd0aCkge1xuICAgICAgLy8gaWYgd2UgaGF2ZSBpZGxlIGNsaWVudHMgc2NoZWR1bGUgYSBwdWxzZSBpbW1lZGlhdGVseVxuICAgICAgaWYgKHRoaXMuX2lkbGUubGVuZ3RoKSB7XG4gICAgICAgIHByb2Nlc3MubmV4dFRpY2soKCkgPT4gdGhpcy5fcHVsc2VRdWV1ZSgpKVxuICAgICAgfVxuXG4gICAgICBpZiAoIXRoaXMub3B0aW9ucy5jb25uZWN0aW9uVGltZW91dE1pbGxpcykge1xuICAgICAgICB0aGlzLl9wZW5kaW5nUXVldWUucHVzaChuZXcgUGVuZGluZ0l0ZW0ocmVzcG9uc2UuY2FsbGJhY2spKVxuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHF1ZXVlQ2FsbGJhY2sgPSAoZXJyLCByZXMsIGRvbmUpID0+IHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpZClcbiAgICAgICAgcmVzcG9uc2UuY2FsbGJhY2soZXJyLCByZXMsIGRvbmUpXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHBlbmRpbmdJdGVtID0gbmV3IFBlbmRpbmdJdGVtKHF1ZXVlQ2FsbGJhY2spXG5cbiAgICAgIC8vIHNldCBjb25uZWN0aW9uIHRpbWVvdXQgb24gY2hlY2tpbmcgb3V0IGFuIGV4aXN0aW5nIGNsaWVudFxuICAgICAgY29uc3QgdGlkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIC8vIHJlbW92ZSB0aGUgY2FsbGJhY2sgZnJvbSBwZW5kaW5nIHdhaXRlcnMgYmVjYXVzZVxuICAgICAgICAvLyB3ZSdyZSBnb2luZyB0byBjYWxsIGl0IHdpdGggYSB0aW1lb3V0IGVycm9yXG4gICAgICAgIHJlbW92ZVdoZXJlKHRoaXMuX3BlbmRpbmdRdWV1ZSwgKGkpID0+IGkuY2FsbGJhY2sgPT09IHF1ZXVlQ2FsbGJhY2spXG4gICAgICAgIHBlbmRpbmdJdGVtLnRpbWVkT3V0ID0gdHJ1ZVxuICAgICAgICByZXNwb25zZS5jYWxsYmFjayhuZXcgRXJyb3IoJ3RpbWVvdXQgZXhjZWVkZWQgd2hlbiB0cnlpbmcgdG8gY29ubmVjdCcpKVxuICAgICAgfSwgdGhpcy5vcHRpb25zLmNvbm5lY3Rpb25UaW1lb3V0TWlsbGlzKVxuXG4gICAgICB0aGlzLl9wZW5kaW5nUXVldWUucHVzaChwZW5kaW5nSXRlbSlcbiAgICAgIHJldHVybiByZXN1bHRcbiAgICB9XG5cbiAgICB0aGlzLm5ld0NsaWVudChuZXcgUGVuZGluZ0l0ZW0ocmVzcG9uc2UuY2FsbGJhY2spKVxuXG4gICAgcmV0dXJuIHJlc3VsdFxuICB9XG5cbiAgbmV3Q2xpZW50IChwZW5kaW5nSXRlbSkge1xuICAgIGNvbnN0IGNsaWVudCA9IG5ldyB0aGlzLkNsaWVudCh0aGlzLm9wdGlvbnMpXG4gICAgdGhpcy5fY2xpZW50cy5wdXNoKGNsaWVudClcbiAgICBjb25zdCBpZGxlTGlzdGVuZXIgPSBtYWtlSWRsZUxpc3RlbmVyKHRoaXMsIGNsaWVudClcblxuICAgIHRoaXMubG9nKCdjaGVja2luZyBjbGllbnQgdGltZW91dCcpXG5cbiAgICAvLyBjb25uZWN0aW9uIHRpbWVvdXQgbG9naWNcbiAgICBsZXQgdGlkXG4gICAgbGV0IHRpbWVvdXRIaXQgPSBmYWxzZVxuICAgIGlmICh0aGlzLm9wdGlvbnMuY29ubmVjdGlvblRpbWVvdXRNaWxsaXMpIHtcbiAgICAgIHRpZCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLmxvZygnZW5kaW5nIGNsaWVudCBkdWUgdG8gdGltZW91dCcpXG4gICAgICAgIHRpbWVvdXRIaXQgPSB0cnVlXG4gICAgICAgIC8vIGZvcmNlIGtpbGwgdGhlIG5vZGUgZHJpdmVyLCBhbmQgbGV0IGxpYnBxIGRvIGl0cyB0ZWFyZG93blxuICAgICAgICBjbGllbnQuY29ubmVjdGlvbiA/IGNsaWVudC5jb25uZWN0aW9uLnN0cmVhbS5kZXN0cm95KCkgOiBjbGllbnQuZW5kKClcbiAgICAgIH0sIHRoaXMub3B0aW9ucy5jb25uZWN0aW9uVGltZW91dE1pbGxpcylcbiAgICB9XG5cbiAgICB0aGlzLmxvZygnY29ubmVjdGluZyBuZXcgY2xpZW50JylcbiAgICBjbGllbnQuY29ubmVjdCgoZXJyKSA9PiB7XG4gICAgICBpZiAodGlkKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aWQpXG4gICAgICB9XG4gICAgICBjbGllbnQub24oJ2Vycm9yJywgaWRsZUxpc3RlbmVyKVxuICAgICAgaWYgKGVycikge1xuICAgICAgICB0aGlzLmxvZygnY2xpZW50IGZhaWxlZCB0byBjb25uZWN0JywgZXJyKVxuICAgICAgICAvLyByZW1vdmUgdGhlIGRlYWQgY2xpZW50IGZyb20gb3VyIGxpc3Qgb2YgY2xpZW50c1xuICAgICAgICB0aGlzLl9jbGllbnRzID0gdGhpcy5fY2xpZW50cy5maWx0ZXIoYyA9PiBjICE9PSBjbGllbnQpXG4gICAgICAgIGlmICh0aW1lb3V0SGl0KSB7XG4gICAgICAgICAgZXJyLm1lc3NhZ2UgPSAnQ29ubmVjdGlvbiB0ZXJtaW5hdGVkIGR1ZSB0byBjb25uZWN0aW9uIHRpbWVvdXQnXG4gICAgICAgIH1cblxuICAgICAgICAvLyB0aGlzIGNsaWVudCB3b27igJl0IGJlIHJlbGVhc2VkLCBzbyBtb3ZlIG9uIGltbWVkaWF0ZWx5XG4gICAgICAgIHRoaXMuX3B1bHNlUXVldWUoKVxuXG4gICAgICAgIGlmICghcGVuZGluZ0l0ZW0udGltZWRPdXQpIHtcbiAgICAgICAgICBwZW5kaW5nSXRlbS5jYWxsYmFjayhlcnIsIHVuZGVmaW5lZCwgTk9PUClcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5sb2coJ25ldyBjbGllbnQgY29ubmVjdGVkJylcbiAgICAgICAgY2xpZW50LnJlbGVhc2UgPSByZWxlYXNlLmJpbmQodGhpcywgY2xpZW50KVxuICAgICAgICB0aGlzLmVtaXQoJ2Nvbm5lY3QnLCBjbGllbnQpXG4gICAgICAgIHRoaXMuZW1pdCgnYWNxdWlyZScsIGNsaWVudClcbiAgICAgICAgaWYgKCFwZW5kaW5nSXRlbS50aW1lZE91dCkge1xuICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMudmVyaWZ5KSB7XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMudmVyaWZ5KGNsaWVudCwgcGVuZGluZ0l0ZW0uY2FsbGJhY2spXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBlbmRpbmdJdGVtLmNhbGxiYWNrKHVuZGVmaW5lZCwgY2xpZW50LCBjbGllbnQucmVsZWFzZSlcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy52ZXJpZnkpIHtcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy52ZXJpZnkoY2xpZW50LCBjbGllbnQucmVsZWFzZSlcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2xpZW50LnJlbGVhc2UoKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBxdWVyeSAodGV4dCwgdmFsdWVzLCBjYikge1xuICAgIC8vIGd1YXJkIGNsYXVzZSBhZ2FpbnN0IHBhc3NpbmcgYSBmdW5jdGlvbiBhcyB0aGUgZmlyc3QgcGFyYW1ldGVyXG4gICAgaWYgKHR5cGVvZiB0ZXh0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IHByb21pc2lmeSh0aGlzLlByb21pc2UsIHRleHQpXG4gICAgICBzZXRJbW1lZGlhdGUoZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVzcG9uc2UuY2FsbGJhY2sobmV3IEVycm9yKCdQYXNzaW5nIGEgZnVuY3Rpb24gYXMgdGhlIGZpcnN0IHBhcmFtZXRlciB0byBwb29sLnF1ZXJ5IGlzIG5vdCBzdXBwb3J0ZWQnKSlcbiAgICAgIH0pXG4gICAgICByZXR1cm4gcmVzcG9uc2UucmVzdWx0XG4gICAgfVxuXG4gICAgLy8gYWxsb3cgcGxhaW4gdGV4dCBxdWVyeSB3aXRob3V0IHZhbHVlc1xuICAgIGlmICh0eXBlb2YgdmFsdWVzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjYiA9IHZhbHVlc1xuICAgICAgdmFsdWVzID0gdW5kZWZpbmVkXG4gICAgfVxuICAgIGNvbnN0IHJlc3BvbnNlID0gcHJvbWlzaWZ5KHRoaXMuUHJvbWlzZSwgY2IpXG4gICAgY2IgPSByZXNwb25zZS5jYWxsYmFja1xuICAgIHRoaXMuY29ubmVjdCgoZXJyLCBjbGllbnQpID0+IHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIGNiKGVycilcbiAgICAgIH1cbiAgICAgIHRoaXMubG9nKCdkaXNwYXRjaGluZyBxdWVyeScpXG4gICAgICBjbGllbnQucXVlcnkodGV4dCwgdmFsdWVzLCAoZXJyLCByZXMpID0+IHtcbiAgICAgICAgdGhpcy5sb2coJ3F1ZXJ5IGRpc3BhdGNoZWQnKVxuICAgICAgICBjbGllbnQucmVsZWFzZShlcnIpXG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICByZXR1cm4gY2IoZXJyKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBjYih1bmRlZmluZWQsIHJlcylcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KVxuICAgIHJldHVybiByZXNwb25zZS5yZXN1bHRcbiAgfVxuXG4gIGVuZCAoY2IpIHtcbiAgICB0aGlzLmxvZygnZW5kaW5nJylcbiAgICBpZiAodGhpcy5lbmRpbmcpIHtcbiAgICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcignQ2FsbGVkIGVuZCBvbiBwb29sIG1vcmUgdGhhbiBvbmNlJylcbiAgICAgIHJldHVybiBjYiA/IGNiKGVycikgOiB0aGlzLlByb21pc2UucmVqZWN0KGVycilcbiAgICB9XG4gICAgdGhpcy5lbmRpbmcgPSB0cnVlXG4gICAgY29uc3QgcHJvbWlzZWQgPSBwcm9taXNpZnkodGhpcy5Qcm9taXNlLCBjYilcbiAgICB0aGlzLl9lbmRDYWxsYmFjayA9IHByb21pc2VkLmNhbGxiYWNrXG4gICAgdGhpcy5fcHVsc2VRdWV1ZSgpXG4gICAgcmV0dXJuIHByb21pc2VkLnJlc3VsdFxuICB9XG5cbiAgZ2V0IHdhaXRpbmdDb3VudCAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3BlbmRpbmdRdWV1ZS5sZW5ndGhcbiAgfVxuXG4gIGdldCBpZGxlQ291bnQgKCkge1xuICAgIHJldHVybiB0aGlzLl9pZGxlLmxlbmd0aFxuICB9XG5cbiAgZ2V0IHRvdGFsQ291bnQgKCkge1xuICAgIHJldHVybiB0aGlzLl9jbGllbnRzLmxlbmd0aFxuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IFBvb2xcbiIsIid1c2Ugc3RyaWN0J1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTAtMjAxNyBCcmlhbiBDYXJsc29uIChicmlhbi5tLmNhcmxzb25AZ21haWwuY29tKVxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIFJFQURNRS5tZCBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbnZhciBOYXRpdmUgPSByZXF1aXJlKCdwZy1uYXRpdmUnKVxudmFyIFR5cGVPdmVycmlkZXMgPSByZXF1aXJlKCcuLi90eXBlLW92ZXJyaWRlcycpXG52YXIgc2VtdmVyID0gcmVxdWlyZSgnc2VtdmVyJylcbnZhciBwa2cgPSByZXF1aXJlKCcuLi8uLi9wYWNrYWdlLmpzb24nKVxudmFyIGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG52YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKVxudmFyIENvbm5lY3Rpb25QYXJhbWV0ZXJzID0gcmVxdWlyZSgnLi4vY29ubmVjdGlvbi1wYXJhbWV0ZXJzJylcblxudmFyIG1zZyA9ICdWZXJzaW9uID49ICcgKyBwa2cubWluTmF0aXZlVmVyc2lvbiArICcgb2YgcGctbmF0aXZlIHJlcXVpcmVkLidcbmFzc2VydChzZW12ZXIuZ3RlKE5hdGl2ZS52ZXJzaW9uLCBwa2cubWluTmF0aXZlVmVyc2lvbiksIG1zZylcblxudmFyIE5hdGl2ZVF1ZXJ5ID0gcmVxdWlyZSgnLi9xdWVyeScpXG5cbnZhciBDbGllbnQgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcylcbiAgY29uZmlnID0gY29uZmlnIHx8IHt9XG5cbiAgdGhpcy5fUHJvbWlzZSA9IGNvbmZpZy5Qcm9taXNlIHx8IGdsb2JhbC5Qcm9taXNlXG4gIHRoaXMuX3R5cGVzID0gbmV3IFR5cGVPdmVycmlkZXMoY29uZmlnLnR5cGVzKVxuXG4gIHRoaXMubmF0aXZlID0gbmV3IE5hdGl2ZSh7XG4gICAgdHlwZXM6IHRoaXMuX3R5cGVzXG4gIH0pXG5cbiAgdGhpcy5fcXVlcnlRdWV1ZSA9IFtdXG4gIHRoaXMuX2VuZGluZyA9IGZhbHNlXG4gIHRoaXMuX2Nvbm5lY3RpbmcgPSBmYWxzZVxuICB0aGlzLl9jb25uZWN0ZWQgPSBmYWxzZVxuICB0aGlzLl9xdWVyeWFibGUgPSB0cnVlXG5cbiAgLy8ga2VlcCB0aGVzZSBvbiB0aGUgb2JqZWN0IGZvciBsZWdhY3kgcmVhc29uc1xuICAvLyBmb3IgdGhlIHRpbWUgYmVpbmcuIFRPRE86IGRlcHJlY2F0ZSBhbGwgdGhpcyBqYXp6XG4gIHZhciBjcCA9IHRoaXMuY29ubmVjdGlvblBhcmFtZXRlcnMgPSBuZXcgQ29ubmVjdGlvblBhcmFtZXRlcnMoY29uZmlnKVxuICB0aGlzLnVzZXIgPSBjcC51c2VyXG4gIHRoaXMucGFzc3dvcmQgPSBjcC5wYXNzd29yZFxuICB0aGlzLmRhdGFiYXNlID0gY3AuZGF0YWJhc2VcbiAgdGhpcy5ob3N0ID0gY3AuaG9zdFxuICB0aGlzLnBvcnQgPSBjcC5wb3J0XG5cbiAgLy8gYSBoYXNoIHRvIGhvbGQgbmFtZWQgcXVlcmllc1xuICB0aGlzLm5hbWVkUXVlcmllcyA9IHt9XG59XG5cbkNsaWVudC5RdWVyeSA9IE5hdGl2ZVF1ZXJ5XG5cbnV0aWwuaW5oZXJpdHMoQ2xpZW50LCBFdmVudEVtaXR0ZXIpXG5cbkNsaWVudC5wcm90b3R5cGUuX2Vycm9yQWxsUXVlcmllcyA9IGZ1bmN0aW9uIChlcnIpIHtcbiAgY29uc3QgZW5xdWV1ZUVycm9yID0gKHF1ZXJ5KSA9PiB7XG4gICAgcHJvY2Vzcy5uZXh0VGljaygoKSA9PiB7XG4gICAgICBxdWVyeS5uYXRpdmUgPSB0aGlzLm5hdGl2ZVxuICAgICAgcXVlcnkuaGFuZGxlRXJyb3IoZXJyKVxuICAgIH0pXG4gIH1cblxuICBpZiAodGhpcy5faGFzQWN0aXZlUXVlcnkoKSkge1xuICAgIGVucXVldWVFcnJvcih0aGlzLl9hY3RpdmVRdWVyeSlcbiAgICB0aGlzLl9hY3RpdmVRdWVyeSA9IG51bGxcbiAgfVxuXG4gIHRoaXMuX3F1ZXJ5UXVldWUuZm9yRWFjaChlbnF1ZXVlRXJyb3IpXG4gIHRoaXMuX3F1ZXJ5UXVldWUubGVuZ3RoID0gMFxufVxuXG4vLyBjb25uZWN0IHRvIHRoZSBiYWNrZW5kXG4vLyBwYXNzIGFuIG9wdGlvbmFsIGNhbGxiYWNrIHRvIGJlIGNhbGxlZCBvbmNlIGNvbm5lY3RlZFxuLy8gb3Igd2l0aCBhbiBlcnJvciBpZiB0aGVyZSB3YXMgYSBjb25uZWN0aW9uIGVycm9yXG5DbGllbnQucHJvdG90eXBlLl9jb25uZWN0ID0gZnVuY3Rpb24gKGNiKSB7XG4gIHZhciBzZWxmID0gdGhpc1xuXG4gIGlmICh0aGlzLl9jb25uZWN0aW5nKSB7XG4gICAgcHJvY2Vzcy5uZXh0VGljaygoKSA9PiBjYihuZXcgRXJyb3IoJ0NsaWVudCBoYXMgYWxyZWFkeSBiZWVuIGNvbm5lY3RlZC4gWW91IGNhbm5vdCByZXVzZSBhIGNsaWVudC4nKSkpXG4gICAgcmV0dXJuXG4gIH1cblxuICB0aGlzLl9jb25uZWN0aW5nID0gdHJ1ZVxuXG4gIHRoaXMuY29ubmVjdGlvblBhcmFtZXRlcnMuZ2V0TGlicHFDb25uZWN0aW9uU3RyaW5nKGZ1bmN0aW9uIChlcnIsIGNvblN0cmluZykge1xuICAgIGlmIChlcnIpIHJldHVybiBjYihlcnIpXG4gICAgc2VsZi5uYXRpdmUuY29ubmVjdChjb25TdHJpbmcsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIGlmIChlcnIpIHJldHVybiBjYihlcnIpXG5cbiAgICAgIC8vIHNldCBpbnRlcm5hbCBzdGF0ZXMgdG8gY29ubmVjdGVkXG4gICAgICBzZWxmLl9jb25uZWN0ZWQgPSB0cnVlXG5cbiAgICAgIC8vIGhhbmRsZSBjb25uZWN0aW9uIGVycm9ycyBmcm9tIHRoZSBuYXRpdmUgbGF5ZXJcbiAgICAgIHNlbGYubmF0aXZlLm9uKCdlcnJvcicsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgc2VsZi5fcXVlcnlhYmxlID0gZmFsc2VcbiAgICAgICAgc2VsZi5fZXJyb3JBbGxRdWVyaWVzKGVycilcbiAgICAgICAgc2VsZi5lbWl0KCdlcnJvcicsIGVycilcbiAgICAgIH0pXG5cbiAgICAgIHNlbGYubmF0aXZlLm9uKCdub3RpZmljYXRpb24nLCBmdW5jdGlvbiAobXNnKSB7XG4gICAgICAgIHNlbGYuZW1pdCgnbm90aWZpY2F0aW9uJywge1xuICAgICAgICAgIGNoYW5uZWw6IG1zZy5yZWxuYW1lLFxuICAgICAgICAgIHBheWxvYWQ6IG1zZy5leHRyYVxuICAgICAgICB9KVxuICAgICAgfSlcblxuICAgICAgLy8gc2lnbmFsIHdlIGFyZSBjb25uZWN0ZWQgbm93XG4gICAgICBzZWxmLmVtaXQoJ2Nvbm5lY3QnKVxuICAgICAgc2VsZi5fcHVsc2VRdWVyeVF1ZXVlKHRydWUpXG5cbiAgICAgIGNiKClcbiAgICB9KVxuICB9KVxufVxuXG5DbGllbnQucHJvdG90eXBlLmNvbm5lY3QgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgaWYgKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5fY29ubmVjdChjYWxsYmFjaylcbiAgICByZXR1cm5cbiAgfVxuXG4gIHJldHVybiBuZXcgdGhpcy5fUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgdGhpcy5fY29ubmVjdCgoZXJyb3IpID0+IHtcbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXNvbHZlKClcbiAgICAgIH1cbiAgICB9KVxuICB9KVxufVxuXG4vLyBzZW5kIGEgcXVlcnkgdG8gdGhlIHNlcnZlclxuLy8gdGhpcyBtZXRob2QgaXMgaGlnaGx5IG92ZXJsb2FkZWQgdG8gdGFrZVxuLy8gMSkgc3RyaW5nIHF1ZXJ5LCBvcHRpb25hbCBhcnJheSBvZiBwYXJhbWV0ZXJzLCBvcHRpb25hbCBmdW5jdGlvbiBjYWxsYmFja1xuLy8gMikgb2JqZWN0IHF1ZXJ5IHdpdGgge1xuLy8gICAgc3RyaW5nIHF1ZXJ5XG4vLyAgICBvcHRpb25hbCBhcnJheSB2YWx1ZXMsXG4vLyAgICBvcHRpb25hbCBmdW5jdGlvbiBjYWxsYmFjayBpbnN0ZWFkIG9mIGFzIGEgc2VwYXJhdGUgcGFyYW1ldGVyXG4vLyAgICBvcHRpb25hbCBzdHJpbmcgbmFtZSB0byBuYW1lICYgY2FjaGUgdGhlIHF1ZXJ5IHBsYW5cbi8vICAgIG9wdGlvbmFsIHN0cmluZyByb3dNb2RlID0gJ2FycmF5JyBmb3IgYW4gYXJyYXkgb2YgcmVzdWx0c1xuLy8gIH1cbkNsaWVudC5wcm90b3R5cGUucXVlcnkgPSBmdW5jdGlvbiAoY29uZmlnLCB2YWx1ZXMsIGNhbGxiYWNrKSB7XG4gIHZhciBxdWVyeVxuICB2YXIgcmVzdWx0XG4gIHZhciByZWFkVGltZW91dFxuICB2YXIgcmVhZFRpbWVvdXRUaW1lclxuICB2YXIgcXVlcnlDYWxsYmFja1xuXG4gIGlmIChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDbGllbnQgd2FzIHBhc3NlZCBhIG51bGwgb3IgdW5kZWZpbmVkIHF1ZXJ5JylcbiAgfSBlbHNlIGlmICh0eXBlb2YgY29uZmlnLnN1Ym1pdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJlYWRUaW1lb3V0ID0gY29uZmlnLnF1ZXJ5X3RpbWVvdXQgfHwgdGhpcy5jb25uZWN0aW9uUGFyYW1ldGVycy5xdWVyeV90aW1lb3V0XG4gICAgcmVzdWx0ID0gcXVlcnkgPSBjb25maWdcbiAgICAvLyBhY2NlcHQgcXVlcnkobmV3IFF1ZXJ5KC4uLiksIChlcnIsIHJlcykgPT4geyB9KSBzdHlsZVxuICAgIGlmICh0eXBlb2YgdmFsdWVzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjb25maWcuY2FsbGJhY2sgPSB2YWx1ZXNcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmVhZFRpbWVvdXQgPSB0aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzLnF1ZXJ5X3RpbWVvdXRcbiAgICBxdWVyeSA9IG5ldyBOYXRpdmVRdWVyeShjb25maWcsIHZhbHVlcywgY2FsbGJhY2spXG4gICAgaWYgKCFxdWVyeS5jYWxsYmFjaykge1xuICAgICAgbGV0IHJlc29sdmVPdXQsIHJlamVjdE91dFxuICAgICAgcmVzdWx0ID0gbmV3IHRoaXMuX1Byb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICByZXNvbHZlT3V0ID0gcmVzb2x2ZVxuICAgICAgICByZWplY3RPdXQgPSByZWplY3RcbiAgICAgIH0pXG4gICAgICBxdWVyeS5jYWxsYmFjayA9IChlcnIsIHJlcykgPT4gZXJyID8gcmVqZWN0T3V0KGVycikgOiByZXNvbHZlT3V0KHJlcylcbiAgICB9XG4gIH1cblxuICBpZiAocmVhZFRpbWVvdXQpIHtcbiAgICBxdWVyeUNhbGxiYWNrID0gcXVlcnkuY2FsbGJhY2tcblxuICAgIHJlYWRUaW1lb3V0VGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHZhciBlcnJvciA9IG5ldyBFcnJvcignUXVlcnkgcmVhZCB0aW1lb3V0JylcblxuICAgICAgcHJvY2Vzcy5uZXh0VGljaygoKSA9PiB7XG4gICAgICAgIHF1ZXJ5LmhhbmRsZUVycm9yKGVycm9yLCB0aGlzLmNvbm5lY3Rpb24pXG4gICAgICB9KVxuXG4gICAgICBxdWVyeUNhbGxiYWNrKGVycm9yKVxuXG4gICAgICAvLyB3ZSBhbHJlYWR5IHJldHVybmVkIGFuIGVycm9yLFxuICAgICAgLy8ganVzdCBkbyBub3RoaW5nIGlmIHF1ZXJ5IGNvbXBsZXRlc1xuICAgICAgcXVlcnkuY2FsbGJhY2sgPSAoKSA9PiB7fVxuXG4gICAgICAvLyBSZW1vdmUgZnJvbSBxdWV1ZVxuICAgICAgdmFyIGluZGV4ID0gdGhpcy5fcXVlcnlRdWV1ZS5pbmRleE9mKHF1ZXJ5KVxuICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgdGhpcy5fcXVlcnlRdWV1ZS5zcGxpY2UoaW5kZXgsIDEpXG4gICAgICB9XG5cbiAgICAgIHRoaXMuX3B1bHNlUXVlcnlRdWV1ZSgpXG4gICAgfSwgcmVhZFRpbWVvdXQpXG5cbiAgICBxdWVyeS5jYWxsYmFjayA9IChlcnIsIHJlcykgPT4ge1xuICAgICAgY2xlYXJUaW1lb3V0KHJlYWRUaW1lb3V0VGltZXIpXG4gICAgICBxdWVyeUNhbGxiYWNrKGVyciwgcmVzKVxuICAgIH1cbiAgfVxuXG4gIGlmICghdGhpcy5fcXVlcnlhYmxlKSB7XG4gICAgcXVlcnkubmF0aXZlID0gdGhpcy5uYXRpdmVcbiAgICBwcm9jZXNzLm5leHRUaWNrKCgpID0+IHtcbiAgICAgIHF1ZXJ5LmhhbmRsZUVycm9yKG5ldyBFcnJvcignQ2xpZW50IGhhcyBlbmNvdW50ZXJlZCBhIGNvbm5lY3Rpb24gZXJyb3IgYW5kIGlzIG5vdCBxdWVyeWFibGUnKSlcbiAgICB9KVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIGlmICh0aGlzLl9lbmRpbmcpIHtcbiAgICBxdWVyeS5uYXRpdmUgPSB0aGlzLm5hdGl2ZVxuICAgIHByb2Nlc3MubmV4dFRpY2soKCkgPT4ge1xuICAgICAgcXVlcnkuaGFuZGxlRXJyb3IobmV3IEVycm9yKCdDbGllbnQgd2FzIGNsb3NlZCBhbmQgaXMgbm90IHF1ZXJ5YWJsZScpKVxuICAgIH0pXG4gICAgcmV0dXJuIHJlc3VsdFxuICB9XG5cbiAgdGhpcy5fcXVlcnlRdWV1ZS5wdXNoKHF1ZXJ5KVxuICB0aGlzLl9wdWxzZVF1ZXJ5UXVldWUoKVxuICByZXR1cm4gcmVzdWx0XG59XG5cbi8vIGRpc2Nvbm5lY3QgZnJvbSB0aGUgYmFja2VuZCBzZXJ2ZXJcbkNsaWVudC5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24gKGNiKSB7XG4gIHZhciBzZWxmID0gdGhpc1xuXG4gIHRoaXMuX2VuZGluZyA9IHRydWVcblxuICBpZiAoIXRoaXMuX2Nvbm5lY3RlZCkge1xuICAgIHRoaXMub25jZSgnY29ubmVjdCcsIHRoaXMuZW5kLmJpbmQodGhpcywgY2IpKVxuICB9XG4gIHZhciByZXN1bHRcbiAgaWYgKCFjYikge1xuICAgIHJlc3VsdCA9IG5ldyB0aGlzLl9Qcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIGNiID0gKGVycikgPT4gZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKClcbiAgICB9KVxuICB9XG4gIHRoaXMubmF0aXZlLmVuZChmdW5jdGlvbiAoKSB7XG4gICAgc2VsZi5fZXJyb3JBbGxRdWVyaWVzKG5ldyBFcnJvcignQ29ubmVjdGlvbiB0ZXJtaW5hdGVkJykpXG5cbiAgICBwcm9jZXNzLm5leHRUaWNrKCgpID0+IHtcbiAgICAgIHNlbGYuZW1pdCgnZW5kJylcbiAgICAgIGlmIChjYikgY2IoKVxuICAgIH0pXG4gIH0pXG4gIHJldHVybiByZXN1bHRcbn1cblxuQ2xpZW50LnByb3RvdHlwZS5faGFzQWN0aXZlUXVlcnkgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLl9hY3RpdmVRdWVyeSAmJiB0aGlzLl9hY3RpdmVRdWVyeS5zdGF0ZSAhPT0gJ2Vycm9yJyAmJiB0aGlzLl9hY3RpdmVRdWVyeS5zdGF0ZSAhPT0gJ2VuZCdcbn1cblxuQ2xpZW50LnByb3RvdHlwZS5fcHVsc2VRdWVyeVF1ZXVlID0gZnVuY3Rpb24gKGluaXRpYWxDb25uZWN0aW9uKSB7XG4gIGlmICghdGhpcy5fY29ubmVjdGVkKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgaWYgKHRoaXMuX2hhc0FjdGl2ZVF1ZXJ5KCkpIHtcbiAgICByZXR1cm5cbiAgfVxuICB2YXIgcXVlcnkgPSB0aGlzLl9xdWVyeVF1ZXVlLnNoaWZ0KClcbiAgaWYgKCFxdWVyeSkge1xuICAgIGlmICghaW5pdGlhbENvbm5lY3Rpb24pIHtcbiAgICAgIHRoaXMuZW1pdCgnZHJhaW4nKVxuICAgIH1cbiAgICByZXR1cm5cbiAgfVxuICB0aGlzLl9hY3RpdmVRdWVyeSA9IHF1ZXJ5XG4gIHF1ZXJ5LnN1Ym1pdCh0aGlzKVxuICB2YXIgc2VsZiA9IHRoaXNcbiAgcXVlcnkub25jZSgnX2RvbmUnLCBmdW5jdGlvbiAoKSB7XG4gICAgc2VsZi5fcHVsc2VRdWVyeVF1ZXVlKClcbiAgfSlcbn1cblxuLy8gYXR0ZW1wdCB0byBjYW5jZWwgYW4gaW4tcHJvZ3Jlc3MgcXVlcnlcbkNsaWVudC5wcm90b3R5cGUuY2FuY2VsID0gZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gIGlmICh0aGlzLl9hY3RpdmVRdWVyeSA9PT0gcXVlcnkpIHtcbiAgICB0aGlzLm5hdGl2ZS5jYW5jZWwoZnVuY3Rpb24gKCkge30pXG4gIH0gZWxzZSBpZiAodGhpcy5fcXVlcnlRdWV1ZS5pbmRleE9mKHF1ZXJ5KSAhPT0gLTEpIHtcbiAgICB0aGlzLl9xdWVyeVF1ZXVlLnNwbGljZSh0aGlzLl9xdWVyeVF1ZXVlLmluZGV4T2YocXVlcnkpLCAxKVxuICB9XG59XG5cbkNsaWVudC5wcm90b3R5cGUuc2V0VHlwZVBhcnNlciA9IGZ1bmN0aW9uIChvaWQsIGZvcm1hdCwgcGFyc2VGbikge1xuICByZXR1cm4gdGhpcy5fdHlwZXMuc2V0VHlwZVBhcnNlcihvaWQsIGZvcm1hdCwgcGFyc2VGbilcbn1cblxuQ2xpZW50LnByb3RvdHlwZS5nZXRUeXBlUGFyc2VyID0gZnVuY3Rpb24gKG9pZCwgZm9ybWF0KSB7XG4gIHJldHVybiB0aGlzLl90eXBlcy5nZXRUeXBlUGFyc2VyKG9pZCwgZm9ybWF0KVxufVxuIiwidmFyIExpYnBxID0gcmVxdWlyZSgnbGlicHEnKVxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxudmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJylcbnZhciBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKVxudmFyIHR5cGVzID0gcmVxdWlyZSgncGctdHlwZXMnKVxudmFyIGJ1aWxkUmVzdWx0ID0gcmVxdWlyZSgnLi9saWIvYnVpbGQtcmVzdWx0JylcbnZhciBDb3B5U3RyZWFtID0gcmVxdWlyZSgnLi9saWIvY29weS1zdHJlYW0nKVxuXG52YXIgQ2xpZW50ID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBDbGllbnQpKSB7XG4gICAgcmV0dXJuIG5ldyBDbGllbnQoY29uZmlnKVxuICB9XG5cbiAgY29uZmlnID0gY29uZmlnIHx8IHt9XG5cbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcylcbiAgdGhpcy5wcSA9IG5ldyBMaWJwcSgpXG4gIHRoaXMuX3JlYWRpbmcgPSBmYWxzZVxuICB0aGlzLl9yZWFkID0gdGhpcy5fcmVhZC5iaW5kKHRoaXMpXG5cbiAgLy8gYWxsb3cgY3VzdG9tIHR5cGUgY29udmVyc3Rpb24gdG8gYmUgcGFzc2VkIGluXG4gIHRoaXMuX3R5cGVzID0gY29uZmlnLnR5cGVzIHx8IHR5cGVzXG5cbiAgLy8gYWxsb3cgY29uZmlnIHRvIHNwZWNpZnkgcmV0dXJuaW5nIHJlc3VsdHNcbiAgLy8gYXMgYW4gYXJyYXkgb2YgdmFsdWVzIGluc3RlYWQgb2YgYSBoYXNoXG4gIHRoaXMuYXJyYXlNb2RlID0gY29uZmlnLmFycmF5TW9kZSB8fCBmYWxzZVxuICB0aGlzLl9yZXN1bHRDb3VudCA9IDBcbiAgdGhpcy5fcm93cyA9IHVuZGVmaW5lZFxuICB0aGlzLl9yZXN1bHRzID0gdW5kZWZpbmVkXG5cbiAgLy8gbGF6eSBzdGFydCB0aGUgcmVhZGVyIGlmIG5vdGlmaWNhdGlvbnMgYXJlIGxpc3RlbmVkIGZvclxuICAvLyB0aGlzIHdheSBpZiB5b3Ugb25seSBydW4gc3luYyBxdWVyaWVzIHlvdSB3b250IGJsb2NrXG4gIC8vIHRoZSBldmVudCBsb29wIGFydGlmaWNpYWxseVxuICB0aGlzLm9uKCduZXdMaXN0ZW5lcicsIChldmVudCkgPT4ge1xuICAgIGlmIChldmVudCAhPT0gJ25vdGlmaWNhdGlvbicpIHJldHVyblxuICAgIHRoaXMuX3N0YXJ0UmVhZGluZygpXG4gIH0pXG5cbiAgdGhpcy5vbigncmVzdWx0JywgdGhpcy5fb25SZXN1bHQuYmluZCh0aGlzKSlcbiAgdGhpcy5vbigncmVhZHlGb3JRdWVyeScsIHRoaXMuX29uUmVhZHlGb3JRdWVyeS5iaW5kKHRoaXMpKVxufVxuXG51dGlsLmluaGVyaXRzKENsaWVudCwgRXZlbnRFbWl0dGVyKVxuXG5DbGllbnQucHJvdG90eXBlLmNvbm5lY3QgPSBmdW5jdGlvbiAocGFyYW1zLCBjYikge1xuICB0aGlzLnBxLmNvbm5lY3QocGFyYW1zLCBjYilcbn1cblxuQ2xpZW50LnByb3RvdHlwZS5jb25uZWN0U3luYyA9IGZ1bmN0aW9uIChwYXJhbXMpIHtcbiAgdGhpcy5wcS5jb25uZWN0U3luYyhwYXJhbXMpXG59XG5cbkNsaWVudC5wcm90b3R5cGUucXVlcnkgPSBmdW5jdGlvbiAodGV4dCwgdmFsdWVzLCBjYikge1xuICB2YXIgcXVlcnlGblxuXG4gIGlmICh0eXBlb2YgdmFsdWVzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2IgPSB2YWx1ZXNcbiAgICBxdWVyeUZuID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gc2VsZi5wcS5zZW5kUXVlcnkodGV4dCkgfVxuICB9IGVsc2Uge1xuICAgIHF1ZXJ5Rm4gPSBmdW5jdGlvbiAoKSB7IHJldHVybiBzZWxmLnBxLnNlbmRRdWVyeVBhcmFtcyh0ZXh0LCB2YWx1ZXMpIH1cbiAgfVxuXG4gIHZhciBzZWxmID0gdGhpc1xuXG4gIHNlbGYuX2Rpc3BhdGNoUXVlcnkoc2VsZi5wcSwgcXVlcnlGbiwgZnVuY3Rpb24gKGVycikge1xuICAgIGlmIChlcnIpIHJldHVybiBjYihlcnIpXG5cbiAgICBzZWxmLl9hd2FpdFJlc3VsdChjYilcbiAgfSlcbn1cblxuQ2xpZW50LnByb3RvdHlwZS5wcmVwYXJlID0gZnVuY3Rpb24gKHN0YXRlbWVudE5hbWUsIHRleHQsIG5QYXJhbXMsIGNiKSB7XG4gIHZhciBzZWxmID0gdGhpc1xuICB2YXIgZm4gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHNlbGYucHEuc2VuZFByZXBhcmUoc3RhdGVtZW50TmFtZSwgdGV4dCwgblBhcmFtcylcbiAgfVxuXG4gIHNlbGYuX2Rpc3BhdGNoUXVlcnkoc2VsZi5wcSwgZm4sIGZ1bmN0aW9uIChlcnIpIHtcbiAgICBpZiAoZXJyKSByZXR1cm4gY2IoZXJyKVxuICAgIHNlbGYuX2F3YWl0UmVzdWx0KGNiKVxuICB9KVxufVxuXG5DbGllbnQucHJvdG90eXBlLmV4ZWN1dGUgPSBmdW5jdGlvbiAoc3RhdGVtZW50TmFtZSwgcGFyYW1ldGVycywgY2IpIHtcbiAgdmFyIHNlbGYgPSB0aGlzXG5cbiAgdmFyIGZuID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBzZWxmLnBxLnNlbmRRdWVyeVByZXBhcmVkKHN0YXRlbWVudE5hbWUsIHBhcmFtZXRlcnMpXG4gIH1cblxuICBzZWxmLl9kaXNwYXRjaFF1ZXJ5KHNlbGYucHEsIGZuLCBmdW5jdGlvbiAoZXJyLCByb3dzKSB7XG4gICAgaWYgKGVycikgcmV0dXJuIGNiKGVycilcbiAgICBzZWxmLl9hd2FpdFJlc3VsdChjYilcbiAgfSlcbn1cblxuQ2xpZW50LnByb3RvdHlwZS5nZXRDb3B5U3RyZWFtID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLnBxLnNldE5vbkJsb2NraW5nKHRydWUpXG4gIHRoaXMuX3N0b3BSZWFkaW5nKClcbiAgcmV0dXJuIG5ldyBDb3B5U3RyZWFtKHRoaXMucHEpXG59XG5cbi8vIGNhbmNlbCBhIGN1cnJlbnRseSBleGVjdXRpbmcgcXVlcnlcbkNsaWVudC5wcm90b3R5cGUuY2FuY2VsID0gZnVuY3Rpb24gKGNiKSB7XG4gIGFzc2VydChjYiwgJ0NhbGxiYWNrIGlzIHJlcXVpcmVkJylcbiAgLy8gcmVzdWx0IGlzIGVpdGhlciB0cnVlIG9yIGEgc3RyaW5nIGNvbnRhaW5pbmcgYW4gZXJyb3JcbiAgdmFyIHJlc3VsdCA9IHRoaXMucHEuY2FuY2VsKClcbiAgcmV0dXJuIHNldEltbWVkaWF0ZShmdW5jdGlvbiAoKSB7XG4gICAgY2IocmVzdWx0ID09PSB0cnVlID8gdW5kZWZpbmVkIDogbmV3IEVycm9yKHJlc3VsdCkpXG4gIH0pXG59XG5cbkNsaWVudC5wcm90b3R5cGUucXVlcnlTeW5jID0gZnVuY3Rpb24gKHRleHQsIHZhbHVlcykge1xuICBpZiAodmFsdWVzKSB7XG4gICAgdGhpcy5wcS5leGVjUGFyYW1zKHRleHQsIHZhbHVlcylcbiAgfSBlbHNlIHtcbiAgICB0aGlzLnBxLmV4ZWModGV4dClcbiAgfVxuXG4gIHRocm93SWZFcnJvcih0aGlzLnBxKVxuICBjb25zdCByZXN1bHQgPSBidWlsZFJlc3VsdCh0aGlzLnBxLCB0aGlzLl90eXBlcywgdGhpcy5hcnJheU1vZGUpXG4gIHJldHVybiByZXN1bHQucm93c1xufVxuXG5DbGllbnQucHJvdG90eXBlLnByZXBhcmVTeW5jID0gZnVuY3Rpb24gKHN0YXRlbWVudE5hbWUsIHRleHQsIG5QYXJhbXMpIHtcbiAgdGhpcy5wcS5wcmVwYXJlKHN0YXRlbWVudE5hbWUsIHRleHQsIG5QYXJhbXMpXG4gIHRocm93SWZFcnJvcih0aGlzLnBxKVxufVxuXG5DbGllbnQucHJvdG90eXBlLmV4ZWN1dGVTeW5jID0gZnVuY3Rpb24gKHN0YXRlbWVudE5hbWUsIHBhcmFtZXRlcnMpIHtcbiAgdGhpcy5wcS5leGVjUHJlcGFyZWQoc3RhdGVtZW50TmFtZSwgcGFyYW1ldGVycylcbiAgdGhyb3dJZkVycm9yKHRoaXMucHEpXG4gIHJldHVybiBidWlsZFJlc3VsdCh0aGlzLnBxLCB0aGlzLl90eXBlcywgdGhpcy5hcnJheU1vZGUpLnJvd3Ncbn1cblxuQ2xpZW50LnByb3RvdHlwZS5lc2NhcGVMaXRlcmFsID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiB0aGlzLnBxLmVzY2FwZUxpdGVyYWwodmFsdWUpXG59XG5cbkNsaWVudC5wcm90b3R5cGUuZXNjYXBlSWRlbnRpZmllciA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICByZXR1cm4gdGhpcy5wcS5lc2NhcGVJZGVudGlmaWVyKHZhbHVlKVxufVxuXG4vLyBleHBvcnQgdGhlIHZlcnNpb24gbnVtYmVyIHNvIHdlIGNhbiBjaGVjayBpdCBpbiBub2RlLXBvc3RncmVzXG5tb2R1bGUuZXhwb3J0cy52ZXJzaW9uID0gcmVxdWlyZSgnLi9wYWNrYWdlLmpzb24nKS52ZXJzaW9uXG5cbkNsaWVudC5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24gKGNiKSB7XG4gIHRoaXMuX3N0b3BSZWFkaW5nKClcbiAgdGhpcy5wcS5maW5pc2goKVxuICBpZiAoY2IpIHNldEltbWVkaWF0ZShjYilcbn1cblxuQ2xpZW50LnByb3RvdHlwZS5fcmVhZEVycm9yID0gZnVuY3Rpb24gKG1lc3NhZ2UpIHtcbiAgdmFyIGVyciA9IG5ldyBFcnJvcihtZXNzYWdlIHx8IHRoaXMucHEuZXJyb3JNZXNzYWdlKCkpXG4gIHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpXG59XG5cbkNsaWVudC5wcm90b3R5cGUuX3N0b3BSZWFkaW5nID0gZnVuY3Rpb24gKCkge1xuICBpZiAoIXRoaXMuX3JlYWRpbmcpIHJldHVyblxuICB0aGlzLl9yZWFkaW5nID0gZmFsc2VcbiAgdGhpcy5wcS5zdG9wUmVhZGVyKClcbiAgdGhpcy5wcS5yZW1vdmVMaXN0ZW5lcigncmVhZGFibGUnLCB0aGlzLl9yZWFkKVxufVxuXG5DbGllbnQucHJvdG90eXBlLl9jb25zdW1lUXVlcnlSZXN1bHRzID0gZnVuY3Rpb24gKHBxKSB7XG4gIHJldHVybiBidWlsZFJlc3VsdChwcSwgdGhpcy5fdHlwZXMsIHRoaXMuYXJyYXlNb2RlKVxufVxuXG5DbGllbnQucHJvdG90eXBlLl9lbWl0UmVzdWx0ID0gZnVuY3Rpb24gKHBxKSB7XG4gIHZhciBzdGF0dXMgPSBwcS5yZXN1bHRTdGF0dXMoKVxuICBzd2l0Y2ggKHN0YXR1cykge1xuICAgIGNhc2UgJ1BHUkVTX0ZBVEFMX0VSUk9SJzpcbiAgICAgIHRoaXMuX3F1ZXJ5RXJyb3IgPSBuZXcgRXJyb3IodGhpcy5wcS5yZXN1bHRFcnJvck1lc3NhZ2UoKSlcbiAgICAgIGJyZWFrXG5cbiAgICBjYXNlICdQR1JFU19UVVBMRVNfT0snOlxuICAgIGNhc2UgJ1BHUkVTX0NPTU1BTkRfT0snOlxuICAgIGNhc2UgJ1BHUkVTX0VNUFRZX1FVRVJZJzpcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuX2NvbnN1bWVRdWVyeVJlc3VsdHModGhpcy5wcSlcbiAgICAgIHRoaXMuZW1pdCgncmVzdWx0JywgcmVzdWx0KVxuICAgICAgYnJlYWtcblxuICAgIGNhc2UgJ1BHUkVTX0NPUFlfT1VUJzpcbiAgICBjYXNlICdQR1JFU19DT1BZX0JPVEgnOiB7XG4gICAgICBicmVha1xuICAgIH1cblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aGlzLl9yZWFkRXJyb3IoJ3VucmVjb2duaXplZCBjb21tYW5kIHN0YXR1czogJyArIHN0YXR1cylcbiAgICAgIGJyZWFrXG4gIH1cbiAgcmV0dXJuIHN0YXR1c1xufVxuXG4vLyBjYWxsZWQgd2hlbiBsaWJwcSBpcyByZWFkYWJsZVxuQ2xpZW50LnByb3RvdHlwZS5fcmVhZCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHBxID0gdGhpcy5wcVxuICAvLyByZWFkIHdhaXRpbmcgZGF0YSBmcm9tIHRoZSBzb2NrZXRcbiAgLy8gZS5nLiBjbGVhciB0aGUgcGVuZGluZyAnc2VsZWN0J1xuICBpZiAoIXBxLmNvbnN1bWVJbnB1dCgpKSB7XG4gICAgLy8gaWYgY29uc3VtZUlucHV0IHJldHVybnMgZmFsc2VcbiAgICAvLyB0aGFuIGEgcmVhZCBlcnJvciBoYXMgYmVlbiBlbmNvdW50ZXJlZFxuICAgIHJldHVybiB0aGlzLl9yZWFkRXJyb3IoKVxuICB9XG5cbiAgLy8gY2hlY2sgaWYgdGhlcmUgaXMgc3RpbGwgb3V0c3RhbmRpbmcgZGF0YVxuICAvLyBpZiBzbywgd2FpdCBmb3IgaXQgYWxsIHRvIGNvbWUgaW5cbiAgaWYgKHBxLmlzQnVzeSgpKSB7XG4gICAgcmV0dXJuXG4gIH1cblxuICAvLyBsb2FkIG91ciByZXN1bHQgb2JqZWN0XG5cbiAgd2hpbGUgKHBxLmdldFJlc3VsdCgpKSB7XG4gICAgY29uc3QgcmVzdWx0U3RhdHVzID0gdGhpcy5fZW1pdFJlc3VsdCh0aGlzLnBxKVxuXG4gICAgLy8gaWYgdGhlIGNvbW1hbmQgaW5pdGlhdGVkIGNvcHkgbW9kZSB3ZSBuZWVkIHRvIGJyZWFrIG91dCBvZiB0aGUgcmVhZCBsb29wXG4gICAgLy8gc28gYSBzdWJzdHJlYW0gY2FuIGJlZ2luIHRvIHJlYWQgY29weSBkYXRhXG4gICAgaWYgKHJlc3VsdFN0YXR1cyA9PT0gJ1BHUkVTX0NPUFlfQk9USCcgfHwgcmVzdWx0U3RhdHVzID09PSAnUEdSRVNfQ09QWV9PVVQnKSB7XG4gICAgICBicmVha1xuICAgIH1cblxuICAgIC8vIGlmIHJlYWRpbmcgbXVsdGlwbGUgcmVzdWx0cywgc29tZXRpbWVzIHRoZSBmb2xsb3dpbmcgcmVzdWx0cyBtaWdodCBjYXVzZVxuICAgIC8vIGEgYmxvY2tpbmcgcmVhZC4gaW4gdGhpcyBzY2VuYXJpbyB5aWVsZCBiYWNrIG9mZiB0aGUgcmVhZGVyIHVudGlsIGxpYnBxIGlzIHJlYWRhYmxlXG4gICAgaWYgKHBxLmlzQnVzeSgpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gIH1cblxuICB0aGlzLmVtaXQoJ3JlYWR5Rm9yUXVlcnknKVxuXG4gIHZhciBub3RpY2UgPSB0aGlzLnBxLm5vdGlmaWVzKClcbiAgd2hpbGUgKG5vdGljZSkge1xuICAgIHRoaXMuZW1pdCgnbm90aWZpY2F0aW9uJywgbm90aWNlKVxuICAgIG5vdGljZSA9IHRoaXMucHEubm90aWZpZXMoKVxuICB9XG59XG5cbi8vIGVuc3VyZXMgdGhlIGNsaWVudCBpcyByZWFkaW5nIGFuZFxuLy8gZXZlcnl0aGluZyBpcyBzZXQgdXAgZm9yIGFzeW5jIGlvXG5DbGllbnQucHJvdG90eXBlLl9zdGFydFJlYWRpbmcgPSBmdW5jdGlvbiAoKSB7XG4gIGlmICh0aGlzLl9yZWFkaW5nKSByZXR1cm5cbiAgdGhpcy5fcmVhZGluZyA9IHRydWVcbiAgdGhpcy5wcS5vbigncmVhZGFibGUnLCB0aGlzLl9yZWFkKVxuICB0aGlzLnBxLnN0YXJ0UmVhZGVyKClcbn1cblxudmFyIHRocm93SWZFcnJvciA9IGZ1bmN0aW9uIChwcSkge1xuICB2YXIgZXJyID0gcHEucmVzdWx0RXJyb3JNZXNzYWdlKCkgfHwgcHEuZXJyb3JNZXNzYWdlKClcbiAgaWYgKGVycikge1xuICAgIHRocm93IG5ldyBFcnJvcihlcnIpXG4gIH1cbn1cblxuQ2xpZW50LnByb3RvdHlwZS5fYXdhaXRSZXN1bHQgPSBmdW5jdGlvbiAoY2IpIHtcbiAgdGhpcy5fcXVlcnlDYWxsYmFjayA9IGNiXG4gIHJldHVybiB0aGlzLl9zdGFydFJlYWRpbmcoKVxufVxuXG4vLyB3YWl0IGZvciB0aGUgd3JpdGFibGUgc29ja2V0IHRvIGRyYWluXG5DbGllbnQucHJvdG90eXBlLl93YWl0Rm9yRHJhaW4gPSBmdW5jdGlvbiAocHEsIGNiKSB7XG4gIHZhciByZXMgPSBwcS5mbHVzaCgpXG4gIC8vIHJlcyBvZiAwIGlzIHN1Y2Nlc3NcbiAgaWYgKHJlcyA9PT0gMCkgcmV0dXJuIGNiKClcblxuICAvLyByZXMgb2YgLTEgaXMgZmFpbHVyZVxuICBpZiAocmVzID09PSAtMSkgcmV0dXJuIGNiKHBxLmVycm9yTWVzc2FnZSgpKVxuXG4gIC8vIG90aGVyd2lzZSBvdXRnb2luZyBtZXNzYWdlIGRpZG4ndCBmbHVzaCB0byBzb2NrZXRcbiAgLy8gd2FpdCBmb3IgaXQgdG8gZmx1c2ggYW5kIHRyeSBhZ2FpblxuICB2YXIgc2VsZiA9IHRoaXNcbiAgLy8geW91IGNhbm5vdCByZWFkICYgd3JpdGUgb24gYSBzb2NrZXQgYXQgdGhlIHNhbWUgdGltZVxuICByZXR1cm4gcHEud3JpdGFibGUoZnVuY3Rpb24gKCkge1xuICAgIHNlbGYuX3dhaXRGb3JEcmFpbihwcSwgY2IpXG4gIH0pXG59XG5cbi8vIHNlbmQgYW4gYXN5bmMgcXVlcnkgdG8gbGlicHEgYW5kIHdhaXQgZm9yIGl0IHRvXG4vLyBmaW5pc2ggd3JpdGluZyBxdWVyeSB0ZXh0IHRvIHRoZSBzb2NrZXRcbkNsaWVudC5wcm90b3R5cGUuX2Rpc3BhdGNoUXVlcnkgPSBmdW5jdGlvbiAocHEsIGZuLCBjYikge1xuICB0aGlzLl9zdG9wUmVhZGluZygpXG4gIHZhciBzdWNjZXNzID0gcHEuc2V0Tm9uQmxvY2tpbmcodHJ1ZSlcbiAgaWYgKCFzdWNjZXNzKSByZXR1cm4gY2IobmV3IEVycm9yKCdVbmFibGUgdG8gc2V0IG5vbi1ibG9ja2luZyB0byB0cnVlJykpXG4gIHZhciBzZW50ID0gZm4oKVxuICBpZiAoIXNlbnQpIHJldHVybiBjYihuZXcgRXJyb3IocHEuZXJyb3JNZXNzYWdlKCkgfHwgJ1NvbWV0aGluZyB3ZW50IHdyb25nIGRpc3BhdGNoaW5nIHRoZSBxdWVyeScpKVxuICB0aGlzLl93YWl0Rm9yRHJhaW4ocHEsIGNiKVxufVxuXG5DbGllbnQucHJvdG90eXBlLl9vblJlc3VsdCA9IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgaWYgKHRoaXMuX3Jlc3VsdENvdW50ID09PSAwKSB7XG4gICAgdGhpcy5fcmVzdWx0cyA9IHJlc3VsdFxuICAgIHRoaXMuX3Jvd3MgPSByZXN1bHQucm93c1xuICB9IGVsc2UgaWYgKHRoaXMuX3Jlc3VsdENvdW50ID09PSAxKSB7XG4gICAgdGhpcy5fcmVzdWx0cyA9IFt0aGlzLl9yZXN1bHRzLCByZXN1bHRdXG4gICAgdGhpcy5fcm93cyA9IFt0aGlzLl9yb3dzLCByZXN1bHQucm93c11cbiAgfSBlbHNlIHtcbiAgICB0aGlzLl9yZXN1bHRzLnB1c2gocmVzdWx0KVxuICAgIHRoaXMuX3Jvd3MucHVzaChyZXN1bHQucm93cylcbiAgfVxuICB0aGlzLl9yZXN1bHRDb3VudCsrXG59XG5cbkNsaWVudC5wcm90b3R5cGUuX29uUmVhZHlGb3JRdWVyeSA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gcmVtb3ZlIGluc3RhbmNlIGNhbGxiYWNrXG4gIGNvbnN0IGNiID0gdGhpcy5fcXVlcnlDYWxsYmFja1xuICB0aGlzLl9xdWVyeUNhbGxiYWNrID0gdW5kZWZpbmVkXG5cbiAgLy8gcmVtb3ZlIGluc3RhbmNlIHF1ZXJ5IGVycm9yXG4gIGNvbnN0IGVyciA9IHRoaXMuX3F1ZXJ5RXJyb3JcbiAgdGhpcy5fcXVlcnlFcnJvciA9IHVuZGVmaW5lZFxuXG4gIC8vIHJlbW92ZSBpbnN0YW5jZSByb3dzXG4gIGNvbnN0IHJvd3MgPSB0aGlzLl9yb3dzXG4gIHRoaXMuX3Jvd3MgPSB1bmRlZmluZWRcblxuICAvLyByZW1vdmUgaW5zdGFuY2UgcmVzdWx0c1xuICBjb25zdCByZXN1bHRzID0gdGhpcy5fcmVzdWx0c1xuICB0aGlzLl9yZXN1bHRzID0gdW5kZWZpbmVkXG5cbiAgdGhpcy5fcmVzdWx0Q291bnQgPSAwXG5cbiAgaWYgKGNiKSB7XG4gICAgY2IoZXJyLCByb3dzIHx8IFtdLCByZXN1bHRzKVxuICB9XG59XG4iLCJ2YXIgUFEgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJ2JpbmRpbmdzJykoJ2FkZG9uLm5vZGUnKS5QUTtcblxuLy9wcmludCBvdXQgdGhlIGluY2x1ZGUgZGlyXG4vL2lmIHlvdSB3YW50IHRvIGluY2x1ZGUgdGhpcyBpbiBhIGJpbmRpbmcuZ3lwIGZpbGVcbmlmKCFtb2R1bGUucGFyZW50KSB7XG4gIHZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuICBjb25zb2xlLmxvZyhwYXRoLm5vcm1hbGl6ZShfX2Rpcm5hbWUgKyAnL3NyYycpKTtcbn1cblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcjtcbnZhciBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKTtcblxuZm9yKHZhciBrZXkgaW4gRXZlbnRFbWl0dGVyLnByb3RvdHlwZSkge1xuICBQUS5wcm90b3R5cGVba2V5XSA9IEV2ZW50RW1pdHRlci5wcm90b3R5cGVba2V5XTtcbn1cblxuLy9TWU5DIGNvbm5lY3RzIHRvIHRoZSBzZXJ2ZXJcbi8vdGhyb3dzIGFuIGV4Y2VwdGlvbiBpbiB0aGUgZXZlbnQgb2YgYSBjb25uZWN0aW9uIGVycm9yXG5QUS5wcm90b3R5cGUuY29ubmVjdFN5bmMgPSBmdW5jdGlvbihwYXJhbVN0cmluZykge1xuICB0aGlzLmNvbm5lY3RlZCA9IHRydWU7XG4gIGlmKCFwYXJhbVN0cmluZykge1xuICAgIHBhcmFtU3RyaW5nID0gJyc7XG4gIH1cbiAgdmFyIGNvbm5lY3RlZCA9IHRoaXMuJGNvbm5lY3RTeW5jKHBhcmFtU3RyaW5nKTtcbiAgaWYoIWNvbm5lY3RlZCkge1xuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IodGhpcy5lcnJvck1lc3NhZ2UoKSk7XG4gICAgdGhpcy5maW5pc2goKTtcbiAgICB0aHJvdyBlcnI7XG4gIH1cbn07XG5cbi8vY29ubmVjdHMgYXN5bmMgdXNpbmcgYSBiYWNrZ3JvdW5kIHRocmVhZFxuLy9jYWxscyB0aGUgY2FsbGJhY2sgd2l0aCBhbiBlcnJvciBpZiB0aGVyZSB3YXMgb25lXG5QUS5wcm90b3R5cGUuY29ubmVjdCA9IGZ1bmN0aW9uKHBhcmFtU3RyaW5nLCBjYikge1xuICB0aGlzLmNvbm5lY3RlZCA9IHRydWU7XG4gIGlmKHR5cGVvZiBwYXJhbVN0cmluZyA9PSAnZnVuY3Rpb24nKSB7XG4gICAgY2IgPSBwYXJhbVN0cmluZztcbiAgICBwYXJhbVN0cmluZyA9ICcnO1xuICB9XG4gIGlmKCFwYXJhbVN0cmluZykge1xuICAgIHBhcmFtU3RyaW5nID0gJyc7XG4gIH1cbiAgYXNzZXJ0KGNiLCAnTXVzdCBwcm92aWRlIGEgY29ubmVjdGlvbiBjYWxsYmFjaycpO1xuICBpZihwcm9jZXNzLmRvbWFpbikge1xuICAgIGNiID0gcHJvY2Vzcy5kb21haW4uYmluZChjYik7XG4gIH1cbiAgdGhpcy4kY29ubmVjdChwYXJhbVN0cmluZywgY2IpO1xufTtcblxuUFEucHJvdG90eXBlLmVycm9yTWVzc2FnZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy4kZ2V0TGFzdEVycm9yTWVzc2FnZSgpO1xufTtcblxuLy9yZXR1cm5zIGFuIGludCBmb3IgdGhlIGZkIG9mIHRoZSBzb2NrZXRcblBRLnByb3RvdHlwZS5zb2NrZXQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuJHNvY2tldCgpO1xufTtcblxuLy8gcmV0dXJuIHNlcnZlciB2ZXJzaW9uIG51bWJlciBlLmcuIDkwMzAwXG5QUS5wcm90b3R5cGUuc2VydmVyVmVyc2lvbiA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuJHNlcnZlclZlcnNpb24oKTtcbn07XG5cbi8vZmluaXNoZXMgdGhlIGNvbm5lY3Rpb24gJiBjbG9zZXMgaXRcblBRLnByb3RvdHlwZS5maW5pc2ggPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5jb25uZWN0ZWQgPSBmYWxzZTtcbiAgdGhpcy4kZmluaXNoKCk7XG59O1xuXG4vLy8vU1lOQyBleGVjdXRlcyBhIHBsYWluIHRleHQgcXVlcnlcbi8vaW1tZWRpYXRlbHkgc3RvcmVzIHRoZSByZXN1bHRzIHdpdGhpbiB0aGUgUFEgb2JqZWN0IGZvciBjb25zdW1wdGlvbiB3aXRoXG4vL250dXBsZXMsIGdldHZhbHVlLCBldGMuLi5cbi8vcmV0dXJucyBmYWxzZSBpZiB0aGVyZSB3YXMgYW4gZXJyb3Jcbi8vY29uc3VtZSBhZGRpdGlvbmFsIGVycm9yIGRldGFpbHMgdmlhIFBRI2Vycm9yTWVzc2FnZSAmIGZyaWVuZHNcblBRLnByb3RvdHlwZS5leGVjID0gZnVuY3Rpb24oY29tbWFuZFRleHQpIHtcbiAgaWYoIWNvbW1hbmRUZXh0KSB7XG4gICAgY29tbWFuZFRleHQgPSAnJztcbiAgfVxuICB0aGlzLiRleGVjKGNvbW1hbmRUZXh0KTtcbn07XG5cbi8vU1lOQyBleGVjdXRlcyBhIHF1ZXJ5IHdpdGggcGFyYW1ldGVyc1xuLy9pbW1lZGlhdGVseSBzdG9yZXMgdGhlIHJlc3VsdHMgd2l0aGluIHRoZSBQUSBvYmplY3QgZm9yIGNvbnN1bXB0aW9uIHdpdGhcbi8vbnR1cGxlcywgZ2V0dmFsdWUsIGV0Yy4uLlxuLy9yZXR1cm5zIGZhbHNlIGlmIHRoZXJlIHdhcyBhbiBlcnJvclxuLy9jb25zdW1lIGFkZGl0aW9uYWwgZXJyb3IgZGV0YWlscyB2aWEgUFEjZXJyb3JNZXNzYWdlICYgZnJpZW5kc1xuUFEucHJvdG90eXBlLmV4ZWNQYXJhbXMgPSBmdW5jdGlvbihjb21tYW5kVGV4dCwgcGFyYW1ldGVycykge1xuICBpZighY29tbWFuZFRleHQpIHtcbiAgICBjb21tYW5kVGV4dCA9ICcnO1xuICB9XG4gIGlmKCFwYXJhbWV0ZXJzKSB7XG4gICAgcGFyYW1ldGVycyA9IFtdO1xuICB9XG4gIHRoaXMuJGV4ZWNQYXJhbXMoY29tbWFuZFRleHQsIHBhcmFtZXRlcnMpO1xufTtcblxuLy9TWU5DIHByZXBhcmVzIGEgbmFtZWQgcXVlcnkgYW5kIHN0b3JlcyB0aGUgcmVzdWx0XG4vL2ltbWVkaWF0ZWx5IHN0b3JlcyB0aGUgcmVzdWx0cyB3aXRoaW4gdGhlIFBRIG9iamVjdCBmb3IgY29uc3VtcHRpb24gd2l0aFxuLy9udHVwbGVzLCBnZXR2YWx1ZSwgZXRjLi4uXG4vL3JldHVybnMgZmFsc2UgaWYgdGhlcmUgd2FzIGFuIGVycm9yXG4vL2NvbnN1bWUgYWRkaXRpb25hbCBlcnJvciBkZXRhaWxzIHZpYSBQUSNlcnJvck1lc3NhZ2UgJiBmcmllbmRzXG5QUS5wcm90b3R5cGUucHJlcGFyZSA9IGZ1bmN0aW9uKHN0YXRlbWVudE5hbWUsIGNvbW1hbmRUZXh0LCBuUGFyYW1zKSB7XG4gIGFzc2VydC5lcXVhbChhcmd1bWVudHMubGVuZ3RoLCAzLCAnTXVzdCBzdXBwbHkgMyBhcmd1bWVudHMnKTtcbiAgaWYoIXN0YXRlbWVudE5hbWUpIHtcbiAgICBzdGF0ZW1lbnROYW1lID0gJyc7XG4gIH1cbiAgaWYoIWNvbW1hbmRUZXh0KSB7XG4gICAgY29tbWFuZFRleHQgPSAnJztcbiAgfVxuICBuUGFyYW1zID0gTnVtYmVyKG5QYXJhbXMpIHx8IDA7XG4gIHRoaXMuJHByZXBhcmUoc3RhdGVtZW50TmFtZSwgY29tbWFuZFRleHQsIG5QYXJhbXMpO1xufTtcblxuLy9TWU5DIGV4ZWN1dGVzIGEgbmFtZWQsIHByZXBhcmVkIHF1ZXJ5IGFuZCBzdG9yZXMgdGhlIHJlc3VsdFxuLy9pbW1lZGlhdGVseSBzdG9yZXMgdGhlIHJlc3VsdHMgd2l0aGluIHRoZSBQUSBvYmplY3QgZm9yIGNvbnN1bXB0aW9uIHdpdGhcbi8vbnR1cGxlcywgZ2V0dmFsdWUsIGV0Yy4uLlxuLy9yZXR1cm5zIGZhbHNlIGlmIHRoZXJlIHdhcyBhbiBlcnJvclxuLy9jb25zdW1lIGFkZGl0aW9uYWwgZXJyb3IgZGV0YWlscyB2aWEgUFEjZXJyb3JNZXNzYWdlICYgZnJpZW5kc1xuUFEucHJvdG90eXBlLmV4ZWNQcmVwYXJlZCA9IGZ1bmN0aW9uKHN0YXRlbWVudE5hbWUsIHBhcmFtZXRlcnMpIHtcbiAgaWYoIXN0YXRlbWVudE5hbWUpIHtcbiAgICBzdGF0ZW1lbnROYW1lID0gJyc7XG4gIH1cbiAgaWYoIXBhcmFtZXRlcnMpIHtcbiAgICBwYXJhbWV0ZXJzID0gW107XG4gIH1cbiAgdGhpcy4kZXhlY1ByZXBhcmVkKHN0YXRlbWVudE5hbWUsIHBhcmFtZXRlcnMpO1xufTtcblxuLy9zZW5kIGEgY29tbWFuZCB0byBiZWdpbiBleGVjdXRpbmcgYSBxdWVyeSBpbiBhc3luYyBtb2RlXG4vL3JldHVybnMgdHJ1ZSBpZiBzZW50LCBvciBmYWxzZSBpZiB0aGVyZSB3YXMgYSBzZW5kIGZhaWx1cmVcblBRLnByb3RvdHlwZS5zZW5kUXVlcnkgPSBmdW5jdGlvbihjb21tYW5kVGV4dCkge1xuICBpZighY29tbWFuZFRleHQpIHtcbiAgICBjb21tYW5kVGV4dCA9ICcnO1xuICB9XG4gIHJldHVybiB0aGlzLiRzZW5kUXVlcnkoY29tbWFuZFRleHQpO1xufTtcblxuLy9zZW5kIGEgY29tbWFuZCB0byBiZWdpbiBleGVjdXRpbmcgYSBxdWVyeSB3aXRoIHBhcmFtZXRlcnMgaW4gYXN5bmMgbW9kZVxuLy9yZXR1cm5zIHRydWUgaWYgc2VudCwgb3IgZmFsc2UgaWYgdGhlcmUgd2FzIGEgc2VuZCBmYWlsdXJlXG5QUS5wcm90b3R5cGUuc2VuZFF1ZXJ5UGFyYW1zID0gZnVuY3Rpb24oY29tbWFuZFRleHQsIHBhcmFtZXRlcnMpIHtcbiAgaWYoIWNvbW1hbmRUZXh0KSB7XG4gICAgY29tbWFuZFRleHQgPSAnJztcbiAgfVxuICBpZighcGFyYW1ldGVycykge1xuICAgIHBhcmFtZXRlcnMgPSBbXTtcbiAgfVxuICByZXR1cm4gdGhpcy4kc2VuZFF1ZXJ5UGFyYW1zKGNvbW1hbmRUZXh0LCBwYXJhbWV0ZXJzKTtcbn07XG5cbi8vc2VuZCBhIGNvbW1hbmQgdG8gcHJlcGFyZSBhIG5hbWVkIHF1ZXJ5IGluIGFzeW5jIG1vZGVcbi8vcmV0dXJucyB0cnVlIGlmIHNlbnQsIG9yIGZhbHNlIGlmIHRoZXJlIHdhcyBhIHNlbmQgZmFpbHVyZVxuUFEucHJvdG90eXBlLnNlbmRQcmVwYXJlID0gZnVuY3Rpb24oc3RhdGVtZW50TmFtZSwgY29tbWFuZFRleHQsIG5QYXJhbXMpIHtcbiAgYXNzZXJ0LmVxdWFsKGFyZ3VtZW50cy5sZW5ndGgsIDMsICdNdXN0IHN1cHBseSAzIGFyZ3VtZW50cycpO1xuICBpZighc3RhdGVtZW50TmFtZSkge1xuICAgIHN0YXRlbWVudE5hbWUgPSAnJztcbiAgfVxuICBpZighY29tbWFuZFRleHQpIHtcbiAgICBjb21tYW5kVGV4dCA9ICcnO1xuICB9XG4gIG5QYXJhbXMgPSBOdW1iZXIoblBhcmFtcykgfHwgMDtcbiAgcmV0dXJuIHRoaXMuJHNlbmRQcmVwYXJlKHN0YXRlbWVudE5hbWUsIGNvbW1hbmRUZXh0LCBuUGFyYW1zKTtcbn07XG5cbi8vc2VuZCBhIGNvbW1hbmQgdG8gZXhlY3V0ZSBhIG5hbWVkIHF1ZXJ5IGluIGFzeW5jIG1vZGVcbi8vcmV0dXJucyB0cnVlIGlmIHNlbnQsIG9yIGZhbHNlIGlmIHRoZXJlIHdhcyBhIHNlbmQgZmFpbHVyZVxuUFEucHJvdG90eXBlLnNlbmRRdWVyeVByZXBhcmVkID0gZnVuY3Rpb24oc3RhdGVtZW50TmFtZSwgcGFyYW1ldGVycykge1xuICBpZighc3RhdGVtZW50TmFtZSkge1xuICAgIHN0YXRlbWVudE5hbWUgPSAnJztcbiAgfVxuICBpZighcGFyYW1ldGVycykge1xuICAgIHBhcmFtZXRlcnMgPSBbXTtcbiAgfVxuICByZXR1cm4gdGhpcy4kc2VuZFF1ZXJ5UHJlcGFyZWQoc3RhdGVtZW50TmFtZSwgcGFyYW1ldGVycyk7XG59O1xuXG4vLydwb3BzJyBhIHJlc3VsdCBvdXQgb2YgdGhlIGJ1ZmZlcmVkXG4vL3Jlc3BvbnNlIGRhdGEgcmVhZCBkdXJpbmcgYXN5bmMgY29tbWFuZCBleGVjdXRpb25cbi8vYW5kIHN0b3JlcyBpdCBvbiB0aGUgYy9jKysgb2JqZWN0IHNvIHlvdSBjYW4gY29uc3VtZVxuLy90aGUgZGF0YSBmcm9tIGl0LiAgcmV0dXJucyB0cnVlIGlmIHRoZXJlIHdhcyBhIHBlbmRpbmcgcmVzdWx0XG4vL29yIGZhbHNlIGlmIHRoZXJlIHdhcyBubyBwZW5kaW5nIHJlc3VsdC4gaWYgdGhlcmUgd2FzIG5vIHBlbmRpbmcgcmVzdWx0XG4vL3RoZSBsYXN0IGZvdW5kIHJlc3VsdCBpcyBub3Qgb3ZlcndyaXR0ZW4gc28geW91IGNhbiBjYWxsIGdldFJlc3VsdCBhcyBtYW55XG4vL3RpbWVzIGFzIHlvdSB3YW50LCBhbmQgeW91J2xsIGFsd2F5cyBoYXZlIHRoZSBsYXN0IGF2YWlsYWJsZSByZXN1bHQgZm9yIGNvbnN1bXB0aW9uXG5QUS5wcm90b3R5cGUuZ2V0UmVzdWx0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLiRnZXRSZXN1bHQoKTtcbn07XG5cbi8vcmV0dXJucyBhIHRleHQgb2YgdGhlIGVudW0gYXNzb2NpYXRlZCB3aXRoIHRoZSByZXN1bHRcbi8vdXN1YWxseSBqdXN0IFBHUkVTX0NPTU1BTkRfT0sgb3IgUEdSRVNfRkFUQUxfRVJST1JcblBRLnByb3RvdHlwZS5yZXN1bHRTdGF0dXMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuJHJlc3VsdFN0YXR1cygpO1xufTtcblxuUFEucHJvdG90eXBlLnJlc3VsdEVycm9yTWVzc2FnZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy4kcmVzdWx0RXJyb3JNZXNzYWdlKCk7XG59O1xuXG5QUS5wcm90b3R5cGUucmVzdWx0RXJyb3JGaWVsZHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuJHJlc3VsdEVycm9yRmllbGRzKCk7XG59O1xuXG4vL2ZyZWUgdGhlIG1lbW9yeSBhc3NvY2lhdGVkIHdpdGggYSByZXN1bHRcbi8vdGhpcyBpcyBzb21ld2hhdCBoYW5kbGVkIGZvciB5b3Ugd2l0aGluIHRoZSBjL2MrKyBjb2RlXG4vL2J5IG5ldmVyIGFsbG93aW5nIHRoZSBjb2RlIHRvICdsZWFrJyBhIHJlc3VsdC4gc3RpbGwsXG4vL2lmIHlvdSBhYnNvbHV0ZWx5IHdhbnQgdG8gZnJlZSBpdCB5b3Vyc2VsZiwgeW91IGNhbiB1c2UgdGhpcy5cblBRLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLiRjbGVhcigpO1xufTtcblxuLy9yZXR1cm5zIHRoZSBudW1iZXIgb2YgdHVwbGVzIChyb3dzKSBpbiB0aGUgcmVzdWx0IHNldFxuUFEucHJvdG90eXBlLm50dXBsZXMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuJG50dXBsZXMoKTtcbn07XG5cbi8vcmV0dXJucyB0aGUgbnVtYmVyIG9mIGZpZWxkcyAoY29sdW1ucykgaW4gdGhlIHJlc3VsdCBzZXRcblBRLnByb3RvdHlwZS5uZmllbGRzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLiRuZmllbGRzKCk7XG59O1xuXG4vL3JldHVybnMgdGhlIG5hbWUgb2YgdGhlIGZpZWxkIChjb2x1bW4pIGF0IHRoZSBnaXZlbiBvZmZzZXRcblBRLnByb3RvdHlwZS5mbmFtZSA9IGZ1bmN0aW9uKG9mZnNldCkge1xuICByZXR1cm4gdGhpcy4kZm5hbWUob2Zmc2V0KTtcbn07XG5cbi8vcmV0dXJucyB0aGUgT2lkIG9mIHRoZSB0eXBlIGZvciB0aGUgZ2l2ZW4gZmllbGRcblBRLnByb3RvdHlwZS5mdHlwZSA9IGZ1bmN0aW9uKG9mZnNldCkge1xuICByZXR1cm4gdGhpcy4kZnR5cGUob2Zmc2V0KTtcbn07XG5cbi8vcmV0dXJucyBhIHRleHQgdmFsdWUgYXQgdGhlIGdpdmVuIHJvdy9jb2xcbi8vaWYgdGhlIHZhbHVlIGlzIG51bGwgdGhpcyBzdGlsbCByZXR1cm5zIGVtcHR5IHN0cmluZ1xuLy9zbyB5b3UgbmVlZCB0byB1c2UgUFEjZ2V0aXNudWxsIHRvIGRldGVybWluZVxuUFEucHJvdG90eXBlLmdldHZhbHVlID0gZnVuY3Rpb24ocm93LCBjb2wpIHtcbiAgcmV0dXJuIHRoaXMuJGdldHZhbHVlKHJvdywgY29sKTtcbn07XG5cbi8vcmV0dXJucyB0cnVlL2ZhbHNlIGlmIHRoZSB2YWx1ZSBpcyBudWxsXG5QUS5wcm90b3R5cGUuZ2V0aXNudWxsID0gZnVuY3Rpb24ocm93LCBjb2wpIHtcbiAgcmV0dXJuIHRoaXMuJGdldGlzbnVsbChyb3csIGNvbCk7XG59O1xuXG4vL3JldHVybnMgdGhlIHN0YXR1cyBvZiB0aGUgY29tbWFuZFxuUFEucHJvdG90eXBlLmNtZFN0YXR1cyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy4kY21kU3RhdHVzKCk7XG59O1xuXG4vL3JldHVybnMgdGhlIHR1cGxlcyBpbiB0aGUgY29tbWFuZFxuUFEucHJvdG90eXBlLmNtZFR1cGxlcyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy4kY21kVHVwbGVzKCk7XG59O1xuXG4vL3N0YXJ0cyB0aGUgJ3JlYWQgcmVhZHknIGxpYnV2IHNvY2tldCBsaXN0ZW5lci5cbi8vT25jZSB0aGUgc29ja2V0IGJlY29tZXMgcmVhZGFibGUsIHRoZSBQUSBpbnN0YW5jZSBzdGFydHNcbi8vZW1pdHRpbmcgJ3JlYWRhYmxlJyBldmVudHMuICBTaW1pbGFyIHRvIGhvdyBub2RlJ3MgcmVhZGFibGUtc3RyZWFtXG4vL3dvcmtzIGV4Y2VwdCB0byBjbGVhciB0aGUgU0VMRUNUKCkgbm90aWZpY2F0aW9uIHlvdSBuZWVkIHRvIGNhbGxcbi8vUFEjY29uc3VtZUlucHV0IGluc3RlYWQgb2YgbGV0dGluZyBub2RlIHB1bGwgdGhlIGRhdGEgb2ZmIHRoZSBzb2NrZXRcbi8vaHR0cDovL3d3dy5wb3N0Z3Jlc3FsLm9yZy9kb2NzLzkuMS9zdGF0aWMvbGlicHEtYXN5bmMuaHRtbFxuUFEucHJvdG90eXBlLnN0YXJ0UmVhZGVyID0gZnVuY3Rpb24oKSB7XG4gIGFzc2VydCh0aGlzLmNvbm5lY3RlZCwgJ011c3QgYmUgY29ubmVjdGVkIHRvIHN0YXJ0IHJlYWRlcicpO1xuICB0aGlzLiRzdGFydFJlYWQoKTtcbn07XG5cbi8vc3VzcGVuZHMgdGhlIGxpYnV2IHNvY2tldCAncmVhZCByZWFkeScgbGlzdGVuZXJcblBRLnByb3RvdHlwZS5zdG9wUmVhZGVyID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuJHN0b3BSZWFkKCk7XG59O1xuXG5QUS5wcm90b3R5cGUud3JpdGFibGUgPSBmdW5jdGlvbihjYikge1xuICBhc3NlcnQodGhpcy5jb25uZWN0ZWQsICdNdXN0IGJlIGNvbm5lY3RlZCB0byBzdGFydCB3cml0ZXInKTtcbiAgdGhpcy4kc3RhcnRXcml0ZSgpO1xuICByZXR1cm4gdGhpcy5vbmNlKCd3cml0YWJsZScsIGNiKTtcbn07XG5cbi8vcmV0dXJucyBib29sZWFuIC0gZmFsc2UgaW5kaWNhdGVzIGFuIGVycm9yIGNvbmRpdGlvblxuLy9lLmcuIGEgZmFpbHVyZSB0byBjb25zdW1lIGlucHV0XG5QUS5wcm90b3R5cGUuY29uc3VtZUlucHV0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLiRjb25zdW1lSW5wdXQoKTtcbn07XG5cbi8vcmV0dXJucyB0cnVlIGlmIFBRI2dldFJlc3VsdCB3b3VsZCBjYXVzZVxuLy90aGUgcHJvY2VzcyB0byBibG9jayB3YWl0aW5nIG9uIHJlc3VsdHNcbi8vZmFsc2UgaW5kaWNhdGVzIFBRI2dldFJlc3VsdCBjYW4gYmUgY2FsbGVkXG4vL3dpdGggYW4gYXNzdXJhbmNlIG9mIG5vdCBibG9ja2luZ1xuUFEucHJvdG90eXBlLmlzQnVzeSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy4kaXNCdXN5KCk7XG59O1xuXG4vL3RvZ2dsZXMgdGhlIHNvY2tldCBibG9ja2luZyBvbiBvdXRnb2luZyB3cml0ZXNcblBRLnByb3RvdHlwZS5zZXROb25CbG9ja2luZyA9IGZ1bmN0aW9uKHRydXRoeSkge1xuICByZXR1cm4gdGhpcy4kc2V0Tm9uQmxvY2tpbmcodHJ1dGh5ID8gMSA6IDApO1xufTtcblxuLy9yZXR1cm5zIHRydWUgaWYgdGhlIGNvbm5lY3Rpb24gaXMgbm9uLWJsb2NraW5nIG9uIHdyaXRlcywgb3RoZXJ3aXNlIGZhbHNlXG4vL25vdGU6IGNvbm5lY3Rpb24gaXMgYWx3YXlzIG5vbi1ibG9ja2luZyBvbiByZWFkcyBpZiB1c2luZyB0aGUgc2VuZCogbWV0aG9kc1xuUFEucHJvdG90eXBlLmlzTm9uQmxvY2tpbmcgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuJGlzTm9uQmxvY2tpbmcoKTtcbn07XG5cbi8vcmV0dXJucyAxIGlmIHNvY2tldCBpcyBub3Qgd3JpdGUtcmVhZHlcbi8vcmV0dXJucyAwIGlmIGFsbCBkYXRhIGZsdXNoZWQgdG8gc29ja2V0XG4vL3JldHVybnMgLTEgaWYgdGhlcmUgaXMgYW4gZXJyb3JcblBRLnByb3RvdHlwZS5mbHVzaCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy4kZmx1c2goKTtcbn07XG5cbi8vZXNjYXBlcyBhIGxpdGVyYWwgYW5kIHJldHVybnMgdGhlIGVzY2FwZWQgc3RyaW5nXG4vL0knbSBub3QgMTAwJSBzdXJlIHRoaXMgZG9lc24ndCBkbyBhbnkgSS9PLi4ubmVlZCB0byBjaGVjayB0aGF0XG5QUS5wcm90b3R5cGUuZXNjYXBlTGl0ZXJhbCA9IGZ1bmN0aW9uKGlucHV0KSB7XG4gIGlmKCFpbnB1dCkgcmV0dXJuIGlucHV0O1xuICByZXR1cm4gdGhpcy4kZXNjYXBlTGl0ZXJhbChpbnB1dCk7XG59O1xuXG5QUS5wcm90b3R5cGUuZXNjYXBlSWRlbnRpZmllciA9IGZ1bmN0aW9uKGlucHV0KSB7XG4gIGlmKCFpbnB1dCkgcmV0dXJuIGlucHV0O1xuICByZXR1cm4gdGhpcy4kZXNjYXBlSWRlbnRpZmllcihpbnB1dCk7XG59O1xuXG4vL0NoZWNrcyBmb3IgYW55IG5vdGlmaWNhdGlvbnMgd2hpY2ggbWF5IGhhdmUgYXJyaXZpZWRcbi8vYW5kIHJldHVybnMgdGhlbSBhcyBhIGphdmFzY3JpcHQgb2JqZWN0OiB7cmVsbmFtZTogJ3N0cmluZycsIGV4dHJhOiAnc3RyaW5nJywgYmVfcGlkOiBpbnR9XG4vL2lmIHRoZXJlIGFyZSBubyBwZW5kaW5nIG5vdGlmaWNhdGlvbnMgdGhpcyByZXR1cm5zIHVuZGVmaW5lZFxuUFEucHJvdG90eXBlLm5vdGlmaWVzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLiRub3RpZmllcygpO1xufTtcblxuLy9TZW5kcyBhIGJ1ZmZlciBvZiBiaW5hcnkgZGF0YSB0byB0aGUgc2VydmVyXG4vL3JldHVybnMgMSBpZiB0aGUgY29tbWFuZCB3YXMgc2VudCBzdWNjZXNzZnVsbHlcbi8vcmV0dXJucyAwIGlmIHRoZSBjb21tYW5kIHdvdWxkIGJsb2NrICh1c2UgUFEjd3JpdGFibGUgaGVyZSBpZiBzbylcbi8vcmV0dXJucyAtMSBpZiB0aGVyZSB3YXMgYW4gZXJyb3JcblBRLnByb3RvdHlwZS5wdXRDb3B5RGF0YSA9IGZ1bmN0aW9uKGJ1ZmZlcikge1xuICBhc3NlcnQoYnVmZmVyIGluc3RhbmNlb2YgQnVmZmVyKTtcbiAgcmV0dXJuIHRoaXMuJHB1dENvcHlEYXRhKGJ1ZmZlcik7XG59O1xuXG4vL1NlbmRzIGEgY29tbWFuZCB0byAnZmluaXNoJyB0aGUgY29weVxuLy9pZiBhbiBlcnJvciBtZXNzYWdlIGlzIHBhc3NlZCwgaXQgd2lsbCBiZSBzZW50IHRvIHRoZVxuLy9iYWNrZW5kIGFuZCBzaWduYWwgYSByZXF1ZXN0IHRvIGNhbmNlbCB0aGUgY29weSBpblxuLy9yZXR1cm5zIDEgaWYgc2VudCBzdWNjZXNmdWxseVxuLy9yZXR1cm5zIDAgaWYgdGhlIGNvbW1hbmQgd291bGQgYmxvY2tcbi8vcmV0dXJucyAtMSBpZiB0aGVyZSB3YXMgYW4gZXJyb3JcblBRLnByb3RvdHlwZS5wdXRDb3B5RW5kID0gZnVuY3Rpb24oZXJyb3JNZXNzYWdlKSB7XG4gIGlmKGVycm9yTWVzc2FnZSkge1xuICAgIHJldHVybiB0aGlzLiRwdXRDb3B5RW5kKGVycm9yTWVzc2FnZSk7XG4gIH1cbiAgcmV0dXJuIHRoaXMuJHB1dENvcHlFbmQoKTtcbn07XG5cbi8vR2V0cyBhIGJ1ZmZlciBvZiBkYXRhIGZyb20gYSBjb3B5IG91dCBjb21tYW5kXG4vL2lmIGFzeW5jIGlzIHBhc3NlZCBhcyB0cnVlIGl0IHdpbGwgbm90IGJsb2NrIHdhaXRpbmdcbi8vZm9yIHRoZSByZXN1bHQsIG90aGVyd2lzZSB0aGlzIHdpbGwgQkxPQ0sgZm9yIGEgcmVzdWx0LlxuLy9yZXR1cm5zIGEgYnVmZmVyIGlmIHN1Y2Nlc3NmdWxcbi8vcmV0dXJucyAwIGlmIGNvcHkgaXMgc3RpbGwgaW4gcHJvY2VzcyAoYXN5bmMgb25seSlcbi8vcmV0dXJucyAtMSBpZiB0aGUgY29weSBpcyBkb25lXG4vL3JldHVybnMgLTIgaWYgdGhlcmUgd2FzIGFuIGVycm9yXG5QUS5wcm90b3R5cGUuZ2V0Q29weURhdGEgPSBmdW5jdGlvbihhc3luYykge1xuICByZXR1cm4gdGhpcy4kZ2V0Q29weURhdGEoISFhc3luYyk7XG59O1xuXG5QUS5wcm90b3R5cGUuY2FuY2VsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLiRjYW5jZWwoKTtcbn07XG4iLCJcbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xuXG52YXIgZnMgPSByZXF1aXJlKCdmcycpXG4gICwgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxuICAsIGpvaW4gPSBwYXRoLmpvaW5cbiAgLCBkaXJuYW1lID0gcGF0aC5kaXJuYW1lXG4gICwgZXhpc3RzID0gZnMuZXhpc3RzU3luYyB8fCBwYXRoLmV4aXN0c1N5bmNcbiAgLCBkZWZhdWx0cyA9IHtcbiAgICAgICAgYXJyb3c6IHByb2Nlc3MuZW52Lk5PREVfQklORElOR1NfQVJST1cgfHwgJyDihpIgJ1xuICAgICAgLCBjb21waWxlZDogcHJvY2Vzcy5lbnYuTk9ERV9CSU5ESU5HU19DT01QSUxFRF9ESVIgfHwgJ2NvbXBpbGVkJ1xuICAgICAgLCBwbGF0Zm9ybTogcHJvY2Vzcy5wbGF0Zm9ybVxuICAgICAgLCBhcmNoOiBwcm9jZXNzLmFyY2hcbiAgICAgICwgdmVyc2lvbjogcHJvY2Vzcy52ZXJzaW9ucy5ub2RlXG4gICAgICAsIGJpbmRpbmdzOiAnYmluZGluZ3Mubm9kZSdcbiAgICAgICwgdHJ5OiBbXG4gICAgICAgICAgLy8gbm9kZS1neXAncyBsaW5rZWQgdmVyc2lvbiBpbiB0aGUgXCJidWlsZFwiIGRpclxuICAgICAgICAgIFsgJ21vZHVsZV9yb290JywgJ2J1aWxkJywgJ2JpbmRpbmdzJyBdXG4gICAgICAgICAgLy8gbm9kZS13YWYgYW5kIGd5cF9hZGRvbiAoYS5rLmEgbm9kZS1neXApXG4gICAgICAgICwgWyAnbW9kdWxlX3Jvb3QnLCAnYnVpbGQnLCAnRGVidWcnLCAnYmluZGluZ3MnIF1cbiAgICAgICAgLCBbICdtb2R1bGVfcm9vdCcsICdidWlsZCcsICdSZWxlYXNlJywgJ2JpbmRpbmdzJyBdXG4gICAgICAgICAgLy8gRGVidWcgZmlsZXMsIGZvciBkZXZlbG9wbWVudCAobGVnYWN5IGJlaGF2aW9yLCByZW1vdmUgZm9yIG5vZGUgdjAuOSlcbiAgICAgICAgLCBbICdtb2R1bGVfcm9vdCcsICdvdXQnLCAnRGVidWcnLCAnYmluZGluZ3MnIF1cbiAgICAgICAgLCBbICdtb2R1bGVfcm9vdCcsICdEZWJ1ZycsICdiaW5kaW5ncycgXVxuICAgICAgICAgIC8vIFJlbGVhc2UgZmlsZXMsIGJ1dCBtYW51YWxseSBjb21waWxlZCAobGVnYWN5IGJlaGF2aW9yLCByZW1vdmUgZm9yIG5vZGUgdjAuOSlcbiAgICAgICAgLCBbICdtb2R1bGVfcm9vdCcsICdvdXQnLCAnUmVsZWFzZScsICdiaW5kaW5ncycgXVxuICAgICAgICAsIFsgJ21vZHVsZV9yb290JywgJ1JlbGVhc2UnLCAnYmluZGluZ3MnIF1cbiAgICAgICAgICAvLyBMZWdhY3kgZnJvbSBub2RlLXdhZiwgbm9kZSA8PSAwLjQueFxuICAgICAgICAsIFsgJ21vZHVsZV9yb290JywgJ2J1aWxkJywgJ2RlZmF1bHQnLCAnYmluZGluZ3MnIF1cbiAgICAgICAgICAvLyBQcm9kdWN0aW9uIFwiUmVsZWFzZVwiIGJ1aWxkdHlwZSBiaW5hcnkgKG1laC4uLilcbiAgICAgICAgLCBbICdtb2R1bGVfcm9vdCcsICdjb21waWxlZCcsICd2ZXJzaW9uJywgJ3BsYXRmb3JtJywgJ2FyY2gnLCAnYmluZGluZ3MnIF1cbiAgICAgICAgXVxuICAgIH1cblxuLyoqXG4gKiBUaGUgbWFpbiBgYmluZGluZ3MoKWAgZnVuY3Rpb24gbG9hZHMgdGhlIGNvbXBpbGVkIGJpbmRpbmdzIGZvciBhIGdpdmVuIG1vZHVsZS5cbiAqIEl0IHVzZXMgVjgncyBFcnJvciBBUEkgdG8gZGV0ZXJtaW5lIHRoZSBwYXJlbnQgZmlsZW5hbWUgdGhhdCB0aGlzIGZ1bmN0aW9uIGlzXG4gKiBiZWluZyBpbnZva2VkIGZyb20sIHdoaWNoIGlzIHRoZW4gdXNlZCB0byBmaW5kIHRoZSByb290IGRpcmVjdG9yeS5cbiAqL1xuXG5mdW5jdGlvbiBiaW5kaW5ncyAob3B0cykge1xuXG4gIC8vIEFyZ3VtZW50IHN1cmdlcnlcbiAgaWYgKHR5cGVvZiBvcHRzID09ICdzdHJpbmcnKSB7XG4gICAgb3B0cyA9IHsgYmluZGluZ3M6IG9wdHMgfVxuICB9IGVsc2UgaWYgKCFvcHRzKSB7XG4gICAgb3B0cyA9IHt9XG4gIH1cbiAgb3B0cy5fX3Byb3RvX18gPSBkZWZhdWx0c1xuXG4gIC8vIEdldCB0aGUgbW9kdWxlIHJvb3RcbiAgaWYgKCFvcHRzLm1vZHVsZV9yb290KSB7XG4gICAgb3B0cy5tb2R1bGVfcm9vdCA9IGV4cG9ydHMuZ2V0Um9vdChleHBvcnRzLmdldEZpbGVOYW1lKCkpXG4gIH1cblxuICAvLyBFbnN1cmUgdGhlIGdpdmVuIGJpbmRpbmdzIG5hbWUgZW5kcyB3aXRoIC5ub2RlXG4gIGlmIChwYXRoLmV4dG5hbWUob3B0cy5iaW5kaW5ncykgIT0gJy5ub2RlJykge1xuICAgIG9wdHMuYmluZGluZ3MgKz0gJy5ub2RlJ1xuICB9XG5cbiAgdmFyIHRyaWVzID0gW11cbiAgICAsIGkgPSAwXG4gICAgLCBsID0gb3B0cy50cnkubGVuZ3RoXG4gICAgLCBuXG4gICAgLCBiXG4gICAgLCBlcnJcblxuICBmb3IgKDsgaTxsOyBpKyspIHtcbiAgICBuID0gam9pbi5hcHBseShudWxsLCBvcHRzLnRyeVtpXS5tYXAoZnVuY3Rpb24gKHApIHtcbiAgICAgIHJldHVybiBvcHRzW3BdIHx8IHBcbiAgICB9KSlcbiAgICB0cmllcy5wdXNoKG4pXG4gICAgdHJ5IHtcbiAgICAgIGIgPSBvcHRzLnBhdGggPyByZXF1aXJlLnJlc29sdmUobikgOiByZXF1aXJlKG4pXG4gICAgICBpZiAoIW9wdHMucGF0aCkge1xuICAgICAgICBiLnBhdGggPSBuXG4gICAgICB9XG4gICAgICByZXR1cm4gYlxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGlmICghL25vdCBmaW5kL2kudGVzdChlLm1lc3NhZ2UpKSB7XG4gICAgICAgIHRocm93IGVcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlcnIgPSBuZXcgRXJyb3IoJ0NvdWxkIG5vdCBsb2NhdGUgdGhlIGJpbmRpbmdzIGZpbGUuIFRyaWVkOlxcbidcbiAgICArIHRyaWVzLm1hcChmdW5jdGlvbiAoYSkgeyByZXR1cm4gb3B0cy5hcnJvdyArIGEgfSkuam9pbignXFxuJykpXG4gIGVyci50cmllcyA9IHRyaWVzXG4gIHRocm93IGVyclxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzID0gYmluZGluZ3NcblxuXG4vKipcbiAqIEdldHMgdGhlIGZpbGVuYW1lIG9mIHRoZSBKYXZhU2NyaXB0IGZpbGUgdGhhdCBpbnZva2VzIHRoaXMgZnVuY3Rpb24uXG4gKiBVc2VkIHRvIGhlbHAgZmluZCB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgYSBtb2R1bGUuXG4gKiBPcHRpb25hbGx5IGFjY2VwdHMgYW4gZmlsZW5hbWUgYXJndW1lbnQgdG8gc2tpcCB3aGVuIHNlYXJjaGluZyBmb3IgdGhlIGludm9raW5nIGZpbGVuYW1lXG4gKi9cblxuZXhwb3J0cy5nZXRGaWxlTmFtZSA9IGZ1bmN0aW9uIGdldEZpbGVOYW1lIChjYWxsaW5nX2ZpbGUpIHtcbiAgdmFyIG9yaWdQU1QgPSBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZVxuICAgICwgb3JpZ1NUTCA9IEVycm9yLnN0YWNrVHJhY2VMaW1pdFxuICAgICwgZHVtbXkgPSB7fVxuICAgICwgZmlsZU5hbWVcblxuICBFcnJvci5zdGFja1RyYWNlTGltaXQgPSAxMFxuXG4gIEVycm9yLnByZXBhcmVTdGFja1RyYWNlID0gZnVuY3Rpb24gKGUsIHN0KSB7XG4gICAgZm9yICh2YXIgaT0wLCBsPXN0Lmxlbmd0aDsgaTxsOyBpKyspIHtcbiAgICAgIGZpbGVOYW1lID0gc3RbaV0uZ2V0RmlsZU5hbWUoKVxuICAgICAgaWYgKGZpbGVOYW1lICE9PSBfX2ZpbGVuYW1lKSB7XG4gICAgICAgIGlmIChjYWxsaW5nX2ZpbGUpIHtcbiAgICAgICAgICAgIGlmIChmaWxlTmFtZSAhPT0gY2FsbGluZ19maWxlKSB7XG4gICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gcnVuIHRoZSAncHJlcGFyZVN0YWNrVHJhY2UnIGZ1bmN0aW9uIGFib3ZlXG4gIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKGR1bW15KVxuICBkdW1teS5zdGFja1xuXG4gIC8vIGNsZWFudXBcbiAgRXJyb3IucHJlcGFyZVN0YWNrVHJhY2UgPSBvcmlnUFNUXG4gIEVycm9yLnN0YWNrVHJhY2VMaW1pdCA9IG9yaWdTVExcblxuICByZXR1cm4gZmlsZU5hbWVcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSByb290IGRpcmVjdG9yeSBvZiBhIG1vZHVsZSwgZ2l2ZW4gYW4gYXJiaXRyYXJ5IGZpbGVuYW1lXG4gKiBzb21ld2hlcmUgaW4gdGhlIG1vZHVsZSB0cmVlLiBUaGUgXCJyb290IGRpcmVjdG9yeVwiIGlzIHRoZSBkaXJlY3RvcnlcbiAqIGNvbnRhaW5pbmcgdGhlIGBwYWNrYWdlLmpzb25gIGZpbGUuXG4gKlxuICogICBJbjogIC9ob21lL25hdGUvbm9kZS1uYXRpdmUtbW9kdWxlL2xpYi9pbmRleC5qc1xuICogICBPdXQ6IC9ob21lL25hdGUvbm9kZS1uYXRpdmUtbW9kdWxlXG4gKi9cblxuZXhwb3J0cy5nZXRSb290ID0gZnVuY3Rpb24gZ2V0Um9vdCAoZmlsZSkge1xuICB2YXIgZGlyID0gZGlybmFtZShmaWxlKVxuICAgICwgcHJldlxuICB3aGlsZSAodHJ1ZSkge1xuICAgIGlmIChkaXIgPT09ICcuJykge1xuICAgICAgLy8gQXZvaWRzIGFuIGluZmluaXRlIGxvb3AgaW4gcmFyZSBjYXNlcywgbGlrZSB0aGUgUkVQTFxuICAgICAgZGlyID0gcHJvY2Vzcy5jd2QoKVxuICAgIH1cbiAgICBpZiAoZXhpc3RzKGpvaW4oZGlyLCAncGFja2FnZS5qc29uJykpIHx8IGV4aXN0cyhqb2luKGRpciwgJ25vZGVfbW9kdWxlcycpKSkge1xuICAgICAgLy8gRm91bmQgdGhlICdwYWNrYWdlLmpzb24nIGZpbGUgb3IgJ25vZGVfbW9kdWxlcycgZGlyOyB3ZSdyZSBkb25lXG4gICAgICByZXR1cm4gZGlyXG4gICAgfVxuICAgIGlmIChwcmV2ID09PSBkaXIpIHtcbiAgICAgIC8vIEdvdCB0byB0aGUgdG9wXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkIG5vdCBmaW5kIG1vZHVsZSByb290IGdpdmVuIGZpbGU6IFwiJyArIGZpbGVcbiAgICAgICAgICAgICAgICAgICAgKyAnXCIuIERvIHlvdSBoYXZlIGEgYHBhY2thZ2UuanNvbmAgZmlsZT8gJylcbiAgICB9XG4gICAgLy8gVHJ5IHRoZSBwYXJlbnQgZGlyIG5leHRcbiAgICBwcmV2ID0gZGlyXG4gICAgZGlyID0gam9pbihkaXIsICcuLicpXG4gIH1cbn1cbiIsInZhciB0ZXh0UGFyc2VycyA9IHJlcXVpcmUoJy4vbGliL3RleHRQYXJzZXJzJyk7XG52YXIgYmluYXJ5UGFyc2VycyA9IHJlcXVpcmUoJy4vbGliL2JpbmFyeVBhcnNlcnMnKTtcbnZhciBhcnJheVBhcnNlciA9IHJlcXVpcmUoJy4vbGliL2FycmF5UGFyc2VyJyk7XG5cbmV4cG9ydHMuZ2V0VHlwZVBhcnNlciA9IGdldFR5cGVQYXJzZXI7XG5leHBvcnRzLnNldFR5cGVQYXJzZXIgPSBzZXRUeXBlUGFyc2VyO1xuZXhwb3J0cy5hcnJheVBhcnNlciA9IGFycmF5UGFyc2VyO1xuXG52YXIgdHlwZVBhcnNlcnMgPSB7XG4gIHRleHQ6IHt9LFxuICBiaW5hcnk6IHt9XG59O1xuXG4vL3RoZSBlbXB0eSBwYXJzZSBmdW5jdGlvblxuZnVuY3Rpb24gbm9QYXJzZSAodmFsKSB7XG4gIHJldHVybiBTdHJpbmcodmFsKTtcbn07XG5cbi8vcmV0dXJucyBhIGZ1bmN0aW9uIHVzZWQgdG8gY29udmVydCBhIHNwZWNpZmljIHR5cGUgKHNwZWNpZmllZCBieVxuLy9vaWQpIGludG8gYSByZXN1bHQgamF2YXNjcmlwdCB0eXBlXG4vL25vdGU6IHRoZSBvaWQgY2FuIGJlIG9idGFpbmVkIHZpYSB0aGUgZm9sbG93aW5nIHNxbCBxdWVyeTpcbi8vU0VMRUNUIG9pZCBGUk9NIHBnX3R5cGUgV0hFUkUgdHlwbmFtZSA9ICdUWVBFX05BTUVfSEVSRSc7XG5mdW5jdGlvbiBnZXRUeXBlUGFyc2VyIChvaWQsIGZvcm1hdCkge1xuICBmb3JtYXQgPSBmb3JtYXQgfHwgJ3RleHQnO1xuICBpZiAoIXR5cGVQYXJzZXJzW2Zvcm1hdF0pIHtcbiAgICByZXR1cm4gbm9QYXJzZTtcbiAgfVxuICByZXR1cm4gdHlwZVBhcnNlcnNbZm9ybWF0XVtvaWRdIHx8IG5vUGFyc2U7XG59O1xuXG5mdW5jdGlvbiBzZXRUeXBlUGFyc2VyIChvaWQsIGZvcm1hdCwgcGFyc2VGbikge1xuICBpZih0eXBlb2YgZm9ybWF0ID09ICdmdW5jdGlvbicpIHtcbiAgICBwYXJzZUZuID0gZm9ybWF0O1xuICAgIGZvcm1hdCA9ICd0ZXh0JztcbiAgfVxuICB0eXBlUGFyc2Vyc1tmb3JtYXRdW29pZF0gPSBwYXJzZUZuO1xufTtcblxudGV4dFBhcnNlcnMuaW5pdChmdW5jdGlvbihvaWQsIGNvbnZlcnRlcikge1xuICB0eXBlUGFyc2Vycy50ZXh0W29pZF0gPSBjb252ZXJ0ZXI7XG59KTtcblxuYmluYXJ5UGFyc2Vycy5pbml0KGZ1bmN0aW9uKG9pZCwgY29udmVydGVyKSB7XG4gIHR5cGVQYXJzZXJzLmJpbmFyeVtvaWRdID0gY29udmVydGVyO1xufSk7XG4iLCJ2YXIgYXJyYXkgPSByZXF1aXJlKCdwb3N0Z3Jlcy1hcnJheScpXG52YXIgYXJyYXlQYXJzZXIgPSByZXF1aXJlKCcuL2FycmF5UGFyc2VyJyk7XG52YXIgcGFyc2VEYXRlID0gcmVxdWlyZSgncG9zdGdyZXMtZGF0ZScpO1xudmFyIHBhcnNlSW50ZXJ2YWwgPSByZXF1aXJlKCdwb3N0Z3Jlcy1pbnRlcnZhbCcpO1xudmFyIHBhcnNlQnl0ZUEgPSByZXF1aXJlKCdwb3N0Z3Jlcy1ieXRlYScpO1xuXG5mdW5jdGlvbiBhbGxvd051bGwgKGZuKSB7XG4gIHJldHVybiBmdW5jdGlvbiBudWxsQWxsb3dlZCAodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHJldHVybiB2YWx1ZVxuICAgIHJldHVybiBmbih2YWx1ZSlcbiAgfVxufVxuXG5mdW5jdGlvbiBwYXJzZUJvb2wgKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PT0gbnVsbCkgcmV0dXJuIHZhbHVlXG4gIHJldHVybiB2YWx1ZSA9PT0gJ1RSVUUnIHx8XG4gICAgdmFsdWUgPT09ICd0JyB8fFxuICAgIHZhbHVlID09PSAndHJ1ZScgfHxcbiAgICB2YWx1ZSA9PT0gJ3knIHx8XG4gICAgdmFsdWUgPT09ICd5ZXMnIHx8XG4gICAgdmFsdWUgPT09ICdvbicgfHxcbiAgICB2YWx1ZSA9PT0gJzEnO1xufVxuXG5mdW5jdGlvbiBwYXJzZUJvb2xBcnJheSAodmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSkgcmV0dXJuIG51bGxcbiAgcmV0dXJuIGFycmF5LnBhcnNlKHZhbHVlLCBwYXJzZUJvb2wpXG59XG5cbmZ1bmN0aW9uIHBhcnNlQmFzZVRlbkludCAoc3RyaW5nKSB7XG4gIHJldHVybiBwYXJzZUludChzdHJpbmcsIDEwKVxufVxuXG5mdW5jdGlvbiBwYXJzZUludGVnZXJBcnJheSAodmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSkgcmV0dXJuIG51bGxcbiAgcmV0dXJuIGFycmF5LnBhcnNlKHZhbHVlLCBhbGxvd051bGwocGFyc2VCYXNlVGVuSW50KSlcbn1cblxuZnVuY3Rpb24gcGFyc2VCaWdJbnRlZ2VyQXJyYXkgKHZhbHVlKSB7XG4gIGlmICghdmFsdWUpIHJldHVybiBudWxsXG4gIHJldHVybiBhcnJheS5wYXJzZSh2YWx1ZSwgYWxsb3dOdWxsKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiBwYXJzZUJpZ0ludGVnZXIoZW50cnkpLnRyaW0oKVxuICB9KSlcbn1cblxudmFyIHBhcnNlUG9pbnRBcnJheSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGlmKCF2YWx1ZSkgeyByZXR1cm4gbnVsbDsgfVxuICB2YXIgcCA9IGFycmF5UGFyc2VyLmNyZWF0ZSh2YWx1ZSwgZnVuY3Rpb24oZW50cnkpIHtcbiAgICBpZihlbnRyeSAhPT0gbnVsbCkge1xuICAgICAgZW50cnkgPSBwYXJzZVBvaW50KGVudHJ5KTtcbiAgICB9XG4gICAgcmV0dXJuIGVudHJ5O1xuICB9KTtcblxuICByZXR1cm4gcC5wYXJzZSgpO1xufTtcblxudmFyIHBhcnNlRmxvYXRBcnJheSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGlmKCF2YWx1ZSkgeyByZXR1cm4gbnVsbDsgfVxuICB2YXIgcCA9IGFycmF5UGFyc2VyLmNyZWF0ZSh2YWx1ZSwgZnVuY3Rpb24oZW50cnkpIHtcbiAgICBpZihlbnRyeSAhPT0gbnVsbCkge1xuICAgICAgZW50cnkgPSBwYXJzZUZsb2F0KGVudHJ5KTtcbiAgICB9XG4gICAgcmV0dXJuIGVudHJ5O1xuICB9KTtcblxuICByZXR1cm4gcC5wYXJzZSgpO1xufTtcblxudmFyIHBhcnNlU3RyaW5nQXJyYXkgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBpZighdmFsdWUpIHsgcmV0dXJuIG51bGw7IH1cblxuICB2YXIgcCA9IGFycmF5UGFyc2VyLmNyZWF0ZSh2YWx1ZSk7XG4gIHJldHVybiBwLnBhcnNlKCk7XG59O1xuXG52YXIgcGFyc2VEYXRlQXJyYXkgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBpZiAoIXZhbHVlKSB7IHJldHVybiBudWxsOyB9XG5cbiAgdmFyIHAgPSBhcnJheVBhcnNlci5jcmVhdGUodmFsdWUsIGZ1bmN0aW9uKGVudHJ5KSB7XG4gICAgaWYgKGVudHJ5ICE9PSBudWxsKSB7XG4gICAgICBlbnRyeSA9IHBhcnNlRGF0ZShlbnRyeSk7XG4gICAgfVxuICAgIHJldHVybiBlbnRyeTtcbiAgfSk7XG5cbiAgcmV0dXJuIHAucGFyc2UoKTtcbn07XG5cbnZhciBwYXJzZUJ5dGVBQXJyYXkgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBpZiAoIXZhbHVlKSB7IHJldHVybiBudWxsOyB9XG5cbiAgcmV0dXJuIGFycmF5LnBhcnNlKHZhbHVlLCBhbGxvd051bGwocGFyc2VCeXRlQSkpO1xufTtcblxudmFyIHBhcnNlSW50ZWdlciA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBwYXJzZUludCh2YWx1ZSwgMTApO1xufTtcblxudmFyIHBhcnNlQmlnSW50ZWdlciA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciB2YWxTdHIgPSBTdHJpbmcodmFsdWUpO1xuICBpZiAoL15cXGQrJC8udGVzdCh2YWxTdHIpKSB7IHJldHVybiB2YWxTdHI7IH1cbiAgcmV0dXJuIHZhbHVlO1xufTtcblxudmFyIHBhcnNlSnNvbkFycmF5ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGFyciA9IHBhcnNlU3RyaW5nQXJyYXkodmFsdWUpO1xuXG4gIGlmICghYXJyKSB7XG4gICAgcmV0dXJuIGFycjtcbiAgfVxuXG4gIHJldHVybiBhcnIubWFwKGZ1bmN0aW9uKGVsKSB7IHJldHVybiBKU09OLnBhcnNlKGVsKTsgfSk7XG59O1xuXG52YXIgcGFyc2VQb2ludCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGlmICh2YWx1ZVswXSAhPT0gJygnKSB7IHJldHVybiBudWxsOyB9XG5cbiAgdmFsdWUgPSB2YWx1ZS5zdWJzdHJpbmcoIDEsIHZhbHVlLmxlbmd0aCAtIDEgKS5zcGxpdCgnLCcpO1xuXG4gIHJldHVybiB7XG4gICAgeDogcGFyc2VGbG9hdCh2YWx1ZVswXSlcbiAgLCB5OiBwYXJzZUZsb2F0KHZhbHVlWzFdKVxuICB9O1xufTtcblxudmFyIHBhcnNlQ2lyY2xlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgaWYgKHZhbHVlWzBdICE9PSAnPCcgJiYgdmFsdWVbMV0gIT09ICcoJykgeyByZXR1cm4gbnVsbDsgfVxuXG4gIHZhciBwb2ludCA9ICcoJztcbiAgdmFyIHJhZGl1cyA9ICcnO1xuICB2YXIgcG9pbnRQYXJzZWQgPSBmYWxzZTtcbiAgZm9yICh2YXIgaSA9IDI7IGkgPCB2YWx1ZS5sZW5ndGggLSAxOyBpKyspe1xuICAgIGlmICghcG9pbnRQYXJzZWQpIHtcbiAgICAgIHBvaW50ICs9IHZhbHVlW2ldO1xuICAgIH1cblxuICAgIGlmICh2YWx1ZVtpXSA9PT0gJyknKSB7XG4gICAgICBwb2ludFBhcnNlZCA9IHRydWU7XG4gICAgICBjb250aW51ZTtcbiAgICB9IGVsc2UgaWYgKCFwb2ludFBhcnNlZCkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKHZhbHVlW2ldID09PSAnLCcpe1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgcmFkaXVzICs9IHZhbHVlW2ldO1xuICB9XG4gIHZhciByZXN1bHQgPSBwYXJzZVBvaW50KHBvaW50KTtcbiAgcmVzdWx0LnJhZGl1cyA9IHBhcnNlRmxvYXQocmFkaXVzKTtcblxuICByZXR1cm4gcmVzdWx0O1xufTtcblxudmFyIGluaXQgPSBmdW5jdGlvbihyZWdpc3Rlcikge1xuICByZWdpc3RlcigyMCwgcGFyc2VCaWdJbnRlZ2VyKTsgLy8gaW50OFxuICByZWdpc3RlcigyMSwgcGFyc2VJbnRlZ2VyKTsgLy8gaW50MlxuICByZWdpc3RlcigyMywgcGFyc2VJbnRlZ2VyKTsgLy8gaW50NFxuICByZWdpc3RlcigyNiwgcGFyc2VJbnRlZ2VyKTsgLy8gb2lkXG4gIHJlZ2lzdGVyKDcwMCwgcGFyc2VGbG9hdCk7IC8vIGZsb2F0NC9yZWFsXG4gIHJlZ2lzdGVyKDcwMSwgcGFyc2VGbG9hdCk7IC8vIGZsb2F0OC9kb3VibGVcbiAgcmVnaXN0ZXIoMTYsIHBhcnNlQm9vbCk7XG4gIHJlZ2lzdGVyKDEwODIsIHBhcnNlRGF0ZSk7IC8vIGRhdGVcbiAgcmVnaXN0ZXIoMTExNCwgcGFyc2VEYXRlKTsgLy8gdGltZXN0YW1wIHdpdGhvdXQgdGltZXpvbmVcbiAgcmVnaXN0ZXIoMTE4NCwgcGFyc2VEYXRlKTsgLy8gdGltZXN0YW1wXG4gIHJlZ2lzdGVyKDYwMCwgcGFyc2VQb2ludCk7IC8vIHBvaW50XG4gIHJlZ2lzdGVyKDY1MSwgcGFyc2VTdHJpbmdBcnJheSk7IC8vIGNpZHJbXVxuICByZWdpc3Rlcig3MTgsIHBhcnNlQ2lyY2xlKTsgLy8gY2lyY2xlXG4gIHJlZ2lzdGVyKDEwMDAsIHBhcnNlQm9vbEFycmF5KTtcbiAgcmVnaXN0ZXIoMTAwMSwgcGFyc2VCeXRlQUFycmF5KTtcbiAgcmVnaXN0ZXIoMTAwNSwgcGFyc2VJbnRlZ2VyQXJyYXkpOyAvLyBfaW50MlxuICByZWdpc3RlcigxMDA3LCBwYXJzZUludGVnZXJBcnJheSk7IC8vIF9pbnQ0XG4gIHJlZ2lzdGVyKDEwMjgsIHBhcnNlSW50ZWdlckFycmF5KTsgLy8gb2lkW11cbiAgcmVnaXN0ZXIoMTAxNiwgcGFyc2VCaWdJbnRlZ2VyQXJyYXkpOyAvLyBfaW50OFxuICByZWdpc3RlcigxMDE3LCBwYXJzZVBvaW50QXJyYXkpOyAvLyBwb2ludFtdXG4gIHJlZ2lzdGVyKDEwMjEsIHBhcnNlRmxvYXRBcnJheSk7IC8vIF9mbG9hdDRcbiAgcmVnaXN0ZXIoMTAyMiwgcGFyc2VGbG9hdEFycmF5KTsgLy8gX2Zsb2F0OFxuICByZWdpc3RlcigxMjMxLCBwYXJzZUZsb2F0QXJyYXkpOyAvLyBfbnVtZXJpY1xuICByZWdpc3RlcigxMDE0LCBwYXJzZVN0cmluZ0FycmF5KTsgLy9jaGFyXG4gIHJlZ2lzdGVyKDEwMTUsIHBhcnNlU3RyaW5nQXJyYXkpOyAvL3ZhcmNoYXJcbiAgcmVnaXN0ZXIoMTAwOCwgcGFyc2VTdHJpbmdBcnJheSk7XG4gIHJlZ2lzdGVyKDEwMDksIHBhcnNlU3RyaW5nQXJyYXkpO1xuICByZWdpc3RlcigxMDQwLCBwYXJzZVN0cmluZ0FycmF5KTsgLy8gbWFjYWRkcltdXG4gIHJlZ2lzdGVyKDEwNDEsIHBhcnNlU3RyaW5nQXJyYXkpOyAvLyBpbmV0W11cbiAgcmVnaXN0ZXIoMTExNSwgcGFyc2VEYXRlQXJyYXkpOyAvLyB0aW1lc3RhbXAgd2l0aG91dCB0aW1lIHpvbmVbXVxuICByZWdpc3RlcigxMTgyLCBwYXJzZURhdGVBcnJheSk7IC8vIF9kYXRlXG4gIHJlZ2lzdGVyKDExODUsIHBhcnNlRGF0ZUFycmF5KTsgLy8gdGltZXN0YW1wIHdpdGggdGltZSB6b25lW11cbiAgcmVnaXN0ZXIoMTE4NiwgcGFyc2VJbnRlcnZhbCk7XG4gIHJlZ2lzdGVyKDE3LCBwYXJzZUJ5dGVBKTtcbiAgcmVnaXN0ZXIoMTE0LCBKU09OLnBhcnNlLmJpbmQoSlNPTikpOyAvLyBqc29uXG4gIHJlZ2lzdGVyKDM4MDIsIEpTT04ucGFyc2UuYmluZChKU09OKSk7IC8vIGpzb25iXG4gIHJlZ2lzdGVyKDE5OSwgcGFyc2VKc29uQXJyYXkpOyAvLyBqc29uW11cbiAgcmVnaXN0ZXIoMzgwNywgcGFyc2VKc29uQXJyYXkpOyAvLyBqc29uYltdXG4gIHJlZ2lzdGVyKDM5MDcsIHBhcnNlU3RyaW5nQXJyYXkpOyAvLyBudW1yYW5nZVtdXG4gIHJlZ2lzdGVyKDI5NTEsIHBhcnNlU3RyaW5nQXJyYXkpOyAvLyB1dWlkW11cbiAgcmVnaXN0ZXIoNzkxLCBwYXJzZVN0cmluZ0FycmF5KTsgLy8gbW9uZXlbXVxuICByZWdpc3RlcigxMTgzLCBwYXJzZVN0cmluZ0FycmF5KTsgLy8gdGltZVtdXG4gIHJlZ2lzdGVyKDEyNzAsIHBhcnNlU3RyaW5nQXJyYXkpOyAvLyB0aW1ldHpbXVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGluaXQ6IGluaXRcbn07XG4iLCJ2YXIgcGFyc2VJbnQ2NCA9IHJlcXVpcmUoJ3BnLWludDgnKTtcblxudmFyIHBhcnNlQml0cyA9IGZ1bmN0aW9uKGRhdGEsIGJpdHMsIG9mZnNldCwgaW52ZXJ0LCBjYWxsYmFjaykge1xuICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcbiAgaW52ZXJ0ID0gaW52ZXJ0IHx8IGZhbHNlO1xuICBjYWxsYmFjayA9IGNhbGxiYWNrIHx8IGZ1bmN0aW9uKGxhc3RWYWx1ZSwgbmV3VmFsdWUsIGJpdHMpIHsgcmV0dXJuIChsYXN0VmFsdWUgKiBNYXRoLnBvdygyLCBiaXRzKSkgKyBuZXdWYWx1ZTsgfTtcbiAgdmFyIG9mZnNldEJ5dGVzID0gb2Zmc2V0ID4+IDM7XG5cbiAgdmFyIGludiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgaWYgKGludmVydCkge1xuICAgICAgcmV0dXJuIH52YWx1ZSAmIDB4ZmY7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlO1xuICB9O1xuXG4gIC8vIHJlYWQgZmlyc3QgKG1heWJlIHBhcnRpYWwpIGJ5dGVcbiAgdmFyIG1hc2sgPSAweGZmO1xuICB2YXIgZmlyc3RCaXRzID0gOCAtIChvZmZzZXQgJSA4KTtcbiAgaWYgKGJpdHMgPCBmaXJzdEJpdHMpIHtcbiAgICBtYXNrID0gKDB4ZmYgPDwgKDggLSBiaXRzKSkgJiAweGZmO1xuICAgIGZpcnN0Qml0cyA9IGJpdHM7XG4gIH1cblxuICBpZiAob2Zmc2V0KSB7XG4gICAgbWFzayA9IG1hc2sgPj4gKG9mZnNldCAlIDgpO1xuICB9XG5cbiAgdmFyIHJlc3VsdCA9IDA7XG4gIGlmICgob2Zmc2V0ICUgOCkgKyBiaXRzID49IDgpIHtcbiAgICByZXN1bHQgPSBjYWxsYmFjaygwLCBpbnYoZGF0YVtvZmZzZXRCeXRlc10pICYgbWFzaywgZmlyc3RCaXRzKTtcbiAgfVxuXG4gIC8vIHJlYWQgYnl0ZXNcbiAgdmFyIGJ5dGVzID0gKGJpdHMgKyBvZmZzZXQpID4+IDM7XG4gIGZvciAodmFyIGkgPSBvZmZzZXRCeXRlcyArIDE7IGkgPCBieXRlczsgaSsrKSB7XG4gICAgcmVzdWx0ID0gY2FsbGJhY2socmVzdWx0LCBpbnYoZGF0YVtpXSksIDgpO1xuICB9XG5cbiAgLy8gYml0cyB0byByZWFkLCB0aGF0IGFyZSBub3QgYSBjb21wbGV0ZSBieXRlXG4gIHZhciBsYXN0Qml0cyA9IChiaXRzICsgb2Zmc2V0KSAlIDg7XG4gIGlmIChsYXN0Qml0cyA+IDApIHtcbiAgICByZXN1bHQgPSBjYWxsYmFjayhyZXN1bHQsIGludihkYXRhW2J5dGVzXSkgPj4gKDggLSBsYXN0Qml0cyksIGxhc3RCaXRzKTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG52YXIgcGFyc2VGbG9hdEZyb21CaXRzID0gZnVuY3Rpb24oZGF0YSwgcHJlY2lzaW9uQml0cywgZXhwb25lbnRCaXRzKSB7XG4gIHZhciBiaWFzID0gTWF0aC5wb3coMiwgZXhwb25lbnRCaXRzIC0gMSkgLSAxO1xuICB2YXIgc2lnbiA9IHBhcnNlQml0cyhkYXRhLCAxKTtcbiAgdmFyIGV4cG9uZW50ID0gcGFyc2VCaXRzKGRhdGEsIGV4cG9uZW50Qml0cywgMSk7XG5cbiAgaWYgKGV4cG9uZW50ID09PSAwKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICAvLyBwYXJzZSBtYW50aXNzYVxuICB2YXIgcHJlY2lzaW9uQml0c0NvdW50ZXIgPSAxO1xuICB2YXIgcGFyc2VQcmVjaXNpb25CaXRzID0gZnVuY3Rpb24obGFzdFZhbHVlLCBuZXdWYWx1ZSwgYml0cykge1xuICAgIGlmIChsYXN0VmFsdWUgPT09IDApIHtcbiAgICAgIGxhc3RWYWx1ZSA9IDE7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gYml0czsgaSsrKSB7XG4gICAgICBwcmVjaXNpb25CaXRzQ291bnRlciAvPSAyO1xuICAgICAgaWYgKChuZXdWYWx1ZSAmICgweDEgPDwgKGJpdHMgLSBpKSkpID4gMCkge1xuICAgICAgICBsYXN0VmFsdWUgKz0gcHJlY2lzaW9uQml0c0NvdW50ZXI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGxhc3RWYWx1ZTtcbiAgfTtcblxuICB2YXIgbWFudGlzc2EgPSBwYXJzZUJpdHMoZGF0YSwgcHJlY2lzaW9uQml0cywgZXhwb25lbnRCaXRzICsgMSwgZmFsc2UsIHBhcnNlUHJlY2lzaW9uQml0cyk7XG5cbiAgLy8gc3BlY2lhbCBjYXNlc1xuICBpZiAoZXhwb25lbnQgPT0gKE1hdGgucG93KDIsIGV4cG9uZW50Qml0cyArIDEpIC0gMSkpIHtcbiAgICBpZiAobWFudGlzc2EgPT09IDApIHtcbiAgICAgIHJldHVybiAoc2lnbiA9PT0gMCkgPyBJbmZpbml0eSA6IC1JbmZpbml0eTtcbiAgICB9XG5cbiAgICByZXR1cm4gTmFOO1xuICB9XG5cbiAgLy8gbm9ybWFsZSBudW1iZXJcbiAgcmV0dXJuICgoc2lnbiA9PT0gMCkgPyAxIDogLTEpICogTWF0aC5wb3coMiwgZXhwb25lbnQgLSBiaWFzKSAqIG1hbnRpc3NhO1xufTtcblxudmFyIHBhcnNlSW50MTYgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBpZiAocGFyc2VCaXRzKHZhbHVlLCAxKSA9PSAxKSB7XG4gICAgcmV0dXJuIC0xICogKHBhcnNlQml0cyh2YWx1ZSwgMTUsIDEsIHRydWUpICsgMSk7XG4gIH1cblxuICByZXR1cm4gcGFyc2VCaXRzKHZhbHVlLCAxNSwgMSk7XG59O1xuXG52YXIgcGFyc2VJbnQzMiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGlmIChwYXJzZUJpdHModmFsdWUsIDEpID09IDEpIHtcbiAgICByZXR1cm4gLTEgKiAocGFyc2VCaXRzKHZhbHVlLCAzMSwgMSwgdHJ1ZSkgKyAxKTtcbiAgfVxuXG4gIHJldHVybiBwYXJzZUJpdHModmFsdWUsIDMxLCAxKTtcbn07XG5cbnZhciBwYXJzZUZsb2F0MzIgPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gcGFyc2VGbG9hdEZyb21CaXRzKHZhbHVlLCAyMywgOCk7XG59O1xuXG52YXIgcGFyc2VGbG9hdDY0ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIHBhcnNlRmxvYXRGcm9tQml0cyh2YWx1ZSwgNTIsIDExKTtcbn07XG5cbnZhciBwYXJzZU51bWVyaWMgPSBmdW5jdGlvbih2YWx1ZSkge1xuICB2YXIgc2lnbiA9IHBhcnNlQml0cyh2YWx1ZSwgMTYsIDMyKTtcbiAgaWYgKHNpZ24gPT0gMHhjMDAwKSB7XG4gICAgcmV0dXJuIE5hTjtcbiAgfVxuXG4gIHZhciB3ZWlnaHQgPSBNYXRoLnBvdygxMDAwMCwgcGFyc2VCaXRzKHZhbHVlLCAxNiwgMTYpKTtcbiAgdmFyIHJlc3VsdCA9IDA7XG5cbiAgdmFyIGRpZ2l0cyA9IFtdO1xuICB2YXIgbmRpZ2l0cyA9IHBhcnNlQml0cyh2YWx1ZSwgMTYpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IG5kaWdpdHM7IGkrKykge1xuICAgIHJlc3VsdCArPSBwYXJzZUJpdHModmFsdWUsIDE2LCA2NCArICgxNiAqIGkpKSAqIHdlaWdodDtcbiAgICB3ZWlnaHQgLz0gMTAwMDA7XG4gIH1cblxuICB2YXIgc2NhbGUgPSBNYXRoLnBvdygxMCwgcGFyc2VCaXRzKHZhbHVlLCAxNiwgNDgpKTtcbiAgcmV0dXJuICgoc2lnbiA9PT0gMCkgPyAxIDogLTEpICogTWF0aC5yb3VuZChyZXN1bHQgKiBzY2FsZSkgLyBzY2FsZTtcbn07XG5cbnZhciBwYXJzZURhdGUgPSBmdW5jdGlvbihpc1VUQywgdmFsdWUpIHtcbiAgdmFyIHNpZ24gPSBwYXJzZUJpdHModmFsdWUsIDEpO1xuICB2YXIgcmF3VmFsdWUgPSBwYXJzZUJpdHModmFsdWUsIDYzLCAxKTtcblxuICAvLyBkaXNjYXJkIHVzZWNzIGFuZCBzaGlmdCBmcm9tIDIwMDAgdG8gMTk3MFxuICB2YXIgcmVzdWx0ID0gbmV3IERhdGUoKCgoc2lnbiA9PT0gMCkgPyAxIDogLTEpICogcmF3VmFsdWUgLyAxMDAwKSArIDk0NjY4NDgwMDAwMCk7XG5cbiAgaWYgKCFpc1VUQykge1xuICAgIHJlc3VsdC5zZXRUaW1lKHJlc3VsdC5nZXRUaW1lKCkgKyByZXN1bHQuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIDYwMDAwKTtcbiAgfVxuXG4gIC8vIGFkZCBtaWNyb3NlY29uZHMgdG8gdGhlIGRhdGVcbiAgcmVzdWx0LnVzZWMgPSByYXdWYWx1ZSAlIDEwMDA7XG4gIHJlc3VsdC5nZXRNaWNyb1NlY29uZHMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy51c2VjO1xuICB9O1xuICByZXN1bHQuc2V0TWljcm9TZWNvbmRzID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICB0aGlzLnVzZWMgPSB2YWx1ZTtcbiAgfTtcbiAgcmVzdWx0LmdldFVUQ01pY3JvU2Vjb25kcyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnVzZWM7XG4gIH07XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbnZhciBwYXJzZUFycmF5ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGRpbSA9IHBhcnNlQml0cyh2YWx1ZSwgMzIpO1xuXG4gIHZhciBmbGFncyA9IHBhcnNlQml0cyh2YWx1ZSwgMzIsIDMyKTtcbiAgdmFyIGVsZW1lbnRUeXBlID0gcGFyc2VCaXRzKHZhbHVlLCAzMiwgNjQpO1xuXG4gIHZhciBvZmZzZXQgPSA5NjtcbiAgdmFyIGRpbXMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBkaW07IGkrKykge1xuICAgIC8vIHBhcnNlIGRpbWVuc2lvblxuICAgIGRpbXNbaV0gPSBwYXJzZUJpdHModmFsdWUsIDMyLCBvZmZzZXQpO1xuICAgIG9mZnNldCArPSAzMjtcblxuICAgIC8vIGlnbm9yZSBsb3dlciBib3VuZHNcbiAgICBvZmZzZXQgKz0gMzI7XG4gIH1cblxuICB2YXIgcGFyc2VFbGVtZW50ID0gZnVuY3Rpb24oZWxlbWVudFR5cGUpIHtcbiAgICAvLyBwYXJzZSBjb250ZW50IGxlbmd0aFxuICAgIHZhciBsZW5ndGggPSBwYXJzZUJpdHModmFsdWUsIDMyLCBvZmZzZXQpO1xuICAgIG9mZnNldCArPSAzMjtcblxuICAgIC8vIHBhcnNlIG51bGwgdmFsdWVzXG4gICAgaWYgKGxlbmd0aCA9PSAweGZmZmZmZmZmKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB2YXIgcmVzdWx0O1xuICAgIGlmICgoZWxlbWVudFR5cGUgPT0gMHgxNykgfHwgKGVsZW1lbnRUeXBlID09IDB4MTQpKSB7XG4gICAgICAvLyBpbnQvYmlnaW50XG4gICAgICByZXN1bHQgPSBwYXJzZUJpdHModmFsdWUsIGxlbmd0aCAqIDgsIG9mZnNldCk7XG4gICAgICBvZmZzZXQgKz0gbGVuZ3RoICogODtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGVsc2UgaWYgKGVsZW1lbnRUeXBlID09IDB4MTkpIHtcbiAgICAgIC8vIHN0cmluZ1xuICAgICAgcmVzdWx0ID0gdmFsdWUudG9TdHJpbmcodGhpcy5lbmNvZGluZywgb2Zmc2V0ID4+IDMsIChvZmZzZXQgKz0gKGxlbmd0aCA8PCAzKSkgPj4gMyk7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiRVJST1I6IEVsZW1lbnRUeXBlIG5vdCBpbXBsZW1lbnRlZDogXCIgKyBlbGVtZW50VHlwZSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBwYXJzZSA9IGZ1bmN0aW9uKGRpbWVuc2lvbiwgZWxlbWVudFR5cGUpIHtcbiAgICB2YXIgYXJyYXkgPSBbXTtcbiAgICB2YXIgaTtcblxuICAgIGlmIChkaW1lbnNpb24ubGVuZ3RoID4gMSkge1xuICAgICAgdmFyIGNvdW50ID0gZGltZW5zaW9uLnNoaWZ0KCk7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuICAgICAgICBhcnJheVtpXSA9IHBhcnNlKGRpbWVuc2lvbiwgZWxlbWVudFR5cGUpO1xuICAgICAgfVxuICAgICAgZGltZW5zaW9uLnVuc2hpZnQoY291bnQpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBkaW1lbnNpb25bMF07IGkrKykge1xuICAgICAgICBhcnJheVtpXSA9IHBhcnNlRWxlbWVudChlbGVtZW50VHlwZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGFycmF5O1xuICB9O1xuXG4gIHJldHVybiBwYXJzZShkaW1zLCBlbGVtZW50VHlwZSk7XG59O1xuXG52YXIgcGFyc2VUZXh0ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCd1dGY4Jyk7XG59O1xuXG52YXIgcGFyc2VCb29sID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgaWYodmFsdWUgPT09IG51bGwpIHJldHVybiBudWxsO1xuICByZXR1cm4gKHBhcnNlQml0cyh2YWx1ZSwgOCkgPiAwKTtcbn07XG5cbnZhciBpbml0ID0gZnVuY3Rpb24ocmVnaXN0ZXIpIHtcbiAgcmVnaXN0ZXIoMjAsIHBhcnNlSW50NjQpO1xuICByZWdpc3RlcigyMSwgcGFyc2VJbnQxNik7XG4gIHJlZ2lzdGVyKDIzLCBwYXJzZUludDMyKTtcbiAgcmVnaXN0ZXIoMjYsIHBhcnNlSW50MzIpO1xuICByZWdpc3RlcigxNzAwLCBwYXJzZU51bWVyaWMpO1xuICByZWdpc3Rlcig3MDAsIHBhcnNlRmxvYXQzMik7XG4gIHJlZ2lzdGVyKDcwMSwgcGFyc2VGbG9hdDY0KTtcbiAgcmVnaXN0ZXIoMTYsIHBhcnNlQm9vbCk7XG4gIHJlZ2lzdGVyKDExMTQsIHBhcnNlRGF0ZS5iaW5kKG51bGwsIGZhbHNlKSk7XG4gIHJlZ2lzdGVyKDExODQsIHBhcnNlRGF0ZS5iaW5kKG51bGwsIHRydWUpKTtcbiAgcmVnaXN0ZXIoMTAwMCwgcGFyc2VBcnJheSk7XG4gIHJlZ2lzdGVyKDEwMDcsIHBhcnNlQXJyYXkpO1xuICByZWdpc3RlcigxMDE2LCBwYXJzZUFycmF5KTtcbiAgcmVnaXN0ZXIoMTAwOCwgcGFyc2VBcnJheSk7XG4gIHJlZ2lzdGVyKDEwMDksIHBhcnNlQXJyYXkpO1xuICByZWdpc3RlcigyNSwgcGFyc2VUZXh0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpbml0OiBpbml0XG59O1xuIiwiJ3VzZSBzdHJpY3QnXG5cbmNsYXNzIFJlc3VsdCB7XG4gIGNvbnN0cnVjdG9yICh0eXBlcywgYXJyYXlNb2RlKSB7XG4gICAgdGhpcy5fdHlwZXMgPSB0eXBlc1xuICAgIHRoaXMuX2FycmF5TW9kZSA9IGFycmF5TW9kZVxuXG4gICAgdGhpcy5jb21tYW5kID0gdW5kZWZpbmVkXG4gICAgdGhpcy5yb3dDb3VudCA9IHVuZGVmaW5lZFxuICAgIHRoaXMuZmllbGRzID0gW11cbiAgICB0aGlzLnJvd3MgPSBbXVxuICB9XG5cbiAgY29uc3VtZUNvbW1hbmQgKHBxKSB7XG4gICAgdGhpcy5jb21tYW5kID0gcHEuY21kU3RhdHVzKCkuc3BsaXQoJyAnKVswXVxuICAgIHRoaXMucm93Q291bnQgPSBwYXJzZUludChwcS5jbWRUdXBsZXMoKSwgMTApXG4gIH1cblxuICBjb25zdW1lRmllbGRzIChwcSkge1xuICAgIGNvbnN0IG5maWVsZHMgPSBwcS5uZmllbGRzKClcbiAgICBmb3IgKHZhciB4ID0gMDsgeCA8IG5maWVsZHM7IHgrKykge1xuICAgICAgdGhpcy5maWVsZHMucHVzaCh7XG4gICAgICAgIG5hbWU6IHBxLmZuYW1lKHgpLFxuICAgICAgICBkYXRhVHlwZUlEOiBwcS5mdHlwZSh4KVxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBjb25zdW1lUm93cyAocHEpIHtcbiAgICBjb25zdCB0dXBsZUNvdW50ID0gcHEubnR1cGxlcygpXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0dXBsZUNvdW50OyBpKyspIHtcbiAgICAgIGNvbnN0IHJvdyA9IHRoaXMuX2FycmF5TW9kZSA/IHRoaXMuY29uc3VtZVJvd0FzQXJyYXkocHEsIGkpIDogdGhpcy5jb25zdW1lUm93QXNPYmplY3QocHEsIGkpXG4gICAgICB0aGlzLnJvd3MucHVzaChyb3cpXG4gICAgfVxuICB9XG5cbiAgY29uc3VtZVJvd0FzT2JqZWN0IChwcSwgcm93SW5kZXgpIHtcbiAgICBjb25zdCByb3cgPSB7IH1cbiAgICBmb3IgKHZhciBqID0gMDsgaiA8IHRoaXMuZmllbGRzLmxlbmd0aDsgaisrKSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IHRoaXMucmVhZFZhbHVlKHBxLCByb3dJbmRleCwgailcbiAgICAgIHJvd1t0aGlzLmZpZWxkc1tqXS5uYW1lXSA9IHZhbHVlXG4gICAgfVxuICAgIHJldHVybiByb3dcbiAgfVxuXG4gIGNvbnN1bWVSb3dBc0FycmF5IChwcSwgcm93SW5kZXgpIHtcbiAgICBjb25zdCByb3cgPSBbXVxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5maWVsZHMubGVuZ3RoOyBqKyspIHtcbiAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5yZWFkVmFsdWUocHEsIHJvd0luZGV4LCBqKVxuICAgICAgcm93LnB1c2godmFsdWUpXG4gICAgfVxuICAgIHJldHVybiByb3dcbiAgfVxuXG4gIHJlYWRWYWx1ZSAocHEsIHJvd0luZGV4LCBjb2xJbmRleCkge1xuICAgIHZhciByYXdWYWx1ZSA9IHBxLmdldHZhbHVlKHJvd0luZGV4LCBjb2xJbmRleClcbiAgICBpZiAocmF3VmFsdWUgPT09ICcnKSB7XG4gICAgICBpZiAocHEuZ2V0aXNudWxsKHJvd0luZGV4LCBjb2xJbmRleCkpIHtcbiAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgZGF0YVR5cGVJZCA9IHRoaXMuZmllbGRzW2NvbEluZGV4XS5kYXRhVHlwZUlEXG4gICAgcmV0dXJuIHRoaXMuX3R5cGVzLmdldFR5cGVQYXJzZXIoZGF0YVR5cGVJZCkocmF3VmFsdWUpXG4gIH1cbn1cblxuZnVuY3Rpb24gYnVpbGRSZXN1bHQgKHBxLCB0eXBlcywgYXJyYXlNb2RlKSB7XG4gIGNvbnN0IHJlc3VsdCA9IG5ldyBSZXN1bHQodHlwZXMsIGFycmF5TW9kZSlcbiAgcmVzdWx0LmNvbnN1bWVDb21tYW5kKHBxKVxuICByZXN1bHQuY29uc3VtZUZpZWxkcyhwcSlcbiAgcmVzdWx0LmNvbnN1bWVSb3dzKHBxKVxuXG4gIHJldHVybiByZXN1bHRcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBidWlsZFJlc3VsdFxuIiwidmFyIER1cGxleCA9IHJlcXVpcmUoJ3N0cmVhbScpLkR1cGxleFxudmFyIFdyaXRhYmxlID0gcmVxdWlyZSgnc3RyZWFtJykuV3JpdGFibGVcbnZhciB1dGlsID0gcmVxdWlyZSgndXRpbCcpXG5cbnZhciBDb3B5U3RyZWFtID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocHEsIG9wdGlvbnMpIHtcbiAgRHVwbGV4LmNhbGwodGhpcywgb3B0aW9ucylcbiAgdGhpcy5wcSA9IHBxXG4gIHRoaXMuX3JlYWRpbmcgPSBmYWxzZVxufVxuXG51dGlsLmluaGVyaXRzKENvcHlTdHJlYW0sIER1cGxleClcblxuLy8gd3JpdGVyIG1ldGhvZHNcbkNvcHlTdHJlYW0ucHJvdG90eXBlLl93cml0ZSA9IGZ1bmN0aW9uIChjaHVuaywgZW5jb2RpbmcsIGNiKSB7XG4gIHZhciByZXN1bHQgPSB0aGlzLnBxLnB1dENvcHlEYXRhKGNodW5rKVxuXG4gIC8vIHNlbnQgc3VjY2Vzc2Z1bGx5XG4gIGlmIChyZXN1bHQgPT09IDEpIHJldHVybiBjYigpXG5cbiAgLy8gZXJyb3JcbiAgaWYgKHJlc3VsdCA9PT0gLTEpIHJldHVybiBjYihuZXcgRXJyb3IodGhpcy5wcS5lcnJvck1lc3NhZ2UoKSkpXG5cbiAgLy8gY29tbWFuZCB3b3VsZCBibG9jay4gd2FpdCBmb3Igd3JpdGFibGUgYW5kIGNhbGwgYWdhaW4uXG4gIHZhciBzZWxmID0gdGhpc1xuICB0aGlzLnBxLndyaXRhYmxlKGZ1bmN0aW9uICgpIHtcbiAgICBzZWxmLl93cml0ZShjaHVuaywgZW5jb2RpbmcsIGNiKVxuICB9KVxufVxuXG5Db3B5U3RyZWFtLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAwKVxuICB2YXIgc2VsZiA9IHRoaXNcblxuICB2YXIgY2FsbGJhY2sgPSBhcmdzLnBvcCgpXG5cbiAgaWYgKGFyZ3MubGVuZ3RoKSB7XG4gICAgdGhpcy53cml0ZShhcmdzWzBdKVxuICB9XG4gIHZhciByZXN1bHQgPSB0aGlzLnBxLnB1dENvcHlFbmQoKVxuXG4gIC8vIHNlbnQgc3VjY2Vzc2Z1bGx5XG4gIGlmIChyZXN1bHQgPT09IDEpIHtcbiAgICAvLyBjb25zdW1lIG91ciByZXN1bHRzIGFuZCB0aGVuIGNhbGwgJ2VuZCcgb24gdGhlXG4gICAgLy8gXCJwYXJlbnRcIiB3cml0YWJsZSBjbGFzcyBzbyB3ZSBjYW4gZW1pdCAnZmluaXNoJyBhbmRcbiAgICAvLyBhbGwgdGhhdCBqYXp6XG4gICAgcmV0dXJuIGNvbnN1bWVSZXN1bHRzKHRoaXMucHEsIGZ1bmN0aW9uIChlcnIsIHJlcykge1xuICAgICAgV3JpdGFibGUucHJvdG90eXBlLmVuZC5jYWxsKHNlbGYpXG5cbiAgICAgIC8vIGhhbmRsZSBwb3NzaWJsZSBwYXNzaW5nIG9mIGNhbGxiYWNrIHRvIGVuZCBtZXRob2RcbiAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayhlcnIpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIC8vIGVycm9yXG4gIGlmIChyZXN1bHQgPT09IC0xKSB7XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcih0aGlzLnBxLmVycm9yTWVzc2FnZSgpKVxuICAgIHJldHVybiB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKVxuICB9XG5cbiAgLy8gY29tbWFuZCB3b3VsZCBibG9jay4gd2FpdCBmb3Igd3JpdGFibGUgYW5kIGNhbGwgZW5kIGFnYWluXG4gIC8vIGRvbid0IHBhc3MgYW55IGJ1ZmZlcnMgdG8gZW5kIG9uIHRoZSBzZWNvbmQgY2FsbCBiZWNhdXNlXG4gIC8vIHdlIGFscmVhZHkgc2VudCB0aGVtIHRvIHBvc3NpYmxlIHRoaXMud3JpdGUgdGhlIGZpcnN0IHRpbWVcbiAgLy8gd2UgY2FsbGVkIGVuZFxuICByZXR1cm4gdGhpcy5wcS53cml0YWJsZShmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHNlbGYuZW5kLmFwcGx5KHNlbGYsIGNhbGxiYWNrKVxuICB9KVxufVxuXG4vLyByZWFkZXIgbWV0aG9kc1xuQ29weVN0cmVhbS5wcm90b3R5cGUuX2NvbnN1bWVCdWZmZXIgPSBmdW5jdGlvbiAoY2IpIHtcbiAgdmFyIHJlc3VsdCA9IHRoaXMucHEuZ2V0Q29weURhdGEodHJ1ZSlcbiAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIEJ1ZmZlcikge1xuICAgIHJldHVybiBzZXRJbW1lZGlhdGUoZnVuY3Rpb24gKCkge1xuICAgICAgY2IobnVsbCwgcmVzdWx0KVxuICAgIH0pXG4gIH1cbiAgaWYgKHJlc3VsdCA9PT0gLTEpIHtcbiAgICAvLyBlbmQgb2Ygc3RyZWFtXG4gICAgcmV0dXJuIGNiKG51bGwsIG51bGwpXG4gIH1cbiAgaWYgKHJlc3VsdCA9PT0gMCkge1xuICAgIHZhciBzZWxmID0gdGhpc1xuICAgIHRoaXMucHEub25jZSgncmVhZGFibGUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBzZWxmLnBxLnN0b3BSZWFkZXIoKVxuICAgICAgc2VsZi5wcS5jb25zdW1lSW5wdXQoKVxuICAgICAgc2VsZi5fY29uc3VtZUJ1ZmZlcihjYilcbiAgICB9KVxuICAgIHJldHVybiB0aGlzLnBxLnN0YXJ0UmVhZGVyKClcbiAgfVxuICBjYihuZXcgRXJyb3IoJ1VucmVjb2duaXplZCByZWFkIHN0YXR1czogJyArIHJlc3VsdCkpXG59XG5cbkNvcHlTdHJlYW0ucHJvdG90eXBlLl9yZWFkID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgaWYgKHRoaXMuX3JlYWRpbmcpIHJldHVyblxuICB0aGlzLl9yZWFkaW5nID0gdHJ1ZVxuICAvLyBjb25zb2xlLmxvZygncmVhZCBiZWdpbicpO1xuICB2YXIgc2VsZiA9IHRoaXNcbiAgdGhpcy5fY29uc3VtZUJ1ZmZlcihmdW5jdGlvbiAoZXJyLCBidWZmZXIpIHtcbiAgICBzZWxmLl9yZWFkaW5nID0gZmFsc2VcbiAgICBpZiAoZXJyKSB7XG4gICAgICByZXR1cm4gc2VsZi5lbWl0KCdlcnJvcicsIGVycilcbiAgICB9XG4gICAgaWYgKGJ1ZmZlciA9PT0gZmFsc2UpIHtcbiAgICAgIC8vIG5vdGhpbmcgdG8gcmVhZCBmb3Igbm93LCByZXR1cm5cbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBzZWxmLnB1c2goYnVmZmVyKVxuICB9KVxufVxuXG52YXIgY29uc3VtZVJlc3VsdHMgPSBmdW5jdGlvbiAocHEsIGNiKSB7XG4gIHZhciBjbGVhbnVwID0gZnVuY3Rpb24gKCkge1xuICAgIHBxLnJlbW92ZUxpc3RlbmVyKCdyZWFkYWJsZScsIG9uUmVhZGFibGUpXG4gICAgcHEuc3RvcFJlYWRlcigpXG4gIH1cblxuICB2YXIgcmVhZEVycm9yID0gZnVuY3Rpb24gKG1lc3NhZ2UpIHtcbiAgICBjbGVhbnVwKClcbiAgICByZXR1cm4gY2IobmV3IEVycm9yKG1lc3NhZ2UgfHwgcHEuZXJyb3JNZXNzYWdlKCkpKVxuICB9XG5cbiAgdmFyIG9uUmVhZGFibGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgLy8gcmVhZCB3YWl0aW5nIGRhdGEgZnJvbSB0aGUgc29ja2V0XG4gICAgLy8gZS5nLiBjbGVhciB0aGUgcGVuZGluZyAnc2VsZWN0J1xuICAgIGlmICghcHEuY29uc3VtZUlucHV0KCkpIHtcbiAgICAgIHJldHVybiByZWFkRXJyb3IoKVxuICAgIH1cblxuICAgIC8vIGNoZWNrIGlmIHRoZXJlIGlzIHN0aWxsIG91dHN0YW5kaW5nIGRhdGFcbiAgICAvLyBpZiBzbywgd2FpdCBmb3IgaXQgYWxsIHRvIGNvbWUgaW5cbiAgICBpZiAocHEuaXNCdXN5KCkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIGxvYWQgb3VyIHJlc3VsdCBvYmplY3RcbiAgICBwcS5nZXRSZXN1bHQoKVxuXG4gICAgLy8gXCJyZWFkIHVudGlsIHJlc3VsdHMgcmV0dXJuIG51bGxcIlxuICAgIC8vIG9yIGluIG91ciBjYXNlIGVuc3VyZSB3ZSBvbmx5IGhhdmUgb25lIHJlc3VsdFxuICAgIGlmIChwcS5nZXRSZXN1bHQoKSAmJiBwcS5yZXN1bHRTdGF0dXMoKSAhPT0gJ1BHUkVTX0NPUFlfT1VUJykge1xuICAgICAgcmV0dXJuIHJlYWRFcnJvcignT25seSBvbmUgcmVzdWx0IGF0IGEgdGltZSBpcyBhY2NlcHRlZCcpXG4gICAgfVxuXG4gICAgaWYgKHBxLnJlc3VsdFN0YXR1cygpID09PSAnUEdSRVNfRkFUQUxfRVJST1InKSB7XG4gICAgICByZXR1cm4gcmVhZEVycm9yKClcbiAgICB9XG5cbiAgICBjbGVhbnVwKClcbiAgICByZXR1cm4gY2IobnVsbClcbiAgfVxuICBwcS5vbigncmVhZGFibGUnLCBvblJlYWRhYmxlKVxuICBwcS5zdGFydFJlYWRlcigpXG59XG4iLCIvLyBleHBvcnQgdGhlIGNsYXNzIGlmIHdlIGFyZSBpbiBhIE5vZGUtbGlrZSBzeXN0ZW0uXG5pZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgPT09IGV4cG9ydHMpXG4gIGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IFNlbVZlcjtcblxuLy8gVGhlIGRlYnVnIGZ1bmN0aW9uIGlzIGV4Y2x1ZGVkIGVudGlyZWx5IGZyb20gdGhlIG1pbmlmaWVkIHZlcnNpb24uXG4vKiBub21pbiAqLyB2YXIgZGVidWc7XG4vKiBub21pbiAqLyBpZiAodHlwZW9mIHByb2Nlc3MgPT09ICdvYmplY3QnICYmXG4gICAgLyogbm9taW4gKi8gcHJvY2Vzcy5lbnYgJiZcbiAgICAvKiBub21pbiAqLyBwcm9jZXNzLmVudi5OT0RFX0RFQlVHICYmXG4gICAgLyogbm9taW4gKi8gL1xcYnNlbXZlclxcYi9pLnRlc3QocHJvY2Vzcy5lbnYuTk9ERV9ERUJVRykpXG4gIC8qIG5vbWluICovIGRlYnVnID0gZnVuY3Rpb24oKSB7XG4gICAgLyogbm9taW4gKi8gdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDApO1xuICAgIC8qIG5vbWluICovIGFyZ3MudW5zaGlmdCgnU0VNVkVSJyk7XG4gICAgLyogbm9taW4gKi8gY29uc29sZS5sb2cuYXBwbHkoY29uc29sZSwgYXJncyk7XG4gICAgLyogbm9taW4gKi8gfTtcbi8qIG5vbWluICovIGVsc2VcbiAgLyogbm9taW4gKi8gZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuXG4vLyBOb3RlOiB0aGlzIGlzIHRoZSBzZW12ZXIub3JnIHZlcnNpb24gb2YgdGhlIHNwZWMgdGhhdCBpdCBpbXBsZW1lbnRzXG4vLyBOb3QgbmVjZXNzYXJpbHkgdGhlIHBhY2thZ2UgdmVyc2lvbiBvZiB0aGlzIGNvZGUuXG5leHBvcnRzLlNFTVZFUl9TUEVDX1ZFUlNJT04gPSAnMi4wLjAnO1xuXG52YXIgTUFYX0xFTkdUSCA9IDI1NjtcbnZhciBNQVhfU0FGRV9JTlRFR0VSID0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIgfHwgOTAwNzE5OTI1NDc0MDk5MTtcblxuLy8gVGhlIGFjdHVhbCByZWdleHBzIGdvIG9uIGV4cG9ydHMucmVcbnZhciByZSA9IGV4cG9ydHMucmUgPSBbXTtcbnZhciBzcmMgPSBleHBvcnRzLnNyYyA9IFtdO1xudmFyIFIgPSAwO1xuXG4vLyBUaGUgZm9sbG93aW5nIFJlZ3VsYXIgRXhwcmVzc2lvbnMgY2FuIGJlIHVzZWQgZm9yIHRva2VuaXppbmcsXG4vLyB2YWxpZGF0aW5nLCBhbmQgcGFyc2luZyBTZW1WZXIgdmVyc2lvbiBzdHJpbmdzLlxuXG4vLyAjIyBOdW1lcmljIElkZW50aWZpZXJcbi8vIEEgc2luZ2xlIGAwYCwgb3IgYSBub24temVybyBkaWdpdCBmb2xsb3dlZCBieSB6ZXJvIG9yIG1vcmUgZGlnaXRzLlxuXG52YXIgTlVNRVJJQ0lERU5USUZJRVIgPSBSKys7XG5zcmNbTlVNRVJJQ0lERU5USUZJRVJdID0gJzB8WzEtOV1cXFxcZConO1xudmFyIE5VTUVSSUNJREVOVElGSUVSTE9PU0UgPSBSKys7XG5zcmNbTlVNRVJJQ0lERU5USUZJRVJMT09TRV0gPSAnWzAtOV0rJztcblxuXG4vLyAjIyBOb24tbnVtZXJpYyBJZGVudGlmaWVyXG4vLyBaZXJvIG9yIG1vcmUgZGlnaXRzLCBmb2xsb3dlZCBieSBhIGxldHRlciBvciBoeXBoZW4sIGFuZCB0aGVuIHplcm8gb3Jcbi8vIG1vcmUgbGV0dGVycywgZGlnaXRzLCBvciBoeXBoZW5zLlxuXG52YXIgTk9OTlVNRVJJQ0lERU5USUZJRVIgPSBSKys7XG5zcmNbTk9OTlVNRVJJQ0lERU5USUZJRVJdID0gJ1xcXFxkKlthLXpBLVotXVthLXpBLVowLTktXSonO1xuXG5cbi8vICMjIE1haW4gVmVyc2lvblxuLy8gVGhyZWUgZG90LXNlcGFyYXRlZCBudW1lcmljIGlkZW50aWZpZXJzLlxuXG52YXIgTUFJTlZFUlNJT04gPSBSKys7XG5zcmNbTUFJTlZFUlNJT05dID0gJygnICsgc3JjW05VTUVSSUNJREVOVElGSUVSXSArICcpXFxcXC4nICtcbiAgICAgICAgICAgICAgICAgICAnKCcgKyBzcmNbTlVNRVJJQ0lERU5USUZJRVJdICsgJylcXFxcLicgK1xuICAgICAgICAgICAgICAgICAgICcoJyArIHNyY1tOVU1FUklDSURFTlRJRklFUl0gKyAnKSc7XG5cbnZhciBNQUlOVkVSU0lPTkxPT1NFID0gUisrO1xuc3JjW01BSU5WRVJTSU9OTE9PU0VdID0gJygnICsgc3JjW05VTUVSSUNJREVOVElGSUVSTE9PU0VdICsgJylcXFxcLicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJygnICsgc3JjW05VTUVSSUNJREVOVElGSUVSTE9PU0VdICsgJylcXFxcLicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJygnICsgc3JjW05VTUVSSUNJREVOVElGSUVSTE9PU0VdICsgJyknO1xuXG4vLyAjIyBQcmUtcmVsZWFzZSBWZXJzaW9uIElkZW50aWZpZXJcbi8vIEEgbnVtZXJpYyBpZGVudGlmaWVyLCBvciBhIG5vbi1udW1lcmljIGlkZW50aWZpZXIuXG5cbnZhciBQUkVSRUxFQVNFSURFTlRJRklFUiA9IFIrKztcbnNyY1tQUkVSRUxFQVNFSURFTlRJRklFUl0gPSAnKD86JyArIHNyY1tOVU1FUklDSURFTlRJRklFUl0gK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICd8JyArIHNyY1tOT05OVU1FUklDSURFTlRJRklFUl0gKyAnKSc7XG5cbnZhciBQUkVSRUxFQVNFSURFTlRJRklFUkxPT1NFID0gUisrO1xuc3JjW1BSRVJFTEVBU0VJREVOVElGSUVSTE9PU0VdID0gJyg/OicgKyBzcmNbTlVNRVJJQ0lERU5USUZJRVJMT09TRV0gK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3wnICsgc3JjW05PTk5VTUVSSUNJREVOVElGSUVSXSArICcpJztcblxuXG4vLyAjIyBQcmUtcmVsZWFzZSBWZXJzaW9uXG4vLyBIeXBoZW4sIGZvbGxvd2VkIGJ5IG9uZSBvciBtb3JlIGRvdC1zZXBhcmF0ZWQgcHJlLXJlbGVhc2UgdmVyc2lvblxuLy8gaWRlbnRpZmllcnMuXG5cbnZhciBQUkVSRUxFQVNFID0gUisrO1xuc3JjW1BSRVJFTEVBU0VdID0gJyg/Oi0oJyArIHNyY1tQUkVSRUxFQVNFSURFTlRJRklFUl0gK1xuICAgICAgICAgICAgICAgICAgJyg/OlxcXFwuJyArIHNyY1tQUkVSRUxFQVNFSURFTlRJRklFUl0gKyAnKSopKSc7XG5cbnZhciBQUkVSRUxFQVNFTE9PU0UgPSBSKys7XG5zcmNbUFJFUkVMRUFTRUxPT1NFXSA9ICcoPzotPygnICsgc3JjW1BSRVJFTEVBU0VJREVOVElGSUVSTE9PU0VdICtcbiAgICAgICAgICAgICAgICAgICAgICAgJyg/OlxcXFwuJyArIHNyY1tQUkVSRUxFQVNFSURFTlRJRklFUkxPT1NFXSArICcpKikpJztcblxuLy8gIyMgQnVpbGQgTWV0YWRhdGEgSWRlbnRpZmllclxuLy8gQW55IGNvbWJpbmF0aW9uIG9mIGRpZ2l0cywgbGV0dGVycywgb3IgaHlwaGVucy5cblxudmFyIEJVSUxESURFTlRJRklFUiA9IFIrKztcbnNyY1tCVUlMRElERU5USUZJRVJdID0gJ1swLTlBLVphLXotXSsnO1xuXG4vLyAjIyBCdWlsZCBNZXRhZGF0YVxuLy8gUGx1cyBzaWduLCBmb2xsb3dlZCBieSBvbmUgb3IgbW9yZSBwZXJpb2Qtc2VwYXJhdGVkIGJ1aWxkIG1ldGFkYXRhXG4vLyBpZGVudGlmaWVycy5cblxudmFyIEJVSUxEID0gUisrO1xuc3JjW0JVSUxEXSA9ICcoPzpcXFxcKygnICsgc3JjW0JVSUxESURFTlRJRklFUl0gK1xuICAgICAgICAgICAgICcoPzpcXFxcLicgKyBzcmNbQlVJTERJREVOVElGSUVSXSArICcpKikpJztcblxuXG4vLyAjIyBGdWxsIFZlcnNpb24gU3RyaW5nXG4vLyBBIG1haW4gdmVyc2lvbiwgZm9sbG93ZWQgb3B0aW9uYWxseSBieSBhIHByZS1yZWxlYXNlIHZlcnNpb24gYW5kXG4vLyBidWlsZCBtZXRhZGF0YS5cblxuLy8gTm90ZSB0aGF0IHRoZSBvbmx5IG1ham9yLCBtaW5vciwgcGF0Y2gsIGFuZCBwcmUtcmVsZWFzZSBzZWN0aW9ucyBvZlxuLy8gdGhlIHZlcnNpb24gc3RyaW5nIGFyZSBjYXB0dXJpbmcgZ3JvdXBzLiAgVGhlIGJ1aWxkIG1ldGFkYXRhIGlzIG5vdCBhXG4vLyBjYXB0dXJpbmcgZ3JvdXAsIGJlY2F1c2UgaXQgc2hvdWxkIG5vdCBldmVyIGJlIHVzZWQgaW4gdmVyc2lvblxuLy8gY29tcGFyaXNvbi5cblxudmFyIEZVTEwgPSBSKys7XG52YXIgRlVMTFBMQUlOID0gJ3Y/JyArIHNyY1tNQUlOVkVSU0lPTl0gK1xuICAgICAgICAgICAgICAgIHNyY1tQUkVSRUxFQVNFXSArICc/JyArXG4gICAgICAgICAgICAgICAgc3JjW0JVSUxEXSArICc/Jztcblxuc3JjW0ZVTExdID0gJ14nICsgRlVMTFBMQUlOICsgJyQnO1xuXG4vLyBsaWtlIGZ1bGwsIGJ1dCBhbGxvd3MgdjEuMi4zIGFuZCA9MS4yLjMsIHdoaWNoIHBlb3BsZSBkbyBzb21ldGltZXMuXG4vLyBhbHNvLCAxLjAuMGFscGhhMSAocHJlcmVsZWFzZSB3aXRob3V0IHRoZSBoeXBoZW4pIHdoaWNoIGlzIHByZXR0eVxuLy8gY29tbW9uIGluIHRoZSBucG0gcmVnaXN0cnkuXG52YXIgTE9PU0VQTEFJTiA9ICdbdj1cXFxcc10qJyArIHNyY1tNQUlOVkVSU0lPTkxPT1NFXSArXG4gICAgICAgICAgICAgICAgIHNyY1tQUkVSRUxFQVNFTE9PU0VdICsgJz8nICtcbiAgICAgICAgICAgICAgICAgc3JjW0JVSUxEXSArICc/JztcblxudmFyIExPT1NFID0gUisrO1xuc3JjW0xPT1NFXSA9ICdeJyArIExPT1NFUExBSU4gKyAnJCc7XG5cbnZhciBHVExUID0gUisrO1xuc3JjW0dUTFRdID0gJygoPzo8fD4pPz0/KSc7XG5cbi8vIFNvbWV0aGluZyBsaWtlIFwiMi4qXCIgb3IgXCIxLjIueFwiLlxuLy8gTm90ZSB0aGF0IFwieC54XCIgaXMgYSB2YWxpZCB4UmFuZ2UgaWRlbnRpZmVyLCBtZWFuaW5nIFwiYW55IHZlcnNpb25cIlxuLy8gT25seSB0aGUgZmlyc3QgaXRlbSBpcyBzdHJpY3RseSByZXF1aXJlZC5cbnZhciBYUkFOR0VJREVOVElGSUVSTE9PU0UgPSBSKys7XG5zcmNbWFJBTkdFSURFTlRJRklFUkxPT1NFXSA9IHNyY1tOVU1FUklDSURFTlRJRklFUkxPT1NFXSArICd8eHxYfFxcXFwqJztcbnZhciBYUkFOR0VJREVOVElGSUVSID0gUisrO1xuc3JjW1hSQU5HRUlERU5USUZJRVJdID0gc3JjW05VTUVSSUNJREVOVElGSUVSXSArICd8eHxYfFxcXFwqJztcblxudmFyIFhSQU5HRVBMQUlOID0gUisrO1xuc3JjW1hSQU5HRVBMQUlOXSA9ICdbdj1cXFxcc10qKCcgKyBzcmNbWFJBTkdFSURFTlRJRklFUl0gKyAnKScgK1xuICAgICAgICAgICAgICAgICAgICcoPzpcXFxcLignICsgc3JjW1hSQU5HRUlERU5USUZJRVJdICsgJyknICtcbiAgICAgICAgICAgICAgICAgICAnKD86XFxcXC4oJyArIHNyY1tYUkFOR0VJREVOVElGSUVSXSArICcpJyArXG4gICAgICAgICAgICAgICAgICAgJyg/OicgKyBzcmNbUFJFUkVMRUFTRV0gKyAnKT8nICtcbiAgICAgICAgICAgICAgICAgICBzcmNbQlVJTERdICsgJz8nICtcbiAgICAgICAgICAgICAgICAgICAnKT8pPyc7XG5cbnZhciBYUkFOR0VQTEFJTkxPT1NFID0gUisrO1xuc3JjW1hSQU5HRVBMQUlOTE9PU0VdID0gJ1t2PVxcXFxzXSooJyArIHNyY1tYUkFOR0VJREVOVElGSUVSTE9PU0VdICsgJyknICtcbiAgICAgICAgICAgICAgICAgICAgICAgICcoPzpcXFxcLignICsgc3JjW1hSQU5HRUlERU5USUZJRVJMT09TRV0gKyAnKScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJyg/OlxcXFwuKCcgKyBzcmNbWFJBTkdFSURFTlRJRklFUkxPT1NFXSArICcpJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnKD86JyArIHNyY1tQUkVSRUxFQVNFTE9PU0VdICsgJyk/JyArXG4gICAgICAgICAgICAgICAgICAgICAgICBzcmNbQlVJTERdICsgJz8nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICcpPyk/JztcblxudmFyIFhSQU5HRSA9IFIrKztcbnNyY1tYUkFOR0VdID0gJ14nICsgc3JjW0dUTFRdICsgJ1xcXFxzKicgKyBzcmNbWFJBTkdFUExBSU5dICsgJyQnO1xudmFyIFhSQU5HRUxPT1NFID0gUisrO1xuc3JjW1hSQU5HRUxPT1NFXSA9ICdeJyArIHNyY1tHVExUXSArICdcXFxccyonICsgc3JjW1hSQU5HRVBMQUlOTE9PU0VdICsgJyQnO1xuXG4vLyBUaWxkZSByYW5nZXMuXG4vLyBNZWFuaW5nIGlzIFwicmVhc29uYWJseSBhdCBvciBncmVhdGVyIHRoYW5cIlxudmFyIExPTkVUSUxERSA9IFIrKztcbnNyY1tMT05FVElMREVdID0gJyg/On4+PyknO1xuXG52YXIgVElMREVUUklNID0gUisrO1xuc3JjW1RJTERFVFJJTV0gPSAnKFxcXFxzKiknICsgc3JjW0xPTkVUSUxERV0gKyAnXFxcXHMrJztcbnJlW1RJTERFVFJJTV0gPSBuZXcgUmVnRXhwKHNyY1tUSUxERVRSSU1dLCAnZycpO1xudmFyIHRpbGRlVHJpbVJlcGxhY2UgPSAnJDF+JztcblxudmFyIFRJTERFID0gUisrO1xuc3JjW1RJTERFXSA9ICdeJyArIHNyY1tMT05FVElMREVdICsgc3JjW1hSQU5HRVBMQUlOXSArICckJztcbnZhciBUSUxERUxPT1NFID0gUisrO1xuc3JjW1RJTERFTE9PU0VdID0gJ14nICsgc3JjW0xPTkVUSUxERV0gKyBzcmNbWFJBTkdFUExBSU5MT09TRV0gKyAnJCc7XG5cbi8vIENhcmV0IHJhbmdlcy5cbi8vIE1lYW5pbmcgaXMgXCJhdCBsZWFzdCBhbmQgYmFja3dhcmRzIGNvbXBhdGlibGUgd2l0aFwiXG52YXIgTE9ORUNBUkVUID0gUisrO1xuc3JjW0xPTkVDQVJFVF0gPSAnKD86XFxcXF4pJztcblxudmFyIENBUkVUVFJJTSA9IFIrKztcbnNyY1tDQVJFVFRSSU1dID0gJyhcXFxccyopJyArIHNyY1tMT05FQ0FSRVRdICsgJ1xcXFxzKyc7XG5yZVtDQVJFVFRSSU1dID0gbmV3IFJlZ0V4cChzcmNbQ0FSRVRUUklNXSwgJ2cnKTtcbnZhciBjYXJldFRyaW1SZXBsYWNlID0gJyQxXic7XG5cbnZhciBDQVJFVCA9IFIrKztcbnNyY1tDQVJFVF0gPSAnXicgKyBzcmNbTE9ORUNBUkVUXSArIHNyY1tYUkFOR0VQTEFJTl0gKyAnJCc7XG52YXIgQ0FSRVRMT09TRSA9IFIrKztcbnNyY1tDQVJFVExPT1NFXSA9ICdeJyArIHNyY1tMT05FQ0FSRVRdICsgc3JjW1hSQU5HRVBMQUlOTE9PU0VdICsgJyQnO1xuXG4vLyBBIHNpbXBsZSBndC9sdC9lcSB0aGluZywgb3IganVzdCBcIlwiIHRvIGluZGljYXRlIFwiYW55IHZlcnNpb25cIlxudmFyIENPTVBBUkFUT1JMT09TRSA9IFIrKztcbnNyY1tDT01QQVJBVE9STE9PU0VdID0gJ14nICsgc3JjW0dUTFRdICsgJ1xcXFxzKignICsgTE9PU0VQTEFJTiArICcpJHxeJCc7XG52YXIgQ09NUEFSQVRPUiA9IFIrKztcbnNyY1tDT01QQVJBVE9SXSA9ICdeJyArIHNyY1tHVExUXSArICdcXFxccyooJyArIEZVTExQTEFJTiArICcpJHxeJCc7XG5cblxuLy8gQW4gZXhwcmVzc2lvbiB0byBzdHJpcCBhbnkgd2hpdGVzcGFjZSBiZXR3ZWVuIHRoZSBndGx0IGFuZCB0aGUgdGhpbmdcbi8vIGl0IG1vZGlmaWVzLCBzbyB0aGF0IGA+IDEuMi4zYCA9PT4gYD4xLjIuM2BcbnZhciBDT01QQVJBVE9SVFJJTSA9IFIrKztcbnNyY1tDT01QQVJBVE9SVFJJTV0gPSAnKFxcXFxzKiknICsgc3JjW0dUTFRdICtcbiAgICAgICAgICAgICAgICAgICAgICAnXFxcXHMqKCcgKyBMT09TRVBMQUlOICsgJ3wnICsgc3JjW1hSQU5HRVBMQUlOXSArICcpJztcblxuLy8gdGhpcyBvbmUgaGFzIHRvIHVzZSB0aGUgL2cgZmxhZ1xucmVbQ09NUEFSQVRPUlRSSU1dID0gbmV3IFJlZ0V4cChzcmNbQ09NUEFSQVRPUlRSSU1dLCAnZycpO1xudmFyIGNvbXBhcmF0b3JUcmltUmVwbGFjZSA9ICckMSQyJDMnO1xuXG5cbi8vIFNvbWV0aGluZyBsaWtlIGAxLjIuMyAtIDEuMi40YFxuLy8gTm90ZSB0aGF0IHRoZXNlIGFsbCB1c2UgdGhlIGxvb3NlIGZvcm0sIGJlY2F1c2UgdGhleSdsbCBiZVxuLy8gY2hlY2tlZCBhZ2FpbnN0IGVpdGhlciB0aGUgc3RyaWN0IG9yIGxvb3NlIGNvbXBhcmF0b3IgZm9ybVxuLy8gbGF0ZXIuXG52YXIgSFlQSEVOUkFOR0UgPSBSKys7XG5zcmNbSFlQSEVOUkFOR0VdID0gJ15cXFxccyooJyArIHNyY1tYUkFOR0VQTEFJTl0gKyAnKScgK1xuICAgICAgICAgICAgICAgICAgICdcXFxccystXFxcXHMrJyArXG4gICAgICAgICAgICAgICAgICAgJygnICsgc3JjW1hSQU5HRVBMQUlOXSArICcpJyArXG4gICAgICAgICAgICAgICAgICAgJ1xcXFxzKiQnO1xuXG52YXIgSFlQSEVOUkFOR0VMT09TRSA9IFIrKztcbnNyY1tIWVBIRU5SQU5HRUxPT1NFXSA9ICdeXFxcXHMqKCcgKyBzcmNbWFJBTkdFUExBSU5MT09TRV0gKyAnKScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ1xcXFxzKy1cXFxccysnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICcoJyArIHNyY1tYUkFOR0VQTEFJTkxPT1NFXSArICcpJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnXFxcXHMqJCc7XG5cbi8vIFN0YXIgcmFuZ2VzIGJhc2ljYWxseSBqdXN0IGFsbG93IGFueXRoaW5nIGF0IGFsbC5cbnZhciBTVEFSID0gUisrO1xuc3JjW1NUQVJdID0gJyg8fD4pPz0/XFxcXHMqXFxcXConO1xuXG4vLyBDb21waWxlIHRvIGFjdHVhbCByZWdleHAgb2JqZWN0cy5cbi8vIEFsbCBhcmUgZmxhZy1mcmVlLCB1bmxlc3MgdGhleSB3ZXJlIGNyZWF0ZWQgYWJvdmUgd2l0aCBhIGZsYWcuXG5mb3IgKHZhciBpID0gMDsgaSA8IFI7IGkrKykge1xuICBkZWJ1ZyhpLCBzcmNbaV0pO1xuICBpZiAoIXJlW2ldKVxuICAgIHJlW2ldID0gbmV3IFJlZ0V4cChzcmNbaV0pO1xufVxuXG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5mdW5jdGlvbiBwYXJzZSh2ZXJzaW9uLCBsb29zZSkge1xuICBpZiAodmVyc2lvbi5sZW5ndGggPiBNQVhfTEVOR1RIKVxuICAgIHJldHVybiBudWxsO1xuXG4gIHZhciByID0gbG9vc2UgPyByZVtMT09TRV0gOiByZVtGVUxMXTtcbiAgaWYgKCFyLnRlc3QodmVyc2lvbikpXG4gICAgcmV0dXJuIG51bGw7XG5cbiAgdHJ5IHtcbiAgICByZXR1cm4gbmV3IFNlbVZlcih2ZXJzaW9uLCBsb29zZSk7XG4gIH0gY2F0Y2ggKGVyKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZXhwb3J0cy52YWxpZCA9IHZhbGlkO1xuZnVuY3Rpb24gdmFsaWQodmVyc2lvbiwgbG9vc2UpIHtcbiAgdmFyIHYgPSBwYXJzZSh2ZXJzaW9uLCBsb29zZSk7XG4gIHJldHVybiB2ID8gdi52ZXJzaW9uIDogbnVsbDtcbn1cblxuXG5leHBvcnRzLmNsZWFuID0gY2xlYW47XG5mdW5jdGlvbiBjbGVhbih2ZXJzaW9uLCBsb29zZSkge1xuICB2YXIgcyA9IHBhcnNlKHZlcnNpb24udHJpbSgpLnJlcGxhY2UoL15bPXZdKy8sICcnKSwgbG9vc2UpO1xuICByZXR1cm4gcyA/IHMudmVyc2lvbiA6IG51bGw7XG59XG5cbmV4cG9ydHMuU2VtVmVyID0gU2VtVmVyO1xuXG5mdW5jdGlvbiBTZW1WZXIodmVyc2lvbiwgbG9vc2UpIHtcbiAgaWYgKHZlcnNpb24gaW5zdGFuY2VvZiBTZW1WZXIpIHtcbiAgICBpZiAodmVyc2lvbi5sb29zZSA9PT0gbG9vc2UpXG4gICAgICByZXR1cm4gdmVyc2lvbjtcbiAgICBlbHNlXG4gICAgICB2ZXJzaW9uID0gdmVyc2lvbi52ZXJzaW9uO1xuICB9IGVsc2UgaWYgKHR5cGVvZiB2ZXJzaW9uICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgVmVyc2lvbjogJyArIHZlcnNpb24pO1xuICB9XG5cbiAgaWYgKHZlcnNpb24ubGVuZ3RoID4gTUFYX0xFTkdUSClcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCd2ZXJzaW9uIGlzIGxvbmdlciB0aGFuICcgKyBNQVhfTEVOR1RIICsgJyBjaGFyYWN0ZXJzJylcblxuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgU2VtVmVyKSlcbiAgICByZXR1cm4gbmV3IFNlbVZlcih2ZXJzaW9uLCBsb29zZSk7XG5cbiAgZGVidWcoJ1NlbVZlcicsIHZlcnNpb24sIGxvb3NlKTtcbiAgdGhpcy5sb29zZSA9IGxvb3NlO1xuICB2YXIgbSA9IHZlcnNpb24udHJpbSgpLm1hdGNoKGxvb3NlID8gcmVbTE9PU0VdIDogcmVbRlVMTF0pO1xuXG4gIGlmICghbSlcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIFZlcnNpb246ICcgKyB2ZXJzaW9uKTtcblxuICB0aGlzLnJhdyA9IHZlcnNpb247XG5cbiAgLy8gdGhlc2UgYXJlIGFjdHVhbGx5IG51bWJlcnNcbiAgdGhpcy5tYWpvciA9ICttWzFdO1xuICB0aGlzLm1pbm9yID0gK21bMl07XG4gIHRoaXMucGF0Y2ggPSArbVszXTtcblxuICBpZiAodGhpcy5tYWpvciA+IE1BWF9TQUZFX0lOVEVHRVIgfHwgdGhpcy5tYWpvciA8IDApXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBtYWpvciB2ZXJzaW9uJylcblxuICBpZiAodGhpcy5taW5vciA+IE1BWF9TQUZFX0lOVEVHRVIgfHwgdGhpcy5taW5vciA8IDApXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBtaW5vciB2ZXJzaW9uJylcblxuICBpZiAodGhpcy5wYXRjaCA+IE1BWF9TQUZFX0lOVEVHRVIgfHwgdGhpcy5wYXRjaCA8IDApXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBwYXRjaCB2ZXJzaW9uJylcblxuICAvLyBudW1iZXJpZnkgYW55IHByZXJlbGVhc2UgbnVtZXJpYyBpZHNcbiAgaWYgKCFtWzRdKVxuICAgIHRoaXMucHJlcmVsZWFzZSA9IFtdO1xuICBlbHNlXG4gICAgdGhpcy5wcmVyZWxlYXNlID0gbVs0XS5zcGxpdCgnLicpLm1hcChmdW5jdGlvbihpZCkge1xuICAgICAgcmV0dXJuICgvXlswLTldKyQvLnRlc3QoaWQpKSA/ICtpZCA6IGlkO1xuICAgIH0pO1xuXG4gIHRoaXMuYnVpbGQgPSBtWzVdID8gbVs1XS5zcGxpdCgnLicpIDogW107XG4gIHRoaXMuZm9ybWF0KCk7XG59XG5cblNlbVZlci5wcm90b3R5cGUuZm9ybWF0ID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMudmVyc2lvbiA9IHRoaXMubWFqb3IgKyAnLicgKyB0aGlzLm1pbm9yICsgJy4nICsgdGhpcy5wYXRjaDtcbiAgaWYgKHRoaXMucHJlcmVsZWFzZS5sZW5ndGgpXG4gICAgdGhpcy52ZXJzaW9uICs9ICctJyArIHRoaXMucHJlcmVsZWFzZS5qb2luKCcuJyk7XG4gIHJldHVybiB0aGlzLnZlcnNpb247XG59O1xuXG5TZW1WZXIucHJvdG90eXBlLmluc3BlY3QgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuICc8U2VtVmVyIFwiJyArIHRoaXMgKyAnXCI+Jztcbn07XG5cblNlbVZlci5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMudmVyc2lvbjtcbn07XG5cblNlbVZlci5wcm90b3R5cGUuY29tcGFyZSA9IGZ1bmN0aW9uKG90aGVyKSB7XG4gIGRlYnVnKCdTZW1WZXIuY29tcGFyZScsIHRoaXMudmVyc2lvbiwgdGhpcy5sb29zZSwgb3RoZXIpO1xuICBpZiAoIShvdGhlciBpbnN0YW5jZW9mIFNlbVZlcikpXG4gICAgb3RoZXIgPSBuZXcgU2VtVmVyKG90aGVyLCB0aGlzLmxvb3NlKTtcblxuICByZXR1cm4gdGhpcy5jb21wYXJlTWFpbihvdGhlcikgfHwgdGhpcy5jb21wYXJlUHJlKG90aGVyKTtcbn07XG5cblNlbVZlci5wcm90b3R5cGUuY29tcGFyZU1haW4gPSBmdW5jdGlvbihvdGhlcikge1xuICBpZiAoIShvdGhlciBpbnN0YW5jZW9mIFNlbVZlcikpXG4gICAgb3RoZXIgPSBuZXcgU2VtVmVyKG90aGVyLCB0aGlzLmxvb3NlKTtcblxuICByZXR1cm4gY29tcGFyZUlkZW50aWZpZXJzKHRoaXMubWFqb3IsIG90aGVyLm1ham9yKSB8fFxuICAgICAgICAgY29tcGFyZUlkZW50aWZpZXJzKHRoaXMubWlub3IsIG90aGVyLm1pbm9yKSB8fFxuICAgICAgICAgY29tcGFyZUlkZW50aWZpZXJzKHRoaXMucGF0Y2gsIG90aGVyLnBhdGNoKTtcbn07XG5cblNlbVZlci5wcm90b3R5cGUuY29tcGFyZVByZSA9IGZ1bmN0aW9uKG90aGVyKSB7XG4gIGlmICghKG90aGVyIGluc3RhbmNlb2YgU2VtVmVyKSlcbiAgICBvdGhlciA9IG5ldyBTZW1WZXIob3RoZXIsIHRoaXMubG9vc2UpO1xuXG4gIC8vIE5PVCBoYXZpbmcgYSBwcmVyZWxlYXNlIGlzID4gaGF2aW5nIG9uZVxuICBpZiAodGhpcy5wcmVyZWxlYXNlLmxlbmd0aCAmJiAhb3RoZXIucHJlcmVsZWFzZS5sZW5ndGgpXG4gICAgcmV0dXJuIC0xO1xuICBlbHNlIGlmICghdGhpcy5wcmVyZWxlYXNlLmxlbmd0aCAmJiBvdGhlci5wcmVyZWxlYXNlLmxlbmd0aClcbiAgICByZXR1cm4gMTtcbiAgZWxzZSBpZiAoIXRoaXMucHJlcmVsZWFzZS5sZW5ndGggJiYgIW90aGVyLnByZXJlbGVhc2UubGVuZ3RoKVxuICAgIHJldHVybiAwO1xuXG4gIHZhciBpID0gMDtcbiAgZG8ge1xuICAgIHZhciBhID0gdGhpcy5wcmVyZWxlYXNlW2ldO1xuICAgIHZhciBiID0gb3RoZXIucHJlcmVsZWFzZVtpXTtcbiAgICBkZWJ1ZygncHJlcmVsZWFzZSBjb21wYXJlJywgaSwgYSwgYik7XG4gICAgaWYgKGEgPT09IHVuZGVmaW5lZCAmJiBiID09PSB1bmRlZmluZWQpXG4gICAgICByZXR1cm4gMDtcbiAgICBlbHNlIGlmIChiID09PSB1bmRlZmluZWQpXG4gICAgICByZXR1cm4gMTtcbiAgICBlbHNlIGlmIChhID09PSB1bmRlZmluZWQpXG4gICAgICByZXR1cm4gLTE7XG4gICAgZWxzZSBpZiAoYSA9PT0gYilcbiAgICAgIGNvbnRpbnVlO1xuICAgIGVsc2VcbiAgICAgIHJldHVybiBjb21wYXJlSWRlbnRpZmllcnMoYSwgYik7XG4gIH0gd2hpbGUgKCsraSk7XG59O1xuXG4vLyBwcmVtaW5vciB3aWxsIGJ1bXAgdGhlIHZlcnNpb24gdXAgdG8gdGhlIG5leHQgbWlub3IgcmVsZWFzZSwgYW5kIGltbWVkaWF0ZWx5XG4vLyBkb3duIHRvIHByZS1yZWxlYXNlLiBwcmVtYWpvciBhbmQgcHJlcGF0Y2ggd29yayB0aGUgc2FtZSB3YXkuXG5TZW1WZXIucHJvdG90eXBlLmluYyA9IGZ1bmN0aW9uKHJlbGVhc2UsIGlkZW50aWZpZXIpIHtcbiAgc3dpdGNoIChyZWxlYXNlKSB7XG4gICAgY2FzZSAncHJlbWFqb3InOlxuICAgICAgdGhpcy5wcmVyZWxlYXNlLmxlbmd0aCA9IDA7XG4gICAgICB0aGlzLnBhdGNoID0gMDtcbiAgICAgIHRoaXMubWlub3IgPSAwO1xuICAgICAgdGhpcy5tYWpvcisrO1xuICAgICAgdGhpcy5pbmMoJ3ByZScsIGlkZW50aWZpZXIpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncHJlbWlub3InOlxuICAgICAgdGhpcy5wcmVyZWxlYXNlLmxlbmd0aCA9IDA7XG4gICAgICB0aGlzLnBhdGNoID0gMDtcbiAgICAgIHRoaXMubWlub3IrKztcbiAgICAgIHRoaXMuaW5jKCdwcmUnLCBpZGVudGlmaWVyKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByZXBhdGNoJzpcbiAgICAgIC8vIElmIHRoaXMgaXMgYWxyZWFkeSBhIHByZXJlbGVhc2UsIGl0IHdpbGwgYnVtcCB0byB0aGUgbmV4dCB2ZXJzaW9uXG4gICAgICAvLyBkcm9wIGFueSBwcmVyZWxlYXNlcyB0aGF0IG1pZ2h0IGFscmVhZHkgZXhpc3QsIHNpbmNlIHRoZXkgYXJlIG5vdFxuICAgICAgLy8gcmVsZXZhbnQgYXQgdGhpcyBwb2ludC5cbiAgICAgIHRoaXMucHJlcmVsZWFzZS5sZW5ndGggPSAwO1xuICAgICAgdGhpcy5pbmMoJ3BhdGNoJywgaWRlbnRpZmllcik7XG4gICAgICB0aGlzLmluYygncHJlJywgaWRlbnRpZmllcik7XG4gICAgICBicmVhaztcbiAgICAvLyBJZiB0aGUgaW5wdXQgaXMgYSBub24tcHJlcmVsZWFzZSB2ZXJzaW9uLCB0aGlzIGFjdHMgdGhlIHNhbWUgYXNcbiAgICAvLyBwcmVwYXRjaC5cbiAgICBjYXNlICdwcmVyZWxlYXNlJzpcbiAgICAgIGlmICh0aGlzLnByZXJlbGVhc2UubGVuZ3RoID09PSAwKVxuICAgICAgICB0aGlzLmluYygncGF0Y2gnLCBpZGVudGlmaWVyKTtcbiAgICAgIHRoaXMuaW5jKCdwcmUnLCBpZGVudGlmaWVyKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAnbWFqb3InOlxuICAgICAgLy8gSWYgdGhpcyBpcyBhIHByZS1tYWpvciB2ZXJzaW9uLCBidW1wIHVwIHRvIHRoZSBzYW1lIG1ham9yIHZlcnNpb24uXG4gICAgICAvLyBPdGhlcndpc2UgaW5jcmVtZW50IG1ham9yLlxuICAgICAgLy8gMS4wLjAtNSBidW1wcyB0byAxLjAuMFxuICAgICAgLy8gMS4xLjAgYnVtcHMgdG8gMi4wLjBcbiAgICAgIGlmICh0aGlzLm1pbm9yICE9PSAwIHx8IHRoaXMucGF0Y2ggIT09IDAgfHwgdGhpcy5wcmVyZWxlYXNlLmxlbmd0aCA9PT0gMClcbiAgICAgICAgdGhpcy5tYWpvcisrO1xuICAgICAgdGhpcy5taW5vciA9IDA7XG4gICAgICB0aGlzLnBhdGNoID0gMDtcbiAgICAgIHRoaXMucHJlcmVsZWFzZSA9IFtdO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbWlub3InOlxuICAgICAgLy8gSWYgdGhpcyBpcyBhIHByZS1taW5vciB2ZXJzaW9uLCBidW1wIHVwIHRvIHRoZSBzYW1lIG1pbm9yIHZlcnNpb24uXG4gICAgICAvLyBPdGhlcndpc2UgaW5jcmVtZW50IG1pbm9yLlxuICAgICAgLy8gMS4yLjAtNSBidW1wcyB0byAxLjIuMFxuICAgICAgLy8gMS4yLjEgYnVtcHMgdG8gMS4zLjBcbiAgICAgIGlmICh0aGlzLnBhdGNoICE9PSAwIHx8IHRoaXMucHJlcmVsZWFzZS5sZW5ndGggPT09IDApXG4gICAgICAgIHRoaXMubWlub3IrKztcbiAgICAgIHRoaXMucGF0Y2ggPSAwO1xuICAgICAgdGhpcy5wcmVyZWxlYXNlID0gW107XG4gICAgICBicmVhaztcbiAgICBjYXNlICdwYXRjaCc6XG4gICAgICAvLyBJZiB0aGlzIGlzIG5vdCBhIHByZS1yZWxlYXNlIHZlcnNpb24sIGl0IHdpbGwgaW5jcmVtZW50IHRoZSBwYXRjaC5cbiAgICAgIC8vIElmIGl0IGlzIGEgcHJlLXJlbGVhc2UgaXQgd2lsbCBidW1wIHVwIHRvIHRoZSBzYW1lIHBhdGNoIHZlcnNpb24uXG4gICAgICAvLyAxLjIuMC01IHBhdGNoZXMgdG8gMS4yLjBcbiAgICAgIC8vIDEuMi4wIHBhdGNoZXMgdG8gMS4yLjFcbiAgICAgIGlmICh0aGlzLnByZXJlbGVhc2UubGVuZ3RoID09PSAwKVxuICAgICAgICB0aGlzLnBhdGNoKys7XG4gICAgICB0aGlzLnByZXJlbGVhc2UgPSBbXTtcbiAgICAgIGJyZWFrO1xuICAgIC8vIFRoaXMgcHJvYmFibHkgc2hvdWxkbid0IGJlIHVzZWQgcHVibGljbHkuXG4gICAgLy8gMS4wLjAgXCJwcmVcIiB3b3VsZCBiZWNvbWUgMS4wLjAtMCB3aGljaCBpcyB0aGUgd3JvbmcgZGlyZWN0aW9uLlxuICAgIGNhc2UgJ3ByZSc6XG4gICAgICBpZiAodGhpcy5wcmVyZWxlYXNlLmxlbmd0aCA9PT0gMClcbiAgICAgICAgdGhpcy5wcmVyZWxlYXNlID0gWzBdO1xuICAgICAgZWxzZSB7XG4gICAgICAgIHZhciBpID0gdGhpcy5wcmVyZWxlYXNlLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnByZXJlbGVhc2VbaV0gPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICB0aGlzLnByZXJlbGVhc2VbaV0rKztcbiAgICAgICAgICAgIGkgPSAtMjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGkgPT09IC0xKSAvLyBkaWRuJ3QgaW5jcmVtZW50IGFueXRoaW5nXG4gICAgICAgICAgdGhpcy5wcmVyZWxlYXNlLnB1c2goMCk7XG4gICAgICB9XG4gICAgICBpZiAoaWRlbnRpZmllcikge1xuICAgICAgICAvLyAxLjIuMC1iZXRhLjEgYnVtcHMgdG8gMS4yLjAtYmV0YS4yLFxuICAgICAgICAvLyAxLjIuMC1iZXRhLmZvb2JseiBvciAxLjIuMC1iZXRhIGJ1bXBzIHRvIDEuMi4wLWJldGEuMFxuICAgICAgICBpZiAodGhpcy5wcmVyZWxlYXNlWzBdID09PSBpZGVudGlmaWVyKSB7XG4gICAgICAgICAgaWYgKGlzTmFOKHRoaXMucHJlcmVsZWFzZVsxXSkpXG4gICAgICAgICAgICB0aGlzLnByZXJlbGVhc2UgPSBbaWRlbnRpZmllciwgMF07XG4gICAgICAgIH0gZWxzZVxuICAgICAgICAgIHRoaXMucHJlcmVsZWFzZSA9IFtpZGVudGlmaWVyLCAwXTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBpbmNyZW1lbnQgYXJndW1lbnQ6ICcgKyByZWxlYXNlKTtcbiAgfVxuICB0aGlzLmZvcm1hdCgpO1xuICByZXR1cm4gdGhpcztcbn07XG5cbmV4cG9ydHMuaW5jID0gaW5jO1xuZnVuY3Rpb24gaW5jKHZlcnNpb24sIHJlbGVhc2UsIGxvb3NlLCBpZGVudGlmaWVyKSB7XG4gIGlmICh0eXBlb2YobG9vc2UpID09PSAnc3RyaW5nJykge1xuICAgIGlkZW50aWZpZXIgPSBsb29zZTtcbiAgICBsb29zZSA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHRyeSB7XG4gICAgcmV0dXJuIG5ldyBTZW1WZXIodmVyc2lvbiwgbG9vc2UpLmluYyhyZWxlYXNlLCBpZGVudGlmaWVyKS52ZXJzaW9uO1xuICB9IGNhdGNoIChlcikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbmV4cG9ydHMuZGlmZiA9IGRpZmY7XG5mdW5jdGlvbiBkaWZmKHZlcnNpb24xLCB2ZXJzaW9uMikge1xuICBpZiAoZXEodmVyc2lvbjEsIHZlcnNpb24yKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9IGVsc2Uge1xuICAgIHZhciB2MSA9IHBhcnNlKHZlcnNpb24xKTtcbiAgICB2YXIgdjIgPSBwYXJzZSh2ZXJzaW9uMik7XG4gICAgaWYgKHYxLnByZXJlbGVhc2UubGVuZ3RoIHx8IHYyLnByZXJlbGVhc2UubGVuZ3RoKSB7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gdjEpIHtcbiAgICAgICAgaWYgKGtleSA9PT0gJ21ham9yJyB8fCBrZXkgPT09ICdtaW5vcicgfHwga2V5ID09PSAncGF0Y2gnKSB7XG4gICAgICAgICAgaWYgKHYxW2tleV0gIT09IHYyW2tleV0pIHtcbiAgICAgICAgICAgIHJldHVybiAncHJlJytrZXk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gJ3ByZXJlbGVhc2UnO1xuICAgIH1cbiAgICBmb3IgKHZhciBrZXkgaW4gdjEpIHtcbiAgICAgIGlmIChrZXkgPT09ICdtYWpvcicgfHwga2V5ID09PSAnbWlub3InIHx8IGtleSA9PT0gJ3BhdGNoJykge1xuICAgICAgICBpZiAodjFba2V5XSAhPT0gdjJba2V5XSkge1xuICAgICAgICAgIHJldHVybiBrZXk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0cy5jb21wYXJlSWRlbnRpZmllcnMgPSBjb21wYXJlSWRlbnRpZmllcnM7XG5cbnZhciBudW1lcmljID0gL15bMC05XSskLztcbmZ1bmN0aW9uIGNvbXBhcmVJZGVudGlmaWVycyhhLCBiKSB7XG4gIHZhciBhbnVtID0gbnVtZXJpYy50ZXN0KGEpO1xuICB2YXIgYm51bSA9IG51bWVyaWMudGVzdChiKTtcblxuICBpZiAoYW51bSAmJiBibnVtKSB7XG4gICAgYSA9ICthO1xuICAgIGIgPSArYjtcbiAgfVxuXG4gIHJldHVybiAoYW51bSAmJiAhYm51bSkgPyAtMSA6XG4gICAgICAgICAoYm51bSAmJiAhYW51bSkgPyAxIDpcbiAgICAgICAgIGEgPCBiID8gLTEgOlxuICAgICAgICAgYSA+IGIgPyAxIDpcbiAgICAgICAgIDA7XG59XG5cbmV4cG9ydHMucmNvbXBhcmVJZGVudGlmaWVycyA9IHJjb21wYXJlSWRlbnRpZmllcnM7XG5mdW5jdGlvbiByY29tcGFyZUlkZW50aWZpZXJzKGEsIGIpIHtcbiAgcmV0dXJuIGNvbXBhcmVJZGVudGlmaWVycyhiLCBhKTtcbn1cblxuZXhwb3J0cy5tYWpvciA9IG1ham9yO1xuZnVuY3Rpb24gbWFqb3IoYSwgbG9vc2UpIHtcbiAgcmV0dXJuIG5ldyBTZW1WZXIoYSwgbG9vc2UpLm1ham9yO1xufVxuXG5leHBvcnRzLm1pbm9yID0gbWlub3I7XG5mdW5jdGlvbiBtaW5vcihhLCBsb29zZSkge1xuICByZXR1cm4gbmV3IFNlbVZlcihhLCBsb29zZSkubWlub3I7XG59XG5cbmV4cG9ydHMucGF0Y2ggPSBwYXRjaDtcbmZ1bmN0aW9uIHBhdGNoKGEsIGxvb3NlKSB7XG4gIHJldHVybiBuZXcgU2VtVmVyKGEsIGxvb3NlKS5wYXRjaDtcbn1cblxuZXhwb3J0cy5jb21wYXJlID0gY29tcGFyZTtcbmZ1bmN0aW9uIGNvbXBhcmUoYSwgYiwgbG9vc2UpIHtcbiAgcmV0dXJuIG5ldyBTZW1WZXIoYSwgbG9vc2UpLmNvbXBhcmUoYik7XG59XG5cbmV4cG9ydHMuY29tcGFyZUxvb3NlID0gY29tcGFyZUxvb3NlO1xuZnVuY3Rpb24gY29tcGFyZUxvb3NlKGEsIGIpIHtcbiAgcmV0dXJuIGNvbXBhcmUoYSwgYiwgdHJ1ZSk7XG59XG5cbmV4cG9ydHMucmNvbXBhcmUgPSByY29tcGFyZTtcbmZ1bmN0aW9uIHJjb21wYXJlKGEsIGIsIGxvb3NlKSB7XG4gIHJldHVybiBjb21wYXJlKGIsIGEsIGxvb3NlKTtcbn1cblxuZXhwb3J0cy5zb3J0ID0gc29ydDtcbmZ1bmN0aW9uIHNvcnQobGlzdCwgbG9vc2UpIHtcbiAgcmV0dXJuIGxpc3Quc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgcmV0dXJuIGV4cG9ydHMuY29tcGFyZShhLCBiLCBsb29zZSk7XG4gIH0pO1xufVxuXG5leHBvcnRzLnJzb3J0ID0gcnNvcnQ7XG5mdW5jdGlvbiByc29ydChsaXN0LCBsb29zZSkge1xuICByZXR1cm4gbGlzdC5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICByZXR1cm4gZXhwb3J0cy5yY29tcGFyZShhLCBiLCBsb29zZSk7XG4gIH0pO1xufVxuXG5leHBvcnRzLmd0ID0gZ3Q7XG5mdW5jdGlvbiBndChhLCBiLCBsb29zZSkge1xuICByZXR1cm4gY29tcGFyZShhLCBiLCBsb29zZSkgPiAwO1xufVxuXG5leHBvcnRzLmx0ID0gbHQ7XG5mdW5jdGlvbiBsdChhLCBiLCBsb29zZSkge1xuICByZXR1cm4gY29tcGFyZShhLCBiLCBsb29zZSkgPCAwO1xufVxuXG5leHBvcnRzLmVxID0gZXE7XG5mdW5jdGlvbiBlcShhLCBiLCBsb29zZSkge1xuICByZXR1cm4gY29tcGFyZShhLCBiLCBsb29zZSkgPT09IDA7XG59XG5cbmV4cG9ydHMubmVxID0gbmVxO1xuZnVuY3Rpb24gbmVxKGEsIGIsIGxvb3NlKSB7XG4gIHJldHVybiBjb21wYXJlKGEsIGIsIGxvb3NlKSAhPT0gMDtcbn1cblxuZXhwb3J0cy5ndGUgPSBndGU7XG5mdW5jdGlvbiBndGUoYSwgYiwgbG9vc2UpIHtcbiAgcmV0dXJuIGNvbXBhcmUoYSwgYiwgbG9vc2UpID49IDA7XG59XG5cbmV4cG9ydHMubHRlID0gbHRlO1xuZnVuY3Rpb24gbHRlKGEsIGIsIGxvb3NlKSB7XG4gIHJldHVybiBjb21wYXJlKGEsIGIsIGxvb3NlKSA8PSAwO1xufVxuXG5leHBvcnRzLmNtcCA9IGNtcDtcbmZ1bmN0aW9uIGNtcChhLCBvcCwgYiwgbG9vc2UpIHtcbiAgdmFyIHJldDtcbiAgc3dpdGNoIChvcCkge1xuICAgIGNhc2UgJz09PSc6XG4gICAgICBpZiAodHlwZW9mIGEgPT09ICdvYmplY3QnKSBhID0gYS52ZXJzaW9uO1xuICAgICAgaWYgKHR5cGVvZiBiID09PSAnb2JqZWN0JykgYiA9IGIudmVyc2lvbjtcbiAgICAgIHJldCA9IGEgPT09IGI7XG4gICAgICBicmVhaztcbiAgICBjYXNlICchPT0nOlxuICAgICAgaWYgKHR5cGVvZiBhID09PSAnb2JqZWN0JykgYSA9IGEudmVyc2lvbjtcbiAgICAgIGlmICh0eXBlb2YgYiA9PT0gJ29iamVjdCcpIGIgPSBiLnZlcnNpb247XG4gICAgICByZXQgPSBhICE9PSBiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnJzogY2FzZSAnPSc6IGNhc2UgJz09JzogcmV0ID0gZXEoYSwgYiwgbG9vc2UpOyBicmVhaztcbiAgICBjYXNlICchPSc6IHJldCA9IG5lcShhLCBiLCBsb29zZSk7IGJyZWFrO1xuICAgIGNhc2UgJz4nOiByZXQgPSBndChhLCBiLCBsb29zZSk7IGJyZWFrO1xuICAgIGNhc2UgJz49JzogcmV0ID0gZ3RlKGEsIGIsIGxvb3NlKTsgYnJlYWs7XG4gICAgY2FzZSAnPCc6IHJldCA9IGx0KGEsIGIsIGxvb3NlKTsgYnJlYWs7XG4gICAgY2FzZSAnPD0nOiByZXQgPSBsdGUoYSwgYiwgbG9vc2UpOyBicmVhaztcbiAgICBkZWZhdWx0OiB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIG9wZXJhdG9yOiAnICsgb3ApO1xuICB9XG4gIHJldHVybiByZXQ7XG59XG5cbmV4cG9ydHMuQ29tcGFyYXRvciA9IENvbXBhcmF0b3I7XG5mdW5jdGlvbiBDb21wYXJhdG9yKGNvbXAsIGxvb3NlKSB7XG4gIGlmIChjb21wIGluc3RhbmNlb2YgQ29tcGFyYXRvcikge1xuICAgIGlmIChjb21wLmxvb3NlID09PSBsb29zZSlcbiAgICAgIHJldHVybiBjb21wO1xuICAgIGVsc2VcbiAgICAgIGNvbXAgPSBjb21wLnZhbHVlO1xuICB9XG5cbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIENvbXBhcmF0b3IpKVxuICAgIHJldHVybiBuZXcgQ29tcGFyYXRvcihjb21wLCBsb29zZSk7XG5cbiAgZGVidWcoJ2NvbXBhcmF0b3InLCBjb21wLCBsb29zZSk7XG4gIHRoaXMubG9vc2UgPSBsb29zZTtcbiAgdGhpcy5wYXJzZShjb21wKTtcblxuICBpZiAodGhpcy5zZW12ZXIgPT09IEFOWSlcbiAgICB0aGlzLnZhbHVlID0gJyc7XG4gIGVsc2VcbiAgICB0aGlzLnZhbHVlID0gdGhpcy5vcGVyYXRvciArIHRoaXMuc2VtdmVyLnZlcnNpb247XG5cbiAgZGVidWcoJ2NvbXAnLCB0aGlzKTtcbn1cblxudmFyIEFOWSA9IHt9O1xuQ29tcGFyYXRvci5wcm90b3R5cGUucGFyc2UgPSBmdW5jdGlvbihjb21wKSB7XG4gIHZhciByID0gdGhpcy5sb29zZSA/IHJlW0NPTVBBUkFUT1JMT09TRV0gOiByZVtDT01QQVJBVE9SXTtcbiAgdmFyIG0gPSBjb21wLm1hdGNoKHIpO1xuXG4gIGlmICghbSlcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIGNvbXBhcmF0b3I6ICcgKyBjb21wKTtcblxuICB0aGlzLm9wZXJhdG9yID0gbVsxXTtcbiAgaWYgKHRoaXMub3BlcmF0b3IgPT09ICc9JylcbiAgICB0aGlzLm9wZXJhdG9yID0gJyc7XG5cbiAgLy8gaWYgaXQgbGl0ZXJhbGx5IGlzIGp1c3QgJz4nIG9yICcnIHRoZW4gYWxsb3cgYW55dGhpbmcuXG4gIGlmICghbVsyXSlcbiAgICB0aGlzLnNlbXZlciA9IEFOWTtcbiAgZWxzZVxuICAgIHRoaXMuc2VtdmVyID0gbmV3IFNlbVZlcihtWzJdLCB0aGlzLmxvb3NlKTtcbn07XG5cbkNvbXBhcmF0b3IucHJvdG90eXBlLmluc3BlY3QgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuICc8U2VtVmVyIENvbXBhcmF0b3IgXCInICsgdGhpcyArICdcIj4nO1xufTtcblxuQ29tcGFyYXRvci5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMudmFsdWU7XG59O1xuXG5Db21wYXJhdG9yLnByb3RvdHlwZS50ZXN0ID0gZnVuY3Rpb24odmVyc2lvbikge1xuICBkZWJ1ZygnQ29tcGFyYXRvci50ZXN0JywgdmVyc2lvbiwgdGhpcy5sb29zZSk7XG5cbiAgaWYgKHRoaXMuc2VtdmVyID09PSBBTlkpXG4gICAgcmV0dXJuIHRydWU7XG5cbiAgaWYgKHR5cGVvZiB2ZXJzaW9uID09PSAnc3RyaW5nJylcbiAgICB2ZXJzaW9uID0gbmV3IFNlbVZlcih2ZXJzaW9uLCB0aGlzLmxvb3NlKTtcblxuICByZXR1cm4gY21wKHZlcnNpb24sIHRoaXMub3BlcmF0b3IsIHRoaXMuc2VtdmVyLCB0aGlzLmxvb3NlKTtcbn07XG5cblxuZXhwb3J0cy5SYW5nZSA9IFJhbmdlO1xuZnVuY3Rpb24gUmFuZ2UocmFuZ2UsIGxvb3NlKSB7XG4gIGlmICgocmFuZ2UgaW5zdGFuY2VvZiBSYW5nZSkgJiYgcmFuZ2UubG9vc2UgPT09IGxvb3NlKVxuICAgIHJldHVybiByYW5nZTtcblxuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUmFuZ2UpKVxuICAgIHJldHVybiBuZXcgUmFuZ2UocmFuZ2UsIGxvb3NlKTtcblxuICB0aGlzLmxvb3NlID0gbG9vc2U7XG5cbiAgLy8gRmlyc3QsIHNwbGl0IGJhc2VkIG9uIGJvb2xlYW4gb3IgfHxcbiAgdGhpcy5yYXcgPSByYW5nZTtcbiAgdGhpcy5zZXQgPSByYW5nZS5zcGxpdCgvXFxzKlxcfFxcfFxccyovKS5tYXAoZnVuY3Rpb24ocmFuZ2UpIHtcbiAgICByZXR1cm4gdGhpcy5wYXJzZVJhbmdlKHJhbmdlLnRyaW0oKSk7XG4gIH0sIHRoaXMpLmZpbHRlcihmdW5jdGlvbihjKSB7XG4gICAgLy8gdGhyb3cgb3V0IGFueSB0aGF0IGFyZSBub3QgcmVsZXZhbnQgZm9yIHdoYXRldmVyIHJlYXNvblxuICAgIHJldHVybiBjLmxlbmd0aDtcbiAgfSk7XG5cbiAgaWYgKCF0aGlzLnNldC5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIFNlbVZlciBSYW5nZTogJyArIHJhbmdlKTtcbiAgfVxuXG4gIHRoaXMuZm9ybWF0KCk7XG59XG5cblJhbmdlLnByb3RvdHlwZS5pbnNwZWN0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiAnPFNlbVZlciBSYW5nZSBcIicgKyB0aGlzLnJhbmdlICsgJ1wiPic7XG59O1xuXG5SYW5nZS5wcm90b3R5cGUuZm9ybWF0ID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMucmFuZ2UgPSB0aGlzLnNldC5tYXAoZnVuY3Rpb24oY29tcHMpIHtcbiAgICByZXR1cm4gY29tcHMuam9pbignICcpLnRyaW0oKTtcbiAgfSkuam9pbignfHwnKS50cmltKCk7XG4gIHJldHVybiB0aGlzLnJhbmdlO1xufTtcblxuUmFuZ2UucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLnJhbmdlO1xufTtcblxuUmFuZ2UucHJvdG90eXBlLnBhcnNlUmFuZ2UgPSBmdW5jdGlvbihyYW5nZSkge1xuICB2YXIgbG9vc2UgPSB0aGlzLmxvb3NlO1xuICByYW5nZSA9IHJhbmdlLnRyaW0oKTtcbiAgZGVidWcoJ3JhbmdlJywgcmFuZ2UsIGxvb3NlKTtcbiAgLy8gYDEuMi4zIC0gMS4yLjRgID0+IGA+PTEuMi4zIDw9MS4yLjRgXG4gIHZhciBociA9IGxvb3NlID8gcmVbSFlQSEVOUkFOR0VMT09TRV0gOiByZVtIWVBIRU5SQU5HRV07XG4gIHJhbmdlID0gcmFuZ2UucmVwbGFjZShociwgaHlwaGVuUmVwbGFjZSk7XG4gIGRlYnVnKCdoeXBoZW4gcmVwbGFjZScsIHJhbmdlKTtcbiAgLy8gYD4gMS4yLjMgPCAxLjIuNWAgPT4gYD4xLjIuMyA8MS4yLjVgXG4gIHJhbmdlID0gcmFuZ2UucmVwbGFjZShyZVtDT01QQVJBVE9SVFJJTV0sIGNvbXBhcmF0b3JUcmltUmVwbGFjZSk7XG4gIGRlYnVnKCdjb21wYXJhdG9yIHRyaW0nLCByYW5nZSwgcmVbQ09NUEFSQVRPUlRSSU1dKTtcblxuICAvLyBgfiAxLjIuM2AgPT4gYH4xLjIuM2BcbiAgcmFuZ2UgPSByYW5nZS5yZXBsYWNlKHJlW1RJTERFVFJJTV0sIHRpbGRlVHJpbVJlcGxhY2UpO1xuXG4gIC8vIGBeIDEuMi4zYCA9PiBgXjEuMi4zYFxuICByYW5nZSA9IHJhbmdlLnJlcGxhY2UocmVbQ0FSRVRUUklNXSwgY2FyZXRUcmltUmVwbGFjZSk7XG5cbiAgLy8gbm9ybWFsaXplIHNwYWNlc1xuICByYW5nZSA9IHJhbmdlLnNwbGl0KC9cXHMrLykuam9pbignICcpO1xuXG4gIC8vIEF0IHRoaXMgcG9pbnQsIHRoZSByYW5nZSBpcyBjb21wbGV0ZWx5IHRyaW1tZWQgYW5kXG4gIC8vIHJlYWR5IHRvIGJlIHNwbGl0IGludG8gY29tcGFyYXRvcnMuXG5cbiAgdmFyIGNvbXBSZSA9IGxvb3NlID8gcmVbQ09NUEFSQVRPUkxPT1NFXSA6IHJlW0NPTVBBUkFUT1JdO1xuICB2YXIgc2V0ID0gcmFuZ2Uuc3BsaXQoJyAnKS5tYXAoZnVuY3Rpb24oY29tcCkge1xuICAgIHJldHVybiBwYXJzZUNvbXBhcmF0b3IoY29tcCwgbG9vc2UpO1xuICB9KS5qb2luKCcgJykuc3BsaXQoL1xccysvKTtcbiAgaWYgKHRoaXMubG9vc2UpIHtcbiAgICAvLyBpbiBsb29zZSBtb2RlLCB0aHJvdyBvdXQgYW55IHRoYXQgYXJlIG5vdCB2YWxpZCBjb21wYXJhdG9yc1xuICAgIHNldCA9IHNldC5maWx0ZXIoZnVuY3Rpb24oY29tcCkge1xuICAgICAgcmV0dXJuICEhY29tcC5tYXRjaChjb21wUmUpO1xuICAgIH0pO1xuICB9XG4gIHNldCA9IHNldC5tYXAoZnVuY3Rpb24oY29tcCkge1xuICAgIHJldHVybiBuZXcgQ29tcGFyYXRvcihjb21wLCBsb29zZSk7XG4gIH0pO1xuXG4gIHJldHVybiBzZXQ7XG59O1xuXG4vLyBNb3N0bHkganVzdCBmb3IgdGVzdGluZyBhbmQgbGVnYWN5IEFQSSByZWFzb25zXG5leHBvcnRzLnRvQ29tcGFyYXRvcnMgPSB0b0NvbXBhcmF0b3JzO1xuZnVuY3Rpb24gdG9Db21wYXJhdG9ycyhyYW5nZSwgbG9vc2UpIHtcbiAgcmV0dXJuIG5ldyBSYW5nZShyYW5nZSwgbG9vc2UpLnNldC5tYXAoZnVuY3Rpb24oY29tcCkge1xuICAgIHJldHVybiBjb21wLm1hcChmdW5jdGlvbihjKSB7XG4gICAgICByZXR1cm4gYy52YWx1ZTtcbiAgICB9KS5qb2luKCcgJykudHJpbSgpLnNwbGl0KCcgJyk7XG4gIH0pO1xufVxuXG4vLyBjb21wcmlzZWQgb2YgeHJhbmdlcywgdGlsZGVzLCBzdGFycywgYW5kIGd0bHQncyBhdCB0aGlzIHBvaW50LlxuLy8gYWxyZWFkeSByZXBsYWNlZCB0aGUgaHlwaGVuIHJhbmdlc1xuLy8gdHVybiBpbnRvIGEgc2V0IG9mIEpVU1QgY29tcGFyYXRvcnMuXG5mdW5jdGlvbiBwYXJzZUNvbXBhcmF0b3IoY29tcCwgbG9vc2UpIHtcbiAgZGVidWcoJ2NvbXAnLCBjb21wKTtcbiAgY29tcCA9IHJlcGxhY2VDYXJldHMoY29tcCwgbG9vc2UpO1xuICBkZWJ1ZygnY2FyZXQnLCBjb21wKTtcbiAgY29tcCA9IHJlcGxhY2VUaWxkZXMoY29tcCwgbG9vc2UpO1xuICBkZWJ1ZygndGlsZGVzJywgY29tcCk7XG4gIGNvbXAgPSByZXBsYWNlWFJhbmdlcyhjb21wLCBsb29zZSk7XG4gIGRlYnVnKCd4cmFuZ2UnLCBjb21wKTtcbiAgY29tcCA9IHJlcGxhY2VTdGFycyhjb21wLCBsb29zZSk7XG4gIGRlYnVnKCdzdGFycycsIGNvbXApO1xuICByZXR1cm4gY29tcDtcbn1cblxuZnVuY3Rpb24gaXNYKGlkKSB7XG4gIHJldHVybiAhaWQgfHwgaWQudG9Mb3dlckNhc2UoKSA9PT0gJ3gnIHx8IGlkID09PSAnKic7XG59XG5cbi8vIH4sIH4+IC0tPiAqIChhbnksIGtpbmRhIHNpbGx5KVxuLy8gfjIsIH4yLngsIH4yLngueCwgfj4yLCB+PjIueCB+PjIueC54IC0tPiA+PTIuMC4wIDwzLjAuMFxuLy8gfjIuMCwgfjIuMC54LCB+PjIuMCwgfj4yLjAueCAtLT4gPj0yLjAuMCA8Mi4xLjBcbi8vIH4xLjIsIH4xLjIueCwgfj4xLjIsIH4+MS4yLnggLS0+ID49MS4yLjAgPDEuMy4wXG4vLyB+MS4yLjMsIH4+MS4yLjMgLS0+ID49MS4yLjMgPDEuMy4wXG4vLyB+MS4yLjAsIH4+MS4yLjAgLS0+ID49MS4yLjAgPDEuMy4wXG5mdW5jdGlvbiByZXBsYWNlVGlsZGVzKGNvbXAsIGxvb3NlKSB7XG4gIHJldHVybiBjb21wLnRyaW0oKS5zcGxpdCgvXFxzKy8pLm1hcChmdW5jdGlvbihjb21wKSB7XG4gICAgcmV0dXJuIHJlcGxhY2VUaWxkZShjb21wLCBsb29zZSk7XG4gIH0pLmpvaW4oJyAnKTtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZVRpbGRlKGNvbXAsIGxvb3NlKSB7XG4gIHZhciByID0gbG9vc2UgPyByZVtUSUxERUxPT1NFXSA6IHJlW1RJTERFXTtcbiAgcmV0dXJuIGNvbXAucmVwbGFjZShyLCBmdW5jdGlvbihfLCBNLCBtLCBwLCBwcikge1xuICAgIGRlYnVnKCd0aWxkZScsIGNvbXAsIF8sIE0sIG0sIHAsIHByKTtcbiAgICB2YXIgcmV0O1xuXG4gICAgaWYgKGlzWChNKSlcbiAgICAgIHJldCA9ICcnO1xuICAgIGVsc2UgaWYgKGlzWChtKSlcbiAgICAgIHJldCA9ICc+PScgKyBNICsgJy4wLjAgPCcgKyAoK00gKyAxKSArICcuMC4wJztcbiAgICBlbHNlIGlmIChpc1gocCkpXG4gICAgICAvLyB+MS4yID09ID49MS4yLjAtIDwxLjMuMC1cbiAgICAgIHJldCA9ICc+PScgKyBNICsgJy4nICsgbSArICcuMCA8JyArIE0gKyAnLicgKyAoK20gKyAxKSArICcuMCc7XG4gICAgZWxzZSBpZiAocHIpIHtcbiAgICAgIGRlYnVnKCdyZXBsYWNlVGlsZGUgcHInLCBwcik7XG4gICAgICBpZiAocHIuY2hhckF0KDApICE9PSAnLScpXG4gICAgICAgIHByID0gJy0nICsgcHI7XG4gICAgICByZXQgPSAnPj0nICsgTSArICcuJyArIG0gKyAnLicgKyBwICsgcHIgK1xuICAgICAgICAgICAgJyA8JyArIE0gKyAnLicgKyAoK20gKyAxKSArICcuMCc7XG4gICAgfSBlbHNlXG4gICAgICAvLyB+MS4yLjMgPT0gPj0xLjIuMyA8MS4zLjBcbiAgICAgIHJldCA9ICc+PScgKyBNICsgJy4nICsgbSArICcuJyArIHAgK1xuICAgICAgICAgICAgJyA8JyArIE0gKyAnLicgKyAoK20gKyAxKSArICcuMCc7XG5cbiAgICBkZWJ1ZygndGlsZGUgcmV0dXJuJywgcmV0KTtcbiAgICByZXR1cm4gcmV0O1xuICB9KTtcbn1cblxuLy8gXiAtLT4gKiAoYW55LCBraW5kYSBzaWxseSlcbi8vIF4yLCBeMi54LCBeMi54LnggLS0+ID49Mi4wLjAgPDMuMC4wXG4vLyBeMi4wLCBeMi4wLnggLS0+ID49Mi4wLjAgPDMuMC4wXG4vLyBeMS4yLCBeMS4yLnggLS0+ID49MS4yLjAgPDIuMC4wXG4vLyBeMS4yLjMgLS0+ID49MS4yLjMgPDIuMC4wXG4vLyBeMS4yLjAgLS0+ID49MS4yLjAgPDIuMC4wXG5mdW5jdGlvbiByZXBsYWNlQ2FyZXRzKGNvbXAsIGxvb3NlKSB7XG4gIHJldHVybiBjb21wLnRyaW0oKS5zcGxpdCgvXFxzKy8pLm1hcChmdW5jdGlvbihjb21wKSB7XG4gICAgcmV0dXJuIHJlcGxhY2VDYXJldChjb21wLCBsb29zZSk7XG4gIH0pLmpvaW4oJyAnKTtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUNhcmV0KGNvbXAsIGxvb3NlKSB7XG4gIGRlYnVnKCdjYXJldCcsIGNvbXAsIGxvb3NlKTtcbiAgdmFyIHIgPSBsb29zZSA/IHJlW0NBUkVUTE9PU0VdIDogcmVbQ0FSRVRdO1xuICByZXR1cm4gY29tcC5yZXBsYWNlKHIsIGZ1bmN0aW9uKF8sIE0sIG0sIHAsIHByKSB7XG4gICAgZGVidWcoJ2NhcmV0JywgY29tcCwgXywgTSwgbSwgcCwgcHIpO1xuICAgIHZhciByZXQ7XG5cbiAgICBpZiAoaXNYKE0pKVxuICAgICAgcmV0ID0gJyc7XG4gICAgZWxzZSBpZiAoaXNYKG0pKVxuICAgICAgcmV0ID0gJz49JyArIE0gKyAnLjAuMCA8JyArICgrTSArIDEpICsgJy4wLjAnO1xuICAgIGVsc2UgaWYgKGlzWChwKSkge1xuICAgICAgaWYgKE0gPT09ICcwJylcbiAgICAgICAgcmV0ID0gJz49JyArIE0gKyAnLicgKyBtICsgJy4wIDwnICsgTSArICcuJyArICgrbSArIDEpICsgJy4wJztcbiAgICAgIGVsc2VcbiAgICAgICAgcmV0ID0gJz49JyArIE0gKyAnLicgKyBtICsgJy4wIDwnICsgKCtNICsgMSkgKyAnLjAuMCc7XG4gICAgfSBlbHNlIGlmIChwcikge1xuICAgICAgZGVidWcoJ3JlcGxhY2VDYXJldCBwcicsIHByKTtcbiAgICAgIGlmIChwci5jaGFyQXQoMCkgIT09ICctJylcbiAgICAgICAgcHIgPSAnLScgKyBwcjtcbiAgICAgIGlmIChNID09PSAnMCcpIHtcbiAgICAgICAgaWYgKG0gPT09ICcwJylcbiAgICAgICAgICByZXQgPSAnPj0nICsgTSArICcuJyArIG0gKyAnLicgKyBwICsgcHIgK1xuICAgICAgICAgICAgICAgICcgPCcgKyBNICsgJy4nICsgbSArICcuJyArICgrcCArIDEpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgcmV0ID0gJz49JyArIE0gKyAnLicgKyBtICsgJy4nICsgcCArIHByICtcbiAgICAgICAgICAgICAgICAnIDwnICsgTSArICcuJyArICgrbSArIDEpICsgJy4wJztcbiAgICAgIH0gZWxzZVxuICAgICAgICByZXQgPSAnPj0nICsgTSArICcuJyArIG0gKyAnLicgKyBwICsgcHIgK1xuICAgICAgICAgICAgICAnIDwnICsgKCtNICsgMSkgKyAnLjAuMCc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlYnVnKCdubyBwcicpO1xuICAgICAgaWYgKE0gPT09ICcwJykge1xuICAgICAgICBpZiAobSA9PT0gJzAnKVxuICAgICAgICAgIHJldCA9ICc+PScgKyBNICsgJy4nICsgbSArICcuJyArIHAgK1xuICAgICAgICAgICAgICAgICcgPCcgKyBNICsgJy4nICsgbSArICcuJyArICgrcCArIDEpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgcmV0ID0gJz49JyArIE0gKyAnLicgKyBtICsgJy4nICsgcCArXG4gICAgICAgICAgICAgICAgJyA8JyArIE0gKyAnLicgKyAoK20gKyAxKSArICcuMCc7XG4gICAgICB9IGVsc2VcbiAgICAgICAgcmV0ID0gJz49JyArIE0gKyAnLicgKyBtICsgJy4nICsgcCArXG4gICAgICAgICAgICAgICcgPCcgKyAoK00gKyAxKSArICcuMC4wJztcbiAgICB9XG5cbiAgICBkZWJ1ZygnY2FyZXQgcmV0dXJuJywgcmV0KTtcbiAgICByZXR1cm4gcmV0O1xuICB9KTtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZVhSYW5nZXMoY29tcCwgbG9vc2UpIHtcbiAgZGVidWcoJ3JlcGxhY2VYUmFuZ2VzJywgY29tcCwgbG9vc2UpO1xuICByZXR1cm4gY29tcC5zcGxpdCgvXFxzKy8pLm1hcChmdW5jdGlvbihjb21wKSB7XG4gICAgcmV0dXJuIHJlcGxhY2VYUmFuZ2UoY29tcCwgbG9vc2UpO1xuICB9KS5qb2luKCcgJyk7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VYUmFuZ2UoY29tcCwgbG9vc2UpIHtcbiAgY29tcCA9IGNvbXAudHJpbSgpO1xuICB2YXIgciA9IGxvb3NlID8gcmVbWFJBTkdFTE9PU0VdIDogcmVbWFJBTkdFXTtcbiAgcmV0dXJuIGNvbXAucmVwbGFjZShyLCBmdW5jdGlvbihyZXQsIGd0bHQsIE0sIG0sIHAsIHByKSB7XG4gICAgZGVidWcoJ3hSYW5nZScsIGNvbXAsIHJldCwgZ3RsdCwgTSwgbSwgcCwgcHIpO1xuICAgIHZhciB4TSA9IGlzWChNKTtcbiAgICB2YXIgeG0gPSB4TSB8fCBpc1gobSk7XG4gICAgdmFyIHhwID0geG0gfHwgaXNYKHApO1xuICAgIHZhciBhbnlYID0geHA7XG5cbiAgICBpZiAoZ3RsdCA9PT0gJz0nICYmIGFueVgpXG4gICAgICBndGx0ID0gJyc7XG5cbiAgICBpZiAoeE0pIHtcbiAgICAgIGlmIChndGx0ID09PSAnPicgfHwgZ3RsdCA9PT0gJzwnKSB7XG4gICAgICAgIC8vIG5vdGhpbmcgaXMgYWxsb3dlZFxuICAgICAgICByZXQgPSAnPDAuMC4wJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIG5vdGhpbmcgaXMgZm9yYmlkZGVuXG4gICAgICAgIHJldCA9ICcqJztcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGd0bHQgJiYgYW55WCkge1xuICAgICAgLy8gcmVwbGFjZSBYIHdpdGggMFxuICAgICAgaWYgKHhtKVxuICAgICAgICBtID0gMDtcbiAgICAgIGlmICh4cClcbiAgICAgICAgcCA9IDA7XG5cbiAgICAgIGlmIChndGx0ID09PSAnPicpIHtcbiAgICAgICAgLy8gPjEgPT4gPj0yLjAuMFxuICAgICAgICAvLyA+MS4yID0+ID49MS4zLjBcbiAgICAgICAgLy8gPjEuMi4zID0+ID49IDEuMi40XG4gICAgICAgIGd0bHQgPSAnPj0nO1xuICAgICAgICBpZiAoeG0pIHtcbiAgICAgICAgICBNID0gK00gKyAxO1xuICAgICAgICAgIG0gPSAwO1xuICAgICAgICAgIHAgPSAwO1xuICAgICAgICB9IGVsc2UgaWYgKHhwKSB7XG4gICAgICAgICAgbSA9ICttICsgMTtcbiAgICAgICAgICBwID0gMDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChndGx0ID09PSAnPD0nKSB7XG4gICAgICAgIC8vIDw9MC43LnggaXMgYWN0dWFsbHkgPDAuOC4wLCBzaW5jZSBhbnkgMC43Lnggc2hvdWxkXG4gICAgICAgIC8vIHBhc3MuICBTaW1pbGFybHksIDw9Ny54IGlzIGFjdHVhbGx5IDw4LjAuMCwgZXRjLlxuICAgICAgICBndGx0ID0gJzwnXG4gICAgICAgIGlmICh4bSlcbiAgICAgICAgICBNID0gK00gKyAxXG4gICAgICAgIGVsc2VcbiAgICAgICAgICBtID0gK20gKyAxXG4gICAgICB9XG5cbiAgICAgIHJldCA9IGd0bHQgKyBNICsgJy4nICsgbSArICcuJyArIHA7XG4gICAgfSBlbHNlIGlmICh4bSkge1xuICAgICAgcmV0ID0gJz49JyArIE0gKyAnLjAuMCA8JyArICgrTSArIDEpICsgJy4wLjAnO1xuICAgIH0gZWxzZSBpZiAoeHApIHtcbiAgICAgIHJldCA9ICc+PScgKyBNICsgJy4nICsgbSArICcuMCA8JyArIE0gKyAnLicgKyAoK20gKyAxKSArICcuMCc7XG4gICAgfVxuXG4gICAgZGVidWcoJ3hSYW5nZSByZXR1cm4nLCByZXQpO1xuXG4gICAgcmV0dXJuIHJldDtcbiAgfSk7XG59XG5cbi8vIEJlY2F1c2UgKiBpcyBBTkQtZWQgd2l0aCBldmVyeXRoaW5nIGVsc2UgaW4gdGhlIGNvbXBhcmF0b3IsXG4vLyBhbmQgJycgbWVhbnMgXCJhbnkgdmVyc2lvblwiLCBqdXN0IHJlbW92ZSB0aGUgKnMgZW50aXJlbHkuXG5mdW5jdGlvbiByZXBsYWNlU3RhcnMoY29tcCwgbG9vc2UpIHtcbiAgZGVidWcoJ3JlcGxhY2VTdGFycycsIGNvbXAsIGxvb3NlKTtcbiAgLy8gTG9vc2VuZXNzIGlzIGlnbm9yZWQgaGVyZS4gIHN0YXIgaXMgYWx3YXlzIGFzIGxvb3NlIGFzIGl0IGdldHMhXG4gIHJldHVybiBjb21wLnRyaW0oKS5yZXBsYWNlKHJlW1NUQVJdLCAnJyk7XG59XG5cbi8vIFRoaXMgZnVuY3Rpb24gaXMgcGFzc2VkIHRvIHN0cmluZy5yZXBsYWNlKHJlW0hZUEhFTlJBTkdFXSlcbi8vIE0sIG0sIHBhdGNoLCBwcmVyZWxlYXNlLCBidWlsZFxuLy8gMS4yIC0gMy40LjUgPT4gPj0xLjIuMCA8PTMuNC41XG4vLyAxLjIuMyAtIDMuNCA9PiA+PTEuMi4wIDwzLjUuMCBBbnkgMy40Lnggd2lsbCBkb1xuLy8gMS4yIC0gMy40ID0+ID49MS4yLjAgPDMuNS4wXG5mdW5jdGlvbiBoeXBoZW5SZXBsYWNlKCQwLFxuICAgICAgICAgICAgICAgICAgICAgICBmcm9tLCBmTSwgZm0sIGZwLCBmcHIsIGZiLFxuICAgICAgICAgICAgICAgICAgICAgICB0bywgdE0sIHRtLCB0cCwgdHByLCB0Yikge1xuXG4gIGlmIChpc1goZk0pKVxuICAgIGZyb20gPSAnJztcbiAgZWxzZSBpZiAoaXNYKGZtKSlcbiAgICBmcm9tID0gJz49JyArIGZNICsgJy4wLjAnO1xuICBlbHNlIGlmIChpc1goZnApKVxuICAgIGZyb20gPSAnPj0nICsgZk0gKyAnLicgKyBmbSArICcuMCc7XG4gIGVsc2VcbiAgICBmcm9tID0gJz49JyArIGZyb207XG5cbiAgaWYgKGlzWCh0TSkpXG4gICAgdG8gPSAnJztcbiAgZWxzZSBpZiAoaXNYKHRtKSlcbiAgICB0byA9ICc8JyArICgrdE0gKyAxKSArICcuMC4wJztcbiAgZWxzZSBpZiAoaXNYKHRwKSlcbiAgICB0byA9ICc8JyArIHRNICsgJy4nICsgKCt0bSArIDEpICsgJy4wJztcbiAgZWxzZSBpZiAodHByKVxuICAgIHRvID0gJzw9JyArIHRNICsgJy4nICsgdG0gKyAnLicgKyB0cCArICctJyArIHRwcjtcbiAgZWxzZVxuICAgIHRvID0gJzw9JyArIHRvO1xuXG4gIHJldHVybiAoZnJvbSArICcgJyArIHRvKS50cmltKCk7XG59XG5cblxuLy8gaWYgQU5ZIG9mIHRoZSBzZXRzIG1hdGNoIEFMTCBvZiBpdHMgY29tcGFyYXRvcnMsIHRoZW4gcGFzc1xuUmFuZ2UucHJvdG90eXBlLnRlc3QgPSBmdW5jdGlvbih2ZXJzaW9uKSB7XG4gIGlmICghdmVyc2lvbilcbiAgICByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKHR5cGVvZiB2ZXJzaW9uID09PSAnc3RyaW5nJylcbiAgICB2ZXJzaW9uID0gbmV3IFNlbVZlcih2ZXJzaW9uLCB0aGlzLmxvb3NlKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuc2V0Lmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHRlc3RTZXQodGhpcy5zZXRbaV0sIHZlcnNpb24pKVxuICAgICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuZnVuY3Rpb24gdGVzdFNldChzZXQsIHZlcnNpb24pIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZXQubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIXNldFtpXS50ZXN0KHZlcnNpb24pKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHZlcnNpb24ucHJlcmVsZWFzZS5sZW5ndGgpIHtcbiAgICAvLyBGaW5kIHRoZSBzZXQgb2YgdmVyc2lvbnMgdGhhdCBhcmUgYWxsb3dlZCB0byBoYXZlIHByZXJlbGVhc2VzXG4gICAgLy8gRm9yIGV4YW1wbGUsIF4xLjIuMy1wci4xIGRlc3VnYXJzIHRvID49MS4yLjMtcHIuMSA8Mi4wLjBcbiAgICAvLyBUaGF0IHNob3VsZCBhbGxvdyBgMS4yLjMtcHIuMmAgdG8gcGFzcy5cbiAgICAvLyBIb3dldmVyLCBgMS4yLjQtYWxwaGEubm90cmVhZHlgIHNob3VsZCBOT1QgYmUgYWxsb3dlZCxcbiAgICAvLyBldmVuIHRob3VnaCBpdCdzIHdpdGhpbiB0aGUgcmFuZ2Ugc2V0IGJ5IHRoZSBjb21wYXJhdG9ycy5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNldC5sZW5ndGg7IGkrKykge1xuICAgICAgZGVidWcoc2V0W2ldLnNlbXZlcik7XG4gICAgICBpZiAoc2V0W2ldLnNlbXZlciA9PT0gQU5ZKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcblxuICAgICAgaWYgKHNldFtpXS5zZW12ZXIucHJlcmVsZWFzZS5sZW5ndGggPiAwKSB7XG4gICAgICAgIHZhciBhbGxvd2VkID0gc2V0W2ldLnNlbXZlcjtcbiAgICAgICAgaWYgKGFsbG93ZWQubWFqb3IgPT09IHZlcnNpb24ubWFqb3IgJiZcbiAgICAgICAgICAgIGFsbG93ZWQubWlub3IgPT09IHZlcnNpb24ubWlub3IgJiZcbiAgICAgICAgICAgIGFsbG93ZWQucGF0Y2ggPT09IHZlcnNpb24ucGF0Y2gpXG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gVmVyc2lvbiBoYXMgYSAtcHJlLCBidXQgaXQncyBub3Qgb25lIG9mIHRoZSBvbmVzIHdlIGxpa2UuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbmV4cG9ydHMuc2F0aXNmaWVzID0gc2F0aXNmaWVzO1xuZnVuY3Rpb24gc2F0aXNmaWVzKHZlcnNpb24sIHJhbmdlLCBsb29zZSkge1xuICB0cnkge1xuICAgIHJhbmdlID0gbmV3IFJhbmdlKHJhbmdlLCBsb29zZSk7XG4gIH0gY2F0Y2ggKGVyKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiByYW5nZS50ZXN0KHZlcnNpb24pO1xufVxuXG5leHBvcnRzLm1heFNhdGlzZnlpbmcgPSBtYXhTYXRpc2Z5aW5nO1xuZnVuY3Rpb24gbWF4U2F0aXNmeWluZyh2ZXJzaW9ucywgcmFuZ2UsIGxvb3NlKSB7XG4gIHJldHVybiB2ZXJzaW9ucy5maWx0ZXIoZnVuY3Rpb24odmVyc2lvbikge1xuICAgIHJldHVybiBzYXRpc2ZpZXModmVyc2lvbiwgcmFuZ2UsIGxvb3NlKTtcbiAgfSkuc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgcmV0dXJuIHJjb21wYXJlKGEsIGIsIGxvb3NlKTtcbiAgfSlbMF0gfHwgbnVsbDtcbn1cblxuZXhwb3J0cy52YWxpZFJhbmdlID0gdmFsaWRSYW5nZTtcbmZ1bmN0aW9uIHZhbGlkUmFuZ2UocmFuZ2UsIGxvb3NlKSB7XG4gIHRyeSB7XG4gICAgLy8gUmV0dXJuICcqJyBpbnN0ZWFkIG9mICcnIHNvIHRoYXQgdHJ1dGhpbmVzcyB3b3Jrcy5cbiAgICAvLyBUaGlzIHdpbGwgdGhyb3cgaWYgaXQncyBpbnZhbGlkIGFueXdheVxuICAgIHJldHVybiBuZXcgUmFuZ2UocmFuZ2UsIGxvb3NlKS5yYW5nZSB8fCAnKic7XG4gIH0gY2F0Y2ggKGVyKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuLy8gRGV0ZXJtaW5lIGlmIHZlcnNpb24gaXMgbGVzcyB0aGFuIGFsbCB0aGUgdmVyc2lvbnMgcG9zc2libGUgaW4gdGhlIHJhbmdlXG5leHBvcnRzLmx0ciA9IGx0cjtcbmZ1bmN0aW9uIGx0cih2ZXJzaW9uLCByYW5nZSwgbG9vc2UpIHtcbiAgcmV0dXJuIG91dHNpZGUodmVyc2lvbiwgcmFuZ2UsICc8JywgbG9vc2UpO1xufVxuXG4vLyBEZXRlcm1pbmUgaWYgdmVyc2lvbiBpcyBncmVhdGVyIHRoYW4gYWxsIHRoZSB2ZXJzaW9ucyBwb3NzaWJsZSBpbiB0aGUgcmFuZ2UuXG5leHBvcnRzLmd0ciA9IGd0cjtcbmZ1bmN0aW9uIGd0cih2ZXJzaW9uLCByYW5nZSwgbG9vc2UpIHtcbiAgcmV0dXJuIG91dHNpZGUodmVyc2lvbiwgcmFuZ2UsICc+JywgbG9vc2UpO1xufVxuXG5leHBvcnRzLm91dHNpZGUgPSBvdXRzaWRlO1xuZnVuY3Rpb24gb3V0c2lkZSh2ZXJzaW9uLCByYW5nZSwgaGlsbywgbG9vc2UpIHtcbiAgdmVyc2lvbiA9IG5ldyBTZW1WZXIodmVyc2lvbiwgbG9vc2UpO1xuICByYW5nZSA9IG5ldyBSYW5nZShyYW5nZSwgbG9vc2UpO1xuXG4gIHZhciBndGZuLCBsdGVmbiwgbHRmbiwgY29tcCwgZWNvbXA7XG4gIHN3aXRjaCAoaGlsbykge1xuICAgIGNhc2UgJz4nOlxuICAgICAgZ3RmbiA9IGd0O1xuICAgICAgbHRlZm4gPSBsdGU7XG4gICAgICBsdGZuID0gbHQ7XG4gICAgICBjb21wID0gJz4nO1xuICAgICAgZWNvbXAgPSAnPj0nO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnPCc6XG4gICAgICBndGZuID0gbHQ7XG4gICAgICBsdGVmbiA9IGd0ZTtcbiAgICAgIGx0Zm4gPSBndDtcbiAgICAgIGNvbXAgPSAnPCc7XG4gICAgICBlY29tcCA9ICc8PSc7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignTXVzdCBwcm92aWRlIGEgaGlsbyB2YWwgb2YgXCI8XCIgb3IgXCI+XCInKTtcbiAgfVxuXG4gIC8vIElmIGl0IHNhdGlzaWZlcyB0aGUgcmFuZ2UgaXQgaXMgbm90IG91dHNpZGVcbiAgaWYgKHNhdGlzZmllcyh2ZXJzaW9uLCByYW5nZSwgbG9vc2UpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gRnJvbSBub3cgb24sIHZhcmlhYmxlIHRlcm1zIGFyZSBhcyBpZiB3ZSdyZSBpbiBcImd0clwiIG1vZGUuXG4gIC8vIGJ1dCBub3RlIHRoYXQgZXZlcnl0aGluZyBpcyBmbGlwcGVkIGZvciB0aGUgXCJsdHJcIiBmdW5jdGlvbi5cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHJhbmdlLnNldC5sZW5ndGg7ICsraSkge1xuICAgIHZhciBjb21wYXJhdG9ycyA9IHJhbmdlLnNldFtpXTtcblxuICAgIHZhciBoaWdoID0gbnVsbDtcbiAgICB2YXIgbG93ID0gbnVsbDtcblxuICAgIGNvbXBhcmF0b3JzLmZvckVhY2goZnVuY3Rpb24oY29tcGFyYXRvcikge1xuICAgICAgaGlnaCA9IGhpZ2ggfHwgY29tcGFyYXRvcjtcbiAgICAgIGxvdyA9IGxvdyB8fCBjb21wYXJhdG9yO1xuICAgICAgaWYgKGd0Zm4oY29tcGFyYXRvci5zZW12ZXIsIGhpZ2guc2VtdmVyLCBsb29zZSkpIHtcbiAgICAgICAgaGlnaCA9IGNvbXBhcmF0b3I7XG4gICAgICB9IGVsc2UgaWYgKGx0Zm4oY29tcGFyYXRvci5zZW12ZXIsIGxvdy5zZW12ZXIsIGxvb3NlKSkge1xuICAgICAgICBsb3cgPSBjb21wYXJhdG9yO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gSWYgdGhlIGVkZ2UgdmVyc2lvbiBjb21wYXJhdG9yIGhhcyBhIG9wZXJhdG9yIHRoZW4gb3VyIHZlcnNpb25cbiAgICAvLyBpc24ndCBvdXRzaWRlIGl0XG4gICAgaWYgKGhpZ2gub3BlcmF0b3IgPT09IGNvbXAgfHwgaGlnaC5vcGVyYXRvciA9PT0gZWNvbXApIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBJZiB0aGUgbG93ZXN0IHZlcnNpb24gY29tcGFyYXRvciBoYXMgYW4gb3BlcmF0b3IgYW5kIG91ciB2ZXJzaW9uXG4gICAgLy8gaXMgbGVzcyB0aGFuIGl0IHRoZW4gaXQgaXNuJ3QgaGlnaGVyIHRoYW4gdGhlIHJhbmdlXG4gICAgaWYgKCghbG93Lm9wZXJhdG9yIHx8IGxvdy5vcGVyYXRvciA9PT0gY29tcCkgJiZcbiAgICAgICAgbHRlZm4odmVyc2lvbiwgbG93LnNlbXZlcikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGVsc2UgaWYgKGxvdy5vcGVyYXRvciA9PT0gZWNvbXAgJiYgbHRmbih2ZXJzaW9uLCBsb3cuc2VtdmVyKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLy8gVXNlIHRoZSBkZWZpbmUoKSBmdW5jdGlvbiBpZiB3ZSdyZSBpbiBBTUQgbGFuZFxuaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcbiAgZGVmaW5lKGV4cG9ydHMpO1xuIiwiJ3VzZSBzdHJpY3QnXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMC0yMDE3IEJyaWFuIENhcmxzb24gKGJyaWFuLm0uY2FybHNvbkBnbWFpbC5jb20pXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogUkVBRE1FLm1kIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxudmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJylcbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJylcblxudmFyIE5hdGl2ZVF1ZXJ5ID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY29uZmlnLCB2YWx1ZXMsIGNhbGxiYWNrKSB7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpXG4gIGNvbmZpZyA9IHV0aWxzLm5vcm1hbGl6ZVF1ZXJ5Q29uZmlnKGNvbmZpZywgdmFsdWVzLCBjYWxsYmFjaylcbiAgdGhpcy50ZXh0ID0gY29uZmlnLnRleHRcbiAgdGhpcy52YWx1ZXMgPSBjb25maWcudmFsdWVzXG4gIHRoaXMubmFtZSA9IGNvbmZpZy5uYW1lXG4gIHRoaXMuY2FsbGJhY2sgPSBjb25maWcuY2FsbGJhY2tcbiAgdGhpcy5zdGF0ZSA9ICduZXcnXG4gIHRoaXMuX2FycmF5TW9kZSA9IGNvbmZpZy5yb3dNb2RlID09PSAnYXJyYXknXG5cbiAgLy8gaWYgdGhlICdyb3cnIGV2ZW50IGlzIGxpc3RlbmVkIGZvclxuICAvLyB0aGVuIGVtaXQgdGhlbSBhcyB0aGV5IGNvbWUgaW5cbiAgLy8gd2l0aG91dCBzZXR0aW5nIHNpbmdsZVJvd01vZGUgdG8gdHJ1ZVxuICAvLyB0aGlzIGhhcyBhbG1vc3Qgbm8gbWVhbmluZyBiZWNhdXNlIGxpYnBxXG4gIC8vIHJlYWRzIGFsbCByb3dzIGludG8gbWVtb3J5IGJlZm9yIHJldHVybmluZyBhbnlcbiAgdGhpcy5fZW1pdFJvd0V2ZW50cyA9IGZhbHNlXG4gIHRoaXMub24oJ25ld0xpc3RlbmVyJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50ID09PSAncm93JykgdGhpcy5fZW1pdFJvd0V2ZW50cyA9IHRydWVcbiAgfS5iaW5kKHRoaXMpKVxufVxuXG51dGlsLmluaGVyaXRzKE5hdGl2ZVF1ZXJ5LCBFdmVudEVtaXR0ZXIpXG5cbnZhciBlcnJvckZpZWxkTWFwID0ge1xuICAnc3FsU3RhdGUnOiAnY29kZScsXG4gICdzdGF0ZW1lbnRQb3NpdGlvbic6ICdwb3NpdGlvbicsXG4gICdtZXNzYWdlUHJpbWFyeSc6ICdtZXNzYWdlJyxcbiAgJ2NvbnRleHQnOiAnd2hlcmUnLFxuICAnc2NoZW1hTmFtZSc6ICdzY2hlbWEnLFxuICAndGFibGVOYW1lJzogJ3RhYmxlJyxcbiAgJ2NvbHVtbk5hbWUnOiAnY29sdW1uJyxcbiAgJ2RhdGFUeXBlTmFtZSc6ICdkYXRhVHlwZScsXG4gICdjb25zdHJhaW50TmFtZSc6ICdjb25zdHJhaW50JyxcbiAgJ3NvdXJjZUZpbGUnOiAnZmlsZScsXG4gICdzb3VyY2VMaW5lJzogJ2xpbmUnLFxuICAnc291cmNlRnVuY3Rpb24nOiAncm91dGluZSdcbn1cblxuTmF0aXZlUXVlcnkucHJvdG90eXBlLmhhbmRsZUVycm9yID0gZnVuY3Rpb24gKGVycikge1xuICAvLyBjb3B5IHBxIGVycm9yIGZpZWxkcyBpbnRvIHRoZSBlcnJvciBvYmplY3RcbiAgdmFyIGZpZWxkcyA9IHRoaXMubmF0aXZlLnBxLnJlc3VsdEVycm9yRmllbGRzKClcbiAgaWYgKGZpZWxkcykge1xuICAgIGZvciAodmFyIGtleSBpbiBmaWVsZHMpIHtcbiAgICAgIHZhciBub3JtYWxpemVkRmllbGROYW1lID0gZXJyb3JGaWVsZE1hcFtrZXldIHx8IGtleVxuICAgICAgZXJyW25vcm1hbGl6ZWRGaWVsZE5hbWVdID0gZmllbGRzW2tleV1cbiAgICB9XG4gIH1cbiAgaWYgKHRoaXMuY2FsbGJhY2spIHtcbiAgICB0aGlzLmNhbGxiYWNrKGVycilcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKVxuICB9XG4gIHRoaXMuc3RhdGUgPSAnZXJyb3InXG59XG5cbk5hdGl2ZVF1ZXJ5LnByb3RvdHlwZS50aGVuID0gZnVuY3Rpb24gKG9uU3VjY2Vzcywgb25GYWlsdXJlKSB7XG4gIHJldHVybiB0aGlzLl9nZXRQcm9taXNlKCkudGhlbihvblN1Y2Nlc3MsIG9uRmFpbHVyZSlcbn1cblxuTmF0aXZlUXVlcnkucHJvdG90eXBlLmNhdGNoID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLl9nZXRQcm9taXNlKCkuY2F0Y2goY2FsbGJhY2spXG59XG5cbk5hdGl2ZVF1ZXJ5LnByb3RvdHlwZS5fZ2V0UHJvbWlzZSA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKHRoaXMuX3Byb21pc2UpIHJldHVybiB0aGlzLl9wcm9taXNlXG4gIHRoaXMuX3Byb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdGhpcy5fb25jZSgnZW5kJywgcmVzb2x2ZSlcbiAgICB0aGlzLl9vbmNlKCdlcnJvcicsIHJlamVjdClcbiAgfS5iaW5kKHRoaXMpKVxuICByZXR1cm4gdGhpcy5fcHJvbWlzZVxufVxuXG5OYXRpdmVRdWVyeS5wcm90b3R5cGUuc3VibWl0ID0gZnVuY3Rpb24gKGNsaWVudCkge1xuICB0aGlzLnN0YXRlID0gJ3J1bm5pbmcnXG4gIHZhciBzZWxmID0gdGhpc1xuICB0aGlzLm5hdGl2ZSA9IGNsaWVudC5uYXRpdmVcbiAgY2xpZW50Lm5hdGl2ZS5hcnJheU1vZGUgPSB0aGlzLl9hcnJheU1vZGVcblxuICB2YXIgYWZ0ZXIgPSBmdW5jdGlvbiAoZXJyLCByb3dzLCByZXN1bHRzKSB7XG4gICAgY2xpZW50Lm5hdGl2ZS5hcnJheU1vZGUgPSBmYWxzZVxuICAgIHNldEltbWVkaWF0ZShmdW5jdGlvbiAoKSB7XG4gICAgICBzZWxmLmVtaXQoJ19kb25lJylcbiAgICB9KVxuXG4gICAgLy8gaGFuZGxlIHBvc3NpYmxlIHF1ZXJ5IGVycm9yXG4gICAgaWYgKGVycikge1xuICAgICAgcmV0dXJuIHNlbGYuaGFuZGxlRXJyb3IoZXJyKVxuICAgIH1cblxuICAgIC8vIGVtaXQgcm93IGV2ZW50cyBmb3IgZWFjaCByb3cgaW4gdGhlIHJlc3VsdFxuICAgIGlmIChzZWxmLl9lbWl0Um93RXZlbnRzKSB7XG4gICAgICBpZiAocmVzdWx0cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIHJvd3MuZm9yRWFjaCgocm93T2ZSb3dzLCBpKSA9PiB7XG4gICAgICAgICAgcm93T2ZSb3dzLmZvckVhY2gocm93ID0+IHtcbiAgICAgICAgICAgIHNlbGYuZW1pdCgncm93Jywgcm93LCByZXN1bHRzW2ldKVxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByb3dzLmZvckVhY2goZnVuY3Rpb24gKHJvdykge1xuICAgICAgICAgIHNlbGYuZW1pdCgncm93Jywgcm93LCByZXN1bHRzKVxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGhhbmRsZSBzdWNjZXNzZnVsIHJlc3VsdFxuICAgIHNlbGYuc3RhdGUgPSAnZW5kJ1xuICAgIHNlbGYuZW1pdCgnZW5kJywgcmVzdWx0cylcbiAgICBpZiAoc2VsZi5jYWxsYmFjaykge1xuICAgICAgc2VsZi5jYWxsYmFjayhudWxsLCByZXN1bHRzKVxuICAgIH1cbiAgfVxuXG4gIGlmIChwcm9jZXNzLmRvbWFpbikge1xuICAgIGFmdGVyID0gcHJvY2Vzcy5kb21haW4uYmluZChhZnRlcilcbiAgfVxuXG4gIC8vIG5hbWVkIHF1ZXJ5XG4gIGlmICh0aGlzLm5hbWUpIHtcbiAgICBpZiAodGhpcy5uYW1lLmxlbmd0aCA+IDYzKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdXYXJuaW5nISBQb3N0Z3JlcyBvbmx5IHN1cHBvcnRzIDYzIGNoYXJhY3RlcnMgZm9yIHF1ZXJ5IG5hbWVzLicpXG4gICAgICBjb25zb2xlLmVycm9yKCdZb3Ugc3VwcGxpZWQnLCB0aGlzLm5hbWUsICcoJywgdGhpcy5uYW1lLmxlbmd0aCwgJyknKVxuICAgICAgY29uc29sZS5lcnJvcignVGhpcyBjYW4gY2F1c2UgY29uZmxpY3RzIGFuZCBzaWxlbnQgZXJyb3JzIGV4ZWN1dGluZyBxdWVyaWVzJylcbiAgICB9XG4gICAgdmFyIHZhbHVlcyA9ICh0aGlzLnZhbHVlcyB8fCBbXSkubWFwKHV0aWxzLnByZXBhcmVWYWx1ZSlcblxuICAgIC8vIGNoZWNrIGlmIHRoZSBjbGllbnQgaGFzIGFscmVhZHkgZXhlY3V0ZWQgdGhpcyBuYW1lZCBxdWVyeVxuICAgIC8vIGlmIHNvLi4uanVzdCBleGVjdXRlIGl0IGFnYWluIC0gc2tpcCB0aGUgcGxhbm5pbmcgcGhhc2VcbiAgICBpZiAoY2xpZW50Lm5hbWVkUXVlcmllc1t0aGlzLm5hbWVdKSB7XG4gICAgICByZXR1cm4gY2xpZW50Lm5hdGl2ZS5leGVjdXRlKHRoaXMubmFtZSwgdmFsdWVzLCBhZnRlcilcbiAgICB9XG4gICAgLy8gcGxhbiB0aGUgbmFtZWQgcXVlcnkgdGhlIGZpcnN0IHRpbWUsIHRoZW4gZXhlY3V0ZSBpdFxuICAgIHJldHVybiBjbGllbnQubmF0aXZlLnByZXBhcmUodGhpcy5uYW1lLCB0aGlzLnRleHQsIHZhbHVlcy5sZW5ndGgsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIGlmIChlcnIpIHJldHVybiBhZnRlcihlcnIpXG4gICAgICBjbGllbnQubmFtZWRRdWVyaWVzW3NlbGYubmFtZV0gPSB0cnVlXG4gICAgICByZXR1cm4gc2VsZi5uYXRpdmUuZXhlY3V0ZShzZWxmLm5hbWUsIHZhbHVlcywgYWZ0ZXIpXG4gICAgfSlcbiAgfSBlbHNlIGlmICh0aGlzLnZhbHVlcykge1xuICAgIGlmICghQXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlcykpIHtcbiAgICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcignUXVlcnkgdmFsdWVzIG11c3QgYmUgYW4gYXJyYXknKVxuICAgICAgcmV0dXJuIGFmdGVyKGVycilcbiAgICB9XG4gICAgdmFyIHZhbHMgPSB0aGlzLnZhbHVlcy5tYXAodXRpbHMucHJlcGFyZVZhbHVlKVxuICAgIGNsaWVudC5uYXRpdmUucXVlcnkodGhpcy50ZXh0LCB2YWxzLCBhZnRlcilcbiAgfSBlbHNlIHtcbiAgICBjbGllbnQubmF0aXZlLnF1ZXJ5KHRoaXMudGV4dCwgYWZ0ZXIpXG4gIH1cbn1cbiIsImltcG9ydCB7IFJvdXRlIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgeyB3aXRoRGF0YWJhc2UgfSBmcm9tICcuLi9kYic7XG5pbXBvcnQgcXVlcmllcyBmcm9tICcuLi9kYi9xdWVyaWVzJztcblxuY29uc3Qgcm91dGUgPSBuZXcgUm91dGUoKTtcblxucm91dGUuZ2V0KFwiaGlzdG9yeVwiLCAocmVxLCByZXMpID0+IHtcbiAgICB3aXRoRGF0YWJhc2UoYXN5bmMgKGNsaWVudCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdXNlciA9IHJlcS5ib2R5LnVzZXI7XG4gICAgICAgICAgICBjb25zdCBxdWVyeVJlc3VsdCA9IGF3YWl0IGNsaWVudC5xdWVyeShxdWVyaWVzLmdldFB1cmNoYXNlcywgW3VzZXJdKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRm91bmQgXCIsIHF1ZXJ5UmVzdWx0LnJvd3MubGVuZ3RoLCBcIiBwdXJjaGFzZXNcIik7XG4gICAgICAgICAgICByZXMuanNvbihxdWVyeVJlc3VsdC5yb3dzLm1hcCgocm93KSA9PiAoe1xuICAgICAgICAgICAgICAgIGRhdGU6IHJvdy5kYXRlLFxuICAgICAgICAgICAgICAgIHB1cmNoYXNlTmFtZTogcm93Lm5hbWUsXG4gICAgICAgICAgICAgICAgcHVyY2hhc2VBbW91bnQ6IHJvdy5hbW91bnRcbiAgICAgICAgICAgIH0pKSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgcmVzLmpzb24oW10pO1xuICAgICAgICB9XG4gICAgfSk7XG59KTtcblxucm91dGUucG9zdCgnaGlzdG9yeScsIChyZXEsIHJlcykgPT4ge1xuICAgIHdpdGhEYXRhYmFzZShhc3luYyAoY2xpZW50KSA9PiB7XG4gICAgICAgIGxldCB7dXNlciwgZGF0ZSwgcHVyY2hhc2VOYW1lLCBwdXJjaGFzZUFtb3VudH0gPSByZXEuYm9keTtcbiAgICAgICAgbGV0IHZhbHVlcyA9IFt1c2VyLCBkYXRlLCBwdXJjaGFzZU5hbWUsIHB1cmNoYXNlQW1vdW50XTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiSW5zZXJ0aW5nIHB1cmNoYXNlIGZvciBcIiwgcmVxLmJvZHkpO1xuICAgICAgICAgICAgYXdhaXQgY2xpZW50LnF1ZXJ5KHF1ZXJpZXMuaW5zZXJ0UHVyY2hhc2UsIHZhbHVlcyk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkluc2VydGVkIHN1Y2Nlc3NmdWxseVwiKTtcbiAgICAgICAgICAgIHJlcy5qc29uKHsgc3RhdHVzOiBcIm9rXCIgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJGYWlsZWQgdG8gaW5zZXJ0OlwiLCBlcnIpO1xuICAgICAgICAgICAgcmVzLmpzb24oe1xuICAgICAgICAgICAgICAgIHN0YXR1czogJ2ZhaWxlZCcsXG4gICAgICAgICAgICAgICAgZXJyOiBlcnIgPyBlcnIuY29kZSA/IGVyci5jb2RlIDogXCJcIiA6IFwiXCIsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfSk7XG59KTtcblxucm91dGUuZ2V0KFwiaGlzdG9yeS9jbGVhclwiLCAocmVxLCByZXMpID0+IHtcbiAgICB3aXRoRGF0YWJhc2UoYXN5bmMgKGNsaWVudCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgbGV0IHVzZXIgPSByZXEuYm9keS51c2VyO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJDbGVhcmluZyB0aGUgZGF0YWJhc2VcIik7XG4gICAgICAgICAgICBhd2FpdCBjbGllbnQucXVlcnkoUVVFUklFUy5jbGVhciwgW3VzZXJdKTtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIHJlcy5qc29uKHt9KTtcbiAgICAgICAgfVxuICAgIH0pO1xufSk7XG5cbnJvdXRlLnBvc3QoXCJoaXN0b3J5L2VkaXRcIiwgKHJlcSwgcmVzKSA9PiB7XG4gICAgd2l0aERhdGFiYXNlKGFzeW5jIChjbGllbnQpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRWRpdGluZyBhIHB1cmNoYXNlXCIpO1xuICAgICAgICAgICAgLyoqIFxuICAgICAgICAgICAgICogQHR5cGVkZWYge09iamVjdH0gVXBkYXRlXG4gICAgICAgICAgICAgKiBAcHJvcGVydHkge3N0cmluZ30gdXNlclxuICAgICAgICAgICAgICogQHByb3BlcnR5IHtzdHJpbmc9fSBkYXRlXG4gICAgICAgICAgICAgKiBAcHJvcGVydHkge3N0cmluZz19IG5hbWVcbiAgICAgICAgICAgICAqIEBwcm9wZXJ0eSB7bnVtYmVyPX0gcHJpY2VcbiAgICAgICAgICAgICAqIEBwcm9wZXJ0eSB7c3RyaW5nPX0gdXJsXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIC8qKiBAdHlwZSBVcGRhdGUgKi9cbiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZSA9IHJlcS5ib2R5O1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcblxuICAgICAgICB9XG4gICAgfSk7XG59KVxuXG5yb3V0ZS5wb3N0KFwiaGlzdG9yeS9kZWxldGVcIiwgKHJlcSwgcmVzKSA9PiB7XG4gICAgd2l0aERhdGFiYXNlKGFzeW5jIChjbGllbnQpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiUmVtb3ZpbmcgYSBwdXJjaGFzZVwiKTtcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQHR5cGVkZWYge09iamVjdH0gSXRlbVRvUmVtb3ZlXG4gICAgICAgICAgICAgKiBAcHJvcGVydHkge3N0cmluZ30gZGF0ZVxuICAgICAgICAgICAgICogQHByb3BlcnR5IHtzdHJpbmd9IG5hbWVcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgLyoqIEB0eXBlIEl0ZW1Ub1JlbW92ZSAqL1xuICAgICAgICAgICAgY29uc3QgaXRlbSA9IHJlcS5ib2R5O1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcblxuICAgICAgICB9XG4gICAgfSk7XG59KVxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZTtcbiIsImltcG9ydCB7IENsaWVudCB9IGZyb20gJ3BnJztcbmltcG9ydCBRVUVSSUVTIGZyb20gJy4vcXVlcmllcyc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXREQigpIHtcbiAgICBpZiAoIXByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCkge1xuICAgICAgICBjb25zdCBjbGllbnQgPSBuZXcgQ2xpZW50KHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCBjbGllbnQuY29ubmVjdCgpO1xuICAgICAgICAgICAgcmV0dXJuIGNsaWVudDtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkZhaWxlZCB0byBjb25uZWN0IHRvIGRhdGFiYXNlOiBcIiwgZXJyKTtcbiAgICAgICAgICAgIHByb2Nlc3MuZXhpdCgtMSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpbml0aWFsaXplREIoZGIpIHtcbiAgICBjb25zb2xlLmxvZyhcIlNldHRpbmcgdXAgdGhlIGRhdGFiYXNlOiBcIiwgZGIpO1xuICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IGdldERCKCk7XG4gICAgY29uc29sZS5sb2coXCJDb25uZWN0ZWQgdG8gdGhlIGRhdGFiYXNlLCBlbnN1cmluZyB0aGUgdGFibGVzIGFyZSBjcmVhdGVkLlwiKTtcbiAgICB0cnkge1xuICAgICAgICBhd2FpdCBjbGllbnQucXVlcnkoUVVFUklFUy5jcmVhdGVUYWJsZXMpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIkRhdGFiYXNlIGlzIHNldCB1cFwiKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBzZXQgdXAgZGF0YWJhc2U6IFwiLCBlcnIpO1xuICAgICAgICBwcm9jZXNzLmV4aXQoLTIpO1xuICAgIH1cbn1cblxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gd2l0aERhdGFiYXNlKGFjdGlvbikge1xuICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IGdldERCKCk7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgYWN0aW9uKGNsaWVudCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn0iLCJleHBvcnQgZGVmYXVsdCB7XG4gICAgY3JlYXRlVGFibGVzOiBcIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHB1cmNoYXNlX2hpc3RvcnkgKGRhdGUgdGV4dCwgbmFtZSB0ZXh0LCBhbW91bnQgcmVhbCk7XCIsXG4gICAgZ2V0UHVyY2hhc2VzOiBcIlNFTEVDVCBkYXRlLCBuYW1lLCBhbW91bnQgRlJPTSBwdXJjaGFzZV9oaXN0b3J5IFdIRVJFIHVzZXIgPSAkMTtcIixcbiAgICBpbnNlcnRQdXJjaGFzZTogXCJJTlNFUlQgSU5UTyBwdXJjaGFzZV9oaXN0b3J5KHVzZXIsIGRhdGUsIG5hbWUsIGFtb3VudCkgVkFMVUVTKCQxLCAkMiwgJDMsICQ0KTtcIixcbiAgICBjbGVhcjogXCJUUlVOQ0FURSBwdXJjaGFzZV9oaXN0b3J5O1wiLFxuICAgIGVkaXRQdXJjaGFzZTogXCJcIixcbiAgICBkZWxldGVQdXJjaGFzZTogXCJcIixcbn0iXSwic291cmNlUm9vdCI6IiJ9